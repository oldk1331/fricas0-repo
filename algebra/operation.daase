
(2000824 . 1)                
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Vector| *4))
       (|ofCategory| *4 (|LinearlyExplicitOver| (|Integer|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |particular|
                         (|Union| (|Vector| (|Fraction| (|Integer|)))
                                  #1="failed"))
                    (|:| |basis|
                         (|List| (|Vector| (|Fraction| (|Integer|)))))))
       (|isDomain| *1 (|IntegerLinearDependence| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *5)) (|isDomain| *4 (|Vector| *5))
       (|ofCategory| *5 (|LinearlyExplicitOver| (|Integer|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |particular|
                         (|Union| (|Vector| (|Fraction| (|Integer|))) #1#))
                    (|:| |basis|
                         (|List| (|Vector| (|Fraction| (|Integer|)))))))
       (|isDomain| *1 (|IntegerLinearDependence| *5))))) 
(((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Vector| *4))
   (|ofCategory| *4 (|LinearlyExplicitOver| (|Integer|)))
   (|isDomain| *2 (|Vector| (|Fraction| (|Integer|))))
   (|isDomain| *1 (|IntegerLinearDependence| *4))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Matrix| *5)) (|isDomain| *4 (|Vector| *5))
   (|ofCategory| *5 (|LinearlyExplicitOver| (|Integer|)))
   (|isDomain| *2 (|Vector| (|Fraction| (|Integer|))))
   (|isDomain| *1 (|IntegerLinearDependence| *5))))) 
(((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|Vector| *4))
   (|ofCategory| *4 (|LinearlyExplicitOver| (|Integer|)))
   (|isDomain| *2 (|Vector| (|Integer|)))
   (|isDomain| *1 (|IntegerLinearDependence| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| *4))
       (|ofCategory| *4 (|LinearlyExplicitOver| (|Integer|)))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|IntegerLinearDependence| *4))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *5 (|Join| (|ConvertibleTo| *2) (|CommutativeRing|)))
       (|isDomain| *2 (|Pattern| *4))
       (|isDomain| *1 (|ComplexPattern| *4 *5 *3))
       (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *3 (|ComplexCategory| *5))))
 ((*1 *2 *1)
  (AND (|ofType| *5 (|List| *4)) (|isDomain| *2 (|JetBundlePolynomial| *3 *4))
       (|isDomain| *1 (|DistributedJetBundlePolynomial| *3 *4 *5 *6))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|JetBundleCategory|))
       (|ofCategory| *6
                     (|DirectProductCategory| (|#| *5)
                                              (|NonNegativeInteger|)))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|JetBundlePolynomial| *3 *4)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *4 (|JetBundleCategory|)) (|ofType| *5 (|List| *4))
       (|isDomain| *1 (|DistributedJetBundlePolynomial| *3 *4 *5 *6))
       (|ofCategory| *6
                     (|DirectProductCategory| (|#| *5)
                                              (|NonNegativeInteger|)))))
 ((*1 *1 *2) (AND (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *1 (|Float|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *3 (|Integer|))
       (|ofCategory| *1 (|OutputFormatterCategory|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *1 (|ScriptFormulaFormat|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Vector| *3))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *1 (|FramedModule| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FramedModule| *3))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|isDomain| *2 (|Vector| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Factored| *1)) (|ofCategory| *1 (|FunctionSpace| *3))
       (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Comparable|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|GeneralPolynomialSet| *3 *4 *5 *6))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|SExpression|)) (|isDomain| *1 (|InputForm|))))
 ((*1 *1 *2)
  (AND (|ofCategory| *1 (|ConvertibleFrom| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|ConvertibleTo| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|LinearOrdinaryDifferentialOperator1| *6))
       (|ofCategory| *6 (|Join| (|DifferentialRing|) (|LeftModule| *5)))
       (|ofCategory| *5 (|AbelianMonoidRing| *4 (|NonNegativeInteger|)))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|LinearOrdinaryDifferentialOperator3| *4 *5 *6))
       (|isDomain| *1 (|LODOConvertions| *4 *5 *6))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|LinearOrdinaryDifferentialOperator3| *4 *5 *6))
       (|ofCategory| *4 (|Ring|))
       (|ofCategory| *5 (|AbelianMonoidRing| *4 (|NonNegativeInteger|)))
       (|ofCategory| *6 (|Join| (|DifferentialRing|) (|LeftModule| *5)))
       (|isDomain| *2 (|LinearOrdinaryDifferentialOperator1| *6))
       (|isDomain| *1 (|LODOConvertions| *4 *5 *6))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|SquareMatrix| *3 *4)) (|ofType| *3 (|PositiveInteger|))
       (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *1 (|LieSquareMatrix| *3 *4))))
 ((*1 *1 *2)
  (AND (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *1 (|MonogenicAlgebra| *3 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Pattern| *3))) (|isDomain| *1 (|Pattern| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *1 (|PointCategory| *3))))
 ((*1 *1 *2) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|RomanNumeral|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Polynomial| *3)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *5 (|ConvertibleTo| (|Symbol|)))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Polynomial| (|Integer|)))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Algebra| (|Integer|)))
       (|ofCategory| *5 (|ConvertibleTo| (|Symbol|)))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Polynomial| (|Fraction| (|Integer|))))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *5 (|ConvertibleTo| (|Symbol|)))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Record| (|:| |val| (|List| *7)) (|:| |tower| *8)))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *8 (|RegularTriangularSetCategory| *4 *5 *6 *7))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|String|))
       (|isDomain| *1 (|RegularSetDecompositionPackage| *4 *5 *6 *7 *8))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|SingletonAsOrderedSet|))))
 ((*1 *1 *2)
  (AND (|ofCategory| *1 (|SegmentCategory| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2)
  (AND (|ofCategory| *1 (|SExpressionCategory| *3 *4 *5 *2))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *2)
  (AND (|ofCategory| *1 (|SExpressionCategory| *3 *4 *2 *5))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *5 (|SetCategory|))))
 ((*1 *1 *2)
  (AND (|ofCategory| *1 (|SExpressionCategory| *3 *2 *4 *5))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *2 (|SetCategory|))
       (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *5 (|SetCategory|))))
 ((*1 *1 *2)
  (AND (|ofCategory| *1 (|SExpressionCategory| *2 *3 *4 *5))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *5 (|SetCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|SExpressionCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Record| (|:| |val| (|List| *7)) (|:| |tower| *8)))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *8 (|SquareFreeRegularTriangularSetCategory| *4 *5 *6 *7))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|String|))
       (|isDomain| *1
                   (|SquareFreeRegularSetDecompositionPackage| *4 *5 *6 *7
                                                               *8))))
 ((*1 *1 *2 *3 *2)
  (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *1 (|TexFormat|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *1 (|TexFormat|))))
 ((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|NewSparseMultivariatePolynomial| *4
                                                  (|OrderedVariableList| *5)))
   (|ofCategory| *4
                 (|Join| (|OrderedRing|) (|PolynomialFactorizationExplicit|)
                         (|CharacteristicZero|) (|RealConstant|)))
   (|ofType| *5 (|List| (|Symbol|)))
   (|isDomain| *2
               (|NewSparseMultivariatePolynomial| *4
                                                  (|OrderedVariableList| *6)))
   (|isDomain| *1 (|ZeroDimensionalSolvePackage| *4 *5 *6))
   (|ofType| *6 (|List| (|Symbol|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Polynomial| *4))
       (|ofCategory| *4
                     (|Join| (|OrderedRing|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|) (|RealConstant|)))
       (|isDomain| *2 (|Polynomial| (|RealClosure| (|Fraction| *4))))
       (|isDomain| *1 (|ZeroDimensionalSolvePackage| *4 *5 *6))
       (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|List| (|Symbol|)))))
 ((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|NewSparseMultivariatePolynomial| *4
                                                  (|OrderedVariableList| *6)))
   (|ofCategory| *4
                 (|Join| (|OrderedRing|) (|PolynomialFactorizationExplicit|)
                         (|CharacteristicZero|) (|RealConstant|)))
   (|ofType| *6 (|List| (|Symbol|)))
   (|isDomain| *2 (|Polynomial| (|RealClosure| (|Fraction| *4))))
   (|isDomain| *1 (|ZeroDimensionalSolvePackage| *4 *5 *6))
   (|ofType| *5 (|List| (|Symbol|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *4))
       (|ofCategory| *4
                     (|Join| (|OrderedRing|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|) (|RealConstant|)))
       (|isDomain| *2
                   (|SparseUnivariatePolynomial|
                    (|RealClosure| (|Fraction| *4))))
       (|isDomain| *1 (|ZeroDimensionalSolvePackage| *4 *5 *6))
       (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|List| (|Symbol|)))))
 ((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|SquareFreeRegularTriangularSet| *4
                                                 (|IndexedExponents|
                                                  (|OrderedVariableList| *6))
                                                 (|OrderedVariableList| *6)
                                                 (|NewSparseMultivariatePolynomial|
                                                  *4
                                                  (|OrderedVariableList| *6))))
   (|ofCategory| *4
                 (|Join| (|OrderedRing|) (|PolynomialFactorizationExplicit|)
                         (|CharacteristicZero|) (|RealConstant|)))
   (|ofType| *6 (|List| (|Symbol|)))
   (|isDomain| *2
               (|List|
                (|NewSparseMultivariatePolynomial| *4
                                                   (|OrderedVariableList|
                                                    *6))))
   (|isDomain| *1 (|ZeroDimensionalSolvePackage| *4 *5 *6))
   (|ofType| *5 (|List| (|Symbol|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|IntegerFactorizationPackage| *3))
       (|ofCategory| *3 (|IntegerNumberSystem|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|EuclideanDomain|))
       (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|MultivariateSquareFree| *4 *5 *6 *3))
       (|ofCategory| *3 (|PolynomialCategory| *6 *4 *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *7))
       (|ofCategory| *7 (|PolynomialCategory| *6 *4 *5))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|EuclideanDomain|))
       (|isDomain| *2 (|Factored| (|SparseUnivariatePolynomial| *7)))
       (|isDomain| *1 (|MultivariateSquareFree| *4 *5 *6 *7))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Factored| *1))
       (|ofCategory| *1 (|PolynomialCategory| *3 *4 *5))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|GcdDomain|)) (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|PolynomialSquareFree| *4 *5 *6 *3))
       (|ofCategory| *3 (|PolynomialCategory| *6 *5 *4))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Factored| *1))
       (|ofCategory| *1 (|UniqueFactorizationDomain|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|UnivariatePolynomialSquareFree| *4 *3))
       (|ofCategory| *3
                     (|Join| (|UnivariatePolynomialCategory| *4)
                             (|IntegralDomain|)
                             (CATEGORY |domain| (SIGNATURE |gcd| ($ $ $)))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|RegularChain| *4 *5))
       (|ofCategory| *4
                     (|Join| (|OrderedRing|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|) (|RealConstant|)))
       (|ofType| *5 (|List| (|Symbol|)))
       (|isDomain| *2
                   (|List|
                    (|SquareFreeRegularTriangularSet| *4
                                                      (|IndexedExponents|
                                                       (|OrderedVariableList|
                                                        *6))
                                                      (|OrderedVariableList|
                                                       *6)
                                                      (|NewSparseMultivariatePolynomial|
                                                       *4
                                                       (|OrderedVariableList|
                                                        *6)))))
       (|isDomain| *1 (|ZeroDimensionalSolvePackage| *4 *5 *6))
       (|ofType| *6 (|List| (|Symbol|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|RegularChain| *4 *5))
       (|ofCategory| *4
                     (|Join| (|OrderedRing|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|) (|RealConstant|)))
       (|ofType| *5 (|List| (|Symbol|)))
       (|isDomain| *2 (|List| (|List| (|RealClosure| (|Fraction| *4)))))
       (|isDomain| *1 (|ZeroDimensionalSolvePackage| *4 *5 *6))
       (|ofType| *6 (|List| (|Symbol|)))))
 ((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|List| (|Polynomial| *5))) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *5
                     (|Join| (|OrderedRing|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|) (|RealConstant|)))
       (|isDomain| *2 (|List| (|List| (|RealClosure| (|Fraction| *5)))))
       (|isDomain| *1 (|ZeroDimensionalSolvePackage| *5 *6 *7))
       (|ofType| *6 (|List| (|Symbol|))) (|ofType| *7 (|List| (|Symbol|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Polynomial| *5))) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *5
                     (|Join| (|OrderedRing|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|) (|RealConstant|)))
       (|isDomain| *2 (|List| (|List| (|RealClosure| (|Fraction| *5)))))
       (|isDomain| *1 (|ZeroDimensionalSolvePackage| *5 *6 *7))
       (|ofType| *6 (|List| (|Symbol|))) (|ofType| *7 (|List| (|Symbol|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Polynomial| *4)))
       (|ofCategory| *4
                     (|Join| (|OrderedRing|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|) (|RealConstant|)))
       (|isDomain| *2 (|List| (|List| (|RealClosure| (|Fraction| *4)))))
       (|isDomain| *1 (|ZeroDimensionalSolvePackage| *4 *5 *6))
       (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|List| (|Symbol|)))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|List| (|Polynomial| (|Integer|))))
       (|isDomain| *4 (|List| (|Symbol|))) (|isDomain| *5 (|Float|))
       (|isDomain| *2 (|List| (|List| (|Float|))))
       (|isDomain| *1 (|RealSolvePackage|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|RegularChain| *4 *5))
       (|ofCategory| *4
                     (|Join| (|OrderedRing|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|) (|RealConstant|)))
       (|ofType| *5 (|List| (|Symbol|)))
       (|isDomain| *2 (|List| (|List| (|RealClosure| (|Fraction| *4)))))
       (|isDomain| *1 (|ZeroDimensionalSolvePackage| *4 *5 *6))
       (|ofType| *6 (|List| (|Symbol|)))))
 ((*1 *2 *3 *4 *4 *4)
  (AND (|isDomain| *3 (|List| (|Polynomial| *5))) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *5
                     (|Join| (|OrderedRing|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|) (|RealConstant|)))
       (|isDomain| *2 (|List| (|List| (|RealClosure| (|Fraction| *5)))))
       (|isDomain| *1 (|ZeroDimensionalSolvePackage| *5 *6 *7))
       (|ofType| *6 (|List| (|Symbol|))) (|ofType| *7 (|List| (|Symbol|)))))
 ((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|List| (|Polynomial| *5))) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *5
                     (|Join| (|OrderedRing|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|) (|RealConstant|)))
       (|isDomain| *2 (|List| (|List| (|RealClosure| (|Fraction| *5)))))
       (|isDomain| *1 (|ZeroDimensionalSolvePackage| *5 *6 *7))
       (|ofType| *6 (|List| (|Symbol|))) (|ofType| *7 (|List| (|Symbol|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Polynomial| *5))) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *5
                     (|Join| (|OrderedRing|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|) (|RealConstant|)))
       (|isDomain| *2 (|List| (|List| (|RealClosure| (|Fraction| *5)))))
       (|isDomain| *1 (|ZeroDimensionalSolvePackage| *5 *6 *7))
       (|ofType| *6 (|List| (|Symbol|))) (|ofType| *7 (|List| (|Symbol|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Polynomial| *4)))
       (|ofCategory| *4
                     (|Join| (|OrderedRing|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|) (|RealConstant|)))
       (|isDomain| *2 (|List| (|List| (|RealClosure| (|Fraction| *4)))))
       (|isDomain| *1 (|ZeroDimensionalSolvePackage| *4 *5 *6))
       (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|List| (|Symbol|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|RegularChain| *4 *5))
       (|ofCategory| *4
                     (|Join| (|OrderedRing|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|) (|RealConstant|)))
       (|ofType| *5 (|List| (|Symbol|)))
       (|isDomain| *2
                   (|List|
                    (|Record|
                     (|:| |complexRoots| (|SparseUnivariatePolynomial| *4))
                     (|:| |coordinates| (|List| (|Polynomial| *4))))))
       (|isDomain| *1 (|ZeroDimensionalSolvePackage| *4 *5 *6))
       (|ofType| *6 (|List| (|Symbol|)))))
 ((*1 *2 *3 *4 *4 *4)
  (AND (|isDomain| *3 (|List| (|Polynomial| *5))) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *5
                     (|Join| (|OrderedRing|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|) (|RealConstant|)))
       (|isDomain| *2
                   (|List|
                    (|Record|
                     (|:| |complexRoots| (|SparseUnivariatePolynomial| *5))
                     (|:| |coordinates| (|List| (|Polynomial| *5))))))
       (|isDomain| *1 (|ZeroDimensionalSolvePackage| *5 *6 *7))
       (|ofType| *6 (|List| (|Symbol|))) (|ofType| *7 (|List| (|Symbol|)))))
 ((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|List| (|Polynomial| *5))) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *5
                     (|Join| (|OrderedRing|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|) (|RealConstant|)))
       (|isDomain| *2
                   (|List|
                    (|Record|
                     (|:| |complexRoots| (|SparseUnivariatePolynomial| *5))
                     (|:| |coordinates| (|List| (|Polynomial| *5))))))
       (|isDomain| *1 (|ZeroDimensionalSolvePackage| *5 *6 *7))
       (|ofType| *6 (|List| (|Symbol|))) (|ofType| *7 (|List| (|Symbol|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Polynomial| *5))) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *5
                     (|Join| (|OrderedRing|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|) (|RealConstant|)))
       (|isDomain| *2
                   (|List|
                    (|Record|
                     (|:| |complexRoots| (|SparseUnivariatePolynomial| *5))
                     (|:| |coordinates| (|List| (|Polynomial| *5))))))
       (|isDomain| *1 (|ZeroDimensionalSolvePackage| *5 *6 *7))
       (|ofType| *6 (|List| (|Symbol|))) (|ofType| *7 (|List| (|Symbol|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Polynomial| *4)))
       (|ofCategory| *4
                     (|Join| (|OrderedRing|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|) (|RealConstant|)))
       (|isDomain| *2
                   (|List|
                    (|Record|
                     (|:| |complexRoots| (|SparseUnivariatePolynomial| *4))
                     (|:| |coordinates| (|List| (|Polynomial| *4))))))
       (|isDomain| *1 (|ZeroDimensionalSolvePackage| *4 *5 *6))
       (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|List| (|Symbol|)))))) 
(((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|List| (|Polynomial| *5))) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *5
                     (|Join| (|OrderedRing|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|) (|RealConstant|)))
       (|isDomain| *2 (|List| (|RegularChain| *5 *6)))
       (|isDomain| *1 (|ZeroDimensionalSolvePackage| *5 *6 *7))
       (|ofType| *6 (|List| (|Symbol|))) (|ofType| *7 (|List| (|Symbol|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Polynomial| *5))) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *5
                     (|Join| (|OrderedRing|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|) (|RealConstant|)))
       (|isDomain| *2 (|List| (|RegularChain| *5 *6)))
       (|isDomain| *1 (|ZeroDimensionalSolvePackage| *5 *6 *7))
       (|ofType| *6 (|List| (|Symbol|))) (|ofType| *7 (|List| (|Symbol|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Polynomial| *4)))
       (|ofCategory| *4
                     (|Join| (|OrderedRing|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|) (|RealConstant|)))
       (|isDomain| *2 (|List| (|RegularChain| *4 *5)))
       (|isDomain| *1 (|ZeroDimensionalSolvePackage| *4 *5 *6))
       (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|List| (|Symbol|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Mapping| (|Stream| *4) (|Stream| *4)))
       (|isDomain| *2 (|Stream| *4))
       (|isDomain| *1 (|ParadoxicalCombinatorsForStreams| *4))
       (|ofCategory| *4 (|Type|))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3 (|Mapping| (|List| (|Stream| *5)) (|List| (|Stream| *5))))
   (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|List| (|Stream| *5)))
   (|isDomain| *1 (|ParadoxicalCombinatorsForStreams| *5))
   (|ofCategory| *5 (|Type|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Expression| *6)) (|isDomain| *4 (|PositiveInteger|))
       (|ofCategory| *6 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *2 (|List| (|Expression| *6)))
       (|isDomain| *1 (|DegreeReductionPackage| *5 *6))
       (|ofCategory| *5 (|Ring|))))
 ((*1 *2 *1)
  (AND (|isDomain| *1 (|Factored| *2)) (|ofCategory| *2 (|IntegralDomain|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|IntegrationResult| *6)) (|isDomain| *4 (|Symbol|))
       (|ofCategory| *6
                     (|Join| (|AlgebraicallyClosedFunctionSpace| *5)
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                             (|Comparable|)
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|List| *6))
       (|isDomain| *1 (|IntegrationResultToFunction| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|IntegrationResult| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                             (|Comparable|)
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| *5)))
       (|isDomain| *1 (|IntegrationResultRFToFunction| *5))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|SegmentExpansionCategory| *3 *2))
       (|ofCategory| *3 (|OrderedRing|))
       (|ofCategory| *2 (|StreamAggregate| *3))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *1))
       (|ofCategory| *1 (|SegmentExpansionCategory| *4 *2))
       (|ofCategory| *4 (|OrderedRing|))
       (|ofCategory| *2 (|StreamAggregate| *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|XDistributedPolynomial| (|Symbol|) *3))
       (|isDomain| *1 (|XPolynomial| *3)) (|ofCategory| *3 (|Ring|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|XDistributedPolynomial| *3 *4))
       (|isDomain| *1 (|XRecursivePolynomial| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|XDistributedPolynomial| (|Symbol|) *3))
       (|ofCategory| *3 (|Ring|)) (|isDomain| *1 (|XPolynomial| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|XDistributedPolynomial| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|XRecursivePolynomial| *3 *4))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |k| (|Symbol|)) (|:| |c| (|XPolynomial| *3)))))
   (|isDomain| *1 (|XPolynomial| *3)) (|ofCategory| *3 (|Ring|))))
 ((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |k| *3)
                          (|:| |c| (|XRecursivePolynomial| *3 *4)))))
   (|isDomain| *1 (|XRecursivePolynomial| *3 *4))
   (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|AbelianGroup|)) (|isDomain| *2 (|Integer|))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|AbelianMonoid|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|AbelianSemiGroup|))
       (|isDomain| *2 (|PositiveInteger|))))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|CartesianTensor| *2 *3 *4)) (|ofType| *2 (|Integer|))
       (|ofType| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|CommutativeRing|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *1 (|Color|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|Color|))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|DirectedGraph| (|Product| *3 *3)))
       (|isDomain| *1 (|DirectedGraph| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|Point| *3))
       (|ofCategory| *3 (|Join| (|Field|) (|TranscendentalFunctionCategory|)))
       (|isDomain| *1 (|DenavitHartenbergMatrix| *3))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|DirectProductCategory| *3 *2))
       (|ofCategory| *2 (|Type|)) (|ofCategory| *2 (|SemiGroup|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|DirectProductCategory| *3 *2))
       (|ofCategory| *2 (|Type|)) (|ofCategory| *2 (|SemiGroup|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|SemiGroup|))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|SemiGroup|))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2 *3)
  (AND (|ofCategory| *1 (|FreeAbelianMonoidCategory| *3 *2))
       (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *2 (|CancellationAbelianMonoid|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|FreeGroup| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *1 (|FreeGroup| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|FreeMagma| *2)) (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *2 *3)
  (AND (|ofCategory| *1 (|FreeModuleCategory| *3 *2))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *2 (|Comparable|))))
 ((*1 *1 *2 *3)
  (AND (|ofCategory| *1 (|FreeModuleCategory| *2 *3))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *3 (|Comparable|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|FreeMonoid| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *1 (|FreeMonoid| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|FunctionGraph| (|Product| *3 *3)))
       (|isDomain| *1 (|FunctionGraph| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *2 *1)
  (AND (|ofType| *3 (|List| (|Symbol|))) (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *6
                     (|DirectProductCategory| (|#| *3) (|NonNegativeInteger|)))
       (|ofType| *7
        (|Mapping| (|Boolean|) (|Record| (|:| |index| *5) (|:| |exponent| *6))
                   (|Record| (|:| |index| *5) (|:| |exponent| *6))))
       (|isDomain| *1 (|GeneralModulePolynomial| *3 *4 *5 *6 *7 *2))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *2
                     (|PolynomialCategory| *4 *6 (|OrderedVariableList| *3)))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|GradedModule| *2 *3))
       (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *3 (|AbelianMonoid|))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|GradedModule| *2 *3))
       (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *3 (|AbelianMonoid|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *2 (|Field|))
       (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialIdeal| *2 *3 *4 *5))
       (|ofCategory| *5 (|PolynomialCategory| *2 *3 *4))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Vector| *3)) (|ofCategory| *3 (|FiniteFieldCategory|))
       (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *3))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|IncidenceAlgebra| *2 *3)) (|ofCategory| *2 (|Ring|))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *1 (|IncidenceAlgebra| *2 *3)) (|ofCategory| *2 (|Ring|))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|IncidenceAlgebra| *2 *3)) (|ofCategory| *2 (|Ring|))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Permutation| (|Integer|)))
       (|isDomain| *1 (|IncidenceAlgebra| *3 *4)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *4 (|SetCategory|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|InputForm|)))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|InnerTaylorSeries| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|InnerTaylorSeries| *2)) (|ofCategory| *2 (|Ring|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *1 (|InnerTaylorSeries| *2)) (|ofCategory| *2 (|Ring|))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|JetLazyFunction| *3 *2))
       (|ofCategory| *2 (|JetBundleFunctionCategory| *3))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|LeftModule| *2)) (|ofCategory| *2 (|SemiRng|))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|Magma|)))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *7 *6)) (|isDomain| *4 (|Mapping| *6 *5))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|ofCategory| *7 (|SetCategory|)) (|isDomain| *2 (|Mapping| *7 *5))
       (|isDomain| *1 (|MappingPackage3| *5 *6 *7))))
 ((*1 *2 *2 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *3 *2 *4))
       (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *2 (|FiniteLinearAggregate| *3))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *3 (|SemiRng|))))
 ((*1 *2 *1 *2)
  (AND (|ofCategory| *1 (|MatrixCategory| *3 *4 *2))
       (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *2 (|FiniteLinearAggregate| *3))
       (|ofCategory| *3 (|SemiRng|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|MatrixCategory| *2 *3 *4))
       (|ofCategory| *2 (|AbelianMonoid|))
       (|ofCategory| *3 (|FiniteLinearAggregate| *2))
       (|ofCategory| *4 (|FiniteLinearAggregate| *2))
       (|ofCategory| *2 (|SemiRng|))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *2 *3 *4))
       (|ofCategory| *2 (|AbelianMonoid|))
       (|ofCategory| *3 (|FiniteLinearAggregate| *2))
       (|ofCategory| *4 (|FiniteLinearAggregate| *2))
       (|ofCategory| *2 (|SemiRng|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *2 *3 *4))
       (|ofCategory| *2 (|AbelianMonoid|))
       (|ofCategory| *3 (|FiniteLinearAggregate| *2))
       (|ofCategory| *4 (|FiniteLinearAggregate| *2))
       (|ofCategory| *2 (|SemiRng|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Integer|))
       (|ofCategory| *1 (|MatrixCategory| *3 *4 *5))
       (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|MultifunctionGraph| (|Product| *3 *3)))
       (|isDomain| *1 (|MultifunctionGraph| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|Pattern| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|RightModule| *2)) (|ofCategory| *2 (|SemiRng|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Matrix| (|Fraction| *4)))
       (|ofCategory| *4 (|IntegralDomain|)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|SparseEchelonMatrix| *3 *4))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Matrix| *4)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|SparseEchelonMatrix| *3 *4))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *2 *2 *1)
  (AND (|ofCategory| *1 (|SquareMatrixCategory| *3 *4 *2 *5))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *2 (|DirectProductCategory| *3 *4))
       (|ofCategory| *5 (|DirectProductCategory| *3 *4))))
 ((*1 *2 *1 *2)
  (AND (|ofCategory| *1 (|SquareMatrixCategory| *3 *4 *5 *2))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *5 (|DirectProductCategory| *3 *4))
       (|ofCategory| *2 (|DirectProductCategory| *3 *4))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *1 (|SparseMultivariateTaylorSeries| *3 *4 *2))
       (|ofCategory| *2 (|PolynomialCategory| *3 (|IndexedExponents| *4) *4))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|SPointCategory|)) (|isDomain| *2 (|DoubleFloat|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|StreamExponentialSeriesOperations| *3))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|Point| (|DoubleFloat|)))
       (|isDomain| *3 (|DoubleFloat|)) (|isDomain| *1 (|TubePlotTools|))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|UndirectedGraph| (|Product| *3 *3)))
       (|isDomain| *1 (|UndirectedGraph| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|VectorCategory| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|SemiGroup|))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|VectorCategory| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|SemiGroup|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|VectorCategory| *3))
       (|ofCategory| *3 (|Type|)) (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|VectorSpaceBasis| *2)) (|ofCategory| *2 (|Field|))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|WeightedGraph| (|Product| *3 *3) *4))
       (|isDomain| *1 (|WeightedGraph| *3 *4))
       (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *4 (|OrderedAbelianMonoid|))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|XFreeAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|XFreeAlgebra| *3 *2))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *2 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|XPolynomialRing| *2 *3)) (|ofCategory| *2 (|Ring|))
       (|ofCategory| *3 (|OrderedMonoid|))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 *3))
       (|ofCategory| *1 (|AbelianMonoidRing| *3 *4))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *4 (|OrderedAbelianMonoid|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|AntiSymm| *3 *4)) (|ofType| *4 (|List| (|Symbol|)))))
 ((*1 *1 *2 *1 *1 *3)
  (AND (|isDomain| *2 (|Mapping| *3 *3 *3))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))))
 ((*1 *1 *2 *1 *1)
  (AND (|isDomain| *2 (|Mapping| *3 *3 *3))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 *3))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5))
       (|isDomain| *4 (|OneDimensionalArray| *5)) (|ofCategory| *5 (|Type|))
       (|ofCategory| *6 (|Type|)) (|isDomain| *2 (|OneDimensionalArray| *6))
       (|isDomain| *1 (|OneDimensionalArrayFunctions2| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *8 *5)) (|ofCategory| *5 (|Type|))
       (|ofCategory| *8 (|Type|))
       (|ofCategory| *6 (|FiniteLinearAggregate| *5))
       (|ofCategory| *7 (|FiniteLinearAggregate| *5))
       (|ofCategory| *2 (|TwoDimensionalArrayCategory| *8 *9 *10))
       (|isDomain| *1
                   (|TwoDimensionalArrayFunctions| *5 *6 *7 *4 *8 *9 *10 *2))
       (|ofCategory| *4 (|TwoDimensionalArrayCategory| *5 *6 *7))
       (|ofCategory| *9 (|FiniteLinearAggregate| *8))
       (|ofCategory| *10 (|FiniteLinearAggregate| *8))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *8 *7))
       (|isDomain| *4 (|CartesianTensor| *5 *6 *7)) (|ofType| *5 (|Integer|))
       (|ofType| *6 (|NonNegativeInteger|))
       (|ofCategory| *7 (|CommutativeRing|))
       (|ofCategory| *8 (|CommutativeRing|))
       (|isDomain| *2 (|CartesianTensor| *5 *6 *8))
       (|isDomain| *1 (|CartesianTensorFunctions2| *5 *6 *7 *8))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|Complex| *5))
       (|ofCategory| *5 (|CommutativeRing|))
       (|ofCategory| *6 (|CommutativeRing|)) (|isDomain| *2 (|Complex| *6))
       (|isDomain| *1 (|ComplexFunctions2| *5 *6))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| (|Expression| *3) (|Expression| *3)))
       (|ofCategory| *3 (|Join| (|Ring|) (|Comparable|)))
       (|isDomain| *1 (|DeRhamComplex| *3 *4))
       (|ofType| *4 (|List| (|Symbol|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *7 *6))
       (|isDomain| *4 (|DirectProduct| *5 *6))
       (|ofType| *5 (|NonNegativeInteger|)) (|ofCategory| *6 (|Type|))
       (|ofCategory| *7 (|Type|)) (|isDomain| *2 (|DirectProduct| *5 *7))
       (|isDomain| *1 (|DirectProductFunctions2| *5 *6 *7))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|Equation| *3))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|Equation| *5))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *6 (|Type|))
       (|isDomain| *2 (|Equation| *6))
       (|isDomain| *1 (|EquationFunctions2| *5 *6))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| *1 *1)) (|isDomain| *3 (|Kernel| *1))
       (|ofCategory| *1 (|ExpressionSpace|))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *2 *6)) (|isDomain| *4 (|Symbol|))
       (|isDomain| *5 (|Kernel| *6)) (|ofCategory| *6 (|ExpressionSpace|))
       (|ofCategory| *2 (|Type|))
       (|isDomain| *1 (|ExpressionSpaceFunctions1| *6 *2))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *2 *5)) (|isDomain| *4 (|Kernel| *5))
       (|ofCategory| *5 (|ExpressionSpace|))
       (|ofCategory| *2 (|ExpressionSpace|))
       (|isDomain| *1 (|ExpressionSpaceFunctions2| *5 *2))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|Expression| *5))
       (|ofCategory| *5 (|Join| (|Ring|) (|Comparable|)))
       (|ofCategory| *6 (|Join| (|Ring|) (|Comparable|)))
       (|isDomain| *2 (|Expression| *6))
       (|isDomain| *1 (|ExpressionFunctions2| *5 *6))))
 ((*1 *1 *2 *1)
  (AND
   (|isDomain| *2
               (|Mapping| (|Polynomial| (|Integer|))
                          (|Polynomial| (|Integer|))))
   (|isDomain| *1 (|FakePolynomial|))))
 ((*1 *1 *2 *3)
  (AND
   (|isDomain| *2
               (|Mapping| (|Polynomial| (|Integer|))
                          (|Polynomial| (|Integer|))))
   (|isDomain| *3
               (|Record| (|:| |var| (|Symbol|))
                         (|:| |coef|
                              (|SparseUnivariatePolynomial|
                               (|Fraction| (|Polynomial| (|Integer|)))))))
   (|isDomain| *1 (|FakePolynomial|))))
 ((*1 *2 *3 *1)
  (|partial| AND
   (|isDomain| *3
               (|Mapping| (|Union| (|Polynomial| (|Integer|)) "failed")
                          (|Record| (|:| |numer| (|Polynomial| (|Integer|)))
                                    (|:| |denom| (|Polynomial| (|Integer|))))))
   (|isDomain| *2 (|SparseUnivariatePolynomial| (|Polynomial| (|Integer|))))
   (|isDomain| *1 (|FakePolynomial|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *7 *6)) (|ofCategory| *6 (|Ring|))
       (|ofCategory| *7 (|Ring|)) (|ofCategory| *5 (|OrderedAbelianMonoid|))
       (|ofCategory| *2 (|FiniteAbelianMonoidRing| *7 *5))
       (|isDomain| *1 (|FiniteAbelianMonoidRingFunctions2| *5 *6 *4 *7 *2))
       (|ofCategory| *4 (|FiniteAbelianMonoidRing| *6 *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *9 *5))
       (|isDomain| *4 (|FiniteDivisor| *5 *6 *7 *8))
       (|ofCategory| *5 (|Field|))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| (|Fraction| *6)))
       (|ofCategory| *8 (|FunctionFieldCategory| *5 *6 *7))
       (|ofCategory| *9 (|Field|))
       (|ofCategory| *10 (|UnivariatePolynomialCategory| *9))
       (|ofCategory| *11 (|UnivariatePolynomialCategory| (|Fraction| *10)))
       (|isDomain| *2 (|FiniteDivisor| *9 *10 *11 *12))
       (|isDomain| *1 (|FiniteDivisorFunctions2| *5 *6 *7 *8 *9 *10 *11 *12))
       (|ofCategory| *12 (|FunctionFieldCategory| *9 *10 *11))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 *3))
       (|ofCategory| *1 (|FullyEvalableOver| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *8 *5))
       (|ofCategory| *5 (|UniqueFactorizationDomain|))
       (|ofCategory| *8 (|UniqueFactorizationDomain|))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| (|Fraction| *6)))
       (|ofCategory| *9 (|UnivariatePolynomialCategory| *8))
       (|ofCategory| *2 (|FunctionFieldCategory| *8 *9 *10))
       (|isDomain| *1
                   (|FunctionFieldCategoryFunctions2| *5 *6 *7 *4 *8 *9 *10
                                                      *2))
       (|ofCategory| *4 (|FunctionFieldCategory| *5 *6 *7))
       (|ofCategory| *10 (|UnivariatePolynomialCategory| (|Fraction| *9)))))
 ((*1 *1 *1 *2 *3 *4 *4)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|Integer|))
       (|ofCategory| *1 (|FiniteGraph| *5)) (|ofCategory| *5 (|SetCategory|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|ofCategory| *5 (|Type|))
       (|ofCategory| *6 (|Type|))
       (|ofCategory| *2 (|Join| (|LinearAggregate| *6) (|finiteAggregate|)))
       (|isDomain| *1 (|FiniteLinearAggregateFunctions2| *5 *4 *6 *2))
       (|ofCategory| *4 (|Join| (|LinearAggregate| *5) (|finiteAggregate|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *7 (|Comparable|))
       (|ofCategory| *2 (|FreeModuleCategory| *6 *7))
       (|isDomain| *1 (|FreeModuleCoefficientFunctions2| *5 *6 *7 *4 *2))
       (|ofCategory| *4 (|FreeModuleCategory| *5 *7))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *1 (|Factored| *3))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|Factored| *5))
       (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *6 (|IntegralDomain|)) (|isDomain| *2 (|Factored| *6))
       (|isDomain| *1 (|FactoredFunctions2| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|Fraction| *5))
       (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *6 (|IntegralDomain|)) (|isDomain| *2 (|Fraction| *6))
       (|isDomain| *1 (|FractionFunctions2| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *9 *5))
       (|isDomain| *4 (|FractionalIdeal| *5 *6 *7 *8))
       (|ofCategory| *5 (|EuclideanDomain|))
       (|ofCategory| *6 (|QuotientFieldCategory| *5))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| *6))
       (|ofCategory| *8 (|Join| (|FramedAlgebra| *6 *7) (|RetractableTo| *6)))
       (|ofCategory| *9 (|EuclideanDomain|))
       (|ofCategory| *10 (|QuotientFieldCategory| *9))
       (|ofCategory| *11 (|UnivariatePolynomialCategory| *10))
       (|isDomain| *2 (|FractionalIdeal| *9 *10 *11 *12))
       (|isDomain| *1 (|FractionalIdealFunctions2| *5 *6 *7 *8 *9 *10 *11 *12))
       (|ofCategory| *12
                     (|Join| (|FramedAlgebra| *10 *11)
                             (|RetractableTo| *10)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|ofCategory| *5 (|CommutativeRing|))
       (|ofCategory| *6 (|CommutativeRing|))
       (|ofCategory| *2 (|FramedNonAssociativeAlgebra| *6))
       (|isDomain| *1 (|FramedNonAssociativeAlgebraFunctions2| *4 *5 *2 *6))
       (|ofCategory| *4 (|FramedNonAssociativeAlgebra| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5))
       (|ofCategory| *5 (|Join| (|Ring|) (|Comparable|)))
       (|ofCategory| *6 (|Join| (|Ring|) (|Comparable|)))
       (|ofCategory| *2 (|FunctionSpace| *6))
       (|isDomain| *1 (|FunctionSpaceFunctions2| *5 *4 *6 *2))
       (|ofCategory| *4 (|FunctionSpace| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *6 (|SetCategory|))
       (|ofCategory| *2 (|FiniteSetAggregate| *6))
       (|isDomain| *1 (|FiniteSetAggregateFunctions2| *5 *4 *6 *2))
       (|ofCategory| *4 (|FiniteSetAggregate| *5))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 *3))
       (|ofCategory| *1 (|HomogeneousAggregate| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 *3))
       (|ofCategory| *1 (|IndexedDirectProductCategory| *3 *4))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|Comparable|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5))
       (|isDomain| *4 (|IntegrationResult| *5)) (|ofCategory| *5 (|Field|))
       (|ofCategory| *6 (|Field|)) (|isDomain| *2 (|IntegrationResult| *6))
       (|isDomain| *1 (|IntegrationResultFunctions2| *5 *6))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Mapping| *6 *5))
   (|isDomain| *4
               (|Union| (|Record| (|:| |ratpart| *5) (|:| |coeff| *5))
                        "failed"))
   (|ofCategory| *5 (|Field|)) (|ofCategory| *6 (|Field|))
   (|isDomain| *2 (|Record| (|:| |ratpart| *6) (|:| |coeff| *6)))
   (|isDomain| *1 (|IntegrationResultFunctions2| *5 *6))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Mapping| *2 *5))
   (|isDomain| *4 (|Union| *5 "failed")) (|ofCategory| *5 (|Field|))
   (|ofCategory| *2 (|Field|))
   (|isDomain| *1 (|IntegrationResultFunctions2| *5 *2))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Mapping| *6 *5))
   (|isDomain| *4
               (|Union|
                (|Record| (|:| |mainpart| *5)
                          (|:| |limitedlogs|
                               (|List|
                                (|Record| (|:| |coeff| *5)
                                          (|:| |logand| *5)))))
                "failed"))
   (|ofCategory| *5 (|Field|)) (|ofCategory| *6 (|Field|))
   (|isDomain| *2
               (|Record| (|:| |mainpart| *6)
                         (|:| |limitedlogs|
                              (|List|
                               (|Record| (|:| |coeff| *6)
                                         (|:| |logand| *6))))))
   (|isDomain| *1 (|IntegrationResultFunctions2| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|InfiniteTuple| *5))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *6 (|Type|))
       (|isDomain| *2 (|InfiniteTuple| *6))
       (|isDomain| *1 (|InfiniteTupleFunctions2| *5 *6))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *8 *6 *7))
       (|isDomain| *4 (|InfiniteTuple| *6))
       (|isDomain| *5 (|InfiniteTuple| *7)) (|ofCategory| *6 (|Type|))
       (|ofCategory| *7 (|Type|)) (|ofCategory| *8 (|Type|))
       (|isDomain| *2 (|InfiniteTuple| *8))
       (|isDomain| *1 (|InfiniteTupleFunctions3| *6 *7 *8))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *8 *6 *7)) (|isDomain| *4 (|Stream| *6))
       (|isDomain| *5 (|InfiniteTuple| *7)) (|ofCategory| *6 (|Type|))
       (|ofCategory| *7 (|Type|)) (|ofCategory| *8 (|Type|))
       (|isDomain| *2 (|Stream| *8))
       (|isDomain| *1 (|InfiniteTupleFunctions3| *6 *7 *8))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *8 *6 *7))
       (|isDomain| *4 (|InfiniteTuple| *6)) (|isDomain| *5 (|Stream| *7))
       (|ofCategory| *6 (|Type|)) (|ofCategory| *7 (|Type|))
       (|ofCategory| *8 (|Type|)) (|isDomain| *2 (|Stream| *8))
       (|isDomain| *1 (|InfiniteTupleFunctions3| *6 *7 *8))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|InfiniteTuple| *3))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|List| *5))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *6 (|Type|))
       (|isDomain| *2 (|List| *6)) (|isDomain| *1 (|ListFunctions2| *5 *6))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *8 *6 *7)) (|isDomain| *4 (|List| *6))
       (|isDomain| *5 (|List| *7)) (|ofCategory| *6 (|Type|))
       (|ofCategory| *7 (|Type|)) (|ofCategory| *8 (|Type|))
       (|isDomain| *2 (|List| *8))
       (|isDomain| *1 (|ListFunctions3| *6 *7 *8))))
 ((*1 *1 *2 *1 *1)
  (AND (|isDomain| *2 (|Mapping| *3 *3 *3))
       (|ofCategory| *1 (|LinearAggregate| *3)) (|ofCategory| *3 (|Type|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *8 *5))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *8 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|FiniteLinearAggregate| *5))
       (|ofCategory| *7 (|FiniteLinearAggregate| *5))
       (|ofCategory| *2 (|MatrixCategory| *8 *9 *10))
       (|isDomain| *1 (|MatrixCategoryFunctions2| *5 *6 *7 *4 *8 *9 *10 *2))
       (|ofCategory| *4 (|MatrixCategory| *5 *6 *7))
       (|ofCategory| *9 (|FiniteLinearAggregate| *8))
       (|ofCategory| *10 (|FiniteLinearAggregate| *8))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Mapping| (|Union| *8 "failed") *5))
   (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
   (|ofCategory| *8 (|Join| (|SemiRng|) (|AbelianMonoid|)))
   (|ofCategory| *6 (|FiniteLinearAggregate| *5))
   (|ofCategory| *7 (|FiniteLinearAggregate| *5))
   (|ofCategory| *2 (|MatrixCategory| *8 *9 *10))
   (|isDomain| *1 (|MatrixCategoryFunctions2| *5 *6 *7 *4 *8 *9 *10 *2))
   (|ofCategory| *4 (|MatrixCategory| *5 *6 *7))
   (|ofCategory| *9 (|FiniteLinearAggregate| *8))
   (|ofCategory| *10 (|FiniteLinearAggregate| *8))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *7 *5)) (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *7 (|IntegralDomain|))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| (|Fraction| *8)))
       (|isDomain| *1 (|MultipleMap| *5 *6 *4 *7 *8 *2))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| *6)))
       (|ofCategory| *8 (|UnivariatePolynomialCategory| *7))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *9 *8)) (|ofCategory| *8 (|Ring|))
       (|ofCategory| *9 (|Ring|)) (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *2 (|PolynomialCategory| *9 *7 *5))
       (|isDomain| *1 (|MPolyCatFunctions2| *5 *6 *7 *8 *9 *4 *2))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|PolynomialCategory| *8 *6 *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|)) (|ofCategory| *9 (|Ring|))
       (|ofCategory| *2 (|PolynomialCategory| *9 *8 *6))
       (|isDomain| *1 (|MPolyCatFunctions3| *5 *6 *7 *8 *9 *4 *2))
       (|ofCategory| *8 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|PolynomialCategory| *9 *7 *5))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 *3))
       (|ofCategory| *1 (|MonoidRingCategory| *3 *4))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|Monoid|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|MonoidRing| *5 *7))
       (|ofCategory| *5 (|Ring|)) (|ofCategory| *6 (|Ring|))
       (|ofCategory| *7 (|Monoid|)) (|isDomain| *2 (|MonoidRing| *6 *7))
       (|isDomain| *1 (|MonoidRingFunctions2| *5 *6 *7))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5))
       (|isDomain| *4 (|NewSparseUnivariatePolynomial| *5))
       (|ofCategory| *5 (|Ring|)) (|ofCategory| *6 (|Ring|))
       (|isDomain| *2 (|NewSparseUnivariatePolynomial| *6))
       (|isDomain| *1 (|NewSparseUnivariatePolynomialFunctions2| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|ofCategory| *5 (|CommutativeRing|))
       (|ofCategory| *6 (|CommutativeRing|))
       (|ofCategory| *2 (|OctonionCategory| *6))
       (|isDomain| *1 (|OctonionCategoryFunctions2| *4 *5 *2 *6))
       (|ofCategory| *4 (|OctonionCategory| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5))
       (|isDomain| *4 (|OnePointCompletion| *5))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *2 (|OnePointCompletion| *6))
       (|isDomain| *1 (|OnePointCompletionFunctions2| *5 *6))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *2 (|OnePointCompletion| *6))
       (|isDomain| *3 (|Mapping| *6 *5))
       (|isDomain| *4 (|OnePointCompletion| *5))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *1 (|OnePointCompletionFunctions2| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5))
       (|isDomain| *4 (|OrderedCompletion| *5))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *2 (|OrderedCompletion| *6))
       (|isDomain| *1 (|OrderedCompletionFunctions2| *5 *6))))
 ((*1 *2 *3 *4 *2 *2)
  (AND (|isDomain| *2 (|OrderedCompletion| *6))
       (|isDomain| *3 (|Mapping| *6 *5))
       (|isDomain| *4 (|OrderedCompletion| *5))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *1 (|OrderedCompletionFunctions2| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5))
       (|isDomain| *4 (|ParametricPlaneCurve| *5)) (|ofCategory| *5 (|Type|))
       (|ofCategory| *6 (|Type|)) (|isDomain| *2 (|ParametricPlaneCurve| *6))
       (|isDomain| *1 (|ParametricPlaneCurveFunctions2| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5))
       (|isDomain| *4 (|ParametricSpaceCurve| *5)) (|ofCategory| *5 (|Type|))
       (|ofCategory| *6 (|Type|)) (|isDomain| *2 (|ParametricSpaceCurve| *6))
       (|isDomain| *1 (|ParametricSpaceCurveFunctions2| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5))
       (|isDomain| *4 (|ParametricSurface| *5)) (|ofCategory| *5 (|Type|))
       (|ofCategory| *6 (|Type|)) (|isDomain| *2 (|ParametricSurface| *6))
       (|isDomain| *1 (|ParametricSurfaceFunctions2| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *7 *6))
       (|isDomain| *4 (|PatternMatchResult| *5 *6))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|ofCategory| *7 (|SetCategory|))
       (|isDomain| *2 (|PatternMatchResult| *5 *7))
       (|isDomain| *1 (|PatternMatchResultFunctions2| *5 *6 *7))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|Pattern| *5))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *2 (|Pattern| *6))
       (|isDomain| *1 (|PatternFunctions2| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|Polynomial| *5))
       (|ofCategory| *5 (|Ring|)) (|ofCategory| *6 (|Ring|))
       (|isDomain| *2 (|Polynomial| *6))
       (|isDomain| *1 (|PolynomialFunctions2| *5 *6))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *2 *7)) (|isDomain| *4 (|Mapping| *2 *8))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *8 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *2
                     (|Join| (|SetCategory|)
                             (CATEGORY |domain| (SIGNATURE + ($ $ $))
                              (SIGNATURE * ($ $ $))
                              (SIGNATURE ^ ($ $ (|NonNegativeInteger|))))))
       (|isDomain| *1 (|PolynomialCategoryLifting| *6 *7 *8 *5 *2))
       (|ofCategory| *5 (|PolynomialCategory| *8 *6 *7))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|PrimitiveArray| *5))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *6 (|Type|))
       (|isDomain| *2 (|PrimitiveArray| *6))
       (|isDomain| *1 (|PrimitiveArrayFunctions2| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|Point| *5))
       (|ofCategory| *5 (|Ring|)) (|ofCategory| *6 (|Ring|))
       (|isDomain| *2 (|Point| *6)) (|isDomain| *1 (|PointFunctions2| *5 *6))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|Mapping| *2 (|Polynomial| *4)))
       (|ofCategory| *4 (|Ring|))
       (|ofCategory| *2 (|PolynomialCategory| (|Polynomial| *4) *5 *6))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6
                     (|Join| (|OrderedSet|)
                             (CATEGORY |domain|
                              (SIGNATURE |convert| ((|Symbol|) $))
                              (SIGNATURE |variable|
                               ((|Union| $ "failed") (|Symbol|))))))
       (|isDomain| *1 (|PushVariables| *4 *5 *6 *2))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *6 (|IntegralDomain|))
       (|ofCategory| *2 (|QuotientFieldCategory| *6))
       (|isDomain| *1 (|QuotientFieldCategoryFunctions2| *5 *6 *4 *2))
       (|ofCategory| *4 (|QuotientFieldCategory| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|ofCategory| *5 (|CommutativeRing|))
       (|ofCategory| *6 (|CommutativeRing|))
       (|ofCategory| *2 (|QuaternionCategory| *6))
       (|isDomain| *1 (|QuaternionCategoryFunctions2| *4 *5 *2 *6))
       (|ofCategory| *4 (|QuaternionCategory| *5))))
 ((*1 *1 *2 *1 *1)
  (AND (|isDomain| *2 (|Mapping| *5 *5 *5))
       (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|DirectProductCategory| *4 *5))
       (|ofCategory| *7 (|DirectProductCategory| *3 *5))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *5 *5))
       (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|DirectProductCategory| *4 *5))
       (|ofCategory| *7 (|DirectProductCategory| *3 *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *10 *7))
       (|ofCategory| *7 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *10 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofType| *5 (|NonNegativeInteger|))
       (|ofType| *6 (|NonNegativeInteger|))
       (|ofCategory| *8 (|DirectProductCategory| *6 *7))
       (|ofCategory| *9 (|DirectProductCategory| *5 *7))
       (|ofCategory| *2 (|RectangularMatrixCategory| *5 *6 *10 *11 *12))
       (|isDomain| *1
                   (|RectangularMatrixCategoryFunctions2| *5 *6 *7 *8 *9 *4 *10
                                                          *11 *12 *2))
       (|ofCategory| *4 (|RectangularMatrixCategory| *5 *6 *7 *8 *9))
       (|ofCategory| *11 (|DirectProductCategory| *6 *10))
       (|ofCategory| *12 (|DirectProductCategory| *5 *10))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|Segment| *5))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *6 (|Type|))
       (|isDomain| *2 (|Segment| *6))
       (|isDomain| *1 (|SegmentFunctions2| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|Segment| *5))
       (|ofCategory| *5 (|OrderedRing|)) (|ofCategory| *5 (|Type|))
       (|ofCategory| *6 (|Type|)) (|isDomain| *2 (|List| *6))
       (|isDomain| *1 (|SegmentFunctions2| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|SegmentBinding| *5))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *6 (|Type|))
       (|isDomain| *2 (|SegmentBinding| *6))
       (|isDomain| *1 (|SegmentBindingFunctions2| *5 *6))))
 ((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|Mapping| *4 *4))
       (|ofCategory| *1 (|SegmentExpansionCategory| *4 *2))
       (|ofCategory| *4 (|OrderedRing|))
       (|ofCategory| *2 (|StreamAggregate| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|Sequence| *5))
       (|ofCategory| *5 (|CommutativeRing|))
       (|ofCategory| *6 (|CommutativeRing|)) (|isDomain| *2 (|Sequence| *6))
       (|isDomain| *1 (|SequenceFunctions2| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|Stream| *5))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *6 (|Type|))
       (|isDomain| *2 (|Stream| *6))
       (|isDomain| *1 (|StreamFunctions2| *5 *6))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *8 *6 *7)) (|isDomain| *4 (|Stream| *6))
       (|isDomain| *5 (|Stream| *7)) (|ofCategory| *6 (|Type|))
       (|ofCategory| *7 (|Type|)) (|ofCategory| *8 (|Type|))
       (|isDomain| *2 (|Stream| *8))
       (|isDomain| *1 (|StreamFunctions3| *6 *7 *8))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5))
       (|isDomain| *4 (|SparseUnivariatePolynomial| *5))
       (|ofCategory| *5 (|Ring|)) (|ofCategory| *6 (|Ring|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *6))
       (|isDomain| *1 (|SparseUnivariatePolynomialFunctions2| *5 *6))))
 ((*1 *1 *2 *1 *1)
  (AND (|isDomain| *2 (|Mapping| *4 *4 *4))
       (|ofCategory| *1 (|TableAggregate| *3 *4)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|Type|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5))
       (|isDomain| *4 (|UnivariateLaurentSeries| *5 *7 *9))
       (|ofCategory| *5 (|Ring|)) (|ofCategory| *6 (|Ring|))
       (|ofType| *7 (|Symbol|)) (|ofType| *9 *5) (|ofType| *10 *6)
       (|isDomain| *2 (|UnivariateLaurentSeries| *6 *8 *10))
       (|isDomain| *1 (|UnivariateLaurentSeriesFunctions2| *5 *6 *7 *8 *9 *10))
       (|ofType| *8 (|Symbol|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5))
       (|isDomain| *4 (|UniversalSegment| *5)) (|ofCategory| *5 (|Type|))
       (|ofCategory| *6 (|Type|)) (|isDomain| *2 (|UniversalSegment| *6))
       (|isDomain| *1 (|UniversalSegmentFunctions2| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5))
       (|isDomain| *4 (|UniversalSegment| *5))
       (|ofCategory| *5 (|OrderedRing|)) (|ofCategory| *5 (|Type|))
       (|ofCategory| *6 (|Type|)) (|isDomain| *2 (|Stream| *6))
       (|isDomain| *1 (|UniversalSegmentFunctions2| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *8 *6))
       (|isDomain| *4 (|UnivariatePolynomial| *5 *6)) (|ofType| *5 (|Symbol|))
       (|ofCategory| *6 (|Ring|)) (|ofCategory| *8 (|Ring|))
       (|isDomain| *2 (|UnivariatePolynomial| *7 *8))
       (|isDomain| *1 (|UnivariatePolynomialFunctions2| *5 *6 *7 *8))
       (|ofType| *7 (|Symbol|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *6))
       (|isDomain| *1 (|UnivariatePolynomialCategoryFunctions2| *5 *4 *6 *2))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5))
       (|isDomain| *4 (|UnivariatePuiseuxSeries| *5 *7 *9))
       (|ofCategory| *5 (|Ring|)) (|ofCategory| *6 (|Ring|))
       (|ofType| *7 (|Symbol|)) (|ofType| *9 *5) (|ofType| *10 *6)
       (|isDomain| *2 (|UnivariatePuiseuxSeries| *6 *8 *10))
       (|isDomain| *1 (|UnivariatePuiseuxSeriesFunctions2| *5 *6 *7 *8 *9 *10))
       (|ofType| *8 (|Symbol|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|ofCategory| *5 (|Ring|))
       (|ofCategory| *6 (|Ring|))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *6))
       (|isDomain| *1 (|UnivariateTaylorSeriesFunctions2| *5 *6 *4 *2))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|Vector| *5))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *6 (|Type|))
       (|isDomain| *2 (|Vector| *6))
       (|isDomain| *1 (|VectorFunctions2| *5 *6))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Mapping| (|Union| *6 "failed") *5))
   (|isDomain| *4 (|Vector| *5)) (|ofCategory| *5 (|Type|))
   (|ofCategory| *6 (|Type|)) (|isDomain| *2 (|Vector| *6))
   (|isDomain| *1 (|VectorFunctions2| *5 *6))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *4 *4))
       (|ofCategory| *1 (|XFreeAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|XPolynomialRing| *3 *4))
       (|ofCategory| *4 (|OrderedMonoid|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|AbelianMonoidRing| *2 *3))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *3 (|OrderedAbelianMonoid|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|AntiSymm| *2 *3)) (|ofCategory| *2 (|Ring|))
       (|ofType| *3 (|List| (|Symbol|)))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|DeRhamComplex| *2 *3))
       (|ofCategory| *2 (|Join| (|Ring|) (|Comparable|)))
       (|ofType| *3 (|List| (|Symbol|)))))
 ((*1 *1 *1)
  (AND (|ofType| *2 (|List| (|Symbol|))) (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *5
                     (|DirectProductCategory| (|#| *2) (|NonNegativeInteger|)))
       (|ofType| *6
        (|Mapping| (|Boolean|) (|Record| (|:| |index| *4) (|:| |exponent| *5))
                   (|Record| (|:| |index| *4) (|:| |exponent| *5))))
       (|isDomain| *1 (|GeneralModulePolynomial| *2 *3 *4 *5 *6 *7))
       (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *7
                     (|PolynomialCategory| *3 *5 (|OrderedVariableList| *2)))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|IndexedDirectProductCategory| *2 *3))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|Comparable|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *2 (|IntegralDomain|))
       (|isDomain| *1 (|LaurentPolynomial| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *2))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|SolvableSkewPolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|XPolynomialRing| *2 *3)) (|ofCategory| *2 (|Ring|))
       (|ofCategory| *3 (|OrderedMonoid|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|finiteAggregate|)) (|ofCategory| *1 (|Aggregate|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|SExpressionCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *2 (|Integer|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|Tuple| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|XPolynomialRing| *3 *4)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *4 (|OrderedMonoid|))))) 
(((*1 *1 *2)
  (AND (|ofCategory| *1 (|Algebra| *2)) (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Vector| *3)) (|ofCategory| *3 (|Field|))
       (|ofType| *6 (|Vector| (|Matrix| *3)))
       (|isDomain| *1 (|AlgebraGivenByStructuralConstants| *3 *4 *5 *6))
       (|ofType| *4 (|PositiveInteger|)) (|ofType| *5 (|List| (|Symbol|)))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|SparseMultivariatePolynomial| (|Integer|)
                                               (|Kernel| (|AlgebraicNumber|))))
   (|isDomain| *1 (|AlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|Any|)) (|isDomain| *1 (|AnyFunctions1| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|RadixExpansion| 2))
       (|isDomain| *1 (|BinaryExpansion|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|BinaryExpansion|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|CartesianTensor| *3 *4 *5)))
       (|isDomain| *1 (|CartesianTensor| *3 *4 *5)) (|ofType| *3 (|Integer|))
       (|ofType| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|CommutativeRing|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *5)) (|ofCategory| *5 (|CommutativeRing|))
       (|isDomain| *1 (|CartesianTensor| *3 *4 *5)) (|ofType| *3 (|Integer|))
       (|ofType| *4 (|NonNegativeInteger|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|SquareMatrix| *4 *5))
       (|ofType| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|CommutativeRing|))
       (|isDomain| *1 (|CartesianTensor| *3 *4 *5)) (|ofType| *3 (|Integer|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|DirectProduct| *4 *5))
       (|ofType| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|CommutativeRing|))
       (|isDomain| *1 (|CartesianTensor| *3 *4 *5)) (|ofType| *3 (|Integer|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|SKICombinators| *4)) (|ofCategory| *4 (|VarCat|))
       (|isDomain| *2 (|Lambda| *4)) (|isDomain| *1 (|compUtil| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Lambda| *4)) (|ofCategory| *4 (|VarCat|))
       (|isDomain| *2 (|SKICombinators| *4)) (|isDomain| *1 (|compUtil| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|SKICombinators| *4)) (|ofCategory| *4 (|VarCat|))
       (|isDomain| *2 (|ILogic|)) (|isDomain| *1 (|compUtil| *4))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|DeltaComplex| *3))
       (|isDomain| *1 (|FiniteCubicalComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| (|Matrix| *4)))
       (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|Vector| (|Matrix| (|Fraction| (|Polynomial| *4)))))
       (|isDomain| *1 (|CoerceVectorMatrixPackage| *4))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3))
       (|ofCategory| *3
                     (|Join| (|OrderedSet|)
                             (CATEGORY |domain|
                              (SIGNATURE |elt| ((|String|) $ (|Symbol|)))
                              (SIGNATURE |display| ((|Void|) $))
                              (SIGNATURE |fullDisplay| ((|Void|) $)))))
       (|isDomain| *1 (|Database| *3))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|RadixExpansion| 10))
       (|isDomain| *1 (|DecimalExpansion|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|DecimalExpansion|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|FiniteSimplicialComplex| *3))
       (|isDomain| *1 (|DeltaComplex| *3)) (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|DirectedGraph| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|FinitePoset| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|DirectedGraph| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|PermutationGroup| *3))
       (|ofCategory| *3 (|SetCategory|)) (|isDomain| *1 (|DirectedGraph| *3))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Stream| *3)) (|isDomain| *1 (|DirichletRing| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|DirichletRing| *3))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 (|PositiveInteger|)))
       (|isDomain| *1 (|DirichletRing| *3)) (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *3 (|PositiveInteger|)))
       (|ofCategory| *3 (|Ring|)) (|isDomain| *1 (|DirichletRing| *3))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Distribution| *4))
       (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|Distribution| *5))
       (|isDomain| *1 (|DistributionFunctions2| *4 *5))
       (|ofCategory| *5 (|CommutativeRing|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|DataList| *3))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *1 (|DataList| *3))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|SegmentBinding| (|Expression| *4)))
       (|ofCategory| *4
                     (|Join| (|OrderedSet|) (|IntegralDomain|)
                             (|ConvertibleTo| (|Float|))))
       (|isDomain| *2 (|SegmentBinding| (|Float|)))
       (|isDomain| *1 (|DrawNumericHack| *4))))
 ((*1 *1 *2)
  (AND (|ofCategory| *1 (|DifferentialVariableCategory| *2))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Integer|))) (|isDomain| *1 (|ExtAlgBasis|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))
       (|isDomain| *1 (|EuclideanModularRing| *3 *2 *4 *5 *6 *7))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *4 (|AbelianMonoid|)) (|ofType| *5 (|Mapping| *2 *2 *4))
       (|ofType| *6 (|Mapping| (|Union| *4 "failed") *4 *4))
       (|ofType| *7 (|Mapping| (|Union| *2 "failed") *2 *2 *4))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|UnivariatePuiseuxSeries| *4 *5 *6))
       (|ofCategory| *4
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *3)))
       (|ofType| *5 (|Symbol|)) (|ofType| *6 *4)
       (|ofCategory| *3
                     (|Join| (|Comparable|) (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))
                             (|GcdDomain|)))
       (|isDomain| *1 (|ExponentialExpansion| *3 *4 *5 *6))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|FortranCode|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Expression| *5))
       (|isDomain| *1 (|FortranExpression| *3 *4 *5))
       (|ofType| *3 (|List| (|Symbol|))) (|ofType| *4 (|List| (|Symbol|)))
       (|ofCategory| *5 (|FortranMachineTypeCategory|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|FiniteFieldCategory|))
       (|ofCategory| *2 (|FiniteAlgebraicExtensionField| *4))
       (|isDomain| *1 (|FiniteFieldHomomorphisms| *3 *4 *2))
       (|ofCategory| *3 (|FiniteAlgebraicExtensionField| *4))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|FiniteFieldCategory|))
       (|ofCategory| *2 (|FiniteAlgebraicExtensionField| *4))
       (|isDomain| *1 (|FiniteFieldHomomorphisms| *2 *4 *3))
       (|ofCategory| *3 (|FiniteAlgebraicExtensionField| *4))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FreeLieAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|XRecursivePolynomial| *3 *4))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FreeLieAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|XDistributedPolynomial| *3 *4))))
 ((*1 *1 *2)
  (AND (|ofCategory| *1 (|FreeLieAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|CommutativeRing|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|FreeMonoid| *3)) (|isDomain| *1 (|FreeMagma| *3))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |localSymbols| (|SymbolTable|))
                         (|:| |code| (|List| (|FortranCode|)))))
   (|ofCategory| *1 (|FortranMatrixCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|FortranCode|))
       (|ofCategory| *1 (|FortranMatrixCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|FortranCode|)))
       (|ofCategory| *1 (|FortranMatrixCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Matrix| (|MachineFloat|)))
       (|ofCategory| *1 (|FortranMatrixCategory|))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |localSymbols| (|SymbolTable|))
                         (|:| |code| (|List| (|FortranCode|)))))
   (|ofCategory| *1 (|FortranMatrixFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|FortranCode|))
       (|ofCategory| *1 (|FortranMatrixFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|FortranCode|)))
       (|ofCategory| *1 (|FortranMatrixFunctionCategory|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FileNameCategory|)) (|isDomain| *2 (|String|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|String|)) (|ofCategory| *1 (|FileNameCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|ScriptFormulaFormat|))))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|ScriptFormulaFormat|))
       (|isDomain| *1 (|ScriptFormulaFormat1| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |localSymbols| (|SymbolTable|))
                         (|:| |code| (|List| (|FortranCode|)))))
   (|ofCategory| *1 (|FortranFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|FortranCode|))
       (|ofCategory| *1 (|FortranFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|FortranCode|)))
       (|ofCategory| *1 (|FortranFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Equation| (|Expression| (|Complex| (|Float|)))))
       (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)) (|ofType| *3 (|Symbol|))
       (|ofType| *4
        (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| #1="void")))
       (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|SymbolTable|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Equation| (|Expression| (|Float|))))
       (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)) (|ofType| *3 (|Symbol|))
       (|ofType| *4
        (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| #1#)))
       (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|SymbolTable|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Equation| (|Expression| (|Integer|))))
       (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)) (|ofType| *3 (|Symbol|))
       (|ofType| *4
        (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| #1#)))
       (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|SymbolTable|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Expression| (|Complex| (|Float|))))
       (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)) (|ofType| *3 (|Symbol|))
       (|ofType| *4
        (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| #1#)))
       (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|SymbolTable|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Expression| (|Float|)))
       (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)) (|ofType| *3 (|Symbol|))
       (|ofType| *4
        (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| #1#)))
       (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|SymbolTable|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Expression| (|Integer|)))
       (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)) (|ofType| *3 (|Symbol|))
       (|ofType| *4
        (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| #1#)))
       (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|SymbolTable|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Equation| (|Expression| (|MachineComplex|))))
       (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)) (|ofType| *3 (|Symbol|))
       (|ofType| *4
        (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| #1#)))
       (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|SymbolTable|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Equation| (|Expression| (|MachineFloat|))))
       (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)) (|ofType| *3 (|Symbol|))
       (|ofType| *4
        (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| #1#)))
       (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|SymbolTable|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Equation| (|Expression| (|MachineInteger|))))
       (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)) (|ofType| *3 (|Symbol|))
       (|ofType| *4
        (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| #1#)))
       (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|SymbolTable|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Expression| (|MachineComplex|)))
       (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)) (|ofType| *3 (|Symbol|))
       (|ofType| *4
        (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| #1#)))
       (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|SymbolTable|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Expression| (|MachineFloat|)))
       (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)) (|ofType| *3 (|Symbol|))
       (|ofType| *4
        (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| #1#)))
       (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|SymbolTable|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Expression| (|MachineInteger|)))
       (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)) (|ofType| *3 (|Symbol|))
       (|ofType| *4
        (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| #1#)))
       (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|SymbolTable|))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |localSymbols| (|SymbolTable|))
                         (|:| |code| (|List| (|FortranCode|)))))
   (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)) (|ofType| *3 (|Symbol|))
   (|ofType| *4 (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| #1#)))
   (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|SymbolTable|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|FortranCode|)))
       (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)) (|ofType| *3 (|Symbol|))
       (|ofType| *4
        (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| #1#)))
       (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|SymbolTable|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|FortranCode|))
       (|isDomain| *1 (|FortranProgram| *3 *4 *5 *6)) (|ofType| *3 (|Symbol|))
       (|ofType| *4
        (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| #1#)))
       (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|SymbolTable|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Fraction| (|Polynomial| (|Fraction| *3))))
       (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Comparable|))
       (|ofCategory| *1 (|FunctionSpace| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Polynomial| (|Fraction| *3)))
       (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Comparable|))
       (|ofCategory| *1 (|FunctionSpace| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Fraction| *3)) (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *3 (|Comparable|))
       (|ofCategory| *1 (|FunctionSpace| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|SparseMultivariatePolynomial| *3 (|Kernel| *1)))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *3 (|Comparable|))
       (|ofCategory| *1 (|FunctionSpace| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|FourierComponent| *4))
       (|ofCategory| *4 (|Join| (|OrderedSet|) (|AbelianGroup|)))
       (|isDomain| *1 (|FourierSeries| *3 *4))
       (|ofCategory| *3
                     (|Join| (|CommutativeRing|)
                             (|Algebra| (|Fraction| (|Integer|)))))))
 ((*1 *1 *2)
  (AND (|isDomain| *1 (|FourierSeries| *2 *3))
       (|ofCategory| *2
                     (|Join| (|CommutativeRing|)
                             (|Algebra| (|Fraction| (|Integer|)))))
       (|ofCategory| *3 (|Join| (|OrderedSet|) (|AbelianGroup|)))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|SExpression|)) (|isDomain| *1 (|FortranScalarType|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|FortranScalarType|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|FortranScalarType|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|FortranScalarType|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|FortranScalarType|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|FortranScalarType|)) (|isDomain| *1 (|FortranType|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|FortranType|))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |localSymbols| (|SymbolTable|))
                         (|:| |code| (|List| (|FortranCode|)))))
   (|ofCategory| *1 (|FortranVectorCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|FortranCode|))
       (|ofCategory| *1 (|FortranVectorCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|FortranCode|)))
       (|ofCategory| *1 (|FortranVectorCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Vector| (|MachineFloat|)))
       (|ofCategory| *1 (|FortranVectorCategory|))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |localSymbols| (|SymbolTable|))
                         (|:| |code| (|List| (|FortranCode|)))))
   (|ofCategory| *1 (|FortranVectorFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|FortranCode|))
       (|ofCategory| *1 (|FortranVectorFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|FortranCode|)))
       (|ofCategory| *1 (|FortranVectorFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Vector| (|Fraction| (|Polynomial| *3))))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofType| *6 (|Vector| (|Matrix| *3)))
       (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
       (|ofType| *4 (|PositiveInteger|)) (|ofType| *5 (|List| (|Symbol|)))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| (|Point| (|DoubleFloat|)))))
       (|isDomain| *1 (|GraphImage|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|GraphImage|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|UnivariatePuiseuxSeries| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofType| *4 (|Symbol|)) (|ofType| *5 *3)
       (|isDomain| *1 (|GeneralUnivariatePowerSeries| *3 *4 *5))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|GeneralUnivariatePowerSeries| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|RadixExpansion| 16))
       (|isDomain| *1 (|HexadecimalExpansion|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|HexadecimalExpansion|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|String|))
       (|isDomain| *1 (|HTMLFormat|))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|SparseMultivariatePolynomial| (|Integer|)
                                               (|Kernel|
                                                (|InnerAlgebraicNumber|))))
   (|isDomain| *1 (|InnerAlgebraicNumber|))))
 ((*1 *1 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|IndexCard|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|PolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialIdeal| *3 *4 *5 *6))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|SparseMultivariatePolynomial| (|Expression| (|Integer|)) *3))
   (|ofCategory| *3 (|JetBundleCategory|))
   (|isDomain| *1 (|JetBundleExpression| *3))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|SparseMultivariatePolynomial| (|Integer|)
                                               (|Kernel|
                                                (|JetBundleExpression| *3))))
   (|isDomain| *1 (|JetBundleExpression| *3))
   (|ofCategory| *3 (|JetBundleCategory|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Expression| (|Integer|)))
       (|isDomain| *1 (|JetBundleExpression| *3))
       (|ofCategory| *3 (|JetBundleCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Expression| (|Integer|)))
       (|isDomain| *1 (|JetBundleExpression| *3))
       (|ofCategory| *3 (|JetBundleCategory|))))
 ((*1 *1 *2)
  (AND (|ofCategory| *1 (|JetBundleFunctionCategory| *2))
       (|ofCategory| *2 (|JetBundleCategory|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseEchelonMatrix| *4 *5))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|ofCategory| *5 (|JetBundleBaseFunctionCategory| *4))
       (|isDomain| *2 (|List| (|JetBundleLinearFunction| *4 *5)))
       (|isDomain| *1 (|JetBundleLinearFunction| *4 *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|JetBundleLinearFunction| *4 *5)))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *2 (|SparseEchelonMatrix| *4 *5))
       (|isDomain| *1 (|JetBundleLinearFunction| *4 *5))
       (|ofCategory| *5 (|JetBundleBaseFunctionCategory| *4))))
 ((*1 *1 *2)
  (AND (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|JetBundleLinearFunction| *3 *2))
       (|ofCategory| *2 (|JetBundleBaseFunctionCategory| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|JetBundleSymAna| *3 *4 *5))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|ofType| *4 (|Union| *2 (|List| *2)))
       (|ofType| *5 (|Union| *2 (|List| *2)))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|JetBundle| *3 *4))
       (|ofType| *3 (|List| *2)) (|ofType| *4 (|List| *2))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Expression| (|Integer|)))
       (|isDomain| *1 (|JetBundleXExpression| *3))
       (|ofCategory| *3 (|JetBundleCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Expression| (|Integer|)))
       (|isDomain| *1 (|JetBundleXExpression| *3))
       (|ofCategory| *3 (|JetBundleCategory|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|JetBundleCategory|)) (|isDomain| *2 (|OutputForm|))
       (|isDomain| *1 (|JetDifferentialEquation| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|JetBundleFunctionCategory| *3))
       (|isDomain| *1 (|JetLazyFunction| *3 *2))
       (|ofCategory| *3 (|JetBundleCategory|))))
 ((*1 *1 *2)
  (AND (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|JetLazyFunction| *3 *2))
       (|ofCategory| *2 (|JetBundleFunctionCategory| *3))))
 ((*1 *1 *2)
  (AND (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|AssociatedJordanAlgebra| *3 *2))
       (|ofCategory| *2 (|NonAssociativeAlgebra| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|CoercibleTo| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2)
  (AND (|ofCategory| *1 (|CoercibleFrom| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2)
  (AND (|ofCategory| *1 (|LeftAlgebra| *2)) (|ofCategory| *2 (|Ring|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|LatticeMeetOfJoins|))
       (|isDomain| *1 (|LatticeJoinOfMeets|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|LatticeMeetOfJoins|))
       (|isDomain| *1 (|LatticeJoinOfMeets|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|XPBWPolynomial| *3 *4))
       (|isDomain| *1 (|LieExponentials| *3 *4 *5))
       (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *4
                     (|Join| (|CommutativeRing|)
                             (|Module| (|Fraction| (|Integer|)))))
       (|ofType| *5 (|PositiveInteger|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|XDistributedPolynomial| *3 *4))
       (|isDomain| *1 (|LieExponentials| *3 *4 *5))
       (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *4
                     (|Join| (|CommutativeRing|)
                             (|Module| (|Fraction| (|Integer|)))))
       (|ofType| *5 (|PositiveInteger|))))
 ((*1 *1 *2)
  (AND (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|AssociatedLieAlgebra| *3 *2))
       (|ofCategory| *2 (|NonAssociativeAlgebra| *3))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|FreeMagma| *3)) (|isDomain| *1 (|LyndonWord| *3))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|FreeMonoid| *3)) (|isDomain| *1 (|LyndonWord| *3))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *2 *1)
  (AND
   (|isDomain| *2 (|PrimitiveArray| (|PrimitiveArray| (|PrimitiveArray| *3))))
   (|isDomain| *1 (|ThreeDimensionalMatrix| *3))
   (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2 (|PrimitiveArray| (|PrimitiveArray| (|PrimitiveArray| *3))))
   (|ofCategory| *3 (|SetCategory|))
   (|isDomain| *1 (|ThreeDimensionalMatrix| *3))))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| *3)) (|isDomain| *1 (|MappingPackage1| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *2)
  (AND (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *1 (|MatrixCategory| *3 *4 *2))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *2 (|FiniteLinearAggregate| *3))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|MachineComplex|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Complex| (|MachineInteger|)))
       (|isDomain| *1 (|MachineComplex|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Complex| (|MachineFloat|)))
       (|isDomain| *1 (|MachineComplex|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Complex| (|Integer|)))
       (|isDomain| *1 (|MachineComplex|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|MachineComplex|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|PermutationGroup| *3))
       (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|MultifunctionGraph| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|MachineInteger|)) (|isDomain| *1 (|MachineFloat|))))
 ((*1 *2 *1) (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|MachineFloat|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Expression| (|Integer|)))
       (|isDomain| *2 (|Expression| (|MachineInteger|)))
       (|isDomain| *1 (|MachineInteger|))))
 ((*1 *1 *2)
  (AND (|isDomain| *1 (|MakeCachableSet| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|String|))
       (|isDomain| *1 (|MathMLFormat|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|ModularField| *2 *3 *4 *5 *6))
       (|ofCategory| *3 (|AbelianMonoid|)) (|ofType| *4 (|Mapping| *2 *2 *3))
       (|ofType| *5 (|Mapping| (|Union| *3 "failed") *3 *3))
       (|ofType| *6 (|Mapping| (|Union| *2 "failed") *2 *2 *3))))
 ((*1 *1 *2)
  (AND (|ofCategory| *3 (|Ring|)) (|isDomain| *1 (|ModMonic| *3 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Record| (|:| |index| *3) (|:| |exponent| *4)))
       (|isDomain| *1 (|ModuleMonomial| *3 *4 *5))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|SetCategory|))
       (|ofType| *5 (|Mapping| (|Boolean|) *2 *2))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Record| (|:| |index| *3) (|:| |exponent| *4)))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|ModuleMonomial| *3 *4 *5))
       (|ofType| *5 (|Mapping| (|Boolean|) *2 *2))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|ModularRing| *2 *3 *4 *5 *6))
       (|ofCategory| *3 (|AbelianMonoid|)) (|ofType| *4 (|Mapping| *2 *2 *3))
       (|ofType| *5 (|Mapping| (|Union| *3 "failed") *3 *3))
       (|ofType| *6 (|Mapping| (|Union| *2 "failed") *2 *2 *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Record| (|:| |k| *4) (|:| |c| *3))))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|Monoid|))
       (|ofCategory| *1 (|MonoidRingCategory| *3 *4))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|NonAssociativeRing|))))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|None|)) (|isDomain| *1 (|NoneFunctions1| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|PartialDifferentialRing| *3))
       (|isDomain| *1 (|OrdinaryDifferentialRing| *3 *2 *4))
       (|ofCategory| *3 (|SetCategory|)) (|ofType| *4 *3)))
 ((*1 *1 *2)
  (AND (|ofCategory| *3 (|SetCategory|)) (|ofType| *4 *3)
       (|isDomain| *1 (|OrdinaryDifferentialRing| *3 *2 *4))
       (|ofCategory| *2 (|PartialDifferentialRing| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|OpenMathErrorKind|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *3)) (|ofType| *3 (|Symbol|))
       (|isDomain| *1 (|UnivariateSkewPolynomial| *3 *4 *5 *6))
       (|ofCategory| *4 (|Ring|)) (|ofType| *5 (|Automorphism| *4))
       (|ofType| *6 (|Mapping| *4 *4))))
 ((*1 *1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|OrdSetInts|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Polynomial| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|OrdinaryWeightedPolynomials| *3 *4 *5 *6))
       (|ofType| *4 (|List| (|Symbol|)))
       (|ofType| *5 (|List| (|NonNegativeInteger|)))
       (|ofType| *6 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Polynomial| *3))
       (|isDomain| *1 (|OrdinaryWeightedPolynomials| *3 *4 *5 *6))
       (|ofCategory| *3 (|Ring|)) (|ofType| *4 (|List| (|Symbol|)))
       (|ofType| *5 (|List| (|NonNegativeInteger|)))
       (|ofType| *6 (|NonNegativeInteger|))))
 ((*1 *1 *2) (AND (|isDomain| *2 (|Color|)) (|isDomain| *1 (|Palette|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Polynomial| (|AlgebraicNumber|)))
       (|isDomain| *2 (|Expression| (|Integer|)))
       (|isDomain| *1 (|PolynomialAN2Expression|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| (|AlgebraicNumber|))))
       (|isDomain| *2 (|Expression| (|Integer|)))
       (|isDomain| *1 (|PolynomialAN2Expression|))))
 ((*1 *1 *2)
  (AND (|isDomain| *1 (|PoincareBirkhoffWittLyndonBasis| *2))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|FreeMonoid| *3))
       (|isDomain| *1 (|PoincareBirkhoffWittLyndonBasis| *3))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Tree| *3)) (|isDomain| *1 (|PendantTree| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|Permutation| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| *3))) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|Permutation| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Permutation| *3)))
       (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|PermutationGroup| *3))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Permutation| *3)))
       (|isDomain| *1 (|PermutationGroup| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Fraction| (|Factored| *3)))
       (|ofCategory| *3 (|EuclideanDomain|))
       (|isDomain| *1 (|PartialFraction| *3))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Fraction| *3)) (|isDomain| *1 (|PartialFraction| *3))
       (|ofCategory| *3 (|EuclideanDomain|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Pi|)) (|isDomain| *2 (|Expression| *4))
       (|isDomain| *1 (|PiCoercions| *4))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Integer|))) (|isDomain| *1 (|Partition|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|RadixExpansion| *3)) (|ofType| *3 (|Integer|))))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|ResolveLatticeCompletion| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Exit|)) (|isDomain| *1 (|ResolveLatticeCompletion| *2))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2)
  (AND (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|ResidueRing| *3 *4 *5 *2 *6))
       (|ofCategory| *2 (|PolynomialCategory| *3 *4 *5))
       (|ofType| *6 (|List| *2))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RetractableFrom| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2)
  (AND (|ofCategory| *1 (|RetractableTo| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|Fraction| (|Polynomial| *3)))
       (|isDomain| *1 (|RationalFunction| *3))
       (|ofCategory| *3 (|IntegralDomain|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Matrix| *5))
       (|isDomain| *1 (|RectangularMatrix| *3 *4 *5))
       (|ofType| *3 (|NonNegativeInteger|))
       (|ofType| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|SArgand|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|SArgand|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|SBoundary| *3))
       (|ofCategory| *3 (|SPointCategory|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|Scene| *3))
       (|ofCategory| *3 (|SPointCategory|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|SceneIFS| *3))
       (|ofCategory| *3 (|SPointCategory|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Matrix| *4))
       (|isDomain| *1 (|SparseEchelonMatrix| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *1 (|SequenceCategory| *3))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|DeltaComplex| *3))
       (|isDomain| *1 (|FiniteSimplicialComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *1 *2)
  (AND (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *1 (|SparseMultivariateTaylorSeries| *3 *4 *2))
       (|ofCategory| *2 (|PolynomialCategory| *3 (|IndexedExponents| *4) *4))))
 ((*1 *1 *2)
  (AND (|ofCategory| *3 (|Ring|)) (|ofCategory| *2 (|OrderedSet|))
       (|isDomain| *1 (|SparseMultivariateTaylorSeries| *3 *2 *4))
       (|ofCategory| *4 (|PolynomialCategory| *3 (|IndexedExponents| *2) *2))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|OutputForm|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|SPointCategory|)) (|isDomain| *2 (|OutputForm|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Matrix| *4)) (|isDomain| *1 (|SquareMatrix| *3 *4))
       (|ofType| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Character|)) (|ofCategory| *1 (|StringAggregate|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|STransform| *3))
       (|ofCategory| *3 (|SPointCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|Stream| *3))))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|Stream| *3))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|SparseUnivariateLaurentSeries| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|SparseUnivariatePuiseuxSeries| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|SparseUnivariateTaylorSeries| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|UnivariatePolynomial| *4 *3))
       (|ofCategory| *3 (|Ring|)) (|ofType| *4 (|Symbol|)) (|ofType| *5 *3)
       (|isDomain| *1 (|SparseUnivariateTaylorSeries| *3 *4 *5))))
 ((*1 *1 *2) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|Switch|))))
 ((*1 *1 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|Symbol|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Table| (|Symbol|) (|FortranType|)))
       (|isDomain| *1 (|SymbolTable|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|TexFormat|))))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|TexFormat|)) (|isDomain| *1 (|TexFormat1| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|String|))
       (|isDomain| *1 (|TexmacsFormat|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Polynomial| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|TaylorSeries| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|TaylorSeries| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|PrimitiveArray| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|Tuple| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|FinitePoset| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|UndirectedGraph| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Variable| '|x|))
       (|isDomain| *1 (|UnivariateFormalPowerSeries| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|UnivariatePolynomial| '|x| *3))
       (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|UnivariateFormalPowerSeries| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|UnivariateLaurentSeries| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))
 ((*1 *1 *2)
  (AND (|ofCategory| *3 (|Ring|))
       (|ofCategory| *1 (|UnivariateLaurentSeriesConstructorCategory| *3 *2))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Segment| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|UniversalSegment| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *3)) (|ofType| *3 (|Symbol|))
       (|isDomain| *1 (|UnivariatePolynomial| *3 *4))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|UnivariatePuiseuxSeries| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))
 ((*1 *1 *2)
  (AND (|ofCategory| *3 (|Ring|))
       (|ofCategory| *1 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesCategory| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|UnivariateTaylorSeries| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|UnivariatePolynomial| *4 *3))
       (|ofCategory| *3 (|Ring|)) (|ofType| *4 (|Symbol|)) (|ofType| *5 *3)
       (|isDomain| *1 (|UnivariateTaylorSeries| *3 *4 *5))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|Variable| *3))
       (|ofType| *3 *2)))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|GraphImage|))
       (|isDomain| *2 (|TwoDimensionalViewport|))
       (|isDomain| *1 (|ViewportPackage|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|OutputForm|))
       (|isDomain| *1 (|TwoDimensionalViewport|))))
 ((*1 *2 *1) (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|Void|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Vector| *3)))
       (|isDomain| *1 (|VectorSpaceBasis| *3)) (|ofCategory| *3 (|Field|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|FinitePoset| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|WeightedGraph| *3 *4))
       (|ofCategory| *4 (|OrderedAbelianMonoid|))))
 ((*1 *1 *2)
  (AND (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofType| *6 (|List| *4))
       (|isDomain| *1 (|WeightedPolynomials| *3 *4 *5 *2 *6 *7 *8))
       (|ofCategory| *2 (|PolynomialCategory| *3 *5 *4))
       (|ofType| *7 (|List| (|NonNegativeInteger|)))
       (|ofType| *8 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|PolynomialCategory| *3 *5 *4))
       (|isDomain| *1 (|WeightedPolynomials| *3 *4 *5 *2 *6 *7 *8))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofType| *6 (|List| *4))
       (|ofType| *7 (|List| (|NonNegativeInteger|)))
       (|ofType| *8 (|NonNegativeInteger|))))
 ((*1 *1 *2)
  (AND (|ofCategory| *1 (|XAlgebra| *2)) (|ofCategory| *2 (|Ring|))))
 ((*1 *1 *2)
  (AND (|ofCategory| *1 (|XFreeAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Ring|))))
 ((*1 *2 *1) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|XmlAttribute|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|String|))) (|isDomain| *1 (|XmlElement|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|XRecursivePolynomial| *3 *4))
       (|isDomain| *1 (|XPBWPolynomial| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|CommutativeRing|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|XDistributedPolynomial| *3 *4))
       (|isDomain| *1 (|XPBWPolynomial| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|CommutativeRing|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|LiePolynomial| *3 *4)) (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *1 (|XPBWPolynomial| *3 *4))))
 ((*1 *1 *2)
  (AND (|isDomain| *1 (|XPolynomialRing| *3 *2)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *2 (|OrderedMonoid|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|XPolynomialsCat| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|FreeMonoid| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|OrderedMonoid|))
       (|isDomain| *1 (|XPolynomialRing| *3 *2)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|XFreeAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|FreeMonoid| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|OrderedMonoid|))
       (|isDomain| *1 (|XPolynomialRing| *3 *2)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|XRecursivePolynomial| *4 *2))
       (|ofCategory| *1 (|FreeLieAlgebra| *4 *2))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|XFreeAlgebra| *3 *2))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *2 (|Ring|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|FreeMonoid| *4))
       (|ofCategory| *1 (|XFreeAlgebra| *4 *2))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|Ring|))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *2 (|Ring|)) (|isDomain| *1 (|XPolynomialRing| *2 *3))
       (|ofCategory| *3 (|OrderedMonoid|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Pattern| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|XFreeAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|XPolynomialRing| *3 *4))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedMonoid|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Mapping| *5)) (|ofCategory| *5 (|SetCategory|))
       (|isDomain| *2 (|Mapping| *5 *4))
       (|isDomain| *1 (|MappingPackage2| *4 *5))
       (|ofCategory| *4 (|SetCategory|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Expression| (|Integer|)))
       (|isDomain| *1 (|PatternMatchAssertions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Comparable|))
       (|isDomain| *1 (|FunctionSpaceAssertions| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|XFreeAlgebra| *3 *2))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *2 (|Ring|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|Ring|)) (|isDomain| *1 (|XPolynomialRing| *2 *3))
       (|ofCategory| *3 (|OrderedMonoid|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|XFreeAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|XPolynomialRing| *3 *4))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedMonoid|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|XFreeAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|XPolynomialRing| *2 *3)) (|ofCategory| *2 (|Ring|))
       (|ofCategory| *3 (|OrderedMonoid|))))) 
(((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|AbelianMonoidRing| *2 *3))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *3 (|OrderedAbelianMonoid|)) (|ofCategory| *2 (|Field|))))
 ((*1 *1 *1 *1)
  (OR
   (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|Field|))
        (|ofCategory| *2 (|Type|)))
   (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|Group|))
        (|ofCategory| *2 (|Type|)))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|Field|)))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|FloatingPointSystem|)) (|isDomain| *2 (|Integer|))))
 ((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|SparseMultivariatePolynomial| *3 (|Kernel| *1)))
       (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Comparable|))
       (|ofCategory| *1 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|Group|)))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Vector| *3)) (|ofCategory| *3 (|FiniteFieldCategory|))
       (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *3))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|InputForm|)))
 ((*1 *1 *2 *3)
  (AND (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|LocalAlgebra| *2 *3))
       (|ofCategory| *2 (|Algebra| *3))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|LocalAlgebra| *3 *2))
       (|ofCategory| *3 (|Algebra| *2))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|LieAlgebra| *2))
       (|ofCategory| *2 (|CommutativeRing|)) (|ofCategory| *2 (|Field|))))
 ((*1 *1 *2 *3)
  (AND (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *1 (|Localize| *2 *3))
       (|ofCategory| *2 (|Module| *3))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *2 (|CommutativeRing|)) (|isDomain| *1 (|Localize| *3 *2))
       (|ofCategory| *3 (|Module| *2))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|MatrixCategory| *2 *3 *4))
       (|ofCategory| *2 (|AbelianMonoid|))
       (|ofCategory| *3 (|FiniteLinearAggregate| *2))
       (|ofCategory| *4 (|FiniteLinearAggregate| *2))
       (|ofCategory| *2 (|Field|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *1 *1)
  (|partial| AND (|isDomain| *1 (|OrdinaryWeightedPolynomials| *2 *3 *4 *5))
   (|ofCategory| *2 (|Field|)) (|ofCategory| *2 (|Ring|))
   (|ofType| *3 (|List| (|Symbol|)))
   (|ofType| *4 (|List| (|NonNegativeInteger|)))
   (|ofType| *5 (|NonNegativeInteger|))))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|Pattern| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *2 *2)
  (AND (|ofCategory| *1 (|QuotientFieldCategory| *2))
       (|ofCategory| *2 (|IntegralDomain|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *2 *5 *6))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *5 (|DirectProductCategory| *4 *2))
       (|ofCategory| *6 (|DirectProductCategory| *3 *2))
       (|ofCategory| *2 (|Field|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|VectorSpace| *2)) (|ofCategory| *2 (|Field|))))
 ((*1 *1 *1 *1)
  (|partial| AND (|ofCategory| *2 (|Field|)) (|ofCategory| *2 (|Ring|))
   (|ofCategory| *3 (|OrderedSet|))
   (|ofCategory| *4 (|OrderedAbelianMonoidSup|)) (|ofType| *6 (|List| *3))
   (|isDomain| *1 (|WeightedPolynomials| *2 *3 *4 *5 *6 *7 *8))
   (|ofCategory| *5 (|PolynomialCategory| *2 *4 *3))
   (|ofType| *7 (|List| (|NonNegativeInteger|)))
   (|ofType| *8 (|NonNegativeInteger|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|XPolynomialRing| *2 *3)) (|ofCategory| *2 (|Field|))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedMonoid|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|AbelianMonoidRing| *3 *2))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *2 (|OrderedAbelianMonoid|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|AntiSymm| *3 *4)) (|ofCategory| *3 (|Ring|))
       (|ofType| *4 (|List| (|Symbol|)))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|DeRhamComplex| *3 *4))
       (|ofCategory| *3 (|Join| (|Ring|) (|Comparable|)))
       (|ofType| *4 (|List| (|Symbol|)))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|DifferentialPolynomialCategory| *4 *3 *5 *6))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *5 (|DifferentialVariableCategory| *3))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|ExtAlgBasis|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *8))
       (|isDomain| *4 (|List| *6)) (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *8 (|PolynomialCategory| *7 *5 *6))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|ofCategory| *7 (|Ring|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|FactoringUtilities| *5 *6 *7 *8))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FakePolynomial|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *3))
       (|ofCategory| *3 (|Field|)) (|isDomain| *2 (|PositiveInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FreeLieAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| *6))
       (|ofCategory| *1 (|MaybeSkewPolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|MaybeSkewPolynomialCategory| *4 *5 *3))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|GradedModule| *3 *2))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *2 (|AbelianMonoid|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|LaurentPolynomial| *3 *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))))
 ((*1 *2 *3)
  (AND (|ofCategory| *1 (|ModularAlgebraicGcdOperations| *4 *3 *5))
       (|ofCategory| *4 (|Type|)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *5 (|Type|)) (|isDomain| *2 (|Integer|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Symbol|))
       (|ofCategory| *1 (|ModularEvaluationCategory| *5 *3))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *3 (|Type|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|Permutation| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|PermutationGroup| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|PowerSeriesCategory| *3 *2 *4))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *2 (|OrderedAbelianMonoid|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|SolvableSkewPolynomialCategory| *3 *2 *4))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *2 (|OrderedAbelianMonoidSup|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))
       (|ofCategory| *3 (|Ring|))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *2 (|Integer|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *3 (|Ring|))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *2 (|Fraction| (|Integer|)))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|ExtensionField| *3)) (|ofCategory| *3 (|Field|))
       (|isDomain| *2 (|OnePointCompletion| (|PositiveInteger|)))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|XPolynomialsCat| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FreeLieAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|CommutativeRing|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|XPolynomialsCat| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|XDistributedPolynomial| *3 *4))
   (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|CommutativeRing|))
   (|isDomain| *1 (|LiePolynomial| *3 *4))))
 ((*1 *2 *1)
  (|partial| AND (|isDomain| *2 (|LiePolynomial| *3 *4))
   (|isDomain| *1 (|XPBWPolynomial| *3 *4)) (|ofCategory| *3 (|OrderedSet|))
   (|ofCategory| *4 (|CommutativeRing|))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|CartesianTensor| *2 *3 *4)) (|ofType| *2 (|Integer|))
       (|ofType| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|CommutativeRing|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|CubicalFacet|)))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|CombinatorialFunction| *4 *2))
       (|ofCategory| *2 (|FunctionSpace| *4))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|SegmentBinding| *2))
       (|ofCategory| *2 (|FunctionSpace| *4))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|CombinatorialFunction| *4 *2))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|SegmentBinding| *1))
       (|ofCategory| *1 (|CombinatorialOpsCategory|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|CombinatorialOpsCategory|))
       (|isDomain| *2 (|Symbol|))))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|FiniteCubicalComplex| *2))
       (|ofCategory| *2 (|AbelianGroup|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|GradedAlgebra| *2 *3))
       (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *3 (|AbelianMonoid|))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|List| (|ProductFacet|)))
       (|isDomain| *1 (|OrientedFacet|))))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|FiniteSimplicialComplex| *2))
       (|ofCategory| *2 (|AbelianGroup|))))
 ((*1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|XPBWPolynomial| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|CommutativeRing|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Integer|))) (|isDomain| *1 (|AntiSymm| *3 *4))
       (|ofCategory| *3 (|Ring|)) (|ofType| *4 (|List| (|Symbol|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *1 *1) (|ofCategory| *1 (|ElementaryFunctionCategory|)))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FortranExpression| *2 *3 *4))
       (|ofType| *2 (|List| (|Symbol|))) (|ofType| *3 (|List| (|Symbol|)))
       (|ofCategory| *4 (|FortranMachineTypeCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|LiePolynomial| *3 *4)) (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *4
                     (|Join| (|CommutativeRing|)
                             (|Module| (|Fraction| (|Integer|)))))
       (|isDomain| *1 (|LieExponentials| *3 *4 *5))
       (|ofType| *5 (|PositiveInteger|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3
                     (|Join| (|Algebra| (|Fraction| (|Integer|)))
                             (|TranscendentalFunctionCategory|)
                             (|CommutativeRing|)))
       (|isDomain| *1 (|StreamExponentialSeriesTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|Join| (|Ring|) (|Module| (|Fraction| (|Integer|)))))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|XExponentialPackage| *4 *5 *2))
       (|ofCategory| *2 (|XPolynomialsCat| *5 *4))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|XPBWPolynomial| *3 *4))
       (|ofCategory| *4 (|Module| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|CommutativeRing|))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *1 *1) (|ofCategory| *1 (|ElementaryFunctionCategory|)))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Factored| *4)) (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |coef| (|NonNegativeInteger|))
                              (|:| |logand| *4))))
       (|isDomain| *1 (|FactoredFunctions| *4))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FortranExpression| *2 *3 *4))
       (|ofType| *2 (|List| (|Symbol|))) (|ofType| *3 (|List| (|Symbol|)))
       (|ofCategory| *4 (|FortranMachineTypeCategory|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|LiePolynomial| *3 *4))
       (|isDomain| *1 (|LieExponentials| *3 *4 *5))
       (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *4
                     (|Join| (|CommutativeRing|)
                             (|Module| (|Fraction| (|Integer|)))))
       (|ofType| *5 (|PositiveInteger|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3
                     (|Join| (|Algebra| (|Fraction| (|Integer|)))
                             (|TranscendentalFunctionCategory|)
                             (|CommutativeRing|)))
       (|isDomain| *1 (|StreamExponentialSeriesTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|Join| (|Ring|) (|Module| (|Fraction| (|Integer|)))))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|XExponentialPackage| *4 *5 *2))
       (|ofCategory| *2 (|XPolynomialsCat| *5 *4))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|XPBWPolynomial| *3 *4))
       (|ofCategory| *4 (|Module| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|CommutativeRing|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|TextFile|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|XmlAttribute|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|TextFile|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|XmlElement|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|Aggregate|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FacetCategory|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|LatticeJoinOfMeets|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|LatticeMeetOfJoins|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|QuasiAlgebraicSet| *3 *4 *5 *6))
       (|ofCategory| *6 (|PolynomialCategory| *3 *5 *4))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SplittingNode| *3 *4))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *4 (|Join| (|SetCategory|) (|Aggregate|)))))
 ((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|XmlElement|))))) 
(((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *3 (|List| (|XmlElement|)))
       (|isDomain| *4 (|List| (|XmlAttribute|)))
       (|isDomain| *1 (|XmlElement|))))
 ((*1 *1 *2 *2 *3)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *3 (|List| (|XmlAttribute|)))
       (|isDomain| *1 (|XmlElement|))))) 
(((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|XmlAttribute|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|List| (|String|))) (|isDomain| *2 (|String|))
       (|isDomain| *1 (|XmlAttribute|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Scene| *4)) (|ofCategory| *4 (|SPointCategory|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|XmlElement|)) (|isDomain| *4 (|String|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|ExportXml|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|XmlElement|)) (|isDomain| *4 (|String|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|ExportXml|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|JetVectorField| *4 *5)))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *2 (|TwoDimensionalArray| (|JetVectorField| *4 *5)))
       (|isDomain| *1 (|JetVectorField| *4 *5))
       (|ofCategory| *5 (|JetBundleFunctionCategory| *4))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Record| (|:| |key| *3) (|:| |entry| *4))))
       (|ofCategory| *3 (|Type|)) (|ofCategory| *4 (|Type|))
       (|ofCategory| *1 (|TableAggregate| *3 *4))))
 ((*1 *1)
  (AND (|ofCategory| *1 (|TableAggregate| *2 *3)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *3 (|Type|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| (|SingleInteger|) *3))
       (|ofCategory| *3 (|SetCategory|)) (|isDomain| *1 (|XHashTable| *3 *4))
       (|ofCategory| *4 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|XFreeAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|Record| (|:| |k| (|FreeMonoid| *3)) (|:| |c| *4)))))) 
(((*1 *2 *2 *1)
  (AND (|isDomain| *2 (|XRecursivePolynomial| *3 *4))
       (|ofCategory| *1 (|FreeLieAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|CommutativeRing|))))
 ((*1 *1 *1 *2)
  (|partial| AND (|isDomain| *1 (|FreeMonoid| *2))
   (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1 *1)
  (|partial| AND (|isDomain| *1 (|FreeMonoid| *2))
   (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|XFreeAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|FreeMonoid| *3))
       (|ofCategory| *1 (|XFreeAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|XFreeAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *2 *1)
  (AND (|isDomain| *2 (|XRecursivePolynomial| *3 *4))
       (|ofCategory| *1 (|FreeLieAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|CommutativeRing|))))
 ((*1 *1 *1 *2)
  (|partial| AND (|isDomain| *1 (|FreeMonoid| *2))
   (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1 *1)
  (|partial| AND (|isDomain| *1 (|FreeMonoid| *2))
   (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|XFreeAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|FreeMonoid| *3))
       (|ofCategory| *1 (|XFreeAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|XFreeAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|Stream| *3))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|FreeMonoid| *4)) (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *1 (|XFreeAlgebra| *4 *3)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|AbelianMonoidRing| *3 *4))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *4 (|OrderedAbelianMonoid|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|IndexedDirectProductCategory| *3 *4))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|Comparable|))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|LaurentPolynomial| *3 *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|MonoidRingCategory| *3 *4))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|Monoid|))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|XFreeAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|FreeLieAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|CommutativeRing|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FreeMagma| *2)) (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FreeMonoid| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|LieExponentials| *2 *3 *4))
       (|ofCategory| *2 (|OrderedSet|))
       (|ofCategory| *3
                     (|Join| (|CommutativeRing|)
                             (|Module| (|Fraction| (|Integer|)))))
       (|ofType| *4 (|PositiveInteger|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|XFreeAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|XFreeAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))
       (|ofCategory| *4 (|CommutativeRing|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|XFreeAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *3 (|CommutativeRing|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FreeLieAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|List| *3))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|FreeMagma| *3))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|FreeMonoid| *3))
       (|ofCategory| *3 (|BasicType|)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|LieExponentials| *3 *4 *5))
       (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *4
                     (|Join| (|CommutativeRing|)
                             (|Module| (|Fraction| (|Integer|)))))
       (|ofType| *5 (|PositiveInteger|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|LyndonWord| *3))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|PoincareBirkhoffWittLyndonBasis| *3))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|XFreeAlgebra| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|List| *3))))) 
(((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *4 *5 *3 *6))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *4 *5 *3))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|ExtensionField| *3)) (|ofCategory| *3 (|Field|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ExtensionField| *3)) (|ofCategory| *3 (|Field|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ExtensionField| *3)) (|ofCategory| *3 (|Field|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|Field|)) (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|FiniteAlgebraicExtensionField&| *3 *4))
       (|ofCategory| *3 (|FiniteAlgebraicExtensionField| *4))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|Field|))
       (|isDomain| *2 (|OnePointCompletion| (|PositiveInteger|)))
       (|isDomain| *1 (|FiniteAlgebraicExtensionField&| *3 *4))
       (|ofCategory| *3 (|FiniteAlgebraicExtensionField| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *3))
       (|ofCategory| *3 (|Field|)) (|isDomain| *2 (|PositiveInteger|))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|ExtensionField| *3)) (|ofCategory| *3 (|Field|))
       (|isDomain| *2 (|OnePointCompletion| (|PositiveInteger|)))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|Field|)) (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FiniteAlgebraicExtensionField&| *3 *4))
       (|ofCategory| *3 (|FiniteAlgebraicExtensionField| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|ExtensionField| *3)) (|ofCategory| *3 (|Field|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|FiniteFieldCategory|))
       (|ofCategory| *4 (|FiniteAlgebraicExtensionField| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *1 (|NormRetractPackage| *3 *4 *5 *2 *6))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *5))
       (|ofType| *6 (|PositiveInteger|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|ExtensionField| *3)) (|ofCategory| *3 (|Field|))
       (|ofCategory| *3 (|Finite|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|ExtensionField| *2)) (|ofCategory| *2 (|Field|))
       (|ofCategory| *2 (|Finite|))))) 
(((*1 *2 *2 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|Join| (|Ring|) (|Module| (|Fraction| (|Integer|)))))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|XExponentialPackage| *4 *5 *2))
       (|ofCategory| *2 (|XPolynomialsCat| *5 *4))))) 
(((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|List| *6))
   (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
   (|ofCategory| *3 (|IntegralDomain|))
   (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|))
   (|isDomain| *1 (|WuWenTsunTriangularSet| *3 *4 *5 *6))))
 ((*1 *1 *2 *3 *4)
  (|partial| AND (|isDomain| *2 (|List| *8))
   (|isDomain| *3 (|Mapping| (|Boolean|) *8 *8))
   (|isDomain| *4 (|Mapping| *8 *8 *8))
   (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
   (|ofCategory| *5 (|IntegralDomain|))
   (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *7 (|OrderedSet|))
   (|isDomain| *1 (|WuWenTsunTriangularSet| *5 *6 *7 *8))))) 
(((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|List| *6))
   (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
   (|ofCategory| *3 (|IntegralDomain|))
   (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|))
   (|isDomain| *1 (|WuWenTsunTriangularSet| *3 *4 *5 *6))))
 ((*1 *1 *2 *3 *4)
  (|partial| AND (|isDomain| *2 (|List| *8))
   (|isDomain| *3 (|Mapping| (|Boolean|) *8 *8))
   (|isDomain| *4 (|Mapping| *8 *8 *8))
   (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
   (|ofCategory| *5 (|IntegralDomain|))
   (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *7 (|OrderedSet|))
   (|isDomain| *1 (|WuWenTsunTriangularSet| *5 *6 *7 *8))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *2 (|List| (|WuWenTsunTriangularSet| *4 *5 *6 *7)))
       (|isDomain| *1 (|WuWenTsunTriangularSet| *4 *5 *6 *7))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|List| *9))
       (|isDomain| *4 (|Mapping| (|Boolean|) *9 *9))
       (|isDomain| *5 (|Mapping| *9 *9 *9))
       (|ofCategory| *9 (|RecursivePolynomialCategory| *6 *7 *8))
       (|ofCategory| *6 (|IntegralDomain|))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *8 (|OrderedSet|))
       (|isDomain| *2 (|List| (|WuWenTsunTriangularSet| *6 *7 *8 *9)))
       (|isDomain| *1 (|WuWenTsunTriangularSet| *6 *7 *8 *9))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|OrdinaryWeightedPolynomials| *4 *5 *6 *7))
       (|ofCategory| *4 (|Ring|)) (|ofType| *5 (|List| (|Symbol|)))
       (|ofType| *6 (|List| *3)) (|ofType| *7 *3)))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *4 (|Ring|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|ofType| *8 (|List| *5))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|WeightedPolynomials| *4 *5 *6 *7 *8 *9 *10))
       (|ofCategory| *7 (|PolynomialCategory| *4 *6 *5))
       (|ofType| *9 (|List| *3)) (|ofType| *10 *3)))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4))
       (|isDomain| *3 (|List| (|List| (|NonNegativeInteger|))))
       (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|WeightedGraph| *4 *5))
       (|ofCategory| *5 (|OrderedAbelianMonoid|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|FinitePoset| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|WeightedGraph| *3 *4))
       (|ofCategory| *4 (|OrderedAbelianMonoid|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4))
       (|isDomain| *3
                   (|List|
                    (|Record| (|:| |fromOb| (|NonNegativeInteger|))
                              (|:| |toOb| (|NonNegativeInteger|)))))
       (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|WeightedGraph| *4 *5))
       (|ofCategory| *5 (|OrderedAbelianMonoid|))))
 ((*1 *1 *2 *3)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |value| *4) (|:| |posX| (|NonNegativeInteger|))
                          (|:| |posY| (|NonNegativeInteger|)))))
   (|isDomain| *3
               (|List|
                (|Record| (|:| |name| (|String|))
                          (|:| |arrType| (|NonNegativeInteger|))
                          (|:| |fromOb| (|NonNegativeInteger|))
                          (|:| |toOb| (|NonNegativeInteger|))
                          (|:| |xOffset| (|Integer|))
                          (|:| |yOffset| (|Integer|))
                          (|:| |map| (|List| (|NonNegativeInteger|))))))
   (|ofCategory| *4 (|SetCategory|)) (|isDomain| *1 (|WeightedGraph| *4 *5))
   (|ofCategory| *5 (|OrderedAbelianMonoid|))))
 ((*1 *1 *2 *3)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |value| *4) (|:| |posX| (|NonNegativeInteger|))
                          (|:| |posY| (|NonNegativeInteger|))
                          (|:| |weight| *5))))
   (|isDomain| *3
               (|List|
                (|Record| (|:| |name| (|String|)) (|:| |weight| *5)
                          (|:| |fromOb| (|NonNegativeInteger|))
                          (|:| |toOb| (|NonNegativeInteger|))
                          (|:| |xOffset| (|Integer|))
                          (|:| |yOffset| (|Integer|))
                          (|:| |map| (|List| (|NonNegativeInteger|))))))
   (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *5 (|OrderedAbelianMonoid|))
   (|isDomain| *1 (|WeightedGraph| *4 *5))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |value| *3) (|:| |posX| (|NonNegativeInteger|))
                          (|:| |posY| (|NonNegativeInteger|))
                          (|:| |weight| *4))))
   (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|OrderedAbelianMonoid|))
   (|isDomain| *1 (|WeightedGraph| *3 *4))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|WeightedGraph| *3 *4))
       (|ofCategory| *4 (|OrderedAbelianMonoid|))))) 
(((*1 *1 *1 *2 *3 *3 *4)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|WeightedGraph| *5 *4))
       (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *4 (|OrderedAbelianMonoid|))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|Union| *5 "disjoint"))
       (|isDomain| *1 (|WeightedGraph| *4 *5))
       (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|OrderedAbelianMonoid|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *2 (|OrderedAbelianMonoid|))
       (|isDomain| *1 (|WeightedGraph| *4 *2))
       (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *2 (|OrderedAbelianMonoid|))
       (|isDomain| *1 (|WeightedGraph| *4 *2))
       (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Point| *3))
       (|ofCategory| *3
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)
                             (|RadicalCategory|)))
       (|isDomain| *1 (|CoordinateSystems| *3))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|DirectedGraph| (|Product| *3 *3)))
       (|isDomain| *1 (|DirectedGraph| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|List| (|List| *3))) (|ofCategory| *3 (|BasicType|))
       (|isDomain| *1 (|ListPackage| *3))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|MultifunctionGraph| (|Product| *3 *3)))
       (|isDomain| *1 (|MultifunctionGraph| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|UndirectedGraph| (|Product| *3 *3)))
       (|isDomain| *1 (|UndirectedGraph| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|WeightedGraph| (|Product| *3 *3) *4))
       (|isDomain| *1 (|WeightedGraph| *3 *4))
       (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *4 (|OrderedAbelianMonoid|))))) 
(((*1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *3 *3 *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|DirectedGraph| *3))))
 ((*1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *3 *3 *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|FunctionGraph| *3))))
 ((*1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *3 *3 *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|MultifunctionGraph| *3))))
 ((*1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *3 *3 *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|UndirectedGraph| *3))))
 ((*1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *3 *3 *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|WeightedGraph| *3 *4))
       (|ofCategory| *4 (|OrderedAbelianMonoid|))))) 
(((*1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *3 *3 *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|DirectedGraph| *3))))
 ((*1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *3 *3 *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|MultifunctionGraph| *3))))
 ((*1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *3 *3 *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|UndirectedGraph| *3))))
 ((*1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *3 *3 *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|WeightedGraph| *3 *4))
       (|ofCategory| *4 (|OrderedAbelianMonoid|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|TwoDimensionalArray| (|Union| *4 "disjoint")))
       (|isDomain| *1 (|WeightedGraph| *3 *4))
       (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *4 (|OrderedAbelianMonoid|))))) 
(((*1 *2 *3)
  (AND
   (|ofCategory| *3
                 (|Join| (|EuclideanDomain|)
                         (CATEGORY |domain|
                          (SIGNATURE |squareFree| ((|Factored| $) $)))))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
   (|isDomain| *2
               (|Record| (|:| |basis| (|Matrix| *3)) (|:| |basisDen| *3)
                         (|:| |basisInv| (|Matrix| *3))))
   (|isDomain| *1 (|FunctionFieldIntegralBasis| *3 *4 *5))
   (|ofCategory| *5 (|FramedAlgebra| *3 *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|isDomain| *2
                   (|Record| (|:| |basis| (|Matrix| (|Integer|)))
                             (|:| |basisDen| (|Integer|))
                             (|:| |basisInv| (|Matrix| (|Integer|)))))
       (|isDomain| *1 (|NumberFieldIntegralBasis| *4 *5))
       (|ofCategory| *5 (|FramedAlgebra| *3 *4))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|FiniteFieldCategory|))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *3))
       (|isDomain| *2
                   (|Record| (|:| |basis| (|Matrix| *3)) (|:| |basisDen| *3)
                             (|:| |basisInv| (|Matrix| *3))))
       (|isDomain| *1 (|PAdicWildFunctionFieldIntegralBasis| *4 *3 *5 *6))
       (|ofCategory| *6 (|MonogenicAlgebra| *3 *5))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|FiniteFieldCategory|))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *3))
       (|isDomain| *2
                   (|Record| (|:| |basis| (|Matrix| *3)) (|:| |basisDen| *3)
                             (|:| |basisInv| (|Matrix| *3))))
       (|isDomain| *1 (|WildFunctionFieldIntegralBasis| *4 *3 *5 *6))
       (|ofCategory| *6 (|FramedAlgebra| *3 *5))))) 
(((*1 *2)
  (AND (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Vector| *1))
       (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))))
 ((*1 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|EuclideanDomain|)
                         (CATEGORY |domain|
                          (SIGNATURE |squareFree| ((|Factored| $) $)))))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
   (|isDomain| *2
               (|Record| (|:| |basis| (|Matrix| *3)) (|:| |basisDen| *3)
                         (|:| |basisInv| (|Matrix| *3))))
   (|isDomain| *1 (|FunctionFieldIntegralBasis| *3 *4 *5))
   (|ofCategory| *5 (|FramedAlgebra| *3 *4))))
 ((*1 *2)
  (AND (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))
       (|isDomain| *2
                   (|Record| (|:| |basis| (|Matrix| (|Integer|)))
                             (|:| |basisDen| (|Integer|))
                             (|:| |basisInv| (|Matrix| (|Integer|)))))
       (|isDomain| *1 (|NumberFieldIntegralBasis| *3 *4))
       (|ofCategory| *4 (|FramedAlgebra| (|Integer|) *3))))
 ((*1 *2)
  (AND (|ofCategory| *3 (|FiniteFieldCategory|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *2
                   (|Record| (|:| |basis| (|Matrix| *4)) (|:| |basisDen| *4)
                             (|:| |basisInv| (|Matrix| *4))))
       (|isDomain| *1 (|PAdicWildFunctionFieldIntegralBasis| *3 *4 *5 *6))
       (|ofCategory| *6 (|MonogenicAlgebra| *4 *5))))
 ((*1 *2)
  (AND (|ofCategory| *3 (|FiniteFieldCategory|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *2
                   (|Record| (|:| |basis| (|Matrix| *4)) (|:| |basisDen| *4)
                             (|:| |basisInv| (|Matrix| *4))))
       (|isDomain| *1 (|WildFunctionFieldIntegralBasis| *3 *4 *5 *6))
       (|ofCategory| *6 (|FramedAlgebra| *4 *5))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *4 (|TaylorSeries| *5))
       (|ofCategory| *5 (|Field|)) (|isDomain| *2 (|List| (|TaylorSeries| *5)))
       (|isDomain| *1 (|WeierstrassPreparation| *5))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|Cell| *3))
       (|ofCategory| *3 (|RealClosedField|))))
 ((*1 *2)
  (AND (|ofType| *4 (|NonNegativeInteger|)) (|ofCategory| *5 (|Type|))
       (|isDomain| *2 (|CardinalNumber|))
       (|isDomain| *1 (|DirectProductCategory&| *3 *4 *5))
       (|ofCategory| *3 (|DirectProductCategory| *4 *5))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|Field|)) (|isDomain| *2 (|CardinalNumber|))
       (|isDomain| *1 (|FiniteAlgebraicExtensionField&| *3 *4))
       (|ofCategory| *3 (|FiniteAlgebraicExtensionField| *4))))
 ((*1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FreeNilpotentLie| *3 *4 *5)) (|ofType| *3 *2)
       (|ofType| *4 *2) (|ofCategory| *5 (|CommutativeRing|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|PolynomialIdeal| *3 *4 *5 *6))
       (|ofCategory| *6 (|PolynomialCategory| *3 *4 *5))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| *6)) (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *4 (|Field|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|PolynomialIdeal| *4 *5 *6 *7))
       (|ofCategory| *7 (|PolynomialCategory| *4 *5 *6))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *3 (|List| *1))
       (|isDomain| *4 (|SparseEchelonMatrix| *5 *1))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *5))
       (|ofCategory| *5 (|JetBundleCategory|))))
 ((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|JetDifferentialEquation| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|PointCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|PositiveInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|SPointCategory|))
       (|isDomain| *2 (|PositiveInteger|))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|VectorSpace| *3)) (|ofCategory| *3 (|Field|))
       (|isDomain| *2 (|CardinalNumber|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Vector| *4))
       (|ofCategory| *4 (|FramedNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|EuclideanDomain|))
       (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *1 (|AlgebraPackage| *3 *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Field|))
       (|isDomain| *2 (|Vector| *1))
       (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *4))))
 ((*1 *2)
  (AND (|ofCategory| *3 (|Field|)) (|isDomain| *2 (|Vector| *1))
       (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|EuclideanDomain|))
       (|ofCategory| *4 (|QuotientFieldCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *2 (|Vector| *6))
       (|isDomain| *1 (|FractionalIdeal| *3 *4 *5 *6))
       (|ofCategory| *6
                     (|Join| (|FramedAlgebra| *4 *5) (|RetractableTo| *4)))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|EuclideanDomain|))
       (|ofCategory| *4 (|QuotientFieldCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *2 (|Vector| *6))
       (|isDomain| *1 (|FractionalIdealAsModule| *3 *4 *5 *6 *7))
       (|ofCategory| *6 (|FramedAlgebra| *4 *5)) (|ofType| *7 *2)))
 ((*1 *2)
  (AND (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|isDomain| *2 (|Vector| *1)) (|ofCategory| *1 (|FramedModule| *3))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|Vector| (|List| (|Integer|))))
       (|isDomain| *1 (|HallBasis|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *2 (|Vector| (|Vector| *4)))
       (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Vector| *3))) (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|VectorSpaceBasis| *3))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *6 (|shallowlyMutable|)) (|ofCategory| *4 (|Field|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *2 (|List| *6))
       (|isDomain| *1 (|InnerMatrixLinearAlgebraFunctions| *4 *5 *6 *3))
       (|ofCategory| *3 (|MatrixCategory| *4 *5 *6))))
 ((*1 *2 *3)
  (AND (|ofCategory| *9 (|shallowlyMutable|))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|ofCategory| *7 (|QuotientFieldCategory| *4))
       (|ofCategory| *8 (|FiniteLinearAggregate| *7))
       (|ofCategory| *9 (|FiniteLinearAggregate| *7))
       (|isDomain| *2 (|List| *6))
       (|isDomain| *1
                   (|InnerMatrixQuotientFieldFunctions| *4 *5 *6 *3 *7 *8 *9
                                                        *10))
       (|ofCategory| *3 (|MatrixCategory| *4 *5 *6))
       (|ofCategory| *10 (|MatrixCategory| *7 *8 *9))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *3 *4 *5))
       (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|List| *5))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *2 (|List| *6))
       (|isDomain| *1 (|MatrixLinearAlgebraFunctions| *4 *5 *6 *3))
       (|ofCategory| *3 (|MatrixCategory| *4 *5 *6))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|DirectProductCategory| *4 *5))
       (|ofCategory| *7 (|DirectProductCategory| *3 *5))
       (|ofCategory| *5 (|IntegralDomain|)) (|isDomain| *2 (|List| *7))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|VectorSpaceBasis| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *3 *4 *5))
       (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|ofCategory| *3 (|EuclideanDomain|)) (|isDomain| *2 (|List| *5))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|DirectProductCategory| *4 *5))
       (|ofCategory| *7 (|DirectProductCategory| *3 *5))
       (|ofCategory| *5 (|EuclideanDomain|)) (|isDomain| *2 (|List| *7))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|VectorSpaceBasis| *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| (|Vector| *3))))
       (|ofCategory| *3 (|Field|)) (|isDomain| *1 (|VectorSpaceBasis| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|VectorSpaceBasis| *3)))
       (|isDomain| *1 (|VectorSpaceBasis| *3)) (|ofCategory| *3 (|Field|))))
 ((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|List| (|Vector| *3))) (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|VectorSpaceBasis| *3))))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|VectorSpaceBasis| *2)) (|ofCategory| *2 (|Field|))))) 
(((*1 *1 *1 *1) (|ofCategory| *1 (|AbelianSemiGroup|)))
 ((*1 *1 *1 *1) (|isDomain| *1 (|Color|)))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|Database| *2))
       (|ofCategory| *2
                     (|Join| (|OrderedSet|)
                             (CATEGORY |domain|
                              (SIGNATURE |elt| ((|String|) $ (|Symbol|)))
                              (SIGNATURE |display| ((|Void|) $))
                              (SIGNATURE |fullDisplay| ((|Void|) $)))))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|AbelianSemiGroup|))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|AbelianSemiGroup|))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|FreeAbelianMonoidCategory| *2 *3))
       (|ofCategory| *2 (|SetCategory|))
       (|ofCategory| *3 (|CancellationAbelianMonoid|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|FiniteGraph| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *3 (|Join| (|Field|) (|CharacteristicZero|)))
       (|isDomain| *1 (|FullPartialFractionExpansion| *3 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|GradedModule| *2 *3))
       (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *3 (|AbelianMonoid|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *2 (|Field|))
       (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialIdeal| *2 *3 *4 *5))
       (|ofCategory| *5 (|PolynomialCategory| *2 *3 *4))))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|IncidenceAlgebra| *2 *3)) (|ofCategory| *2 (|Ring|))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|InputForm|)))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *2 *3 *4))
       (|ofCategory| *2 (|AbelianMonoid|))
       (|ofCategory| *3 (|FiniteLinearAggregate| *2))
       (|ofCategory| *4 (|FiniteLinearAggregate| *2))))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|OrderedCompletion| *2))
       (|ofCategory| *2 (|AbelianMonoid|)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|Pattern| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|SegmentCategory| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|AbelianSemiGroup|))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|SegmentCategory| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|AbelianSemiGroup|))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SPointCategory|)))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Point| (|DoubleFloat|)))
       (|isDomain| *1 (|TubePlotTools|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|VectorCategory| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|AbelianSemiGroup|))))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|VectorSpaceBasis| *2)) (|ofCategory| *2 (|Field|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| (|Vector| *3))))
       (|ofCategory| *3 (|Field|)) (|isDomain| *1 (|VectorSpaceBasis| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|VectorSpaceBasis| *3)))
       (|isDomain| *1 (|VectorSpaceBasis| *3)) (|ofCategory| *3 (|Field|))))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|VectorSpaceBasis| *2)) (|ofCategory| *2 (|Field|))))
 ((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|List| (|Vector| *3))) (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|VectorSpaceBasis| *3))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|CartesianTensor| *3 *4 *5)) (|ofType| *3 (|Integer|))
       (|ofType| *4 *2) (|ofCategory| *5 (|CommutativeRing|))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|ComplexCategory&| *3 *4))
       (|ofCategory| *3 (|ComplexCategory| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *2 (|PositiveInteger|))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FiniteRankAlgebra| *3 *4))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|isDomain| *2 (|PositiveInteger|))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FramedModule| *3))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|isDomain| *2 (|PositiveInteger|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|Field|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|InnerMatrixLinearAlgebraFunctions| *4 *5 *6 *3))
       (|ofCategory| *3 (|MatrixCategory| *4 *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|Field|))
       (|ofCategory| *6
                     (|Join| (|FiniteLinearAggregate| *5)
                             (|shallowlyMutable|)))
       (|ofCategory| *4
                     (|Join| (|FiniteLinearAggregate| *5)
                             (|shallowlyMutable|)))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|LinearSystemMatrixPackage| *5 *6 *4 *3))
       (|ofCategory| *3 (|MatrixCategory| *5 *6 *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *5)) (|isDomain| *4 (|Vector| *5))
       (|ofCategory| *5 (|Field|)) (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|LinearSystemMatrixPackage1| *5))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *3 *4 *5))
       (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|MatrixLinearAlgebraFunctions| *4 *5 *6 *3))
       (|ofCategory| *3 (|MatrixCategory| *4 *5 *6))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|OctonionCategory&| *3 *4))
       (|ofCategory| *3 (|OctonionCategory| *4))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|DirectProductCategory| *4 *5))
       (|ofCategory| *7 (|DirectProductCategory| *3 *5))
       (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|VectorSpaceBasis| *3)) (|ofCategory| *3 (|Field|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Vector| *4))) (|ofCategory| *4 (|Field|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|VectorSpaceBasis| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Vector| *4))) (|ofCategory| *4 (|Field|))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|VectorSpaceBasis| *4))))) 
(((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|VectorSpaceBasis| *3))
       (|ofCategory| *3 (|Field|))))) 
(((*1 *1) (|ofCategory| *1 (|AbelianMonoid|)))
 ((*1 *1)
  (AND (|ofCategory| *1 (|DistributionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *1)
  (AND (|ofCategory| *1 (|GradedModule| *2 *3))
       (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *3 (|AbelianMonoid|))))
 ((*1 *1) (|isDomain| *1 (|InputForm|)))
 ((*1 *1)
  (AND (|isDomain| *1 (|Pattern| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1)
  (AND (|isDomain| *1 (|VectorSpaceBasis| *2)) (|ofCategory| *2 (|Field|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|VectorSpaceBasis| *3)) (|ofCategory| *3 (|Field|))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|Vector| *4)))
       (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *4 (|Field|))
       (|isDomain| *1 (|VectorSpaceBasis| *4))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Vector| *3))) (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|VectorSpaceBasis| *3))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|VectorSpaceBasis| *3)) (|ofCategory| *3 (|Field|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|VectorSpaceBasis| *2)) (|ofCategory| *2 (|Field|))))) 
(((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|HomogeneousAggregate| *3)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *3 (|BasicType|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|Permutation| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|PermutationGroup| *4))))
 ((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|SetOfMIntegersInOneToN| *4 *5)) (|ofType| *4 *3)
       (|ofType| *5 *3)))
 ((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|Vector| *4)) (|ofCategory| *4 (|Field|))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|VectorSpaceBasis| *4))))) 
(((*1 *2 *2 *1)
  (|partial| AND (|isDomain| *2 (|Vector| *3)) (|ofCategory| *3 (|Field|))
   (|isDomain| *1 (|VectorSpaceBasis| *3))))) 
(((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|Mapping| (|Point| (|DoubleFloat|)) (|Point| (|DoubleFloat|))))
   (|isDomain| *1 (|DrawOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| *1))
       (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *4))
       (|ofCategory| *4 (|Field|)) (|isDomain| *2 (|Matrix| *4))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *3))
       (|ofCategory| *3 (|Field|)) (|isDomain| *2 (|Vector| *3))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|Vector| *1))
       (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *4))
       (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Matrix| *4))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Vector| *1))
       (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *4))
       (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Vector| *4))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|Vector| *1))
       (|ofCategory| *1 (|FiniteRankAlgebra| *4 *5))
       (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *2 (|Matrix| *4))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Vector| *1))
       (|ofCategory| *1 (|FiniteRankAlgebra| *4 *5))
       (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *2 (|Vector| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| *1)) (|ofCategory| *1 (|FramedModule| *4))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|isDomain| *2 (|Matrix| *4))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FramedModule| *3))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|isDomain| *2 (|Vector| *3))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| (|Matrix| *5))) (|isDomain| *3 (|Matrix| *5))
       (|ofCategory| *5 (|Field|)) (|isDomain| *2 (|Vector| *5))
       (|isDomain| *1 (|StructuralConstantsPackage| *5))))
 ((*1 *2 *2 *1)
  (AND (|isDomain| *2 (|Vector| *3)) (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|VectorSpaceBasis| *3))))) 
(((*1 *1) (|isDomain| *1 (|Void|)))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Float|)) (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|ViewDefaultsPackage|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|ViewDefaultsPackage|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|ViewDefaultsPackage|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|ViewDefaultsPackage|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|ViewDefaultsPackage|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|ViewDefaultsPackage|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|ViewDefaultsPackage|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|ViewDefaultsPackage|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *1 (|ViewDefaultsPackage|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *1 (|ViewDefaultsPackage|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *1 (|ViewDefaultsPackage|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|ViewDefaultsPackage|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|List| (|PositiveInteger|)))
       (|isDomain| *1 (|ViewDefaultsPackage|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|List| (|PositiveInteger|)))
       (|isDomain| *1 (|ViewDefaultsPackage|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|ViewDefaultsPackage|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|ViewDefaultsPackage|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|ViewDefaultsPackage|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|ViewDefaultsPackage|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Palette|)) (|isDomain| *1 (|ViewDefaultsPackage|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Palette|)) (|isDomain| *1 (|ViewDefaultsPackage|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Palette|)) (|isDomain| *1 (|ViewDefaultsPackage|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Palette|)) (|isDomain| *1 (|ViewDefaultsPackage|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Palette|)) (|isDomain| *1 (|ViewDefaultsPackage|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Palette|)) (|isDomain| *1 (|ViewDefaultsPackage|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Palette|)) (|isDomain| *1 (|ViewDefaultsPackage|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Palette|)) (|isDomain| *1 (|ViewDefaultsPackage|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|ThreeDimensionalViewport|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|ThreeDimensionalViewport|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|ThreeDimensionalViewport|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|ThreeDimensionalViewport|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|ThreeDimensionalViewport|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *1) (|isDomain| *1 (|ThreeDimensionalViewport|)))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
       (|isDomain| *3 (|List| (|DrawOption|)))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
       (|isDomain| *3 (|String|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))
 ((*1 *1 *1) (|isDomain| *1 (|ThreeDimensionalViewport|)))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|SubSpace| 3 *3))))
 ((*1 *1)
  (AND (|isDomain| *1 (|SubSpace| *2 *3)) (|ofType| *2 (|PositiveInteger|))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *3 (|Point| *4))
       (|ofCategory| *1 (|ThreeSpaceCategory| *4)) (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *1 *3 *4)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *4 (|Point| (|DoubleFloat|))) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|DrawOption|)))
       (|isDomain| *1 (|TwoDimensionalViewport|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|DrawOption|)))
       (|isDomain| *1 (|TwoDimensionalViewport|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|DrawOption|)))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|DrawOption|)))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|TwoDimensionalViewport|))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|TwoDimensionalViewport|))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|DrawOption|))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *3 (|List| (|DrawOption|)))
       (|isDomain| *1 (|DrawOptionFunctions0|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|TwoDimensionalViewport|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *3 *3 *4 *4)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *4 (|PositiveInteger|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|TwoDimensionalViewport|))))
 ((*1 *2 *1 *3 *3 *4 *4)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *4 (|PositiveInteger|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |theta| (|DoubleFloat|))
                         (|:| |phi| (|DoubleFloat|))
                         (|:| |scale| (|DoubleFloat|))
                         (|:| |scaleX| (|DoubleFloat|))
                         (|:| |scaleY| (|DoubleFloat|))
                         (|:| |scaleZ| (|DoubleFloat|))
                         (|:| |deltaX| (|DoubleFloat|))
                         (|:| |deltaY| (|DoubleFloat|))))
   (|isDomain| *1 (|DrawOption|))))
 ((*1 *2 *3 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |theta| (|DoubleFloat|))
                         (|:| |phi| (|DoubleFloat|))
                         (|:| |scale| (|DoubleFloat|))
                         (|:| |scaleX| (|DoubleFloat|))
                         (|:| |scaleY| (|DoubleFloat|))
                         (|:| |scaleZ| (|DoubleFloat|))
                         (|:| |deltaX| (|DoubleFloat|))
                         (|:| |deltaY| (|DoubleFloat|))))
   (|isDomain| *3 (|List| (|DrawOption|)))
   (|isDomain| *1 (|DrawOptionFunctions0|))))
 ((*1 *2 *1 *3 *3 *3)
  (AND (|isDomain| *3 (|Float|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|Float|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))
 ((*1 *2 *1 *3 *3 *4 *4 *4)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *4 (|Float|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|ThreeDimensionalViewport|))))
 ((*1 *2 *1 *3)
  (AND
   (|isDomain| *3
               (|Record| (|:| |theta| (|DoubleFloat|))
                         (|:| |phi| (|DoubleFloat|))
                         (|:| |scale| (|DoubleFloat|))
                         (|:| |scaleX| (|DoubleFloat|))
                         (|:| |scaleY| (|DoubleFloat|))
                         (|:| |scaleZ| (|DoubleFloat|))
                         (|:| |deltaX| (|DoubleFloat|))
                         (|:| |deltaY| (|DoubleFloat|))))
   (|isDomain| *2 (|Void|)) (|isDomain| *1 (|ThreeDimensionalViewport|))))
 ((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |theta| (|DoubleFloat|))
                         (|:| |phi| (|DoubleFloat|))
                         (|:| |scale| (|DoubleFloat|))
                         (|:| |scaleX| (|DoubleFloat|))
                         (|:| |scaleY| (|DoubleFloat|))
                         (|:| |scaleZ| (|DoubleFloat|))
                         (|:| |deltaX| (|DoubleFloat|))
                         (|:| |deltaY| (|DoubleFloat|))))
   (|isDomain| *1 (|ThreeDimensionalViewport|))))
 ((*1 *2 *1 *3 *3 *3 *3 *3)
  (AND (|isDomain| *3 (|Float|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|TwoDimensionalViewport|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *3 *4)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *4 (|Palette|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TwoDimensionalViewport|))))
 ((*1 *2 *1 *3 *4)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *4 (|String|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TwoDimensionalViewport|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|Float|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *1 *1 *2 *2)
  (AND (|isDomain| *2 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot|))))
 ((*1 *1 *1 *2 *2 *2)
  (AND (|isDomain| *2 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot3D|))))
 ((*1 *2 *1 *3 *3 *3)
  (AND (|isDomain| *3 (|Float|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Float|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *1 *2 *2 *2)
  (AND (|isDomain| *1 (|DenavitHartenbergMatrix| *2))
       (|ofCategory| *2
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)))))
 ((*1 *2 *1 *3 *4 *4)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *4 (|Float|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TwoDimensionalViewport|))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|Float|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Float|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Float|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *3 *3 *3)
  (AND (|isDomain| *3 (|Float|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Float|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TwoDimensionalViewport|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|Color|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *2 *3)
  (AND (|isDomain| *3 (|List| (|String|))) (|isDomain| *2 (|String|))
       (|isDomain| *1 (|TwoDimensionalViewport|))))
 ((*1 *2 *1 *2 *2)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|TwoDimensionalViewport|))))
 ((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|TwoDimensionalViewport|))))
 ((*1 *2 *1 *2 *3)
  (AND (|isDomain| *3 (|List| (|String|))) (|isDomain| *2 (|String|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))
 ((*1 *2 *1 *2 *2)
  (AND (|isDomain| *2 (|String|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))
 ((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|String|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|SubSpaceComponentProperty|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TwoDimensionalViewport|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|GraphImage|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|TwoDimensionalViewport|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|ThreeDimensionalViewport|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Point| (|DoubleFloat|))))
       (|isDomain| *1 (|TwoDimensionalViewport|))))) 
(((*1 *1) (|isDomain| *1 (|TwoDimensionalViewport|)))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|GraphImage|)) (|isDomain| *3 (|List| (|DrawOption|)))
       (|isDomain| *1 (|TwoDimensionalViewport|))))
 ((*1 *1 *1) (|isDomain| *1 (|TwoDimensionalViewport|)))) 
(((*1 *2 *1 *3 *4 *4 *4 *4 *5 *5 *5 *5 *6 *5 *6 *5)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *4 (|DoubleFloat|))
       (|isDomain| *5 (|Integer|)) (|isDomain| *6 (|Palette|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TwoDimensionalViewport|))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|Vector|
                (|Record| (|:| |scaleX| (|DoubleFloat|))
                          (|:| |scaleY| (|DoubleFloat|))
                          (|:| |deltaX| (|DoubleFloat|))
                          (|:| |deltaY| (|DoubleFloat|))
                          (|:| |points| (|Integer|))
                          (|:| |connect| (|Integer|))
                          (|:| |spline| (|Integer|)) (|:| |axes| (|Integer|))
                          (|:| |axesColor| (|Palette|))
                          (|:| |units| (|Integer|))
                          (|:| |unitsColor| (|Palette|))
                          (|:| |showing| (|Integer|)))))
   (|isDomain| *1 (|TwoDimensionalViewport|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|SymmetricPolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|CycleIndicators|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Vector| (|Union| (|GraphImage|) "undefined")))
       (|isDomain| *1 (|TwoDimensionalViewport|))))) 
(((*1 *2 *1 *3 *4)
  (AND (|isDomain| *3 (|GraphImage|)) (|isDomain| *4 (|PositiveInteger|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TwoDimensionalViewport|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|GraphImage|))
       (|isDomain| *1 (|TwoDimensionalViewport|))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|List| (|Float|)))
       (|isDomain| *3 (|List| (|DrawOption|)))
       (|isDomain| *1 (|DrawOptionFunctions0|))))
 ((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|List| (|Float|))) (|isDomain| *1 (|GraphImage|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Float|))) (|isDomain| *1 (|GraphImage|))))
 ((*1 *2 *1 *3 *4)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *4 (|Palette|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TwoDimensionalViewport|))))
 ((*1 *2 *1 *3 *4)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *4 (|String|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TwoDimensionalViewport|))))) 
(((*1 *2 *1 *3 *4)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *4 (|String|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TwoDimensionalViewport|))))) 
(((*1 *2 *1 *3 *4)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *4 (|String|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TwoDimensionalViewport|))))) 
(((*1 *2 *1 *3 *4)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *4 (|String|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TwoDimensionalViewport|))))) 
(((*1 *1 *2 *2 *2)
  (AND (|isDomain| *1 (|DenavitHartenbergMatrix| *2))
       (|ofCategory| *2
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|MoebiusTransform| *2)) (|ofCategory| *2 (|Field|))))
 ((*1 *1 *2)
  (AND (|isDomain| *1 (|MoebiusTransform| *2)) (|ofCategory| *2 (|Field|))))
 ((*1 *2 *1 *3 *4 *4)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *4 (|Float|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TwoDimensionalViewport|))))) 
(((*1 *2 *1 *3 *4)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *4 (|String|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TwoDimensionalViewport|))))) 
(((*1 *2 *1 *3 *4)
  (AND (|isDomain| *3 (|GraphImage|)) (|isDomain| *4 (|PositiveInteger|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TwoDimensionalViewport|))))) 
(((*1 *2 *3 *4 *4 *5 *6)
  (AND (|isDomain| *3 (|List| (|List| (|Point| (|DoubleFloat|)))))
       (|isDomain| *4 (|Palette|)) (|isDomain| *5 (|PositiveInteger|))
       (|isDomain| *6 (|List| (|DrawOption|)))
       (|isDomain| *2 (|TwoDimensionalViewport|))
       (|isDomain| *1 (|ViewportPackage|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|List| (|Point| (|DoubleFloat|)))))
       (|isDomain| *4 (|List| (|DrawOption|)))
       (|isDomain| *2 (|TwoDimensionalViewport|))
       (|isDomain| *1 (|ViewportPackage|))))) 
(((*1 *2 *3 *4 *4 *5 *6)
  (AND (|isDomain| *3 (|List| (|List| (|Point| (|DoubleFloat|)))))
       (|isDomain| *4 (|Palette|)) (|isDomain| *5 (|PositiveInteger|))
       (|isDomain| *6 (|List| (|DrawOption|))) (|isDomain| *2 (|GraphImage|))
       (|isDomain| *1 (|ViewportPackage|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|List| (|Point| (|DoubleFloat|)))))
       (|isDomain| *2 (|GraphImage|)) (|isDomain| *1 (|ViewportPackage|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|List| (|Point| (|DoubleFloat|)))))
       (|isDomain| *4 (|List| (|DrawOption|))) (|isDomain| *2 (|GraphImage|))
       (|isDomain| *1 (|ViewportPackage|))))) 
(((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|List|
                (|Vector|
                 (|SparseUnivariatePolynomial| (|Expression| (|Integer|))))))
   (|isDomain| *4 (|List| (|NonNegativeInteger|)))
   (|isDomain| *5 (|NonNegativeInteger|))
   (|isDomain| *2
               (|Matrix|
                (|SparseUnivariatePolynomial| (|Expression| (|Integer|)))))
   (|isDomain| *1 (|VectorHermitePadeSolver|))))) 
(((*1 *1 *1) (|isDomain| *1 (|AlgebraicNumber|)))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *3 (|Mapping| *2 *5 *2))
       (|isDomain| *4 (|OneDimensionalArray| *5)) (|ofCategory| *5 (|Type|))
       (|ofCategory| *2 (|Type|))
       (|isDomain| *1 (|OneDimensionalArrayFunctions2| *5 *2))))
 ((*1 *2 *3 *1 *2 *2)
  (AND (|isDomain| *3 (|Mapping| *2 *2 *2)) (|ofCategory| *2 (|BasicType|))
       (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|Collection| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *2 *3 *1 *2)
  (AND (|isDomain| *3 (|Mapping| *2 *2 *2))
       (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|Collection| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|Mapping| *2 *2 *2))
       (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|Collection| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *4))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *2
                   (|Record| (|:| |pol| (|SparseUnivariatePolynomial| *4))
                             (|:| |deg| (|PositiveInteger|))))
       (|isDomain| *1 (|DegreeReductionPackage| *4 *5))
       (|ofCategory| *5 (|Join| (|Comparable|) (|IntegralDomain|)))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *3 (|Mapping| *2 *6 *2))
       (|isDomain| *4 (|DirectProduct| *5 *6))
       (|ofType| *5 (|NonNegativeInteger|)) (|ofCategory| *6 (|Type|))
       (|ofCategory| *2 (|Type|))
       (|isDomain| *1 (|DirectProductFunctions2| *5 *6 *2))))
 ((*1 *1 *2 *3)
  (AND (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *1 (|EuclideanModularRing| *4 *2 *3 *5 *6 *7))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *3 (|AbelianMonoid|)) (|ofType| *5 (|Mapping| *2 *2 *3))
       (|ofType| *6 (|Mapping| (|Union| *3 "failed") *3 *3))
       (|ofType| *7 (|Mapping| (|Union| *2 "failed") *2 *2 *3))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|Expression| *2)) (|ofCategory| *2 (|IntegralDomain|))
       (|ofCategory| *2 (|Comparable|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|FiniteDivisorCategory| *2 *3 *4 *5))
       (|ofCategory| *2 (|Field|))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| *3)))
       (|ofCategory| *5 (|FunctionFieldCategory| *2 *3 *4))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *3 (|Mapping| *2 *5 *2)) (|ofCategory| *5 (|Type|))
       (|ofCategory| *2 (|Type|))
       (|isDomain| *1 (|FiniteLinearAggregateFunctions2| *5 *4 *2 *6))
       (|ofCategory| *4 (|Join| (|LinearAggregate| *5) (|finiteAggregate|)))
       (|ofCategory| *6 (|Join| (|LinearAggregate| *2) (|finiteAggregate|)))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *3 (|Mapping| *2 *5 *2)) (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *2 (|SetCategory|))
       (|isDomain| *1 (|FiniteSetAggregateFunctions2| *5 *4 *2 *6))
       (|ofCategory| *4 (|FiniteSetAggregate| *5))
       (|ofCategory| *6 (|FiniteSetAggregate| *2))))
 ((*1 *1 *1) (|isDomain| *1 (|InnerAlgebraicNumber|)))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|JetBundleExpression| *2))
       (|ofCategory| *2 (|JetBundleCategory|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|JetBundleXExpression| *2))
       (|ofCategory| *2 (|JetBundleCategory|))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *3 (|Mapping| *2 *5 *2)) (|isDomain| *4 (|List| *5))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *2 (|Type|))
       (|isDomain| *1 (|ListFunctions2| *5 *2))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *3 (|Mapping| *2 *5 *2))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|FiniteLinearAggregate| *5))
       (|ofCategory| *7 (|FiniteLinearAggregate| *5))
       (|ofCategory| *8 (|FiniteLinearAggregate| *2))
       (|ofCategory| *9 (|FiniteLinearAggregate| *2))
       (|isDomain| *1 (|MatrixCategoryFunctions2| *5 *6 *7 *4 *2 *8 *9 *10))
       (|ofCategory| *4 (|MatrixCategory| *5 *6 *7))
       (|ofCategory| *10 (|MatrixCategory| *2 *8 *9))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *1 (|ModularField| *2 *3 *4 *5 *6))
       (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *3 (|AbelianMonoid|)) (|ofType| *4 (|Mapping| *2 *2 *3))
       (|ofType| *5 (|Mapping| (|Union| *3 "failed") *3 *3))
       (|ofType| *6 (|Mapping| (|Union| *2 "failed") *2 *2 *3))))
 ((*1 *1 *2)
  (AND (|ofCategory| *3 (|Ring|)) (|isDomain| *1 (|ModMonic| *3 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *1 (|ModularRing| *2 *3 *4 *5 *6))
       (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *3 (|AbelianMonoid|)) (|ofType| *4 (|Mapping| *2 *2 *3))
       (|ofType| *5 (|Mapping| (|Union| *3 "failed") *3 *3))
       (|ofType| *6 (|Mapping| (|Union| *2 "failed") *2 *2 *3))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Fraction| *4))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
   (|ofCategory| *3 (|Field|)) (|ofCategory| *3 (|CommutativeRing|))
   (|ofCategory| *1 (|MonogenicAlgebra| *3 *4))))
 ((*1 *1 *2)
  (AND (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *1 (|MonogenicAlgebra| *3 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *3 (|Mapping| *2 *5 *2))
       (|isDomain| *4 (|PrimitiveArray| *5)) (|ofCategory| *5 (|Type|))
       (|ofCategory| *2 (|Type|))
       (|isDomain| *1 (|PrimitiveArrayFunctions2| *5 *2))))
 ((*1 *1 *2)
  (AND (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|ResidueRing| *3 *4 *5 *2 *6))
       (|ofCategory| *2 (|PolynomialCategory| *3 *4 *5))
       (|ofType| *6 (|List| *2))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *3 (|Mapping| *2 *7 *2))
       (|ofCategory| *7 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofType| *5 (|NonNegativeInteger|))
       (|ofType| *6 (|NonNegativeInteger|))
       (|ofCategory| *8 (|DirectProductCategory| *6 *7))
       (|ofCategory| *9 (|DirectProductCategory| *5 *7))
       (|ofCategory| *10 (|DirectProductCategory| *6 *2))
       (|ofCategory| *11 (|DirectProductCategory| *5 *2))
       (|isDomain| *1
                   (|RectangularMatrixCategoryFunctions2| *5 *6 *7 *8 *9 *4 *2
                                                          *10 *11 *12))
       (|ofCategory| *4 (|RectangularMatrixCategory| *5 *6 *7 *8 *9))
       (|ofCategory| *12 (|RectangularMatrixCategory| *5 *6 *2 *10 *11))))
 ((*1 *2 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *2 *5 *2)) (|isDomain| *4 (|Stream| *5))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *2 (|Type|))
       (|isDomain| *1 (|StreamFunctions2| *5 *2))))
 ((*1 *2 *2 *1 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *2 *2 *2))
       (|isDomain| *4 (|Mapping| (|Boolean|) *2 *2))
       (|ofCategory| *1 (|TriangularSetCategory| *5 *6 *7 *2))
       (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *2 (|RecursivePolynomialCategory| *5 *6 *7))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *3 (|Mapping| *2 *5 *2)) (|isDomain| *4 (|Vector| *5))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *2 (|Type|))
       (|isDomain| *1 (|VectorFunctions2| *5 *2))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *5 *6 *5))
       (|isDomain| *4 (|OneDimensionalArray| *6)) (|ofCategory| *6 (|Type|))
       (|ofCategory| *5 (|Type|)) (|isDomain| *2 (|OneDimensionalArray| *5))
       (|isDomain| *1 (|OneDimensionalArrayFunctions2| *6 *5))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *5 *7 *5))
       (|isDomain| *4 (|DirectProduct| *6 *7))
       (|ofType| *6 (|NonNegativeInteger|)) (|ofCategory| *7 (|Type|))
       (|ofCategory| *5 (|Type|)) (|isDomain| *2 (|DirectProduct| *6 *5))
       (|isDomain| *1 (|DirectProductFunctions2| *6 *7 *5))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *5 *6 *5)) (|ofCategory| *6 (|Type|))
       (|ofCategory| *5 (|Type|))
       (|ofCategory| *2 (|Join| (|LinearAggregate| *5) (|finiteAggregate|)))
       (|isDomain| *1 (|FiniteLinearAggregateFunctions2| *6 *4 *5 *2))
       (|ofCategory| *4 (|Join| (|LinearAggregate| *6) (|finiteAggregate|)))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *5 *6 *5)) (|ofCategory| *6 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *2 (|FiniteSetAggregate| *5))
       (|isDomain| *1 (|FiniteSetAggregateFunctions2| *6 *4 *5 *2))
       (|ofCategory| *4 (|FiniteSetAggregate| *6))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *5 *6 *5)) (|isDomain| *4 (|List| *6))
       (|ofCategory| *6 (|Type|)) (|ofCategory| *5 (|Type|))
       (|isDomain| *2 (|List| *5)) (|isDomain| *1 (|ListFunctions2| *6 *5))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *5 *6 *5))
       (|isDomain| *4 (|PrimitiveArray| *6)) (|ofCategory| *6 (|Type|))
       (|ofCategory| *5 (|Type|)) (|isDomain| *2 (|PrimitiveArray| *5))
       (|isDomain| *1 (|PrimitiveArrayFunctions2| *6 *5))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|Mapping| *3 *6 *3)) (|isDomain| *5 (|Stream| *6))
       (|ofCategory| *6 (|Type|)) (|ofCategory| *3 (|Type|))
       (|isDomain| *2 (|Stream| *3))
       (|isDomain| *1 (|StreamFunctions2| *6 *3))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *5 *6 *5)) (|isDomain| *4 (|Vector| *6))
       (|ofCategory| *6 (|Type|)) (|ofCategory| *5 (|Type|))
       (|isDomain| *2 (|Vector| *5))
       (|isDomain| *1 (|VectorFunctions2| *6 *5))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Complex| (|DoubleFloat|))))
       (|isDomain| *1 (|ComplexDoubleFloatVector|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|Vector| *3))))) 
(((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *1 (|MatrixCategory| *3 *4 *5))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|VectorCategory| *3))
       (|ofCategory| *3 (|AbelianMonoid|)) (|ofCategory| *3 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|AbelianMonoid|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PolynomialIdeal| *3 *4 *5 *6))
       (|ofCategory| *6 (|PolynomialCategory| *3 *4 *5))))
 ((*1 *2 *3)
  (AND (|ofCategory| *1 (|ModularAlgebraicGcdOperations| *4 *3 *5))
       (|ofCategory| *4 (|Type|)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *5 (|Type|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *3 *4 *5))
       (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|RealRootCharacterizationCategory| *4 *3))
       (|ofCategory| *4 (|Join| (|OrderedRing|) (|Field|)))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|VectorCategory| *3)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *3 (|AbelianMonoid|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *1 *1) (|ofCategory| *1 (|AbelianGroup|)))
 ((*1 *1 *1) (|ofCategory| *1 (|AbelianGroup|)))
 ((*1 *1 *1 *1) (|partial| |isDomain| *1 (|CardinalNumber|)))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|Database| *2))
       (|ofCategory| *2
                     (|Join| (|OrderedSet|)
                             (CATEGORY |domain|
                              (SIGNATURE |elt| ((|String|) $ (|Symbol|)))
                              (SIGNATURE |display| ((|Void|) $))
                              (SIGNATURE |fullDisplay| ((|Void|) $)))))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|AbelianGroup|))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|AbelianGroup|))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|GradedModule| *2 *3))
       (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *3 (|AbelianMonoid|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|GradedModule| *2 *3))
       (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *3 (|AbelianMonoid|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *2 *3 *4))
       (|ofCategory| *2 (|AbelianMonoid|))
       (|ofCategory| *3 (|FiniteLinearAggregate| *2))
       (|ofCategory| *4 (|FiniteLinearAggregate| *2))
       (|ofCategory| *2 (|AbelianGroup|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *2 *3 *4))
       (|ofCategory| *2 (|AbelianMonoid|))
       (|ofCategory| *3 (|FiniteLinearAggregate| *2))
       (|ofCategory| *4 (|FiniteLinearAggregate| *2))
       (|ofCategory| *2 (|AbelianGroup|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|OrderedCompletion| *2))
       (|ofCategory| *2 (|AbelianGroup|)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|SegmentCategory| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|AbelianGroup|))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SPointCategory|)))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Point| (|DoubleFloat|)))
       (|isDomain| *1 (|TubePlotTools|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|VectorCategory| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|AbelianGroup|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|VectorCategory| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|AbelianGroup|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|DirectProductCategory| *3 *2))
       (|ofCategory| *2 (|Type|)) (|ofCategory| *2 (|SemiRng|))
       (|ofCategory| *2 (|AbelianMonoid|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|OutputForm|))))
 ((*1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|Point| (|DoubleFloat|)))
       (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *1 (|TubePlotTools|))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|VectorCategory| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|AbelianMonoid|)) (|ofCategory| *2 (|SemiRng|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|VectorCategory| *3)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *3 (|Ring|)) (|isDomain| *2 (|Matrix| *3))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|PointCategory| *2)) (|ofCategory| *2 (|Ring|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Point| (|DoubleFloat|)))
       (|isDomain| *1 (|TubePlotTools|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|VectorCategory| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|FreeMagma| *3))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|FreeMonoid| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|Ring|))
       (|ofCategory| *2
                     (|Join| (|FloatingPointSystem|) (|RetractableTo| *4)
                             (|Field|) (|TranscendentalFunctionCategory|)
                             (|ElementaryFunctionCategory|)))
       (|isDomain| *1 (|GaloisGroupFactorizationUtilities| *4 *3 *2))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))
 ((*1 *1 *1) (|ofCategory| *1 (|IntegerNumberSystem|)))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|LyndonWord| *3))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|PoincareBirkhoffWittLyndonBasis| *3))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|VectorCategory| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|RadicalCategory|)) (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *3 *4 *4 *5 *6 *6 *3)
  (AND (|isDomain| *4 (|Vector| (|Integer|)))
       (|isDomain| *5 (|SortedExponentVector|))
       (|isDomain| *6 (|PrimitiveArray| (|U32Vector|)))
       (|isDomain| *3 (|Integer|))
       (|isDomain| *2
                   (|Record| (|:| |nvars| (|Integer|))
                             (|:| |offsetdata| (|Vector| (|Integer|)))
                             (|:| |expdata| (|SortedExponentVector|))
                             (|:| |coeffdata| (|U32Vector|))))
       (|isDomain| *1 (|VectorModularReconstructor|))))
 ((*1 *2 *1 *3 *4 *4 *5)
  (|partial| AND (|isDomain| *4 (|Vector| (|Integer|)))
   (|isDomain| *5 (|SortedExponentVector|)) (|isDomain| *3 (|Integer|))
   (|isDomain| *2
               (|Record| (|:| |nvars| (|Integer|))
                         (|:| |offsetdata| (|Vector| (|Integer|)))
                         (|:| |expdata| (|SortedExponentVector|))
                         (|:| |coeffdata| (|U32Vector|))))
   (|isDomain| *1 (|VectorModularReconstructor|))))
 ((*1 *2 *1 *3)
  (|partial| AND (|isDomain| *3 (|Vector| (|Integer|)))
   (|isDomain| *2 (|PrimitiveArray| (|Integer|)))
   (|isDomain| *1 (|VectorIntegerReconstructor|))))) 
(((*1 *2 *3 *2 *2 *4)
  (AND (|isDomain| *2 (|PrimitiveArray| (|U32Vector|)))
       (|isDomain| *3 (|Vector| (|Integer|))) (|isDomain| *4 (|Integer|))
       (|isDomain| *1 (|VectorModularReconstructor|))))
 ((*1 *2 *3 *2 *2)
  (AND (|isDomain| *2 (|PrimitiveArray| (|Integer|)))
       (|isDomain| *3 (|Vector| (|Integer|)))
       (|isDomain| *1 (|VectorIntegerReconstructor|))))) 
(((*1 *2 *1)
  (|partial| AND
   (|isDomain| *2
               (|Record| (|:| |numers| (|PrimitiveArray| (|U32Vector|)))
                         (|:| |denoms| (|PrimitiveArray| (|U32Vector|)))))
   (|isDomain| *1 (|VectorModularReconstructor|))))
 ((*1 *2 *3 *3 *4 *4)
  (|partial| AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|))
   (|isDomain| *2
               (|Record| (|:| |numer| (|U32Vector|))
                         (|:| |denom| (|U32Vector|))))
   (|isDomain| *1 (|VectorModularReconstructor|))))
 ((*1 *2 *3 *3 *3 *3)
  (|partial| AND (|isDomain| *3 (|Integer|))
   (|isDomain| *2 (|Record| (|:| |num| (|Integer|)) (|:| |den| (|Integer|))))
   (|isDomain| *1 (|VectorIntegerReconstructor|))))
 ((*1 *2 *1)
  (|partial| AND
   (|isDomain| *2
               (|Record| (|:| |numers| (|PrimitiveArray| (|Integer|)))
                         (|:| |denoms| (|PrimitiveArray| (|Integer|)))))
   (|isDomain| *1 (|VectorIntegerReconstructor|))))) 
(((*1 *2 *3 *4 *1)
  (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|VectorIntegerReconstructor|))))) 
(((*1 *2 *3 *4 *1)
  (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|VectorModularReconstructor|))))
 ((*1 *2 *3 *4 *1)
  (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|VectorIntegerReconstructor|))))) 
(((*1 *1) (|ofCategory| *1 (|Aggregate|)))
 ((*1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1)
  (AND (|ofCategory| *2 (|GcdDomain|)) (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|isDomain| *1 (|QuasiAlgebraicSet| *2 *3 *4 *5))
       (|ofCategory| *5 (|PolynomialCategory| *2 *4 *3))))
 ((*1 *1)
  (AND (|isDomain| *1 (|SplittingNode| *2 *3))
       (|ofCategory| *2 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))))
 ((*1 *1) (|isDomain| *1 (|TheSymbolTable|)))
 ((*1 *1) (|isDomain| *1 (|SymbolTable|)))
 ((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|VectorModularReconstructor|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|VectorIntegerReconstructor|))))) 
(((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *4 (|Vector| (|Integer|)))
       (|isDomain| *5 (|SortedExponentVector|))
       (|isDomain| *6 (|PrimitiveArray| (|U32Vector|)))
       (|isDomain| *3 (|Integer|))
       (|isDomain| *2
                   (|Record| (|:| |nvars| (|Integer|))
                             (|:| |offsetdata| (|Vector| (|Integer|)))
                             (|:| |expdata| (|SortedExponentVector|))
                             (|:| |coeffdata| (|U32Vector|))))
       (|isDomain| *1 (|VectorModularReconstructor|))))) 
(((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|List| (|Integer|))) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|VectorModularReconstructor|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|DifferentialVariableCategory| *2))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|LatticeJoinOfMeets|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|LatticeMeetOfJoins|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Symbol|))
   (|isDomain| *1 (|OrderedVariableList| *3)) (|ofType| *3 (|List| *2))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|QueryEquation|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|SegmentBinding| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|UnivariatePowerSeriesCategory| *3 *4))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoid|))
       (|isDomain| *2 (|Symbol|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|Variable| *3))
       (|ofType| *3 *2)))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *3 (|ILogic|))
       (|ofCategory| *1 (|VarCat|))))
 ((*1 *1 *2) (AND (|isDomain| *2 (|String|)) (|ofCategory| *1 (|VarCat|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|VarCat|)) (|isDomain| *2 (|String|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|InputForm|)) (|isDomain| *1 (|InputFormFunctions1| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *2 *1) (AND (|ofCategory| *1 (|VarCat|)) (|isDomain| *2 (|ILogic|))))) 
(((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|FloatingPointSystem|))
       (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|String|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FloatingPointSystem|)) (|isDomain| *2 (|String|))))
 ((*1 *2 *1) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|ILogic|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|Lambda| *3))
       (|ofCategory| *3 (|VarCat|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|LatticeJoinOfMeets|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|LatticeMeetOfJoins|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|SceneNamedPoints| *3))
       (|ofCategory| *3 (|SPointCategory|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|SKICombinators| *3))
       (|ofCategory| *3 (|VarCat|))))
 ((*1 *2 *1) (AND (|ofCategory| *1 (|VarCat|)) (|isDomain| *2 (|String|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|String|)) (|ofCategory| *1 (|VarCat|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|NonNegativeInteger|))
       (|isDomain| *2
                   (|Record| (|:| |rft| *1)
                             (|:| |pout| (|NonNegativeInteger|))))
       (|ofCategory| *1 (|VarCat|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|BasicType|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *1 *2 *2)
  (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FortranScalarType|))))
 ((*1 *2 *1 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|ILogic|))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Lambda| *3))
       (|ofCategory| *3 (|VarCat|))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|LatticeJoinOfMeets|))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|LatticeMeetOfJoins|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Reference| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SKICombinators| *3))
       (|ofCategory| *3 (|VarCat|))))
 ((*1 *2 *1 *1) (AND (|ofCategory| *1 (|VarCat|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *4 *3 *3)
  (AND (|isDomain| *3 (|Equation| *6)) (|isDomain| *4 (|BasicOperator|))
       (|ofCategory| *6 (|FunctionSpace| *5))
       (|ofCategory| *5
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|ConvertibleTo| (|InputForm|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionSpaceODESolver| *5 *6))))
 ((*1 *2 *3 *4 *3 *5)
  (AND (|isDomain| *3 (|Equation| *7)) (|isDomain| *4 (|BasicOperator|))
       (|isDomain| *5 (|List| *7)) (|ofCategory| *7 (|FunctionSpace| *6))
       (|ofCategory| *6
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|ConvertibleTo| (|InputForm|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionSpaceODESolver| *6 *7))))
 ((*1 *2 *3 *4 *5 *3)
  (AND (|isDomain| *3 (|List| (|Equation| *7)))
       (|isDomain| *4 (|List| (|BasicOperator|)))
       (|isDomain| *5 (|Equation| *7)) (|ofCategory| *7 (|FunctionSpace| *6))
       (|ofCategory| *6
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|ConvertibleTo| (|InputForm|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionSpaceODESolver| *6 *7))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|List| (|Equation| *8)))
       (|isDomain| *4 (|List| (|BasicOperator|)))
       (|isDomain| *5 (|Equation| *8)) (|isDomain| *6 (|List| *8))
       (|ofCategory| *8 (|FunctionSpace| *7))
       (|ofCategory| *7
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|ConvertibleTo| (|InputForm|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionSpaceODESolver| *7 *8))))
 ((*1 *2 *3 *4 *5 *3)
  (AND (|isDomain| *3 (|List| *7)) (|isDomain| *4 (|List| (|BasicOperator|)))
       (|isDomain| *5 (|Equation| *7)) (|ofCategory| *7 (|FunctionSpace| *6))
       (|ofCategory| *6
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|ConvertibleTo| (|InputForm|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionSpaceODESolver| *6 *7))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|List| (|BasicOperator|)))
       (|isDomain| *6 (|List| (|Equation| *8)))
       (|ofCategory| *8 (|FunctionSpace| *7)) (|isDomain| *5 (|Equation| *8))
       (|ofCategory| *7
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|ConvertibleTo| (|InputForm|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionSpaceODESolver| *7 *8))))
 ((*1 *2 *3 *4 *3 *5)
  (AND (|isDomain| *3 (|Equation| *5)) (|isDomain| *4 (|BasicOperator|))
       (|ofCategory| *5 (|FunctionSpace| *6))
       (|ofCategory| *6
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|ConvertibleTo| (|InputForm|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionSpaceODESolver| *6 *5))))
 ((*1 *2 *3 *4 *5 *3)
  (AND (|isDomain| *4 (|BasicOperator|)) (|isDomain| *5 (|Equation| *3))
       (|ofCategory| *3 (|FunctionSpace| *6))
       (|ofCategory| *6
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|ConvertibleTo| (|InputForm|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionSpaceODESolver| *6 *3))))
 ((*1 *2 *3 *4 *5 *5)
  (AND (|isDomain| *4 (|BasicOperator|)) (|isDomain| *5 (|Equation| *3))
       (|ofCategory| *3 (|FunctionSpace| *6))
       (|ofCategory| *6
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|ConvertibleTo| (|InputForm|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionSpaceODESolver| *6 *3))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *4 (|BasicOperator|)) (|isDomain| *5 (|Equation| *3))
       (|isDomain| *6 (|List| *3)) (|ofCategory| *3 (|FunctionSpace| *7))
       (|ofCategory| *7
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|ConvertibleTo| (|InputForm|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionSpaceODESolver| *7 *3))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *4 (|BasicOperator|)) (|isDomain| *5 (|Symbol|))
       (|isDomain| *6 (|List| *3)) (|ofCategory| *3 (|FunctionSpace| *7))
       (|ofCategory| *7
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|ConvertibleTo| (|InputForm|))))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ExpressionSolve| *7 *3 *2 *8))
       (|ofCategory| *8
                     (|UnivariateTaylorSeriesCategory|
                      (|SparseMultivariatePolynomialExpressions| *3)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *6)) (|isDomain| *4 (|List| *5))
       (|ofCategory| *5 (|Field|))
       (|ofCategory| *6
                     (|UnivariateTaylorSeriesCategory|
                      (|SparseMultivariatePolynomialExpressions| *5)))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *5))
       (|isDomain| *1 (|TaylorSolve| *5 *2 *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Fraction| *5))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *4 (|IntegralDomain|)) (|ofCategory| *4 (|Ring|))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *4))
       (|isDomain| *1 (|UTSodetools| *4 *5 *6 *2))
       (|ofCategory| *6 (|LinearOrdinaryDifferentialOperatorCategory| *5))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|Ring|))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *2 (|Mapping| *6 (|List| *6)))
       (|isDomain| *1 (|UTSodetools| *4 *5 *3 *6))
       (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *5))
       (|ofCategory| *6 (|UnivariateTaylorSeriesCategory| *4))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|NonNegativeInteger|)) (|ofCategory| *5 (|Ring|))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *5))
       (|isDomain| *1 (|UTSodetools| *5 *2 *6 *3))
       (|ofCategory| *6 (|LinearOrdinaryDifferentialOperatorCategory| *2))
       (|ofCategory| *3 (|UnivariateTaylorSeriesCategory| *5))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|Ring|))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *4))
       (|isDomain| *1 (|UTSodetools| *4 *3 *5 *2))
       (|ofCategory| *5 (|LinearOrdinaryDifferentialOperatorCategory| *3))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5))
       (|isDomain| *4 (|List| (|Mapping| *6 (|List| *6))))
       (|ofCategory| *5 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *6 (|UnivariateTaylorSeriesCategory| *5))
       (|isDomain| *2 (|List| *6))
       (|isDomain| *1 (|UnivariateTaylorSeriesODESolver| *5 *6))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *2 (|List| *2))) (|isDomain| *4 (|List| *5))
       (|ofCategory| *5 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *5))
       (|isDomain| *1 (|UnivariateTaylorSeriesODESolver| *5 *2))))) 
(((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|Mapping| *2 *2 *2))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *4))
       (|isDomain| *1 (|UnivariateTaylorSeriesODESolver| *4 *2))
       (|ofCategory| *4 (|Algebra| (|Fraction| (|Integer|))))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *2 *2))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *4))
       (|isDomain| *1 (|UnivariateTaylorSeriesODESolver| *4 *2))
       (|ofCategory| *4 (|Algebra| (|Fraction| (|Integer|))))))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|UnivariateTaylorSeriesODESolver| *3 *2))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Mapping| *5 (|List| *5)))
       (|ofCategory| *5 (|UnivariateTaylorSeriesCategory| *4))
       (|ofCategory| *4 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|Mapping| (|Stream| *4) (|List| (|Stream| *4))))
       (|isDomain| *1 (|UnivariateTaylorSeriesODESolver| *4 *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Mapping| *5 *5 *5))
       (|ofCategory| *5 (|UnivariateTaylorSeriesCategory| *4))
       (|ofCategory| *4 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|Mapping| (|Stream| *4) (|Stream| *4) (|Stream| *4)))
       (|isDomain| *1 (|UnivariateTaylorSeriesODESolver| *4 *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Mapping| *5 *5))
       (|ofCategory| *5 (|UnivariateTaylorSeriesCategory| *4))
       (|ofCategory| *4 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|Mapping| (|Stream| *4) (|Stream| *4)))
       (|isDomain| *1 (|UnivariateTaylorSeriesODESolver| *4 *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *4 *5))
       (|ofCategory| *5
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *4)))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *2 (|Any|))
   (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *4 *3))
   (|ofCategory| *3
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *4)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Fraction| (|Integer|)))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *5 *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *5)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Equation| *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *5)))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *5 *3))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|Equation| *3)) (|isDomain| *5 (|Fraction| (|Integer|)))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *6)))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *6 *3))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 (|Integer|)))
       (|isDomain| *4 (|Equation| *6))
       (|ofCategory| *6
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *5)))
       (|ofCategory| *5
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries| *5 *6))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|Symbol|)) (|isDomain| *5 (|Equation| *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *6)))
       (|ofCategory| *6
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries| *6 *3))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *7 (|Integer|)))
       (|isDomain| *4 (|Equation| *7))
       (|isDomain| *5 (|UniversalSegment| (|Integer|)))
       (|ofCategory| *7
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *6)))
       (|ofCategory| *6
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries| *6 *7))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *4 (|Symbol|)) (|isDomain| *5 (|Equation| *3))
       (|isDomain| *6 (|UniversalSegment| (|Integer|)))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *7)))
       (|ofCategory| *7
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries| *7 *3))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|Mapping| *8 (|Fraction| (|Integer|))))
       (|isDomain| *4 (|Equation| *8))
       (|isDomain| *5 (|UniversalSegment| (|Fraction| (|Integer|))))
       (|isDomain| *6 (|Fraction| (|Integer|)))
       (|ofCategory| *8
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *7)))
       (|ofCategory| *7
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries| *7 *8))))
 ((*1 *2 *3 *4 *5 *6 *7)
  (AND (|isDomain| *4 (|Symbol|)) (|isDomain| *5 (|Equation| *3))
       (|isDomain| *6 (|UniversalSegment| (|Fraction| (|Integer|))))
       (|isDomain| *7 (|Fraction| (|Integer|)))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *8)))
       (|ofCategory| *8
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries| *8 *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Stream| (|Record| (|:| |k| (|Integer|)) (|:| |c| *3))))
       (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|InnerTaylorSeries| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Stream| *5))
       (|ofCategory| *5 (|PolynomialCategory| *3 (|IndexedExponents| *4) *4))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *1 (|SparseMultivariateTaylorSeries| *3 *4 *5))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Stream| (|Record| (|:| |k| (|Integer|)) (|:| |c| *3))))
       (|ofCategory| *3 (|Ring|))
       (|ofCategory| *1 (|UnivariateLaurentSeriesCategory| *3))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *3
                   (|Stream|
                    (|Record| (|:| |k| (|Fraction| (|Integer|)))
                              (|:| |c| *4))))
       (|ofCategory| *4 (|Ring|))
       (|ofCategory| *1 (|UnivariatePuiseuxSeriesCategory| *4))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *1 (|UnivariateTaylorSeriesCategory| *3))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|Stream|
                (|Record| (|:| |k| (|NonNegativeInteger|)) (|:| |c| *3))))
   (|ofCategory| *3 (|Ring|))
   (|ofCategory| *1 (|UnivariateTaylorSeriesCategory| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteAbelianMonoidRing| *3 *4))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *4 (|OrderedAbelianMonoid|)) (|isDomain| *2 (|List| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FreeModuleCategory| *3 *4))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *4 (|Comparable|)) (|isDomain| *2 (|List| *3))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Stream| *3)) (|isDomain| *1 (|InnerTaylorSeries| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|JetBundleCategory|)) (|isDomain| *2 (|List| *4))
       (|isDomain| *1 (|JetDifferential| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|JetBundleCategory|)) (|isDomain| *2 (|List| *4))
       (|isDomain| *1 (|JetVectorField| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|MonoidRingCategory| *3 *4))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|Monoid|))
       (|isDomain| *2 (|List| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *2 (|Stream| *5))
       (|isDomain| *1 (|SparseMultivariateTaylorSeries| *3 *4 *5))
       (|ofCategory| *5 (|PolynomialCategory| *3 (|IndexedExponents| *4) *4))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|UnivariateTaylorSeriesCategory| *3))
       (|ofCategory| *3 (|Ring|)) (|isDomain| *2 (|Stream| *3))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|UnivariateTaylorSeriesCategory| *2))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 (|Integer|))) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *3))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 (|Integer|)))
       (|ofCategory| *1 (|UnivariateLaurentSeriesCategory| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 (|Integer|)))
       (|ofCategory| *1 (|UnivariateTaylorSeriesCategory| *3))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|MultivariateTaylorSeriesCategory| *4 *5))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *2 (|Polynomial| *4))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|MultivariateTaylorSeriesCategory| *4 *5))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *2 (|Polynomial| *4))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|UnivariateTaylorSeriesCategory| *4))
       (|ofCategory| *4 (|Ring|)) (|isDomain| *2 (|Polynomial| *4))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|UnivariateTaylorSeriesCategory| *4))
       (|ofCategory| *4 (|Ring|)) (|isDomain| *2 (|Polynomial| *4))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Fraction| (|Integer|)))
       (|ofCategory| *4 (|RetractableTo| (|Integer|)))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|AlgebraicFunction| *4 *2))
       (|ofCategory| *2 (|FunctionSpace| *4))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|CardinalNumber|)))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|CombinatorialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|ofCategory| *1 (|DistributionCategory| *3))
       (|ofCategory| *3 (|CommutativeRing|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|DivisionRing|)) (|isDomain| *2 (|Integer|))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Fraction| (|Integer|))) (|ofCategory| *4 (|Field|))
       (|ofCategory| *4 (|Algebra| *3))
       (|ofCategory| *5 (|UnivariateTaylorSeriesCategory| *4))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *4 *5 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *4 *5))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Fraction| (|Integer|))) (|ofCategory| *4 (|Field|))
       (|ofCategory| *4 (|Algebra| *3))
       (|ofCategory| *5 (|UnivariateLaurentSeriesCategory| *4))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *4 *5 *2 *6))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *4 *5))
       (|ofCategory| *6 (|PartialTranscendentalFunctions| *5))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|ElementaryFunctionCategory|)))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *1 (|FreeGroup| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *1 (|FreeMonoid| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1 *2) (AND (|ofCategory| *1 (|Group|)) (|isDomain| *2 (|Integer|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialIdeal| *3 *4 *5 *6))
       (|ofCategory| *6 (|PolynomialCategory| *3 *4 *5))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Vector| *4)) (|isDomain| *3 (|Integer|))
       (|ofCategory| *4 (|FiniteFieldCategory|))
       (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *4))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|IncidenceAlgebra| *3 *4)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *4 (|SetCategory|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|InputForm|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|InputForm|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|Magma|)) (|isDomain| *2 (|PositiveInteger|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|MagmaWithUnit|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Mapping| *4 *4)) (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|MappingPackage1| *4))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|ofCategory| *1 (|MatrixCategory| *3 *4 *5))
       (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|ofCategory| *3 (|Field|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|MatrixCategory| *3 *4 *5))
       (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|ofCategory| *3 (|Monoid|)) (|ofCategory| *3 (|SemiRng|))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Matrix| *4)) (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|StorageEfficientMatrixOperations| *4))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|ModuleOperator| *3 *4))
       (|ofCategory| *4 (|LeftModule| *3))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Operator| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|Pattern| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|Pattern| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|RadicalCategory|))
       (|isDomain| *2 (|Fraction| (|Integer|)))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|ofCategory| *1 (|SquareMatrixCategory| *3 *4 *5 *6))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *5 (|DirectProductCategory| *3 *4))
       (|ofCategory| *6 (|DirectProductCategory| *3 *4))
       (|ofCategory| *4 (|Field|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|SmallOrdinal|)))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|UnivariateTaylorSeriesCategory| *2))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|Field|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|SegmentBinding| (|OrderedCompletion| *3)))
       (|ofCategory| *3
                     (|Join| (|TranscendentalFunctionCategory|)
                             (|PrimitiveFunctionCategory|)
                             (|AlgebraicallyClosedFunctionSpace| *5)))
       (|ofCategory| *5
                     (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Union| (|:| |f1| (|OrderedCompletion| *3))
                            (|:| |f2| (|List| (|OrderedCompletion| *3)))
                            (|:| |fail| #1="failed")
                            (|:| |pole| #2="potentialPole")))
       (|isDomain| *1 (|ElementaryFunctionDefiniteIntegration| *5 *3))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|SegmentBinding| (|OrderedCompletion| *3)))
       (|isDomain| *5 (|String|))
       (|ofCategory| *3
                     (|Join| (|TranscendentalFunctionCategory|)
                             (|PrimitiveFunctionCategory|)
                             (|AlgebraicallyClosedFunctionSpace| *6)))
       (|ofCategory| *6
                     (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Union| (|:| |f1| (|OrderedCompletion| *3))
                            (|:| |f2| (|List| (|OrderedCompletion| *3)))
                            (|:| |fail| #1#) (|:| |pole| #2#)))
       (|isDomain| *1 (|ElementaryFunctionDefiniteIntegration| *6 *3))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
       (|isDomain| *4
                   (|SegmentBinding| (|OrderedCompletion| (|Expression| *5))))
       (|ofCategory| *5
                     (|Join| (|EuclideanDomain|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Union| (|:| |f1| (|OrderedCompletion| (|Expression| *5)))
                            (|:| |f2|
                                 (|List|
                                  (|OrderedCompletion| (|Expression| *5))))
                            (|:| |fail| #3="failed")
                            (|:| |pole| #4="potentialPole")))
       (|isDomain| *1 (|RationalFunctionDefiniteIntegration| *5))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *6)))
       (|isDomain| *4
                   (|SegmentBinding| (|OrderedCompletion| (|Expression| *6))))
       (|isDomain| *5 (|String|))
       (|ofCategory| *6
                     (|Join| (|EuclideanDomain|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Union| (|:| |f1| (|OrderedCompletion| (|Expression| *6)))
                            (|:| |f2|
                                 (|List|
                                  (|OrderedCompletion| (|Expression| *6))))
                            (|:| |fail| #3#) (|:| |pole| #4#)))
       (|isDomain| *1 (|RationalFunctionDefiniteIntegration| *6))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *4
               (|SegmentBinding|
                (|OrderedCompletion| (|Fraction| (|Polynomial| *5)))))
   (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
   (|ofCategory| *5
                 (|Join| (|EuclideanDomain|) (|Comparable|)
                         (|CharacteristicZero|) (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *2
               (|Union| (|:| |f1| (|OrderedCompletion| (|Expression| *5)))
                        (|:| |f2|
                             (|List| (|OrderedCompletion| (|Expression| *5))))
                        (|:| |fail| #3#) (|:| |pole| #4#)))
   (|isDomain| *1 (|RationalFunctionDefiniteIntegration| *5))))
 ((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *4
               (|SegmentBinding|
                (|OrderedCompletion| (|Fraction| (|Polynomial| *6)))))
   (|isDomain| *5 (|String|)) (|isDomain| *3 (|Fraction| (|Polynomial| *6)))
   (|ofCategory| *6
                 (|Join| (|EuclideanDomain|) (|Comparable|)
                         (|CharacteristicZero|) (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *2
               (|Union| (|:| |f1| (|OrderedCompletion| (|Expression| *6)))
                        (|:| |f2|
                             (|List| (|OrderedCompletion| (|Expression| *6))))
                        (|:| |fail| #3#) (|:| |pole| #4#)))
   (|isDomain| *1 (|RationalFunctionDefiniteIntegration| *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Distribution| *5))
       (|ofCategory| *5 (|CommutativeRing|))
       (|ofCategory| *2 (|Join| (|CommutativeRing|) (|Module| *5)))
       (|isDomain| *1 (|DistributionPolynomialPackage| *5 *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|PolynomialFactorizationExplicit|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Union| *3 (|List| *3)))
       (|isDomain| *1 (|FunctionSpaceIntegration| *5 *3))
       (|ofCategory| *3
                     (|Join| (|TranscendentalFunctionCategory|)
                             (|PrimitiveFunctionCategory|)
                             (|AlgebraicallyClosedFunctionSpace| *5)))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|GeneralUnivariatePowerSeries| *3 *4 *5))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Fraction| *5))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *4
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))))
       (|isDomain| *2 (|IntegrationResult| (|Fraction| *5)))
       (|isDomain| *1 (|RationalIntegration| *4 *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
       (|isDomain| *4 (|Symbol|)) (|ofCategory| *5 (|CharacteristicZero|))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                             (|Comparable|)
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Union| (|Expression| *5) (|List| (|Expression| *5))))
       (|isDomain| *1 (|IntegrationResultRFToFunction| *5))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|JetBundleCategory|))
       (|isDomain| *2 (|PositiveInteger|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|MultivariateTaylorSeriesCategory| *3 *2))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *2 (|OrderedSet|))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|Polynomial| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1 *2 *3)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *2 (|OrderedSet|))
       (|isDomain| *1 (|SparseMultivariateTaylorSeries| *3 *2 *4))
       (|ofCategory| *4 (|PolynomialCategory| *3 (|IndexedExponents| *2) *2))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|StreamExponentialSeriesOperations| *3))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|SparseUnivariateLaurentSeries| *3 *4 *5))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|SparseUnivariatePuiseuxSeries| *3 *4 *5))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|SparseUnivariateTaylorSeries| *3 *4 *5))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|TaylorSeries| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Variable| '|x|))
       (|isDomain| *1 (|UnivariateFormalPowerSeries| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|UnivariateLaurentSeries| *3 *4 *5))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))
 ((*1 *1 *1 *2)
  (OR
   (AND (|isDomain| *2 (|Symbol|))
        (|ofCategory| *1 (|UnivariateLaurentSeriesCategory| *3))
        (|ofCategory| *3 (|Ring|))
        (AND (|ofCategory| *3 (|AlgebraicallyClosedFunctionSpace| (|Integer|)))
             (|ofCategory| *3 (|PrimitiveFunctionCategory|))
             (|ofCategory| *3 (|TranscendentalFunctionCategory|))
             (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))))
   (AND (|isDomain| *2 (|Symbol|))
        (|ofCategory| *1 (|UnivariateLaurentSeriesCategory| *3))
        (|ofCategory| *3 (|Ring|))
        (AND (|has| *3 (SIGNATURE |variables| ((|List| *2) *3)))
             (|has| *3 (SIGNATURE |integrate| (*3 *3 *2)))
             (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|UnivariateLaurentSeriesCategory| *2))
       (|ofCategory| *2 (|Ring|))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|UnivariatePuiseuxSeries| *3 *4 *5))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))
 ((*1 *1 *1 *2)
  (OR
   (AND (|isDomain| *2 (|Symbol|))
        (|ofCategory| *1 (|UnivariatePuiseuxSeriesCategory| *3))
        (|ofCategory| *3 (|Ring|))
        (AND (|ofCategory| *3 (|AlgebraicallyClosedFunctionSpace| (|Integer|)))
             (|ofCategory| *3 (|PrimitiveFunctionCategory|))
             (|ofCategory| *3 (|TranscendentalFunctionCategory|))
             (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))))
   (AND (|isDomain| *2 (|Symbol|))
        (|ofCategory| *1 (|UnivariatePuiseuxSeriesCategory| *3))
        (|ofCategory| *3 (|Ring|))
        (AND (|has| *3 (SIGNATURE |variables| ((|List| *2) *3)))
             (|has| *3 (SIGNATURE |integrate| (*3 *3 *2)))
             (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|UnivariatePuiseuxSeriesCategory| *2))
       (|ofCategory| *2 (|Ring|))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|UnivariateTaylorSeries| *3 *4 *5))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))
 ((*1 *1 *1 *2)
  (OR
   (AND (|isDomain| *2 (|Symbol|))
        (|ofCategory| *1 (|UnivariateTaylorSeriesCategory| *3))
        (|ofCategory| *3 (|Ring|))
        (AND (|ofCategory| *3 (|AlgebraicallyClosedFunctionSpace| (|Integer|)))
             (|ofCategory| *3 (|PrimitiveFunctionCategory|))
             (|ofCategory| *3 (|TranscendentalFunctionCategory|))
             (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))))
   (AND (|isDomain| *2 (|Symbol|))
        (|ofCategory| *1 (|UnivariateTaylorSeriesCategory| *3))
        (|ofCategory| *3 (|Ring|))
        (AND (|has| *3 (SIGNATURE |variables| ((|List| *2) *3)))
             (|has| *3 (SIGNATURE |integrate| (*3 *3 *2)))
             (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|UnivariateTaylorSeriesCategory| *2))
       (|ofCategory| *2 (|Ring|))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|UnivariatePolynomial| *5 *4))
       (|isDomain| *1 (|SparseUnivariateTaylorSeries| *4 *5 *6))
       (|ofCategory| *4 (|Ring|)) (|ofType| *5 (|Symbol|)) (|ofType| *6 *4)))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|UnivariatePolynomial| '|x| *4))
       (|isDomain| *1 (|UnivariateFormalPowerSeries| *4))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|UnivariatePolynomial| *5 *4))
       (|isDomain| *1 (|UnivariateTaylorSeries| *4 *5 *6))
       (|ofCategory| *4 (|Ring|)) (|ofType| *5 (|Symbol|)) (|ofType| *6 *4)))) 
(((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| *4 *4)) (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|DifferentialExtension| *4))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *3 *3))
       (|ofCategory| *1 (|DifferentialExtension| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|DifferentialRing|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *1 *1) (|ofCategory| *1 (|DifferentialRing|)))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|DifferentialVariableCategory| *3))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|DifferentialVariableCategory| *2))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *4 *4))
       (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *3 (|Join| (|Field|) (|CharacteristicZero|)))
       (|isDomain| *1 (|FullPartialFractionExpansion| *3 *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))))
 ((*1 *1 *1)
  (AND (|ofCategory| *2 (|Join| (|Field|) (|CharacteristicZero|)))
       (|isDomain| *1 (|FullPartialFractionExpansion| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|GeneralUnivariatePowerSeries| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *2 (|Field|))
       (|ofCategory| *2 (|PartialDifferentialRing| *3))
       (|isDomain| *1 (|IntegrationResult| *2)) (|isDomain| *3 (|Symbol|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Mapping| *2 *2))
       (|isDomain| *1 (|IntegrationResult| *2)) (|ofCategory| *2 (|Field|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|Union| *1 "0"))
       (|ofCategory| *1 (|JetBundleCategory|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|JetBundleFunctionCategory| *2))
       (|ofCategory| *2 (|JetBundleCategory|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|OutputForm|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4))
       (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *1 (|PartialDifferentialRing| *4))
       (|ofCategory| *4 (|SetCategory|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|PartialDifferentialRing| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| *3))
       (|ofCategory| *1 (|PartialDifferentialRing| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|PartialDifferentialRing| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|U32Vector|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))
 ((*1 *2 *2 *3 *4)
  (AND (|isDomain| *2 (|U32Vector|)) (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *4 (|Integer|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|SparseUnivariateLaurentSeries| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|SparseUnivariatePuiseuxSeries| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|SparseUnivariateTaylorSeries| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Variable| '|x|))
       (|isDomain| *1 (|UnivariateFormalPowerSeries| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|UnivariateLaurentSeries| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))
 ((*1 *1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *1 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|UnivariatePuiseuxSeries| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Variable| *4)) (|ofType| *4 (|Symbol|))
       (|isDomain| *1 (|UnivariateTaylorSeries| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofType| *5 *3)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|UnivariateFormalPowerSeries| *2))
       (|ofCategory| *2 (|Ring|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|UnivariateTaylorSeries| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofType| *3 (|Symbol|)) (|ofType| *4 *2)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|UnivariateFormalPowerSeries| *2))
       (|ofCategory| *2 (|Ring|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|UnivariateTaylorSeries| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofType| *3 (|Symbol|)) (|ofType| *4 *2)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|UnivariateFormalPowerSeries| *2))
       (|ofCategory| *2 (|Ring|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|UnivariateTaylorSeries| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofType| *3 (|Symbol|)) (|ofType| *4 *2)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|UnivariateFormalPowerSeries| *2))
       (|ofCategory| *2 (|Ring|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|UnivariateTaylorSeries| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofType| *3 (|Symbol|)) (|ofType| *4 *2)))) 
(((*1 *2 *2 *3 *3)
  (AND (|isDomain| *2 (|Stream| *4)) (|isDomain| *3 (|Integer|))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *4))))
 ((*1 *1 *1 *2 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|UnivariateFormalPowerSeries| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1 *2 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|UnivariateTaylorSeries| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofType| *4 (|Symbol|)) (|ofType| *5 *3)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|UnivariateFormalPowerSeries| *2))
       (|ofCategory| *2 (|Ring|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|UnivariateTaylorSeries| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofType| *3 (|Symbol|)) (|ofType| *4 *2)))) 
(((*1 *2 *3 *3 *2)
  (AND (|isDomain| *2 (|Stream| *4)) (|isDomain| *3 (|Integer|))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *4))))
 ((*1 *1 *2 *2 *1)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|UnivariateFormalPowerSeries| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *2 *2 *1)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|UnivariateTaylorSeries| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofType| *4 (|Symbol|)) (|ofType| *5 *3)))) 
(((*1 *2 *3 *3 *2)
  (AND (|isDomain| *2 (|Stream| *4)) (|isDomain| *3 (|Integer|))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *4))))
 ((*1 *1 *2 *2 *1)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|UnivariateFormalPowerSeries| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *2 *2 *1)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|UnivariateTaylorSeries| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofType| *4 (|Symbol|)) (|ofType| *5 *3)))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|LinearAggregate| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|LinearAggregate| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|LinearAggregate| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|LinearAggregate| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Stream| (|Stream| *4))) (|isDomain| *2 (|Stream| *4))
       (|isDomain| *1 (|StreamFunctions1| *4)) (|ofCategory| *4 (|Type|))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *1 (|FreeMagma| *2)) (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *2 *1)
  (AND (|isDomain| *1 (|FreeMonoid| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|IndexedAggregate| *3 *2)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *2 (|Type|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|LinearAggregate| *3)) (|ofCategory| *3 (|Type|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|LyndonWord| *3))
       (|isDomain| *1 (|PoincareBirkhoffWittLyndonBasis| *3))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|SetCategory|)) (|isDomain| *1 (|Product| *2 *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|SequenceCategory| *3))
       (|ofCategory| *3 (|CommutativeRing|))))
 ((*1 *2 *1)
  (|partial| AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *2))
   (|ofCategory| *3 (|IntegralDomain|))
   (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|))
   (|ofCategory| *2 (|RecursivePolynomialCategory| *3 *4 *5))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|UnaryRecursiveAggregate| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1 *2 *2)
  (AND (|isDomain| *2 (|List| (|Segment| (|Integer|))))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|Segment| (|Integer|))))
       (|isDomain| *3 (|Segment| (|Integer|)))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))
       (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *4))
       (|ofCategory| *6 (|IndexedAggregate| (|Integer|) *4))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Segment| (|Integer|))))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))
       (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *4))
       (|ofCategory| *6 (|IndexedAggregate| (|Integer|) *4))
       (|isDomain| *2 (|Segment| (|Integer|)))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|Segment| (|Integer|))))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))
       (|ofCategory| *4 (|Type|)) (|ofCategory| *5 (|IndexedAggregate| *3 *4))
       (|ofCategory| *6 (|IndexedAggregate| *3 *4))
       (|isDomain| *3 (|Integer|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Segment| (|Integer|))))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))
       (|ofCategory| *4 (|Type|)) (|ofCategory| *5 (|IndexedAggregate| *2 *4))
       (|ofCategory| *6 (|IndexedAggregate| *2 *4))
       (|isDomain| *2 (|Integer|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|Segment| (|Integer|)))
       (|isDomain| *3 (|List| (|Integer|)))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))
       (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *4))
       (|ofCategory| *6 (|IndexedAggregate| (|Integer|) *4))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|Integer|)))
       (|isDomain| *3 (|Segment| (|Integer|)))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))
       (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *4))
       (|ofCategory| *6 (|IndexedAggregate| (|Integer|) *4))))
 ((*1 *1 *1 *2 *2)
  (AND (|isDomain| *2 (|Segment| (|Integer|)))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))))
 ((*1 *1 *1 *2 *2)
  (AND (|isDomain| *2 (|List| (|Integer|)))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|Integer|)))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))
       (|ofCategory| *4 (|Type|)) (|ofCategory| *5 (|IndexedAggregate| *3 *4))
       (|ofCategory| *6 (|IndexedAggregate| *3 *4))
       (|isDomain| *3 (|Integer|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))
       (|ofCategory| *4 (|Type|)) (|ofCategory| *5 (|IndexedAggregate| *2 *4))
       (|ofCategory| *6 (|IndexedAggregate| *2 *4))
       (|isDomain| *2 (|Integer|))))
 ((*1 *2 *1 *3 *3 *2)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *2 *4 *5))
       (|ofCategory| *2 (|Type|)) (|ofCategory| *4 (|IndexedAggregate| *3 *2))
       (|ofCategory| *5 (|IndexedAggregate| *3 *2))
       (|isDomain| *3 (|Integer|))))
 ((*1 *2 *1 *3 *3)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *2 *4 *5))
       (|ofCategory| *4 (|IndexedAggregate| *3 *2))
       (|ofCategory| *5 (|IndexedAggregate| *3 *2)) (|isDomain| *3 (|Integer|))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 "right")
       (|ofCategory| *1 (|BinaryRecursiveAggregate| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 "left") (|ofCategory| *1 (|BinaryRecursiveAggregate| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|CartesianTensor| *4 *5 *2)) (|ofType| *4 (|Integer|))
       (|ofType| *5 (|NonNegativeInteger|))))
 ((*1 *2 *1 *3 *3 *3 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|CartesianTensor| *4 *5 *2)) (|ofType| *4 *3)
       (|ofType| *5 (|NonNegativeInteger|))))
 ((*1 *2 *1 *3 *3 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|CartesianTensor| *4 *5 *2)) (|ofType| *4 *3)
       (|ofType| *5 (|NonNegativeInteger|))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|CartesianTensor| *4 *5 *2)) (|ofType| *4 *3)
       (|ofType| *5 (|NonNegativeInteger|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|CartesianTensor| *4 *5 *2)) (|ofType| *4 *3)
       (|ofType| *5 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|CartesianTensor| *3 *4 *2)) (|ofType| *3 (|Integer|))
       (|ofType| *4 (|NonNegativeInteger|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|DataList| (|String|)))
       (|isDomain| *1 (|Database| *4))
       (|ofCategory| *4
                     (|Join| (|OrderedSet|)
                             (CATEGORY |domain|
                              (SIGNATURE |elt| ((|String|) $ *3))
                              (SIGNATURE |display| ((|Void|) $))
                              (SIGNATURE |fullDisplay| ((|Void|) $)))))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|QueryEquation|)) (|isDomain| *1 (|Database| *3))
       (|ofCategory| *3
                     (|Join| (|OrderedSet|)
                             (CATEGORY |domain|
                              (SIGNATURE |elt| ((|String|) $ (|Symbol|)))
                              (SIGNATURE |display| ((|Void|) $))
                              (SIGNATURE |fullDisplay| ((|Void|) $)))))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 "count") (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|DataList| *4)) (|ofCategory| *4 (|OrderedSet|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 "sort") (|isDomain| *1 (|DataList| *3))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 "unique") (|isDomain| *1 (|DataList| *3))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|Eltable| *3 *2)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1 *3 *2)
  (AND (|ofCategory| *1 (|EltableAggregate| *3 *2)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1 *2)
  (AND (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|EuclideanModularRing| *3 *2 *4 *5 *6 *7))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *4 (|AbelianMonoid|)) (|ofType| *5 (|Mapping| *2 *2 *4))
       (|ofType| *6 (|Mapping| (|Union| *4 "failed") *4 *4))
       (|ofType| *7 (|Mapping| (|Union| *2 "failed") *2 *2 *4))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|BasicOperator|)) (|isDomain| *3 (|List| *1))
       (|ofCategory| *1 (|ExpressionSpace|))))
 ((*1 *1 *2 *1 *1 *1 *1 *1 *1 *1 *1 *1)
  (AND (|ofCategory| *1 (|ExpressionSpace|))
       (|isDomain| *2 (|BasicOperator|))))
 ((*1 *1 *2 *1 *1 *1 *1 *1 *1 *1 *1)
  (AND (|ofCategory| *1 (|ExpressionSpace|))
       (|isDomain| *2 (|BasicOperator|))))
 ((*1 *1 *2 *1 *1 *1 *1 *1 *1 *1)
  (AND (|ofCategory| *1 (|ExpressionSpace|))
       (|isDomain| *2 (|BasicOperator|))))
 ((*1 *1 *2 *1 *1 *1 *1 *1 *1)
  (AND (|ofCategory| *1 (|ExpressionSpace|))
       (|isDomain| *2 (|BasicOperator|))))
 ((*1 *1 *2 *1 *1 *1 *1 *1)
  (AND (|ofCategory| *1 (|ExpressionSpace|))
       (|isDomain| *2 (|BasicOperator|))))
 ((*1 *1 *2 *1 *1 *1 *1)
  (AND (|ofCategory| *1 (|ExpressionSpace|))
       (|isDomain| *2 (|BasicOperator|))))
 ((*1 *1 *2 *1 *1 *1)
  (AND (|ofCategory| *1 (|ExpressionSpace|))
       (|isDomain| *2 (|BasicOperator|))))
 ((*1 *1 *2 *1 *1)
  (AND (|ofCategory| *1 (|ExpressionSpace|))
       (|isDomain| *2 (|BasicOperator|))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|ExpressionSpace|))
       (|isDomain| *2 (|BasicOperator|))))
 ((*1 *2 *1 *2 *2)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *2 *3 *4))
       (|ofCategory| *2 (|UniqueFactorizationDomain|))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| *3)))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|ofCategory| *1 (|FramedNonAssociativeAlgebra| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|String|))
       (|isDomain| *1 (|IndexCard|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|Library|))))
 ((*1 *2 *1 *3 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|ThreeDimensionalMatrix| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|OutputForm|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|BasicOperator|))
       (|isDomain| *3 (|List| (|Pattern| *4))) (|isDomain| *1 (|Pattern| *4))
       (|ofCategory| *4 (|SetCategory|))))
 ((*1 *2 *1 *2)
  (AND (|ofCategory| *1 (|PermutationCategory| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|Permutation| *4))
       (|isDomain| *1 (|PermutationGroup| *4))
       (|ofCategory| *4 (|SetCategory|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|DirectProduct| *4 *2))
       (|ofType| *4 (|PositiveInteger|)) (|ofCategory| *2 (|Field|))
       (|isDomain| *1 (|QuadraticForm| *4 *2))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 "value") (|ofCategory| *1 (|RecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1) (AND (|isDomain| *1 (|Reference| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1 *3 *3 *2)
  (AND (|isDomain| *3 (|Integer|))
       (|ofCategory| *1 (|RectangularMatrixCategory| *4 *5 *2 *6 *7))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|DirectProductCategory| *5 *2))
       (|ofCategory| *7 (|DirectProductCategory| *4 *2))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|ofCategory| *1 (|RectangularMatrixCategory| *4 *5 *2 *6 *7))
       (|ofCategory| *6 (|DirectProductCategory| *5 *2))
       (|ofCategory| *7 (|DirectProductCategory| *4 *2))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))))
 ((*1 *2 *1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5
                     (|Join| (|Ring|) (|PatternMatchable| *4) (|Comparable|)
                             (|ConvertibleTo| (|Pattern| *4))))
       (|isDomain| *1 (|RewriteRule| *4 *5 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *5) (|PatternMatchable| *4)
                             (|ConvertibleTo| (|Pattern| *4))))))
 ((*1 *2 *1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5
                     (|Join| (|Ring|) (|PatternMatchable| *4) (|Comparable|)
                             (|ConvertibleTo| (|Pattern| *4))))
       (|isDomain| *1 (|Ruleset| *4 *5 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *5) (|PatternMatchable| *4)
                             (|ConvertibleTo| (|Pattern| *4))))))
 ((*1 *2 *1 *3 *4)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *2 (|Ring|))
       (|isDomain| *1 (|SparseEchelonMatrix| *4 *2))
       (|ofCategory| *4 (|OrderedSet|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *1 (|SequenceCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Integer|)))
       (|ofCategory| *1 (|SExpressionCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|ofCategory| *1 (|SExpressionCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|StringAggregate|)))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|Symbol|))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|Fraction| *1))
       (|ofCategory| *1 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *2 (|Field|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Fraction| *1))
       (|ofCategory| *1 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *3 (|IntegralDomain|))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|UnivariatePowerSeriesCategory| *2 *3))
       (|ofCategory| *3 (|OrderedAbelianMonoid|)) (|ofCategory| *2 (|Ring|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 "last") (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 "rest") (|ofCategory| *1 (|UnaryRecursiveAggregate| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 "first") (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|FreeMagma| *2)) (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FreeMonoid| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|PoincareBirkhoffWittLyndonBasis| *2))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *1)
  (|partial| AND (|ofCategory| *1 (|TriangularSetCategory| *2 *3 *4 *5))
   (|ofCategory| *2 (|IntegralDomain|))
   (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *4 (|OrderedSet|))
   (|ofCategory| *5 (|RecursivePolynomialCategory| *2 *3 *4))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|UnaryRecursiveAggregate| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|DoublyLinkedAggregate| *2))
       (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1)
  (|partial| AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *2))
   (|ofCategory| *3 (|IntegralDomain|))
   (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|))
   (|ofCategory| *2 (|RecursivePolynomialCategory| *3 *4 *5))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|UnaryRecursiveAggregate| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|DoublyLinkedAggregate| *2))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *2 (|SetCategory|)) (|isDomain| *1 (|Product| *3 *2))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|UnaryRecursiveAggregate| *3))
       (|ofCategory| *3 (|Type|)) (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|DoublyLinkedAggregate| *2))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|ExtensibleLinearAggregate| *2))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|ExtensibleLinearAggregate| *2))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1 *2)
  (AND (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1 *2)
  (AND (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1 *2 *2 *1)
  (AND (|isDomain| *2 (|List| (|Segment| (|Integer|))))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))))
 ((*1 *1 *1 *2 *3 *1)
  (AND (|isDomain| *2 (|List| (|Segment| (|Integer|))))
       (|isDomain| *3 (|Segment| (|Integer|)))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))
       (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *4))
       (|ofCategory| *6 (|IndexedAggregate| (|Integer|) *4))))
 ((*1 *1 *1 *2 *3 *1)
  (AND (|isDomain| *3 (|List| (|Segment| (|Integer|))))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))
       (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *4))
       (|ofCategory| *6 (|IndexedAggregate| (|Integer|) *4))
       (|isDomain| *2 (|Segment| (|Integer|)))))
 ((*1 *1 *1 *2 *3 *1)
  (AND (|isDomain| *2 (|Segment| (|Integer|)))
       (|isDomain| *3 (|List| (|Integer|)))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))
       (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *4))
       (|ofCategory| *6 (|IndexedAggregate| (|Integer|) *4))))
 ((*1 *1 *1 *2 *3 *1)
  (AND (|isDomain| *2 (|List| (|Integer|)))
       (|isDomain| *3 (|Segment| (|Integer|)))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))
       (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *4))
       (|ofCategory| *6 (|IndexedAggregate| (|Integer|) *4))))
 ((*1 *1 *1 *2 *2 *1)
  (AND (|isDomain| *2 (|Segment| (|Integer|)))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))))
 ((*1 *1 *1 *2 *2 *1)
  (AND (|isDomain| *2 (|List| (|Integer|)))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))))
 ((*1 *1 *1 *2 *3 *1)
  (AND (|isDomain| *2 (|List| (|Integer|)))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))
       (|ofCategory| *4 (|Type|)) (|ofCategory| *5 (|IndexedAggregate| *3 *4))
       (|ofCategory| *6 (|IndexedAggregate| *3 *4))
       (|isDomain| *3 (|Integer|))))
 ((*1 *1 *1 *2 *3 *1)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))
       (|ofCategory| *4 (|Type|)) (|ofCategory| *5 (|IndexedAggregate| *2 *4))
       (|ofCategory| *6 (|IndexedAggregate| *2 *4))
       (|isDomain| *2 (|Integer|))))
 ((*1 *2 *1 *3 *3 *2)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *2 *4 *5))
       (|ofCategory| *2 (|Type|)) (|ofCategory| *4 (|IndexedAggregate| *3 *2))
       (|ofCategory| *5 (|IndexedAggregate| *3 *2))
       (|isDomain| *3 (|Integer|))))
 ((*1 *1 *1 *2 *3 *1)
  (AND (|isDomain| *2 (|List| (|Segment| (|Integer|))))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))
       (|ofCategory| *4 (|Type|)) (|ofCategory| *5 (|IndexedAggregate| *3 *4))
       (|ofCategory| *6 (|IndexedAggregate| *3 *4))
       (|isDomain| *3 (|Integer|))))
 ((*1 *1 *1 *2 *3 *1)
  (AND (|isDomain| *3 (|List| (|Segment| (|Integer|))))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))
       (|ofCategory| *4 (|Type|)) (|ofCategory| *5 (|IndexedAggregate| *2 *4))
       (|ofCategory| *6 (|IndexedAggregate| *2 *4))
       (|isDomain| *2 (|Integer|))))
 ((*1 *1 *1 *2 *1)
  (AND (|isDomain| *2 "right") (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|BinaryRecursiveAggregate| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *1 *1 *2 *1)
  (AND (|isDomain| *2 "left") (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|BinaryRecursiveAggregate| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *2 *1 *3 *2)
  (AND (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|EltableAggregate| *3 *2)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1 *3 *2)
  (AND (|isDomain| *2 (|Any|)) (|isDomain| *3 (|Symbol|))
       (|isDomain| *1 (|Library|))))
 ((*1 *2 *1 *3 *2)
  (AND (|isDomain| *3 (|UniversalSegment| (|Integer|)))
       (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|LinearAggregate| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1 *3 *3 *3 *2)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|ThreeDimensionalMatrix| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *2 *1 *3 *2)
  (AND (|isDomain| *3 "value") (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|RecursiveAggregate| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1 *2)
  (AND (|isDomain| *1 (|Reference| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1 *3 *4 *5)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|SparseEchelonMatrix| *4 *5))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Ring|))))
 ((*1 *2 *1 *3 *2)
  (AND (|ofCategory| *1 (|TableAggregate| *3 *2)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1 *3 *2)
  (AND (|isDomain| *3 "last") (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *1 *2 *1)
  (AND (|isDomain| *2 "rest") (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|UnaryRecursiveAggregate| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *2 *1 *3 *2)
  (AND (|isDomain| *3 "first") (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1 *2 *1)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Stream| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1 *2)
  (AND (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|UnaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|UnaryRecursiveAggregate| *3))
       (|ofCategory| *3 (|Type|))))) 
(((*1 *2 *1)
  (|partial| AND
   (|ofCategory| *3
                 (|Join| (|Comparable|) (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|)) (|GcdDomain|)))
   (|isDomain| *2 (|OrderedCompletion| *4))
   (|isDomain| *1 (|ExponentialExpansion| *3 *4 *5 *6))
   (|ofCategory| *4
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *3)))
   (|ofType| *5 (|Symbol|)) (|ofType| *6 *4)))
 ((*1 *2 *1)
  (|partial| AND
   (|ofCategory| *3
                 (|Join| (|Comparable|) (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|)) (|GcdDomain|)))
   (|isDomain| *2 (|OrderedCompletion| *4))
   (|isDomain| *1
               (|UnivariatePuiseuxSeriesWithExponentialSingularity| *3 *4 *5
                                                                    *6))
   (|ofCategory| *4
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *3)))
   (|ofType| *5 (|Symbol|)) (|ofType| *6 *4)))) 
(((*1 *2 *1)
  (|partial| AND
   (|ofCategory| *3
                 (|Join| (|Comparable|) (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|)) (|GcdDomain|)))
   (|isDomain| *2
               (|Record|
                (|:| |%term|
                     (|Record|
                      (|:| |%coef| (|UnivariatePuiseuxSeries| *4 *5 *6))
                      (|:| |%expon|
                           (|ExponentialOfUnivariatePuiseuxSeries| *4 *5 *6))
                      (|:| |%expTerms|
                           (|List|
                            (|Record| (|:| |k| (|Fraction| (|Integer|)))
                                      (|:| |c| *4))))))
                (|:| |%type| (|String|))))
   (|isDomain| *1
               (|UnivariatePuiseuxSeriesWithExponentialSingularity| *3 *4 *5
                                                                    *6))
   (|ofCategory| *4
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *3)))
   (|ofType| *5 (|Symbol|)) (|ofType| *6 *4)))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *4 *5))
       (|ofCategory| *5
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *4)))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *2 (|Any|))
   (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *4 *3))
   (|ofCategory| *3
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *4)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Fraction| (|Integer|)))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *5 *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *5)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Equation| *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *5)))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *5 *3))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|Equation| *3)) (|isDomain| *5 (|Fraction| (|Integer|)))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *6)))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *6 *3))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|Mapping| *8 (|Fraction| (|Integer|))))
       (|isDomain| *4 (|Equation| *8))
       (|isDomain| *5 (|UniversalSegment| (|Fraction| (|Integer|))))
       (|isDomain| *6 (|Fraction| (|Integer|)))
       (|ofCategory| *8
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *7)))
       (|ofCategory| *7
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries| *7 *8))))
 ((*1 *2 *3 *4 *5 *6 *7)
  (AND (|isDomain| *4 (|Symbol|)) (|isDomain| *5 (|Equation| *3))
       (|isDomain| *6 (|UniversalSegment| (|Fraction| (|Integer|))))
       (|isDomain| *7 (|Fraction| (|Integer|)))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *8)))
       (|ofCategory| *8
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries| *8 *3))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Fraction| (|Integer|))) (|ofCategory| *4 (|Ring|))
       (|ofCategory| *1 (|UnivariatePuiseuxSeriesConstructorCategory| *4 *3))
       (|ofCategory| *3 (|UnivariateLaurentSeriesCategory| *4))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *3 (|Ring|))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *2 (|Fraction| (|Integer|)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *2))
       (|ofCategory| *3 (|Ring|))
       (|ofCategory| *2 (|UnivariateLaurentSeriesCategory| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *4 *5))
       (|ofCategory| *5
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *4)))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *2 (|Any|))
   (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *4 *3))
   (|ofCategory| *3
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *4)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Integer|))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|Comparable|) (|RetractableTo| *4)
                             (|LinearlyExplicitOver| *4)))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *5 *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *5)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Equation| *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *5)))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *5 *3))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|Equation| *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *6)))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|Comparable|) (|RetractableTo| *5)
                             (|LinearlyExplicitOver| *5)))
       (|isDomain| *5 (|Integer|)) (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *6 *3))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *7 (|Integer|)))
       (|isDomain| *4 (|Equation| *7))
       (|isDomain| *5 (|UniversalSegment| (|Integer|)))
       (|ofCategory| *7
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *6)))
       (|ofCategory| *6
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries| *6 *7))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *4 (|Symbol|)) (|isDomain| *5 (|Equation| *3))
       (|isDomain| *6 (|UniversalSegment| (|Integer|)))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *7)))
       (|ofCategory| *7
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries| *7 *3))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *3 (|Stream| *4))
       (|ofCategory| *4 (|Ring|))
       (|ofCategory| *1 (|UnivariateLaurentSeriesCategory| *4))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *4 (|Ring|))
       (|ofCategory| *1 (|UnivariateLaurentSeriesConstructorCategory| *4 *3))
       (|ofCategory| *3 (|UnivariateTaylorSeriesCategory| *4))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *2))
       (|ofCategory| *3 (|Ring|))
       (|ofCategory| *2 (|UnivariateLaurentSeriesCategory| *3))))) 
(((*1 *2 *1)
  (|partial| AND
   (|ofCategory| *1 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *2))
   (|ofCategory| *3 (|Ring|))
   (|ofCategory| *2 (|UnivariateLaurentSeriesCategory| *3))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|ofCategory| *1 (|UnivariatePowerSeriesCategory| *3 *4))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoid|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|ofCategory| *1 (|UnivariatePuiseuxSeriesCategory| *3))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |flg| (|Union| "nil" "sqfr" "irred" "prime"))
                         (|:| |fctr| *4) (|:| |xpnt| (|Integer|))))
   (|ofCategory| *4
                 (|Join| (|UnivariatePolynomialCategory| *3) (|IntegralDomain|)
                         (CATEGORY |domain| (SIGNATURE |gcd| ($ $ $)))))
   (|ofCategory| *3 (|IntegralDomain|))
   (|isDomain| *1 (|UnivariatePolynomialSquareFree| *3 *4))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|PolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|GcdDomain|))))
 ((*1 *2 *3 *1)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|List| (|Record| (|:| |val| *3) (|:| |tower| *1))))
       (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *3))))
 ((*1 *1 *1) (|ofCategory| *1 (|UniqueFactorizationDomain|)))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *1 (|UnivariatePolynomialSquareFree| *3 *2))
       (|ofCategory| *2
                     (|Join| (|UnivariatePolynomialCategory| *3)
                             (|IntegralDomain|)
                             (CATEGORY |domain| (SIGNATURE |gcd| ($ $ $)))))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FreeAbelianMonoidCategory| *3 *4))
       (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *4 (|CancellationAbelianMonoid|))
       (|isDomain| *2 (|List| (|Record| (|:| |gen| *3) (|:| |exp| *4))))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|MonoidRingCategory| *3 *4))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|Monoid|))
       (|isDomain| *2 (|List| (|Record| (|:| |k| *4) (|:| |c| *3))))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|UnivariatePowerSeriesCategory| *3 *4))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoid|))
       (|isDomain| *2 (|Stream| (|Record| (|:| |k| *4) (|:| |c| *3))))))) 
(((*1 *2 *2 *3 *2)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *1 (|DisplayPackage|))))
 ((*1 *2 *2 *3 *4)
  (AND (|isDomain| *2 (|List| (|String|))) (|isDomain| *3 (|Integer|))
       (|isDomain| *4 (|String|)) (|isDomain| *1 (|DisplayPackage|))))
 ((*1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|OutputForm|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|UnivariatePowerSeriesCategory| *2 *3))
       (|ofCategory| *3 (|OrderedAbelianMonoid|)) (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|DifferentialPolynomialCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|DifferentialVariableCategory| *4))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|DifferentialPolynomialCategory| *4 *3 *5 *6))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *5 (|DifferentialVariableCategory| *3))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|DifferentialVariableCategory| *3))
       (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FacetCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteFieldCategory|))
       (|isDomain| *2 (|PositiveInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteGroup|)) (|isDomain| *2 (|Integer|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|FiniteDivisor| *4 *5 *6 *7))
       (|ofCategory| *4 (|Join| (|Finite|) (|Field|)))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| (|Fraction| *5)))
       (|ofCategory| *7 (|FunctionFieldCategory| *4 *5 *6))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FindOrderFinite| *4 *5 *6 *7))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FieldOfPrimeCharacteristic|))
       (|isDomain| *2 (|OnePointCompletion| (|PositiveInteger|)))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FloatingPointSystem|)) (|isDomain| *2 (|Integer|))))
 ((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|InnerTaylorSeries| *3)) (|ofCategory| *3 (|Ring|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|InnerTaylorSeries| *3)) (|ofCategory| *3 (|Ring|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|JetBundleCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|JetDifferentialEquation| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|LaurentPolynomial| *3 *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))))
 ((*1 *2 *1 *3 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|MultivariateTaylorSeriesCategory| *4 *3))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|MultivariateTaylorSeriesCategory| *4 *3))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|PAdicIntegerCategory| *3))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|Permutation| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|PermutationGroup| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|FiniteDivisor| *5 *6 *7 *8))
   (|ofCategory| *5 (|FunctionSpace| *4))
   (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
   (|ofCategory| *7 (|UnivariatePolynomialCategory| (|Fraction| *6)))
   (|ofCategory| *8 (|FunctionFieldCategory| *5 *6 *7))
   (|ofCategory| *4
                 (|Join| (|Comparable|) (|IntegralDomain|)
                         (|RetractableTo| (|Integer|))))
   (|isDomain| *2 (|NonNegativeInteger|))
   (|isDomain| *1 (|PointsOfFiniteOrder| *4 *5 *6 *7 *8))))
 ((*1 *2 *3)
  (|partial| AND
   (|isDomain| *3 (|FiniteDivisor| (|Fraction| (|Integer|)) *4 *5 *6))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| (|Integer|))))
   (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
   (|ofCategory| *6 (|FunctionFieldCategory| (|Fraction| (|Integer|)) *4 *5))
   (|isDomain| *2 (|NonNegativeInteger|))
   (|isDomain| *1 (|PointsOfFiniteOrderRational| *4 *5 *6))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|FiniteDivisor| *6 *7 *4 *8))
       (|isDomain| *5 (|Mapping| *9 *6)) (|ofCategory| *6 (|Field|))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| *6))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| *7)))
       (|ofCategory| *8 (|FunctionFieldCategory| *6 *7 *4))
       (|ofCategory| *9 (|Join| (|Finite|) (|Field|)))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|ReducedDivisor| *6 *7 *4 *8 *9))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1 *2)
  (AND (|ofCategory| *1 (|UnivariatePowerSeriesCategory| *3 *2))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *2 (|OrderedAbelianMonoid|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|UnivariatePowerSeriesCategory| *3 *2))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *2 (|OrderedAbelianMonoid|))))) 
(((*1 *1 *1) (|ofCategory| *1 (|RealNumberSystem|)))
 ((*1 *1 *1 *2 *2)
  (AND (|ofCategory| *1 (|UnivariatePowerSeriesCategory| *3 *2))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *2 (|OrderedAbelianMonoid|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|UnivariatePowerSeriesCategory| *3 *2))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *2 (|OrderedAbelianMonoid|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|BalancedPAdicRational| *4)) (|ofType| *4 *3)))
 ((*1 *2 *1 *2)
  (AND (|ofCategory| *1 (|PAdicIntegerCategory| *3))
       (|isDomain| *2 (|Integer|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|PAdicRational| *4)) (|ofType| *4 *3)))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofType| *4 *3)
       (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|PAdicRationalConstructor| *4 *5))
       (|ofCategory| *5 (|PAdicIntegerCategory| *4))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|RealClosedField|))
       (|isDomain| *2 (|Fraction| (|Integer|)))))
 ((*1 *2 *3 *1 *2)
  (AND (|ofCategory| *1 (|RealRootCharacterizationCategory| *2 *3))
       (|ofCategory| *2 (|Join| (|OrderedRing|) (|Field|)))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|UnivariatePowerSeriesCategory| *2 *3))
       (|ofCategory| *3 (|OrderedAbelianMonoid|))
       (|has| *2 (SIGNATURE ^ (*2 *2 *3)))
       (|has| *2 (SIGNATURE |coerce| (*2 (|Symbol|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|ContinuedFraction| *3))
       (|ofCategory| *3 (|EuclideanDomain|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|LazyStreamAggregate| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|MultivariateTaylorSeriesCategory| *3 *4))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedSet|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|PAdicIntegerCategory| *3))
       (|isDomain| *2 (|Integer|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *1 (|PointCategory| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|List| *1)) (|isDomain| *3 (|List| *7))
       (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *7))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))))
 ((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *7))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *3))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))))
 ((*1 *2 *3 *1)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *3))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *2))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *2 (|RecursivePolynomialCategory| *3 *4 *5))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|UnivariatePowerSeriesCategory| *3 *2))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *2 (|OrderedAbelianMonoid|))))) 
(((*1 *2 *2 *3 *3)
  (AND (|isDomain| *3 (|Fraction| *5))
       (|ofCategory| *4 (|UniqueFactorizationDomain|))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *1 (|ChangeOfVariable| *4 *5 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|SymmetricPolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|CycleIndicators|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Distribution| *5))
       (|ofCategory| *5 (|CommutativeRing|))
       (|ofCategory| *2 (|Join| (|CommutativeRing|) (|Module| *5)))
       (|isDomain| *1 (|DistributionPolynomialPackage| *5 *2 *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *2))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Equation| *3)))
       (|ofCategory| *3 (|Evalable| *3)) (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *3 (|Type|)) (|isDomain| *1 (|Equation| *3))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *2 (|Evalable| *2)) (|ofCategory| *2 (|SetCategory|))
       (|ofCategory| *2 (|Type|)) (|isDomain| *1 (|Equation| *2))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|BasicOperator|)) (|isDomain| *3 (|Mapping| *1 *1))
       (|ofCategory| *1 (|ExpressionSpace|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|BasicOperator|))
       (|isDomain| *3 (|Mapping| *1 (|List| *1)))
       (|ofCategory| *1 (|ExpressionSpace|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|BasicOperator|)))
       (|isDomain| *3 (|List| (|Mapping| *1 (|List| *1))))
       (|ofCategory| *1 (|ExpressionSpace|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|BasicOperator|)))
       (|isDomain| *3 (|List| (|Mapping| *1 *1)))
       (|ofCategory| *1 (|ExpressionSpace|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|Mapping| *1 *1))
       (|ofCategory| *1 (|ExpressionSpace|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|Mapping| *1 (|List| *1)))
       (|ofCategory| *1 (|ExpressionSpace|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|Symbol|)))
       (|isDomain| *3 (|List| (|Mapping| *1 (|List| *1))))
       (|ofCategory| *1 (|ExpressionSpace|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|Symbol|)))
       (|isDomain| *3 (|List| (|Mapping| *1 *1)))
       (|ofCategory| *1 (|ExpressionSpace|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Equation| *3)))
       (|ofCategory| *1 (|Evalable| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Equation| *3)) (|ofCategory| *1 (|Evalable| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *2 (|Integer|)))
       (|isDomain| *4 (|SymmetricPolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|EvaluateCycleIndicators| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4)) (|isDomain| *3 (|List| *1))
       (|ofCategory| *1 (|FreeLieAlgebra| *4 *5))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|CommutativeRing|))))
 ((*1 *1 *1 *2 *1)
  (AND (|ofCategory| *1 (|FreeLieAlgebra| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|CommutativeRing|))))
 ((*1 *1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *4 (|Mapping| *1 *1)) (|ofCategory| *1 (|FunctionSpace| *5))
       (|ofCategory| *5 (|Comparable|)) (|ofCategory| *5 (|Ring|))))
 ((*1 *1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *4 (|Mapping| *1 (|List| *1)))
       (|ofCategory| *1 (|FunctionSpace| *5)) (|ofCategory| *5 (|Comparable|))
       (|ofCategory| *5 (|Ring|))))
 ((*1 *1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|List| (|Symbol|)))
       (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|isDomain| *4 (|List| (|Mapping| *1 (|List| *1))))
       (|ofCategory| *1 (|FunctionSpace| *5)) (|ofCategory| *5 (|Comparable|))
       (|ofCategory| *5 (|Ring|))))
 ((*1 *1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|List| (|Symbol|)))
       (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|isDomain| *4 (|List| (|Mapping| *1 *1)))
       (|ofCategory| *1 (|FunctionSpace| *5)) (|ofCategory| *5 (|Comparable|))
       (|ofCategory| *5 (|Ring|))))
 ((*1 *1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|List| (|BasicOperator|))) (|isDomain| *3 (|List| *1))
       (|isDomain| *4 (|Symbol|)) (|ofCategory| *1 (|FunctionSpace| *5))
       (|ofCategory| *5 (|Comparable|))
       (|ofCategory| *5 (|ConvertibleTo| (|InputForm|)))))
 ((*1 *1 *1 *2 *1 *3)
  (AND (|isDomain| *2 (|BasicOperator|)) (|isDomain| *3 (|Symbol|))
       (|ofCategory| *1 (|FunctionSpace| *4)) (|ofCategory| *4 (|Comparable|))
       (|ofCategory| *4 (|ConvertibleTo| (|InputForm|)))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|FunctionSpace| *2)) (|ofCategory| *2 (|Comparable|))
       (|ofCategory| *2 (|ConvertibleTo| (|InputForm|)))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Symbol|)))
       (|ofCategory| *1 (|FunctionSpace| *3)) (|ofCategory| *3 (|Comparable|))
       (|ofCategory| *3 (|ConvertibleTo| (|InputForm|)))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|ofCategory| *1 (|FunctionSpace| *3))
       (|ofCategory| *3 (|Comparable|))
       (|ofCategory| *3 (|ConvertibleTo| (|InputForm|)))))
 ((*1 *1 *1 *2 *3)
  (AND (|ofCategory| *1 (|InnerEvalable| *2 *3))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|Type|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4)) (|isDomain| *3 (|List| *5))
       (|ofCategory| *1 (|InnerEvalable| *4 *5))
       (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *5 (|Type|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|JetVectorField| *4 *2))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|ofCategory| *2 (|JetBundleFunctionCategory| *4))
       (|isDomain| *1 (|JetDifferential| *4 *2))))
 ((*1 *1 *1)
  (AND (|ofCategory| *2 (|JetBundleCategory|))
       (|isDomain| *1 (|JetLazyFunction| *2 *3))
       (|ofCategory| *3 (|JetBundleFunctionCategory| *2))))
 ((*1 *2 *1 *2)
  (AND (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|JetVectorField| *3 *2))
       (|ofCategory| *2 (|JetBundleFunctionCategory| *3))))
 ((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|OnePointCompletion| *3)) (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|MoebiusTransform| *3))))
 ((*1 *2 *1 *2)
  (AND (|isDomain| *1 (|MoebiusTransform| *2)) (|ofCategory| *2 (|Field|))))
 ((*1 *2 *1 *2)
  (AND (|ofCategory| *1 (|PermutationCategory| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *2 *2 *3 *2)
  (AND (|isDomain| *2 (|Fraction| (|Polynomial| *4)))
       (|isDomain| *3 (|Symbol|)) (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *1 (|RationalFunction| *4))))
 ((*1 *2 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Symbol|)))
       (|isDomain| *4 (|List| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *2 (|Fraction| (|Polynomial| *5)))
       (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *1 (|RationalFunction| *5))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Equation| (|Fraction| (|Polynomial| *4))))
       (|isDomain| *2 (|Fraction| (|Polynomial| *4)))
       (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *1 (|RationalFunction| *4))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| (|Equation| (|Fraction| (|Polynomial| *4)))))
       (|isDomain| *2 (|Fraction| (|Polynomial| *4)))
       (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *1 (|RationalFunction| *4))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Mapping| *2 *6 *7))
       (|ofCategory| *1 (|TensorProductProperty| *5 *6 *7 *3 *2))
       (|ofCategory| *5 (|CommutativeRing|)) (|ofCategory| *6 (|Module| *5))
       (|ofCategory| *7 (|Module| *5))
       (|ofCategory| *3 (|TensorProductCategory| *5 *6 *7))
       (|ofCategory| *2 (|Module| *5))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|UnivariatePowerSeriesCategory| *3 *4))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoid|))
       (|has| *3 (SIGNATURE ^ (*3 *3 *4))) (|isDomain| *2 (|Stream| *3))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|isDomain| *2 (|Vector| *4))))) 
(((*1 *2 *3 *2 *4)
  (AND
   (|isDomain| *2
               (|Fraction| (|SparseUnivariatePolynomial| (|Expression| *5))))
   (|isDomain| *3 (|Vector| (|Expression| *5))) (|isDomain| *4 (|Integer|))
   (|ofCategory| *5 (|Join| (|Comparable|) (|IntegralDomain|)))
   (|isDomain| *1 (|TransSolvePackageService| *5))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Vector| *3))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *1 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *3))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *1 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *1 *1 *2)
  (|partial| AND (|isDomain| *2 (|NonNegativeInteger|))
   (|ofCategory| *1 (|UnivariatePolynomialCategory| *3))
   (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|BasicType|))
       (|isDomain| *1 (|ListPackage| *3))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))))) 
(((*1 *2 *1 *1 *3)
  (AND (|ofCategory| *4 (|Ring|))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *2 (|Record| (|:| |quotient| *1) (|:| |remainder| *1)))
       (|ofCategory| *1 (|PolynomialCategory| *4 *5 *3))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *3 (|Ring|))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|isDomain| *2 (|Record| (|:| |quotient| *1) (|:| |remainder| *1)))
       (|ofCategory| *1 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *4 (|Ring|))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|isDomain| *2 (|Record| (|:| |quotient| *1) (|:| |remainder| *1)))
       (|ofCategory| *1 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *2)
  (AND (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|ComplexCategory&| *3 *2))
       (|ofCategory| *3 (|ComplexCategory| *2))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| *1))
       (|ofCategory| *1 (|FiniteRankAlgebra| *2 *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|FramedAlgebra&| *3 *2 *4))
       (|ofCategory| *3 (|FramedAlgebra| *2 *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FramedAlgebra| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2)
  (AND (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))
       (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|NumberFieldIntegralBasis| *3 *4))
       (|ofCategory| *4 (|FramedAlgebra| *2 *3))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|PolynomialCategory| *3 *4 *2))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|CommutativeRing|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *2 (|IntegralDomain|))
       (|isDomain| *1 (|PseudoRemainderSequence| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *1 *1 *1 *2)
  (AND (|ofCategory| *1 (|PolynomialCategory| *3 *4 *2))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|CommutativeRing|))))
 ((*1 *2 *3 *3 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *3 (|U32Vector|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))
 ((*1 *2 *3 *3)
  (AND (|ofCategory| *2 (|IntegralDomain|))
       (|isDomain| *1 (|PseudoRemainderSequence| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|IntegralDomain|))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *1 (|PseudoRemainderSequence| *3 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|IntegralDomain|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|ThreeSpaceCategory| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *2 *2 *1)
  (|partial| AND (|isDomain| *2 (|Fraction| *1))
   (|ofCategory| *1 (|UnivariatePolynomialCategory| *3))
   (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
   (|ofCategory| *3 (|IntegralDomain|))))
 ((*1 *1 *1 *1)
  (|partial| AND (|ofCategory| *1 (|UnivariatePolynomialCategory| *2))
   (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
   (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *2 (|Record| (|:| |quotient| *1) (|:| |remainder| *1)))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|isDomain| *2
                   (|Record| (|:| |coef| *3) (|:| |quotient| *1)
                             (|:| |remainder| *1)))
       (|ofCategory| *1 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Fraction| *5))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *4 (|Field|)) (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2
                   (|Record| (|:| |polyPart| (|LaurentPolynomial| *4 *5))
                             (|:| |fracPart| (|Fraction| *5))))
       (|isDomain| *1 (|LaurentPolynomial| *4 *5))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|SubSpace| *3 *4)))
       (|isDomain| *1 (|SubSpace| *3 *4)) (|ofType| *3 (|PositiveInteger|))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|isDomain| *2 (|Record| (|:| |primePart| *1) (|:| |commonPart| *1)))
       (|ofCategory| *1 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *2 *2 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|UnivariatePolynomialMultiplicationPackage| *4 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|UnivariatePolynomialMultiplicationPackage| *3 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|UnivariatePolynomialMultiplicationPackage| *3 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *3 *3)
  (|partial| AND (|ofCategory| *4 (|IntegralDomain|))
   (|isDomain| *2 (|Record| (|:| |quotient| *3) (|:| |remainder| *3)))
   (|isDomain| *1 (|UnivariatePolynomialDivisionPackage| *4 *3))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|Field|)) (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|UnivariatePolynomialDecompositionPackage| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3)
  (|partial| AND (|ofCategory| *4 (|Field|))
   (|ofCategory| *4 (|IntegralDomain|))
   (|isDomain| *2 (|Record| (|:| |left| *3) (|:| |right| *3)))
   (|isDomain| *1 (|UnivariatePolynomialDecompositionPackage| *4 *3))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|UnivariatePolynomialDecompositionPackage| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3)
  (|partial| AND (|ofCategory| *4 (|IntegralDomain|))
   (|isDomain| *2 (|Record| (|:| |left| *3) (|:| |right| *3)))
   (|isDomain| *1 (|UnivariatePolynomialDecompositionPackage| *4 *3))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *2 *2)
  (|partial| AND (|ofCategory| *3 (|IntegralDomain|))
   (|isDomain| *1 (|UnivariatePolynomialDecompositionPackage| *3 *2))
   (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|NonNegativeInteger|))
   (|ofCategory| *4 (|IntegralDomain|))
   (|isDomain| *1 (|UnivariatePolynomialDecompositionPackage| *4 *2))
   (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *2 *3)
  (|partial| AND (|isDomain| *3 (|NonNegativeInteger|))
   (|ofCategory| *4 (|IntegralDomain|))
   (|isDomain| *1 (|UnivariatePolynomialDecompositionPackage| *4 *2))
   (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|QuotientFieldCategory| *4))
       (|isDomain| *2 (|Record| (|:| |num| *3) (|:| |den| *4)))
       (|isDomain| *1 (|CommonDenominator| *4 *5 *3))
       (|ofCategory| *3 (|FiniteLinearAggregate| *5))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|QuotientFieldCategory| *4))
       (|isDomain| *2 (|Record| (|:| |num| *6) (|:| |den| *4)))
       (|isDomain| *1 (|InnerCommonDenominator| *4 *5 *6 *3))
       (|ofCategory| *6 (|Join| (|LinearAggregate| *4) (|finiteAggregate|)))
       (|ofCategory| *3 (|Join| (|LinearAggregate| *5) (|finiteAggregate|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| *5))
       (|ofCategory| *5 (|QuotientFieldCategory| *4))
       (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|Record| (|:| |num| (|Matrix| *4)) (|:| |den| *4)))
       (|isDomain| *1 (|MatrixCommonDenominator| *4 *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| (|Fraction| *6)))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *5
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Fraction| (|Integer|)))))
       (|isDomain| *2
                   (|Record| (|:| |eq| *7)
                             (|:| |rh| (|List| (|Fraction| *6)))))
       (|isDomain| *1 (|PrimitiveRatDE| *5 *6 *7 *3))
       (|ofCategory| *7 (|LinearOrdinaryDifferentialOperatorCategory| *6))
       (|ofCategory| *3
                     (|LinearOrdinaryDifferentialOperatorCategory|
                      (|Fraction| *6)))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|QuotientFieldCategory| *4))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *2 (|Record| (|:| |num| *3) (|:| |den| *4)))
       (|isDomain| *1 (|PolynomialCommonDenominator| *4 *5 *6 *7 *3))
       (|ofCategory| *3 (|PolynomialCategory| *5 *6 *7))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|QuotientFieldCategory| *4))
       (|isDomain| *2 (|Record| (|:| |num| *3) (|:| |den| *4)))
       (|isDomain| *1 (|UnivariatePolynomialCommonDenominator| *4 *5 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|QuotientFieldCategory| *3))
       (|isDomain| *1 (|CommonDenominator| *3 *4 *2))
       (|ofCategory| *2 (|FiniteLinearAggregate| *4))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|QuotientFieldCategory| *4))
       (|ofCategory| *2 (|Join| (|LinearAggregate| *4) (|finiteAggregate|)))
       (|isDomain| *1 (|InnerCommonDenominator| *4 *5 *2 *3))
       (|ofCategory| *3 (|Join| (|LinearAggregate| *5) (|finiteAggregate|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| *5))
       (|ofCategory| *5 (|QuotientFieldCategory| *4))
       (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|Matrix| *4))
       (|isDomain| *1 (|MatrixCommonDenominator| *4 *5))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|QuotientFieldCategory| *3))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialCommonDenominator| *3 *4 *5 *6 *2))
       (|ofCategory| *2 (|PolynomialCategory| *4 *5 *6))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|QuotientFieldCategory| *3))
       (|isDomain| *1 (|UnivariatePolynomialCommonDenominator| *3 *4 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|QuotientFieldCategory| *2))
       (|ofCategory| *2 (|IntegralDomain|))
       (|isDomain| *1 (|CommonDenominator| *2 *4 *3))
       (|ofCategory| *3 (|FiniteLinearAggregate| *4))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|QuotientFieldCategory| *2))
       (|ofCategory| *2 (|IntegralDomain|))
       (|isDomain| *1 (|InnerCommonDenominator| *2 *4 *5 *3))
       (|ofCategory| *5 (|Join| (|LinearAggregate| *2) (|finiteAggregate|)))
       (|ofCategory| *3 (|Join| (|LinearAggregate| *4) (|finiteAggregate|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| *4))
       (|ofCategory| *4 (|QuotientFieldCategory| *2))
       (|ofCategory| *2 (|IntegralDomain|))
       (|isDomain| *1 (|MatrixCommonDenominator| *2 *4))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|QuotientFieldCategory| *2))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|ofCategory| *2 (|IntegralDomain|))
       (|isDomain| *1 (|PolynomialCommonDenominator| *2 *4 *5 *6 *3))
       (|ofCategory| *3 (|PolynomialCategory| *4 *5 *6))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|QuotientFieldCategory| *2))
       (|ofCategory| *2 (|IntegralDomain|))
       (|isDomain| *1 (|UnivariatePolynomialCommonDenominator| *2 *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *2 *2)
  (AND (|ofCategory| *1 (|SegmentCategory| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2)
  (AND (|isDomain| *1 (|UniversalSegment| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Segment| *3)) (|isDomain| *1 (|SegmentBinding| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *1 *2 *2)
  (AND (|ofCategory| *1 (|SegmentCategory| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2)
  (AND (|isDomain| *1 (|UniversalSegment| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|UniversalSegment| *3))
       (|ofCategory| *3 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|UnivariateLaurentSeriesConstructorCategory| *3 *2))
       (|ofCategory| *3 (|Ring|))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|BalancedPAdicRational| *3))
       (|ofType| *3 *2)))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|BalancedPAdicRational| *2)) (|ofType| *2 (|Integer|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|PAdicRational| *3))
       (|ofType| *3 *2)))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|PAdicRational| *2)) (|ofType| *2 (|Integer|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Integer|)) (|ofType| *3 *2)
       (|isDomain| *1 (|PAdicRationalConstructor| *3 *4))
       (|ofCategory| *4 (|PAdicIntegerCategory| *3))))
 ((*1 *1 *1)
  (AND (|ofType| *2 (|Integer|))
       (|isDomain| *1 (|PAdicRationalConstructor| *2 *3))
       (|ofCategory| *3 (|PAdicIntegerCategory| *2))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Integer|))
       (|ofCategory| *1 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))
       (|ofCategory| *3 (|Ring|))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|UnivariateLaurentSeriesConstructorCategory| *2 *3))
       (|ofCategory| *2 (|Ring|))
       (|ofCategory| *3 (|UnivariateTaylorSeriesCategory| *2))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *4 *5))
       (|ofCategory| *5
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *4)))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *2 (|Any|))
   (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *4 *3))
   (|ofCategory| *3
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *4)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *5 *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *5)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Equation| *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *5)))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *5 *3))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|Equation| *3)) (|isDomain| *5 (|NonNegativeInteger|))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *6)))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|ExpressionToUnivariatePowerSeries| *6 *3))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 (|Integer|)))
       (|isDomain| *4 (|Equation| *6))
       (|ofCategory| *6
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *5)))
       (|ofCategory| *5
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries| *5 *6))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|Symbol|)) (|isDomain| *5 (|Equation| *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *6)))
       (|ofCategory| *6
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries| *6 *3))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *7 (|Integer|)))
       (|isDomain| *4 (|Equation| *7))
       (|isDomain| *5 (|UniversalSegment| (|NonNegativeInteger|)))
       (|ofCategory| *7
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *6)))
       (|ofCategory| *6
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries| *6 *7))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *4 (|Symbol|)) (|isDomain| *5 (|Equation| *3))
       (|isDomain| *6 (|UniversalSegment| (|NonNegativeInteger|)))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *7)))
       (|ofCategory| *7
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|GenerateUnivariatePowerSeries| *7 *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|UnivariateLaurentSeriesConstructorCategory| *3 *2))
       (|ofCategory| *3 (|Ring|))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))))) 
(((*1 *2 *1)
  (|partial| AND
   (|ofCategory| *1 (|UnivariateLaurentSeriesConstructorCategory| *3 *2))
   (|ofCategory| *3 (|Ring|))
   (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|ofCategory| *1 (|UnivariateLaurentSeriesCategory| *4))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|Fraction| (|Polynomial| *4)))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|ofCategory| *1 (|UnivariateLaurentSeriesCategory| *4))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|Fraction| (|Polynomial| *4)))))) 
(((*1 *2 *2 *3 *3)
  (AND (|isDomain| *2 (|Matrix| (|Integer|)))
       (|isDomain| *3 (|Vector| (|Integer|)))
       (|isDomain| *1 (|UnitGaussianElimination|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Matrix| (|Integer|)))
       (|isDomain| *1 (|UnitGaussianElimination|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Matrix| (|Integer|)))
       (|isDomain| *1 (|UnitGaussianElimination|))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|UnivariateFormalPowerSeries| *3))
       (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|UnivariateFormalPowerSeriesFunctions| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Complex| (|Integer|))) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|GaussianFactorizationPackage|))))
 ((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|PolynomialIdeal| (|Fraction| (|Integer|))
                                  (|DirectProduct| (|#| *4)
                                                   (|NonNegativeInteger|))
                                  (|OrderedVariableList| *4)
                                  (|DistributedMultivariatePolynomial| *4
                                                                       (|Fraction|
                                                                        (|Integer|)))))
   (|ofType| *4 (|List| (|Symbol|))) (|isDomain| *2 (|Boolean|))
   (|isDomain| *1 (|IdealDecompositionPackage| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|IntegerPrimesPackage| *3))
       (|ofCategory| *3 (|IntegerNumberSystem|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|UniqueFactorizationDomain|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| (|AlgebraicNumber|)))
       (|isDomain| *2 (|Factored| *3)) (|isDomain| *1 (|AlgFactor| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|AlgebraicNumber|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|Factored| *3)) (|isDomain| *1 (|AlgFactor| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|AlgebraicNumber|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| (|AlgebraicNumber|)))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|AlgebraicMultFact| *5 *6 *3))
       (|ofCategory| *3 (|PolynomialCategory| (|AlgebraicNumber|) *6 *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *7))
       (|isDomain| *4 (|List| (|AlgebraicNumber|)))
       (|ofCategory| *7 (|PolynomialCategory| (|AlgebraicNumber|) *6 *5))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Factored| (|SparseUnivariatePolynomial| *7)))
       (|isDomain| *1 (|AlgebraicMultFact| *5 *6 *7))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *5 (|Boolean|))
       (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))
       (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|ComplexRootFindingPackage| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Complex| *4)))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))
       (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|ComplexRootFindingPackage| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Complex| *4)))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))
       (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|ComplexRootFindingPackage| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Complex| *4)))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|FiniteFieldCategory|))
       (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|DistinctDegreeFactorize| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *6))
       (|isDomain| *4 (|List| *6)) (|ofCategory| *6 (|FunctionSpace| *5))
       (|ofCategory| *5 (|Join| (|GcdDomain|) (|Comparable|)))
       (|isDomain| *2 (|Factored| (|SparseUnivariatePolynomial| *6)))
       (|isDomain| *1 (|ExpressionFactorPolynomial| *5 *6))))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| (|NonNegativeInteger|)))
       (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|List| (|NonNegativeInteger|)))
       (|isDomain| *5 (|NonNegativeInteger|)) (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3 *4 *4)
  (AND (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Complex| (|Integer|)))
       (|isDomain| *2 (|Factored| (|Complex| (|Integer|))))
       (|isDomain| *1 (|GaussianFactorizationPackage|))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|OrderedSet|)
                         (CATEGORY |domain|
                          (SIGNATURE |convert| ((|Symbol|) $))
                          (SIGNATURE |variable|
                           ((|Union| $ "failed") (|Symbol|))))))
   (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *7 (|IntegralDomain|)) (|isDomain| *2 (|Factored| *3))
   (|isDomain| *1 (|GeneralizedMultivariateFactorize| *4 *5 *6 *7 *3))
   (|ofCategory| *6 (|IntegralDomain|))
   (|ofCategory| *3 (|PolynomialCategory| *7 *5 *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Mapping| (|Factored| *6) *6))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *5 (|Field|))
       (|ofCategory| *7
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|MonogenicAlgebra| *5 *6)))
       (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|InnerAlgFactor| *5 *6 *7 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *7))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|ILogic|))) (|isDomain| *1 (|ILogic|))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *4
               (|Mapping| (|Factored| (|SparseUnivariatePolynomial| *7))
                          (|SparseUnivariatePolynomial| *7)))
   (|ofCategory| *7 (|Join| (|EuclideanDomain|) (|CharacteristicZero|)))
   (|ofCategory| *5 (|OrderedSet|))
   (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
   (|isDomain| *2 (|Factored| *3))
   (|isDomain| *1 (|InnerMultFact| *5 *6 *7 *3))
   (|ofCategory| *3 (|PolynomialCategory| *7 *6 *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *8))
       (|isDomain| *4
                   (|Mapping| (|Factored| (|SparseUnivariatePolynomial| *7))
                              (|SparseUnivariatePolynomial| *7)))
       (|ofCategory| *7 (|Join| (|EuclideanDomain|) (|CharacteristicZero|)))
       (|ofCategory| *8 (|PolynomialCategory| *7 *6 *5))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Factored| (|SparseUnivariatePolynomial| *8)))
       (|isDomain| *1 (|InnerMultFact| *5 *6 *7 *8))))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|IntegerFactorizationPackage| *3))
       (|ofCategory| *3 (|IntegerNumberSystem|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|LatticeJoinOfMeets|)))
       (|isDomain| *1 (|LatticeJoinOfMeets|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|LatticeMeetOfJoins|)))
       (|isDomain| *1 (|LatticeMeetOfJoins|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|LinearOrdinaryDifferentialOperator1| (|Fraction| *6)))
       (|isDomain| *4 (|Mapping| (|List| *5) *6))
       (|ofCategory| *5
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|RetractableTo| (|Fraction| (|Integer|)))))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|isDomain| *2
                   (|List|
                    (|LinearOrdinaryDifferentialOperator1| (|Fraction| *6))))
       (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer| *5 *6))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|LinearOrdinaryDifferentialOperator1| (|Fraction| *5)))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *4 (|AlgebraicallyClosedField|))
       (|ofCategory| *4
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|RetractableTo| (|Fraction| (|Integer|)))))
       (|isDomain| *2
                   (|List|
                    (|LinearOrdinaryDifferentialOperator1| (|Fraction| *5))))
       (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer| *4 *5))))
 ((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|LinearOrdinaryDifferentialOperator1|
                (|Fraction|
                 (|UnivariatePolynomial| *6 (|Expression| (|Integer|))))))
   (|isDomain| *4
               (|Mapping|
                (|Factored|
                 (|SparseUnivariatePolynomial| (|Expression| (|Integer|))))
                (|SparseUnivariatePolynomial| (|Expression| (|Integer|)))
                (|List| (|Expression| (|Integer|)))))
   (|isDomain| *5 (|List| (|Expression| (|Integer|)))) (|ofType| *6 (|Symbol|))
   (|isDomain| *2
               (|List|
                (|LinearOrdinaryDifferentialOperator1|
                 (|Fraction|
                  (|UnivariatePolynomial| *6 (|Expression| (|Integer|)))))))
   (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *6 *7))
   (|ofType| *7 (|Expression| (|Integer|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|FreeMonoid| *4)) (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *2 (|List| (|LyndonWord| *4)))
       (|isDomain| *1 (|LyndonWord| *4))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|FiniteFieldCategory|))
       (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|MultFiniteFactorize| *4 *5 *6 *3))
       (|ofCategory| *3 (|PolynomialCategory| *6 *5 *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *7))
       (|ofCategory| *7 (|PolynomialCategory| *6 *5 *4))
       (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|FiniteFieldCategory|))
       (|isDomain| *2 (|Factored| (|SparseUnivariatePolynomial| *7)))
       (|isDomain| *1 (|MultFiniteFactorize| *4 *5 *6 *7))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5
                     (|Join| (|OrderedSet|)
                             (CATEGORY |domain|
                              (SIGNATURE |convert| ((|Symbol|) $))
                              (SIGNATURE |variable|
                               ((|Union| $ "failed") (|Symbol|))))))
       (|ofCategory| *6 (|EuclideanDomain|)) (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|MPolyCatPolyFactorizer| *4 *5 *6 *3))
       (|ofCategory| *3 (|PolynomialCategory| (|Polynomial| *6) *4 *5))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5
                     (|Join| (|OrderedSet|)
                             (CATEGORY |domain|
                              (SIGNATURE |convert| ((|Symbol|) $)))))
       (|ofCategory| *6 (|IntegralDomain|)) (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|MPolyCatRationalFunctionFactorizer| *4 *5 *6 *3))
       (|ofCategory| *3
                     (|PolynomialCategory| (|Fraction| (|Polynomial| *6)) *4
                                           *5))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|MRationalFactorize| *4 *5 *6 *3))
       (|ofCategory| *3 (|PolynomialCategory| (|Fraction| *6) *4 *5))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6
                     (|Join| (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|MultivariateFactorize| *4 *5 *6 *3))
       (|ofCategory| *3 (|PolynomialCategory| *6 *5 *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *7))
       (|ofCategory| *7 (|PolynomialCategory| *6 *5 *4))
       (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6
                     (|Join| (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|Factored| (|SparseUnivariatePolynomial| *7)))
       (|isDomain| *1 (|MultivariateFactorize| *4 *5 *6 *7))))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|Factored| *3)) (|isDomain| *1 (|RationalFactorize| *3))
       (|ofCategory| *3
                     (|UnivariatePolynomialCategory|
                      (|Fraction| (|Integer|))))))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|RationalFunctionFactor| *3))
       (|ofCategory| *3
                     (|UnivariatePolynomialCategory|
                      (|Fraction| (|Polynomial| (|Integer|)))))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Factored| *1))
       (|ofCategory| *1 (|UniqueFactorizationDomain|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UserDefinedVariableOrdering|))))) 
(((*1 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |high| (|List| (|Symbol|)))
                         (|:| |low| (|List| (|Symbol|)))))
   (|isDomain| *1 (|UserDefinedVariableOrdering|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Symbol|))) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UserDefinedVariableOrdering|))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| (|Symbol|))) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UserDefinedVariableOrdering|))))) 
(((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|Aggregate|)) (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|UserDefinedPartialOrdering| *3))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *2))
       (|isDomain| *4 (|Mapping| (|Boolean|) *2 *2))
       (|isDomain| *1 (|UserDefinedPartialOrdering| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *2)) (|ofCategory| *2 (|SetCategory|))
       (|ofCategory| *2 (|OrderedSet|))
       (|isDomain| *1 (|UserDefinedPartialOrdering| *2))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|UserDefinedPartialOrdering| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|Aggregate|)) (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3 *3)
  (|partial| AND (|isDomain| *2 (|Boolean|))
   (|isDomain| *1 (|UserDefinedPartialOrdering| *3))
   (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *3 *3 *4)
  (AND (|isDomain| *4 (|Mapping| (|Boolean|) *3 *3))
       (|ofCategory| *3 (|SetCategory|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|UserDefinedPartialOrdering| *3))))) 
(((*1 *2)
  (AND
   (|isDomain| *2 (|Record| (|:| |low| (|List| *3)) (|:| |high| (|List| *3))))
   (|isDomain| *1 (|UserDefinedPartialOrdering| *3))
   (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UserDefinedPartialOrdering| *4))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UserDefinedPartialOrdering| *4))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4))
       (|isDomain| *3 (|List| (|List| (|NonNegativeInteger|))))
       (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|UndirectedGraph| *4))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|FinitePoset| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|UndirectedGraph| *3))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4))
       (|isDomain| *3
                   (|List|
                    (|Record| (|:| |fromOb| (|NonNegativeInteger|))
                              (|:| |toOb| (|NonNegativeInteger|)))))
       (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|UndirectedGraph| *4))))
 ((*1 *1 *2 *3)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |value| *4) (|:| |posX| (|NonNegativeInteger|))
                          (|:| |posY| (|NonNegativeInteger|)))))
   (|isDomain| *3
               (|List|
                (|Record| (|:| |name| (|String|))
                          (|:| |arrType| (|NonNegativeInteger|))
                          (|:| |fromOb| (|NonNegativeInteger|))
                          (|:| |toOb| (|NonNegativeInteger|))
                          (|:| |xOffset| (|Integer|))
                          (|:| |yOffset| (|Integer|))
                          (|:| |map| (|List| (|NonNegativeInteger|))))))
   (|ofCategory| *4 (|SetCategory|)) (|isDomain| *1 (|UndirectedGraph| *4))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |value| *3) (|:| |posX| (|NonNegativeInteger|))
                          (|:| |posY| (|NonNegativeInteger|)))))
   (|ofCategory| *3 (|SetCategory|)) (|isDomain| *1 (|UndirectedGraph| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|UndirectedGraph| *3))))) 
(((*1 *2 *3 *1 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|Boolean|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|UndirectedGraph| *5))
       (|ofCategory| *5 (|SetCategory|))))) 
(((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|SparseUnivariatePolynomial|
                (|SparseUnivariatePolynomial| *6)))
   (|isDomain| *4 (|Integer|)) (|isDomain| *5 (|Boolean|))
   (|ofCategory| *6 (|FiniteFieldCategory|))
   (|isDomain| *2
               (|Factored|
                (|SparseUnivariatePolynomial|
                 (|SparseUnivariatePolynomial| *6))))
   (|isDomain| *1 (|TwoFactorize| *6))))) 
(((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|SparseUnivariatePolynomial|
                (|SparseUnivariatePolynomial| *5)))
   (|isDomain| *4 (|Integer|)) (|ofCategory| *5 (|FiniteFieldCategory|))
   (|isDomain| *2
               (|Factored|
                (|SparseUnivariatePolynomial|
                 (|SparseUnivariatePolynomial| *5))))
   (|isDomain| *1 (|TwoFactorize| *5))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|SparseUnivariatePolynomial|
                (|SparseUnivariatePolynomial| *4)))
   (|ofCategory| *4 (|FiniteFieldCategory|))
   (|isDomain| *2
               (|Factored|
                (|SparseUnivariatePolynomial|
                 (|SparseUnivariatePolynomial| *4))))
   (|isDomain| *1 (|TwoFactorize| *4))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|SparseUnivariatePolynomial|
                (|SparseUnivariatePolynomial| *4)))
   (|ofCategory| *4 (|FiniteFieldCategory|))
   (|isDomain| *2
               (|Factored|
                (|SparseUnivariatePolynomial|
                 (|SparseUnivariatePolynomial| *4))))
   (|isDomain| *1 (|TwoFactorize| *4))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|SparseUnivariatePolynomial|
                (|SparseUnivariatePolynomial| *4)))
   (|ofCategory| *4 (|FiniteFieldCategory|))
   (|isDomain| *2
               (|Factored|
                (|SparseUnivariatePolynomial|
                 (|SparseUnivariatePolynomial| *4))))
   (|isDomain| *1 (|TwoFactorize| *4))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3))
       (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|Collection| *3)) (|ofCategory| *3 (|Type|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|InfiniteTuple| *3))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3))
       (|ofCategory| *1 (|LazyStreamAggregate| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *2 *1 *3)
  (|partial| AND (|ofCategory| *1 (|TriangularSetCategory| *4 *5 *3 *2))
   (|ofCategory| *4 (|IntegralDomain|))
   (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *3 (|OrderedSet|))
   (|ofCategory| *2 (|RecursivePolynomialCategory| *4 *5 *3))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *1 (|Tuple| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *3 *3 *3 *4 *5)
  (AND (|isDomain| *3 (|Point| (|DoubleFloat|)))
       (|isDomain| *5 (|List| (|List| (|DoubleFloat|))))
       (|isDomain| *4 (|DoubleFloat|))
       (|isDomain| *2 (|List| (|Point| (|DoubleFloat|))))
       (|isDomain| *1 (|TubePlotTools|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|List| (|List| (|DoubleFloat|))))
       (|isDomain| *1 (|TubePlotTools|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|ofCategory| *1 (|DirectProductCategory| *3 *4))
       (|ofCategory| *4 (|Monoid|)) (|ofCategory| *4 (|AbelianMonoid|))
       (|ofCategory| *4 (|Type|))))
 ((*1 *1 *2)
  (AND (|ofType| *3 (|List| (|Symbol|))) (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *5
                     (|DirectProductCategory| (|#| *3) (|NonNegativeInteger|)))
       (|ofType| *6
        (|Mapping| (|Boolean|) (|Record| (|:| |index| *2) (|:| |exponent| *5))
                   (|Record| (|:| |index| *2) (|:| |exponent| *5))))
       (|isDomain| *1 (|GeneralModulePolynomial| *3 *4 *2 *5 *6 *7))
       (|ofCategory| *2 (|OrderedSet|))
       (|ofCategory| *7
                     (|PolynomialCategory| *4 *5 (|OrderedVariableList| *3)))))
 ((*1 *1 *1) (|ofCategory| *1 (|SPointCategory|)))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Point| (|DoubleFloat|)))
       (|isDomain| *1 (|TubePlotTools|))))) 
(((*1 *2 *1 *3 *4)
  (AND (|isDomain| *3 (|Point| (|DoubleFloat|))) (|isDomain| *4 (|Palette|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|GraphImage|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *1 (|PointCategory| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|Point| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Point| *3)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *1 (|ThreeSpaceCategory| *3))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *1 (|ThreeSpaceCategory| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Point| *3)) (|ofCategory| *1 (|ThreeSpaceCategory| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *2 *3 *3 *3 *3)
  (AND (|isDomain| *3 (|DoubleFloat|))
       (|isDomain| *2 (|Point| (|DoubleFloat|)))
       (|isDomain| *1 (|TubePlotTools|))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|DoubleFloat|)) (|isDomain| *5 (|Integer|))
       (|isDomain| *2 (|TubePlot| *3)) (|isDomain| *1 (|NumericTubePlot| *3))
       (|ofCategory| *3 (|PlottableSpaceCurveCategory|))))
 ((*1 *1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|List| (|Point| (|DoubleFloat|)))))
       (|isDomain| *4 (|Boolean|)) (|isDomain| *1 (|TubePlot| *2))
       (|ofCategory| *2 (|PlottableSpaceCurveCategory|))))) 
(((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|TubePlot| *3))
       (|ofCategory| *3 (|PlottableSpaceCurveCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|TubePlot| *3))
       (|ofCategory| *3 (|PlottableSpaceCurveCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|SubSpaceComponentProperty|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|TubePlot| *3))
       (|ofCategory| *3 (|PlottableSpaceCurveCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|List| (|Point| (|DoubleFloat|)))))
       (|isDomain| *1 (|TubePlot| *3))
       (|ofCategory| *3 (|PlottableSpaceCurveCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *1 (|TubePlot| *2))
       (|ofCategory| *2 (|PlottableSpaceCurveCategory|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|QuasiComponentPackage| *4 *5 *6 *7 *8))
       (|ofCategory| *8 (|RegularTriangularSetCategory| *4 *5 *6 *7))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *4 *5 *6 *7 *8))
       (|ofCategory| *8 (|RegularTriangularSetCategory| *4 *5 *6 *7))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *4 *5)
  (|partial| AND (|isDomain| *3 (|List| *9))
   (|isDomain| *4 (|Mapping| (|Boolean|) *9))
   (|isDomain| *5 (|Mapping| (|Boolean|) *9 *9))
   (|ofCategory| *9 (|RecursivePolynomialCategory| *6 *7 *8))
   (|ofCategory| *6 (|IntegralDomain|))
   (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *8 (|OrderedSet|))
   (|isDomain| *2 (|Record| (|:| |bas| *1) (|:| |top| (|List| *9))))
   (|ofCategory| *1 (|TriangularSetCategory| *6 *7 *8 *9))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|List| *8))
   (|isDomain| *4 (|Mapping| (|Boolean|) *8 *8))
   (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
   (|ofCategory| *5 (|IntegralDomain|))
   (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *7 (|OrderedSet|))
   (|isDomain| *2 (|Record| (|:| |bas| *1) (|:| |top| (|List| *8))))
   (|ofCategory| *1 (|TriangularSetCategory| *5 *6 *7 *8))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *2 (|List| *6))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *2
                   (|Record| (|:| |close| (|List| *6))
                             (|:| |open| (|List| *6))))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| *1))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *4 *5 *6 *3))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| *1))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3 *1 *4)
  (AND (|isDomain| *4 (|Mapping| (|Boolean|) *3 *3))
       (|ofCategory| *1 (|TriangularSetCategory| *5 *6 *7 *3))
       (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *4 *5 *6 *3))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| *1))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *4 *5 *6 *3))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| *1))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *4 *5 *6 *3))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *7 (|List| *7)))
       (|ofCategory| *1 (|TriangularSetCategory| *4 *5 *6 *7))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *2 *1 *3 *4)
  (AND (|isDomain| *2 (|List| *8)) (|isDomain| *3 (|Mapping| *8 *8 *8))
       (|isDomain| *4 (|Mapping| (|Boolean|) *8 *8))
       (|ofCategory| *1 (|TriangularSetCategory| *5 *6 *7 *8))
       (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))))) 
(((*1 *2 *2 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *2))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *2 (|RecursivePolynomialCategory| *3 *4 *5))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))))
 ((*1 *2 *2 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *2))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *2 (|RecursivePolynomialCategory| *3 *4 *5))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))))
 ((*1 *2 *2 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *2))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *2 (|RecursivePolynomialCategory| *3 *4 *5))))) 
(((*1 *2 *2 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *2))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *2 (|RecursivePolynomialCategory| *3 *4 *5))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *2 *3 *4 *5))
       (|ofCategory| *2 (|IntegralDomain|))
       (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|RecursivePolynomialCategory| *2 *3 *4))))) 
(((*1 *2 *2 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *2))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *2 (|RecursivePolynomialCategory| *3 *4 *5))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|)) (|isDomain| *2 (|List| *10))
       (|isDomain| *1 (|LazardSetSolvingPackage| *5 *6 *7 *8 *9 *10))
       (|ofCategory| *9 (|RegularTriangularSetCategory| *5 *6 *7 *8))
       (|ofCategory| *10
                     (|SquareFreeRegularTriangularSetCategory| *5 *6 *7 *8))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|List|
                (|NewSparseMultivariatePolynomial| *5
                                                   (|OrderedVariableList|
                                                    *6))))
   (|isDomain| *4 (|Boolean|)) (|ofCategory| *5 (|GcdDomain|))
   (|ofType| *6 (|List| (|Symbol|)))
   (|isDomain| *2 (|List| (|RegularChain| *5 *6)))
   (|isDomain| *1 (|LexTriangularPackage| *5 *6))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|List|
                (|NewSparseMultivariatePolynomial| *5
                                                   (|OrderedVariableList|
                                                    *6))))
   (|isDomain| *4 (|Boolean|)) (|ofCategory| *5 (|GcdDomain|))
   (|ofType| *6 (|List| (|Symbol|)))
   (|isDomain| *2
               (|List|
                (|SquareFreeRegularTriangularSet| *5
                                                  (|IndexedExponents|
                                                   (|OrderedVariableList| *6))
                                                  (|OrderedVariableList| *6)
                                                  (|NewSparseMultivariatePolynomial|
                                                   *5
                                                   (|OrderedVariableList|
                                                    *6)))))
   (|isDomain| *1 (|LexTriangularPackage| *5 *6))))
 ((*1 *2 *3 *4 *4 *4 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *2 (|List| (|RegularTriangularSet| *5 *6 *7 *8)))
       (|isDomain| *1 (|RegularTriangularSet| *5 *6 *7 *8))))
 ((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *2 (|List| (|RegularTriangularSet| *5 *6 *7 *8)))
       (|isDomain| *1 (|RegularTriangularSet| *5 *6 *7 *8))))
 ((*1 *2 *3 *4 *4)
  (AND
   (|isDomain| *3
               (|List|
                (|NewSparseMultivariatePolynomial| *5
                                                   (|OrderedVariableList|
                                                    *6))))
   (|isDomain| *4 (|Boolean|)) (|ofCategory| *5 (|GcdDomain|))
   (|ofType| *6 (|List| (|Symbol|)))
   (|isDomain| *2 (|List| (|RegularChain| *5 *6)))
   (|isDomain| *1 (|RegularChain| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|)) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RegularTriangularSetCategory| *5 *6 *7 *8))))
 ((*1 *2 *3 *4 *4 *4 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *2 (|List| (|SquareFreeRegularTriangularSet| *5 *6 *7 *8)))
       (|isDomain| *1 (|SquareFreeRegularTriangularSet| *5 *6 *7 *8))))
 ((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *2 (|List| (|SquareFreeRegularTriangularSet| *5 *6 *7 *8)))
       (|isDomain| *1 (|SquareFreeRegularTriangularSet| *5 *6 *7 *8))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|TriangularSetCategory| *4 *5 *6 *7))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |close| *1) (|:| |open| (|List| *7)))))
       (|ofCategory| *1 (|TriangularSetCategory| *4 *5 *6 *7))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *2 (|List| *5))))) 
(((*1 *1 *1 *2)
  (|partial| AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *2))
   (|ofCategory| *3 (|IntegralDomain|))
   (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|))
   (|ofCategory| *2 (|RecursivePolynomialCategory| *3 *4 *5))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|TriangularSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *5 (|Finite|)) (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
       (|ofType| *6 *3)
       (|isDomain| *1 (|GeneralizedUnivariatePowerSeries| *3 *4 *5 *6))
       (|ofCategory| *4 (|Join| (|OrderedAbelianMonoid|) (|SemiRing|)))
       (|ofType| *5 (|Symbol|))))
 ((*1 *2 *3 *2)
  (AND (|ofCategory| *1 (|TaylorSeriesExpansion| *4 *5 *6 *2 *3))
       (|ofCategory| *4 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *5 (|OrderedAbelianMonoid|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *2 (|PowerSeriesCategory| *4 *5 *6))
       (|ofCategory| *3 (|UnivariateTaylorSeriesCategory| *4))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|Mapping| *7 *7))
       (|ofCategory| *1 (|TaylorSeriesExpansion| *4 *5 *6 *2 *7))
       (|ofCategory| *4 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *5 (|OrderedAbelianMonoid|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *2 (|PowerSeriesCategory| *4 *5 *6))
       (|ofCategory| *7 (|UnivariateTaylorSeriesCategory| *4))))) 
(((*1 *2 *3 *2 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|List| *5))
       (|ofCategory| *1 (|TaylorSeriesExpansion| *5 *6 *7 *2 *8))
       (|ofCategory| *5 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *6 (|OrderedAbelianMonoid|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *2 (|PowerSeriesCategory| *5 *6 *7))
       (|ofCategory| *8 (|UnivariateTaylorSeriesCategory| *5))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|List| *2)) (|isDomain| *5 (|List| (|Mapping| *3 *3)))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *7 (|OrderedAbelianMonoid|))
       (|ofCategory| *8 (|OrderedSet|))
       (|ofCategory| *9 (|UnivariateTaylorSeriesCategory| *3))
       (|ofCategory| *2 (|PowerSeriesCategory| *3 *7 *8))
       (|isDomain| *1 (|TaylorSeriesExpansion&| *6 *3 *7 *8 *2 *9))
       (|ofCategory| *6 (|TaylorSeriesExpansion| *3 *7 *8 *2 *9))))
 ((*1 *2 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *2)) (|isDomain| *4 (|List| (|Mapping| *6 *6)))
       (|ofCategory| *6 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|PowerSeriesCategory| *6 *7 *8))
       (|ofCategory| *7 (|OrderedAbelianMonoid|))
       (|ofCategory| *8 (|OrderedSet|))
       (|ofCategory| *9 (|UnivariateTaylorSeriesCategory| *6))
       (|isDomain| *1 (|TaylorSeriesExpansion&| *5 *6 *7 *8 *2 *9))
       (|ofCategory| *5 (|TaylorSeriesExpansion| *6 *7 *8 *2 *9))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|List| *2)) (|isDomain| *5 (|List| (|Mapping| *3 *3)))
       (|ofCategory| *1 (|TaylorSeriesExpansion| *3 *6 *7 *2 *8))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *6 (|OrderedAbelianMonoid|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *8 (|UnivariateTaylorSeriesCategory| *3))
       (|ofCategory| *2 (|PowerSeriesCategory| *3 *6 *7))))
 ((*1 *2 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *2)) (|isDomain| *4 (|List| (|Mapping| *5 *5)))
       (|ofCategory| *1 (|TaylorSeriesExpansion| *5 *6 *7 *2 *8))
       (|ofCategory| *5 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *6 (|OrderedAbelianMonoid|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *2 (|PowerSeriesCategory| *5 *6 *7))
       (|ofCategory| *8 (|UnivariateTaylorSeriesCategory| *5))))) 
(((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|AbelianMonoidRing| *2 *3))
       (|ofCategory| *3 (|OrderedAbelianMonoid|))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *2 (|Ring|)) (|isDomain| *1 (|AntiSymm| *2 *3))
       (|ofType| *3 (|List| (|Symbol|)))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| (|PositiveInteger|))) (|ofCategory| *2 (|Field|))
       (|isDomain| *1 (|CliffordAlgebra| *4 *2 *5))
       (|ofType| *4 (|PositiveInteger|)) (|ofType| *5 (|SquareMatrix| *4 *2))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Expression| *3))
       (|isDomain| *1 (|DeRhamComplex| *3 *4))
       (|ofCategory| *3 (|Join| (|Ring|) (|Comparable|)))
       (|ofType| *4 (|List| (|Symbol|)))))
 ((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|FreeAbelianMonoidCategory| *3 *2))
       (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *2 (|CancellationAbelianMonoid|))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|FreeModuleCategory| *2 *3))
       (|ofCategory| *3 (|Comparable|))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *6))
       (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *1 (|MaybeSkewPolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|MaybeSkewPolynomialCategory| *4 *5 *2))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *2 (|JetBundleFunctionCategory| *3))
       (|isDomain| *1 (|JetDifferential| *3 *2))
       (|ofCategory| *3 (|JetBundleCategory|))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *2 (|JetBundleFunctionCategory| *3))
       (|isDomain| *1 (|JetVectorField| *3 *2))
       (|ofCategory| *3 (|JetBundleCategory|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *2 (|IntegralDomain|))
       (|isDomain| *1 (|LaurentPolynomial| *2 *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *2))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|MonoidRingCategory| *2 *3))
       (|ofCategory| *3 (|Monoid|)) (|ofCategory| *2 (|Ring|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *5))
       (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *1 (|MultivariateTaylorSeriesCategory| *4 *5))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedSet|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|MultivariateTaylorSeriesCategory| *4 *2))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *2 (|PolynomialCategory| *4 (|IndexedExponents| *5) *5))
       (|isDomain| *1 (|SparseMultivariateTaylorSeries| *4 *5 *2))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedSet|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Polynomial| *4))
       (|isDomain| *1 (|TaylorSeries| *4)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Mapping| (|SparseMultivariateTaylorSeries| *4 *3 *5)))
       (|ofCategory| *4 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *1 (|SparseMultivariateTaylorSeries| *4 *3 *5))
       (|ofCategory| *5 (|PolynomialCategory| *4 (|IndexedExponents| *3) *3))))
 ((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Mapping| (|TaylorSeries| *4)))
       (|isDomain| *3 (|Symbol|)) (|isDomain| *1 (|TaylorSeries| *4))
       (|ofCategory| *4 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|ConvertibleTo| (|Pattern| *3)))
       (|ofCategory| *3 (|PatternMatchable| *3))
       (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2 (|ConvertibleTo| (|Pattern| *3)))
       (|ofCategory| *2 (|PatternMatchable| *3))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GroupPresentation|))))
 ((*1 *1 *1) (|isDomain| *1 (|GroupPresentation|)))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *1))
       (|isDomain| *4 (|SparseEchelonMatrix| *5 *1))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *5))
       (|ofCategory| *5 (|JetBundleCategory|))
       (|isDomain| *2
                   (|Record| (|:| |Sys| (|List| *1))
                             (|:| JM (|SparseEchelonMatrix| *5 *1))
                             (|:| |Depend|
                                  (|Union| "failed"
                                           (|List|
                                            (|List|
                                             (|NonNegativeInteger|)))))))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *2
                   (|Record| (|:| |SDe| (|JetDifferentialEquation| *3 *4))
                             (|:| IC (|List| *4))))
       (|isDomain| *1 (|JetDifferentialEquation| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))
 ((*1 *1 *1)
  (AND (|ofCategory| *2 (|CharacteristicZero|))
       (|ofCategory| *2 (|PolynomialFactorizationExplicit|))
       (|ofCategory| *2 (|GcdDomain|)) (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|isDomain| *1 (|QuasiAlgebraicSet| *2 *3 *4 *5))
       (|ofCategory| *5 (|PolynomialCategory| *2 *4 *3))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|AlgebraicNumber|))
       (|isDomain| *2 (|Expression| (|Integer|)))
       (|isDomain| *1 (|SimplifyAlgebraicNumberConvertPackage|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|GcdDomain|)))
       (|isDomain| *1 (|TranscendentalManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2 *3)
  (AND (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|isDomain| *1 (|TriangularMatrixOperations| *3 *4 *5 *2))
       (|ofCategory| *2 (|MatrixCategory| *3 *4 *5))))) 
(((*1 *2 *2 *3)
  (AND (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|isDomain| *1 (|TriangularMatrixOperations| *3 *4 *5 *2))
       (|ofCategory| *2 (|MatrixCategory| *3 *4 *5))))) 
(((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|IntegralDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))))
   (|isDomain| *2 (|Complex| (|Expression| *4)))
   (|isDomain| *1 (|ComplexTrigonometricManipulations| *4 *3))
   (|ofCategory| *3
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| (|Complex| *4))))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *2 (|Complex| *3))
   (|isDomain| *1 (|TrigonometricManipulations| *4 *3))
   (|ofCategory| *3
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *4)))))) 
(((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|IntegralDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))))
   (|isDomain| *2 (|Boolean|))
   (|isDomain| *1 (|ComplexTrigonometricManipulations| *4 *3))
   (|ofCategory| *3
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| (|Complex| *4))))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FortranScalarType|))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *2 (|Boolean|))
   (|isDomain| *1 (|TrigonometricManipulations| *4 *3))
   (|ofCategory| *3
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *4)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ComplexCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|IntegralDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))))
   (|isDomain| *2 (|Expression| *4))
   (|isDomain| *1 (|ComplexTrigonometricManipulations| *4 *3))
   (|ofCategory| *3
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| (|Complex| *4))))))
 ((*1 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *1 (|TrigonometricManipulations| *3 *2))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *3)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ComplexCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|IntegralDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))))
   (|isDomain| *2 (|Expression| *4))
   (|isDomain| *1 (|ComplexTrigonometricManipulations| *4 *3))
   (|ofCategory| *3
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| (|Complex| *4))))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|OctonionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|QuaternionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *1 (|TrigonometricManipulations| *3 *2))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *3)))))) 
(((*1 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|IntegralDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))))
   (|isDomain| *1 (|ComplexTrigonometricManipulations| *3 *2))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| (|Complex| *3))))))
 ((*1 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *1 (|TrigonometricManipulations| *3 *2))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *3)))))) 
(((*1 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|IntegralDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))))
   (|isDomain| *1 (|ComplexTrigonometricManipulations| *3 *2))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| (|Complex| *3))))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))))
       (|isDomain| *1 (|ComplexTrigonometricManipulations| *4 *2))
       (|ofCategory| *2
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| (|Complex| *4))))))
 ((*1 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *1 (|TrigonometricManipulations| *3 *2))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *3)))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *1 (|TrigonometricManipulations| *4 *2))
       (|ofCategory| *2
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *4)))))) 
(((*1 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|IntegralDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))))
   (|isDomain| *1 (|ComplexTrigonometricManipulations| *3 *2))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| (|Complex| *3))))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))))
       (|isDomain| *1 (|ComplexTrigonometricManipulations| *4 *2))
       (|ofCategory| *2
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| (|Complex| *4))))))
 ((*1 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *1 (|TrigonometricManipulations| *3 *2))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *3)))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *1 (|TrigonometricManipulations| *4 *2))
       (|ofCategory| *2
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *4)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FortranExpression| *2 *3 *4))
       (|ofType| *2 (|List| (|Symbol|))) (|ofType| *3 (|List| (|Symbol|)))
       (|ofCategory| *4 (|FortranMachineTypeCategory|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))
 ((*1 *1 *1) (|ofCategory| *1 (|TrigonometricFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *1 *2)
  (AND (|isDomain| *1 (|FourierComponent| *2))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FortranExpression| *2 *3 *4))
       (|ofType| *2 (|List| (|Symbol|))) (|ofType| *3 (|List| (|Symbol|)))
       (|ofCategory| *4 (|FortranMachineTypeCategory|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))
 ((*1 *1 *1) (|ofCategory| *1 (|TrigonometricFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))
 ((*1 *1 *1) (|ofCategory| *1 (|TrigonometricFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))
 ((*1 *1 *1) (|ofCategory| *1 (|TrigonometricFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))
 ((*1 *1 *1) (|ofCategory| *1 (|TrigonometricFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *1 *2)
  (AND (|isDomain| *1 (|FourierComponent| *2))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FortranExpression| *2 *3 *4))
       (|ofType| *2 (|List| (|Symbol|))) (|ofType| *3 (|List| (|Symbol|)))
       (|ofCategory| *4 (|FortranMachineTypeCategory|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))
 ((*1 *1 *1) (|ofCategory| *1 (|TrigonometricFunctionCategory|)))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|RecursiveAggregate| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Tree| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *1 (|Tree| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|Tree| *3))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Tree| *2))) (|isDomain| *1 (|Tree| *2))
       (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|Tree| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Tree| *3))) (|isDomain| *1 (|Tree| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Tree| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Tree| *3))) (|isDomain| *1 (|Tree| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2)
  (AND (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))))
 ((*1 *1)
  (AND (|isDomain| *1 (|FortranExpression| *2 *3 *4))
       (|ofType| *2 (|List| (|Symbol|))) (|ofType| *3 (|List| (|Symbol|)))
       (|ofCategory| *4 (|FortranMachineTypeCategory|))))
 ((*1 *1) (|isDomain| *1 (|Pi|)))
 ((*1 *1) (|ofCategory| *1 (|TranscendentalFunctionCategory|)))) 
(((*1 *2)
  (AND (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
       (|isDomain| *1 (|TopLevelThreeSpace|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|ToolsForSign| *4)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *3)
  (|partial| AND (|isDomain| *2 (|Integer|))
   (|isDomain| *1 (|ToolsForSign| *3)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|OrderedRing|)) (|isDomain| *2 (|Integer|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Permutation| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|RealRootCharacterizationCategory| *4 *3))
       (|ofCategory| *4 (|Join| (|OrderedRing|) (|Field|)))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *2 (|Integer|))))
 ((*1 *2 *3)
  (|partial| AND
   (|ofCategory| *4
                 (|Join| (|IntegralDomain|) (|Comparable|) (|RetractableTo| *2)
                         (|LinearlyExplicitOver| *2) (|GcdDomain|)))
   (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|ElementaryFunctionSign| *4 *3))
   (|ofCategory| *3
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *4)))))
 ((*1 *2 *3 *4 *5)
  (|partial| AND (|isDomain| *4 (|Symbol|))
   (|isDomain| *5 (|OrderedCompletion| *3))
   (|ofCategory| *3
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *6)))
   (|ofCategory| *6
                 (|Join| (|IntegralDomain|) (|Comparable|) (|RetractableTo| *2)
                         (|LinearlyExplicitOver| *2) (|GcdDomain|)))
   (|isDomain| *2 (|Integer|))
   (|isDomain| *1 (|ElementaryFunctionSign| *6 *3))))
 ((*1 *2 *3 *4 *3 *5)
  (|partial| AND (|isDomain| *4 (|Symbol|)) (|isDomain| *5 (|String|))
   (|ofCategory| *6
                 (|Join| (|IntegralDomain|) (|Comparable|) (|RetractableTo| *2)
                         (|LinearlyExplicitOver| *2) (|GcdDomain|)))
   (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|ElementaryFunctionSign| *6 *3))
   (|ofCategory| *3
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *6)))))
 ((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|Fraction| (|Polynomial| *4)))
   (|ofCategory| *4 (|GcdDomain|)) (|isDomain| *2 (|Integer|))
   (|isDomain| *1 (|RationalFunctionSign| *4))))
 ((*1 *2 *3 *4 *5)
  (|partial| AND (|isDomain| *4 (|Symbol|))
   (|isDomain| *5 (|OrderedCompletion| (|Fraction| (|Polynomial| *6))))
   (|isDomain| *3 (|Fraction| (|Polynomial| *6)))
   (|ofCategory| *6 (|GcdDomain|)) (|isDomain| *2 (|Integer|))
   (|isDomain| *1 (|RationalFunctionSign| *6))))
 ((*1 *2 *3 *4 *3 *5)
  (|partial| AND (|isDomain| *3 (|Fraction| (|Polynomial| *6)))
   (|isDomain| *4 (|Symbol|)) (|isDomain| *5 (|String|))
   (|ofCategory| *6 (|GcdDomain|)) (|isDomain| *2 (|Integer|))
   (|isDomain| *1 (|RationalFunctionSign| *6))))
 ((*1 *2 *3)
  (|partial| AND (|isDomain| *2 (|Integer|))
   (|isDomain| *1 (|ToolsForSign| *3)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|String|))
       (|isDomain| *1 (|HTMLFormat|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|String|))
       (|isDomain| *1 (|MathMLFormat|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|String|))
       (|isDomain| *1 (|TexmacsFormat|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| (|OutputForm|) (|OutputForm|)))
       (|isDomain| *1 (|BasicOperator|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| (|OutputForm|) (|List| (|OutputForm|))))
       (|isDomain| *1 (|BasicOperator|))))
 ((*1 *2 *1)
  (|partial| AND
   (|isDomain| *2 (|Mapping| (|OutputForm|) (|List| (|OutputForm|))))
   (|isDomain| *1 (|BasicOperator|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|Database| *3))
       (|ofCategory| *3
                     (|Join| (|OrderedSet|)
                             (CATEGORY |domain|
                              (SIGNATURE |elt| ((|String|) $ (|Symbol|)))
                              (SIGNATURE |display| (*2 $))
                              (SIGNATURE |fullDisplay| (*2 $)))))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|OutputFormatterCategory|)) (|isDomain| *2 (|Void|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|ScriptFormulaFormat|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|ScriptFormulaFormat|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|HTMLFormat|))))
 ((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|IndexCard|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|JetBundleCategory|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|JetDifferentialEquation| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|MathMLFormat|))))
 ((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TexFormat|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|TexFormat|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|TexmacsFormat|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|TextFile|))))
 ((*1 *2 *1 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|TextFile|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|TextFile|))))) 
(((*1 *2 *1)
  (|partial| AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|TextFile|))))) 
(((*1 *2 *1)
  (|partial| AND (|isDomain| *2 (|SingleInteger|))
   (|isDomain| *1 (|BinaryFile|))))
 ((*1 *2 *1)
  (|partial| AND (|isDomain| *1 (|File| *2))
   (|ofCategory| *2 (|SetCategory|))))
 ((*1 *2 *1)
  (|partial| AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|TextFile|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|TextFile|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *1 (|ScriptFormulaFormat|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|String|))) (|isDomain| *1 (|TexFormat|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|String|))) (|isDomain| *1 (|TexFormat|))))) 
(((*1 *1 *2 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))))
 ((*1 *1) (|isDomain| *1 (|SubSpaceComponentProperty|)))
 ((*1 *1 *2 *2 *2)
  (AND (|isDomain| *2 (|String|)) (|ofCategory| *1 (|FileNameCategory|))))
 ((*1 *1) (|isDomain| *1 (|ScriptFormulaFormat|)))
 ((*1 *1) (|isDomain| *1 (|HashState|)))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|LinearAggregate| *3)) (|ofCategory| *3 (|Type|))))
 ((*1 *1)
  (AND (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|PatternMatchListResult| *2 *3 *4))
       (|ofCategory| *2 (|SetCategory|))
       (|ofCategory| *4 (|ListAggregate| *3))))
 ((*1 *1)
  (AND (|isDomain| *1 (|PatternMatchResult| *2 *3))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4)) (|isDomain| *3 (|Integer|))
       (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *1 (|SparseEchelonMatrix| *4 *5))
       (|ofCategory| *5 (|Ring|))))
 ((*1 *1)
  (AND (|isDomain| *1 (|SubSpace| *2 *3)) (|ofType| *2 (|PositiveInteger|))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1) (|isDomain| *1 (|Symbol|))) ((*1 *1) (|isDomain| *1 (|Symbol|)))
 ((*1 *1) (|isDomain| *1 (|TexFormat|)))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *1 (|ScriptFormulaFormat|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|String|))) (|isDomain| *1 (|TexFormat|))))) 
(((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *1 (|ScriptFormulaFormat|))))
 ((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|List| (|String|))) (|isDomain| *1 (|TexFormat|))))) 
(((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|List| (|String|))) (|isDomain| *1 (|TexFormat|))))) 
(((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *1 (|ScriptFormulaFormat|))))
 ((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|List| (|String|))) (|isDomain| *1 (|TexFormat|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Unittest|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Unittest|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Unittest|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Unittest|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Unittest|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Unittest|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Unittest|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Unittest|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Unittest|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Unittest|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Unittest|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Unittest|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UnittestCount|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|UnittestCount|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|UnittestCount|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UnittestCount|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UnittestCount|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|List| (|OutputForm|)))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|UnittestCount|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|List| (|OutputForm|)))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|UnittestCount|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|UnittestCount|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|UnittestCount|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|UnittestCount|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|List| (|OutputForm|)))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|UnittestCount|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|List| (|OutputForm|)))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|UnittestCount|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|UnittestCount|))))) 
(((*1 *2)
  (AND (|ofCategory| *3 (|JetBundleCategory|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|JetLazyFunction| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))
 ((*1 *2) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|UnittestCount|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UnittestCount|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UnittestCount|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UnittestCount|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UnittestCount|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *1 (|UnittestAux| *2))
       (|ofCategory| *2 (|RealNumberSystem|)) (|ofCategory| *2 (|BasicType|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *1 (|UnittestAux| *2))
       (|ofCategory| *2 (|RealNumberSystem|)) (|ofCategory| *2 (|BasicType|))))) 
(((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|Complex| *5))
       (|ofCategory| *5 (|RealNumberSystem|)) (|ofCategory| *5 (|BasicType|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|UnittestAux| *5))))) 
(((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|Complex| *5))
       (|ofCategory| *5 (|RealNumberSystem|)) (|ofCategory| *5 (|BasicType|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|UnittestAux| *5))))) 
(((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UnittestAux| *4))
       (|ofCategory| *4 (|RealNumberSystem|)) (|ofCategory| *4 (|BasicType|))))) 
(((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UnittestAux| *4))
       (|ofCategory| *4 (|RealNumberSystem|)) (|ofCategory| *4 (|BasicType|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|UnittestAux| *3))
       (|ofCategory| *3 (|BasicType|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UnittestAux| *4)) (|ofCategory| *4 (|BasicType|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UnittestAux| *4)) (|ofCategory| *4 (|BasicType|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UnittestAux| *4)) (|ofCategory| *4 (|BasicType|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UnittestAux| *4)) (|ofCategory| *4 (|BasicType|))))) 
(((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UnittestAux| *4)) (|ofCategory| *4 (|BasicType|))))) 
(((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UnittestAux| *4)) (|ofCategory| *4 (|BasicType|))))) 
(((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UnittestAux| *4)) (|ofCategory| *4 (|BasicType|))))) 
(((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|UnittestAux| *4)) (|ofCategory| *4 (|BasicType|))))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *2 *3)
  (AND (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *1 (|TensorProductCategory| *4 *2 *3))
       (|ofCategory| *2 (|Module| *4)) (|ofCategory| *3 (|Module| *4))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *5)) (|ofCategory| *5 (|Module| *4))
       (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *1 (|TensorPowerCategory| *3 *4 *5))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *5)) (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *1 (|TensorPower| *3 *4 *5 *6))
       (|ofType| *3 (|NonNegativeInteger|))
       (|ofCategory| *6 (|FreeModuleCategory| *4 *5))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *2 *6)) (|ofCategory| *6 (|Comparable|))
       (|ofCategory| *5 (|CommutativeRing|)) (|ofCategory| *2 (|Module| *5))
       (|isDomain| *1 (|FreeModuleFunctions2| *5 *6 *4 *2))
       (|ofCategory| *4 (|FreeModuleCategory| *5 *6))))
 ((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|Mapping| *2 *4))
       (|ofCategory| *1 (|FreeModuleCategory| *2 *4))
       (|ofCategory| *4 (|Comparable|))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *2 (|List| *7)))
       (|isDomain| *4 (|TensorPower| *5 *6 *7 *8))
       (|ofType| *5 (|NonNegativeInteger|))
       (|ofCategory| *6 (|CommutativeRing|)) (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *8 (|FreeModuleCategory| *6 *7))
       (|ofCategory| *2 (|Module| *6))
       (|isDomain| *1 (|TensorPowerFunctions2| *5 *6 *7 *8 *2))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|TemplateUtilities|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|TemplateUtilities|))))) 
(((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|BagAggregate| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *1 (|BinarySearchTree| *2))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *1 (|BinaryTournament| *2))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|ofCategory| *1 (|ExtensibleLinearAggregate| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|ofCategory| *1 (|ExtensibleLinearAggregate| *2))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|MultiDictionary| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|TabulatedComputationPackage| *3 *4))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *2 *3)
  (|partial| AND (|ofCategory| *2 (|SetCategory|))
   (|isDomain| *1 (|TabulatedComputationPackage| *3 *2))
   (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|TabulatedComputationPackage| *3 *4))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|TabulatedComputationPackage| *3 *4))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|TabulatedComputationPackage| *3 *4))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|TabulatedComputationPackage| *3 *4))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|TabulatedComputationPackage| *3 *4))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|TabulatedComputationPackage| *4 *5))
       (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *5 (|SetCategory|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|TabulatedComputationPackage| *4 *5))
       (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *5 (|SetCategory|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|TabulatedComputationPackage| *3 *4))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *1 (|TangentExpansions| *2))
       (|ofCategory| *2 (|Field|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|PositiveInteger|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *3))
       (|isDomain| *1 (|TangentExpansions| *3)) (|ofCategory| *3 (|Field|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *2)) (|isDomain| *1 (|TangentExpansions| *2))
       (|ofCategory| *2 (|Field|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|SparseEchelonMatrix| *4 *5))
       (|isDomain| *3 (|JetDifferential| *4 *5))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|ofCategory| *5 (|JetBundleFunctionCategory| *4))
       (|isDomain| *1 (|JetDifferentialEquation| *4 *5))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|SparseEchelonMatrix| *4 *5))
       (|isDomain| *3 (|List| (|JetDifferential| *4 *5)))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|ofCategory| *5 (|JetBundleFunctionCategory| *4))
       (|isDomain| *1 (|JetDifferentialEquation| *4 *5))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| *3))) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|Tableau| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))
       (|isDomain| *2 (|List| (|List| *3)))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|DirectProductCategory| *4 *5))
       (|ofCategory| *7 (|DirectProductCategory| *3 *5))
       (|isDomain| *2 (|List| (|List| *5)))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|List| *3))) (|isDomain| *1 (|Tableau| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|List| (|List| *4))))
       (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *2
                   (|Record| (|:| |f1| (|List| *4))
                             (|:| |f2| (|List| (|List| (|List| *4))))
                             (|:| |f3| (|List| (|List| *4)))
                             (|:| |f4| (|List| (|List| (|List| *4))))))
       (|isDomain| *1 (|TableauxBumpers| *4))))) 
(((*1 *2 *3 *4 *5 *4 *4 *4)
  (AND (|isDomain| *4 (|List| (|List| (|List| *6))))
       (|isDomain| *5 (|List| (|List| *6))) (|isDomain| *3 (|List| *6))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *2
                   (|Record| (|:| |f1| (|List| *6))
                             (|:| |f2| (|List| (|List| (|List| *6))))
                             (|:| |f3| (|List| (|List| *6)))
                             (|:| |f4| (|List| (|List| (|List| *6))))))
       (|isDomain| *1 (|TableauxBumpers| *6))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *3 (|Field|))
   (|ofCategory| *4 (|FiniteLinearAggregate| *3))
   (|ofCategory| *5 (|FiniteLinearAggregate| *3))
   (|isDomain| *1 (|InnerMatrixLinearAlgebraFunctions| *3 *4 *5 *2))
   (|ofCategory| *2 (|MatrixCategory| *3 *4 *5))))
 ((*1 *2 *3)
  (|partial| AND (|ofCategory| *4 (|IntegralDomain|))
   (|ofCategory| *5 (|FiniteLinearAggregate| *4))
   (|ofCategory| *6 (|FiniteLinearAggregate| *4))
   (|ofCategory| *7 (|QuotientFieldCategory| *4))
   (|ofCategory| *2 (|MatrixCategory| *7 *8 *9))
   (|isDomain| *1
               (|InnerMatrixQuotientFieldFunctions| *4 *5 *6 *3 *7 *8 *9 *2))
   (|ofCategory| *3 (|MatrixCategory| *4 *5 *6))
   (|ofCategory| *8 (|FiniteLinearAggregate| *7))
   (|ofCategory| *9 (|FiniteLinearAggregate| *7))))
 ((*1 *1 *1)
  (|partial| AND (|ofCategory| *1 (|MatrixCategory| *2 *3 *4))
   (|ofCategory| *2 (|AbelianMonoid|))
   (|ofCategory| *3 (|FiniteLinearAggregate| *2))
   (|ofCategory| *4 (|FiniteLinearAggregate| *2)) (|ofCategory| *2 (|Field|))))
 ((*1 *2 *2)
  (|partial| AND (|ofCategory| *3 (|Field|))
   (|ofCategory| *3 (|CommutativeRing|))
   (|ofCategory| *4 (|FiniteLinearAggregate| *3))
   (|ofCategory| *5 (|FiniteLinearAggregate| *3))
   (|isDomain| *1 (|MatrixLinearAlgebraFunctions| *3 *4 *5 *2))
   (|ofCategory| *2 (|MatrixCategory| *3 *4 *5))))
 ((*1 *1 *1)
  (|partial| AND (|ofCategory| *1 (|SquareMatrixCategory| *2 *3 *4 *5))
   (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
   (|ofCategory| *4 (|DirectProductCategory| *2 *3))
   (|ofCategory| *5 (|DirectProductCategory| *2 *3))
   (|ofCategory| *3 (|Field|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *1 (|TableauxBumpers| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *2 (|List| (|List| *4)))
       (|isDomain| *1 (|TableauxBumpers| *4))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| (|List| *3))) (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *1 (|TableauxBumpers| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *2 (|Tableau| (|List| *4)))
       (|isDomain| *1 (|TableauxBumpers| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|List| *4))) (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *2 (|List| (|List| (|List| *4))))
       (|isDomain| *1 (|TableauxBumpers| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Tableau| (|List| *4))) (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *2 (|List| (|List| *4)))
       (|isDomain| *1 (|TableauxBumpers| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|List| (|List| *4))))
       (|isDomain| *2 (|List| (|List| *4)))
       (|isDomain| *1 (|TableauxBumpers| *4))
       (|ofCategory| *4 (|OrderedSet|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| (|List| (|List| *4))))
       (|isDomain| *2 (|List| (|List| *4))) (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *1 (|TableauxBumpers| *4))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|List| (|List| (|List| *4))))
       (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *1 (|TableauxBumpers| *4))))) 
(((*1 *2 *3 *4 *2)
  (AND (|isDomain| *2 (|List| (|List| (|List| *5))))
       (|isDomain| *3 (|Mapping| (|Boolean|) *5 *5))
       (|isDomain| *4 (|List| *5)) (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|TableauxBumpers| *5))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *6 *6))
       (|isDomain| *5 (|List| (|List| *6))) (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *4 (|List| *6))
       (|isDomain| *2
                   (|Record| (|:| |fs| (|Boolean|)) (|:| |sd| (|List| *6))
                             (|:| |td| (|List| (|List| *6)))))
       (|isDomain| *1 (|TableauxBumpers| *6))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2 (|List| (|List| (|Polynomial| *5))))
       (|isDomain| *1 (|SystemSolvePackage| *5))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *2 (|List| (|List| (|Equation| (|Polynomial| *4)))))
       (|isDomain| *1 (|FloatingRealPackage| *4))
       (|ofCategory| *4 (|Join| (|OrderedRing|) (|Field|)))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|List| (|Equation| (|Fraction| (|Polynomial| (|Integer|))))))
   (|isDomain| *2 (|List| (|List| (|Equation| (|Polynomial| *4)))))
   (|isDomain| *1 (|FloatingRealPackage| *4))
   (|ofCategory| *4 (|Join| (|OrderedRing|) (|Field|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| (|Integer|))))
       (|isDomain| *2 (|List| (|Equation| (|Polynomial| *4))))
       (|isDomain| *1 (|FloatingRealPackage| *4))
       (|ofCategory| *4 (|Join| (|OrderedRing|) (|Field|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Equation| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *2 (|List| (|Equation| (|Polynomial| *4))))
       (|isDomain| *1 (|FloatingRealPackage| *4))
       (|ofCategory| *4 (|Join| (|OrderedRing|) (|Field|)))))
 ((*1 *2 *3 *4 *5)
  (|partial| AND (|isDomain| *5 (|Symbol|))
   (|ofCategory| *6
                 (|Join| (|Comparable|) (|PolynomialFactorizationExplicit|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))
                         (|CharacteristicZero|)))
   (|ofCategory| *4
                 (|Join| (|AlgebraicallyClosedFunctionSpace| *6)
                         (|TranscendentalFunctionCategory|)
                         (|PrimitiveFunctionCategory|)))
   (|isDomain| *2 (|Record| (|:| |particular| *4) (|:| |basis| (|List| *4))))
   (|isDomain| *1 (|ElementaryFunctionLODESolver| *6 *4 *3))
   (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *4))))
 ((*1 *2 *3 *2 *4 *2 *5)
  (|partial| AND (|isDomain| *4 (|Symbol|)) (|isDomain| *5 (|List| *2))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedFunctionSpace| *6)
                         (|TranscendentalFunctionCategory|)
                         (|PrimitiveFunctionCategory|)))
   (|ofCategory| *6
                 (|Join| (|Comparable|) (|PolynomialFactorizationExplicit|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))
                         (|CharacteristicZero|)))
   (|isDomain| *1 (|ElementaryFunctionLODESolver| *6 *2 *3))
   (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *2))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|Field|))
       (|ofCategory| *6
                     (|Join| (|FiniteLinearAggregate| *5)
                             (|shallowlyMutable|)))
       (|ofCategory| *4
                     (|Join| (|FiniteLinearAggregate| *5)
                             (|shallowlyMutable|)))
       (|isDomain| *2
                   (|Record| (|:| |particular| (|Union| *4 #1="failed"))
                             (|:| |basis| (|List| *4))))
       (|isDomain| *1 (|LinearSystemMatrixPackage| *5 *6 *4 *3))
       (|ofCategory| *3 (|MatrixCategory| *5 *6 *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| *7))
       (|ofCategory| *7
                     (|Join| (|FiniteLinearAggregate| *5)
                             (|shallowlyMutable|)))
       (|ofCategory| *5 (|Field|))
       (|ofCategory| *6
                     (|Join| (|FiniteLinearAggregate| *5)
                             (|shallowlyMutable|)))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |particular| (|Union| *7 #1#))
                              (|:| |basis| (|List| *7)))))
       (|isDomain| *1 (|LinearSystemMatrixPackage| *5 *6 *7 *3))
       (|ofCategory| *3 (|MatrixCategory| *5 *6 *7))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *5)) (|isDomain| *4 (|Vector| *5))
       (|ofCategory| *5 (|Field|))
       (|isDomain| *2
                   (|Record|
                    (|:| |particular| (|Union| (|Vector| *5) #2="failed"))
                    (|:| |basis| (|List| (|Vector| *5)))))
       (|isDomain| *1 (|LinearSystemMatrixPackage1| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|List| *5))) (|isDomain| *4 (|Vector| *5))
       (|ofCategory| *5 (|Field|))
       (|isDomain| *2
                   (|Record| (|:| |particular| (|Union| (|Vector| *5) #2#))
                             (|:| |basis| (|List| (|Vector| *5)))))
       (|isDomain| *1 (|LinearSystemMatrixPackage1| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *5)) (|isDomain| *4 (|List| (|Vector| *5)))
       (|ofCategory| *5 (|Field|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |particular| (|Union| (|Vector| *5) #2#))
                              (|:| |basis| (|List| (|Vector| *5))))))
       (|isDomain| *1 (|LinearSystemMatrixPackage1| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|List| *5)))
       (|isDomain| *4 (|List| (|Vector| *5))) (|ofCategory| *5 (|Field|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |particular| (|Union| (|Vector| *5) #2#))
                              (|:| |basis| (|List| (|Vector| *5))))))
       (|isDomain| *1 (|LinearSystemMatrixPackage1| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Polynomial| *5)))
       (|isDomain| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2
                   (|List|
                    (|List| (|Equation| (|Fraction| (|Polynomial| *5))))))
       (|isDomain| *1 (|NonLinearSolvePackage| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Polynomial| *4)))
       (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2
                   (|List|
                    (|List| (|Equation| (|Fraction| (|Polynomial| *4))))))
       (|isDomain| *1 (|NonLinearSolvePackage| *4))))
 ((*1 *2 *2 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|BasicOperator|)) (|isDomain| *4 (|Symbol|))
   (|ofCategory| *5
                 (|Join| (|Comparable|) (|PolynomialFactorizationExplicit|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))
                         (|CharacteristicZero|)))
   (|isDomain| *1 (|NonLinearFirstOrderODESolver| *5 *2))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedFunctionSpace| *5)
                         (|TranscendentalFunctionCategory|)
                         (|PrimitiveFunctionCategory|)))))
 ((*1 *2 *3 *4 *5)
  (|partial| AND (|isDomain| *3 (|Matrix| *7)) (|isDomain| *4 (|Vector| *7))
   (|isDomain| *5 (|Symbol|))
   (|ofCategory| *7
                 (|Join| (|AlgebraicallyClosedFunctionSpace| *6)
                         (|TranscendentalFunctionCategory|)
                         (|PrimitiveFunctionCategory|)))
   (|ofCategory| *6
                 (|Join| (|Comparable|) (|PolynomialFactorizationExplicit|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))
                         (|CharacteristicZero|)))
   (|isDomain| *2
               (|Record| (|:| |particular| (|Vector| *7))
                         (|:| |basis| (|List| (|Vector| *7)))))
   (|isDomain| *1 (|ElementaryFunctionODESolver| *6 *7))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Matrix| *6)) (|isDomain| *4 (|Symbol|))
   (|ofCategory| *6
                 (|Join| (|AlgebraicallyClosedFunctionSpace| *5)
                         (|TranscendentalFunctionCategory|)
                         (|PrimitiveFunctionCategory|)))
   (|ofCategory| *5
                 (|Join| (|Comparable|) (|PolynomialFactorizationExplicit|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))
                         (|CharacteristicZero|)))
   (|isDomain| *2 (|List| (|Vector| *6)))
   (|isDomain| *1 (|ElementaryFunctionODESolver| *5 *6))))
 ((*1 *2 *3 *4 *5)
  (|partial| AND (|isDomain| *3 (|List| (|Equation| *7)))
   (|isDomain| *4 (|List| (|BasicOperator|))) (|isDomain| *5 (|Symbol|))
   (|ofCategory| *7
                 (|Join| (|AlgebraicallyClosedFunctionSpace| *6)
                         (|TranscendentalFunctionCategory|)
                         (|PrimitiveFunctionCategory|)))
   (|ofCategory| *6
                 (|Join| (|Comparable|) (|PolynomialFactorizationExplicit|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))
                         (|CharacteristicZero|)))
   (|isDomain| *2
               (|Record| (|:| |particular| (|Vector| *7))
                         (|:| |basis| (|List| (|Vector| *7)))))
   (|isDomain| *1 (|ElementaryFunctionODESolver| *6 *7))))
 ((*1 *2 *3 *4 *5)
  (|partial| AND (|isDomain| *3 (|List| *7))
   (|isDomain| *4 (|List| (|BasicOperator|))) (|isDomain| *5 (|Symbol|))
   (|ofCategory| *7
                 (|Join| (|AlgebraicallyClosedFunctionSpace| *6)
                         (|TranscendentalFunctionCategory|)
                         (|PrimitiveFunctionCategory|)))
   (|ofCategory| *6
                 (|Join| (|Comparable|) (|PolynomialFactorizationExplicit|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))
                         (|CharacteristicZero|)))
   (|isDomain| *2
               (|Record| (|:| |particular| (|Vector| *7))
                         (|:| |basis| (|List| (|Vector| *7)))))
   (|isDomain| *1 (|ElementaryFunctionODESolver| *6 *7))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Equation| *7)) (|isDomain| *4 (|BasicOperator|))
       (|isDomain| *5 (|Symbol|))
       (|ofCategory| *7
                     (|Join| (|AlgebraicallyClosedFunctionSpace| *6)
                             (|TranscendentalFunctionCategory|)
                             (|PrimitiveFunctionCategory|)))
       (|ofCategory| *6
                     (|Join| (|Comparable|) (|PolynomialFactorizationExplicit|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))
                             (|CharacteristicZero|)))
       (|isDomain| *2
                   (|Union|
                    (|Record| (|:| |particular| *7) (|:| |basis| (|List| *7)))
                    *7 #3="failed"))
       (|isDomain| *1 (|ElementaryFunctionODESolver| *6 *7))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|BasicOperator|)) (|isDomain| *5 (|Symbol|))
       (|ofCategory| *6
                     (|Join| (|Comparable|) (|PolynomialFactorizationExplicit|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))
                             (|CharacteristicZero|)))
       (|isDomain| *2
                   (|Union|
                    (|Record| (|:| |particular| *3) (|:| |basis| (|List| *3)))
                    *3 #3#))
       (|isDomain| *1 (|ElementaryFunctionODESolver| *6 *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedFunctionSpace| *6)
                             (|TranscendentalFunctionCategory|)
                             (|PrimitiveFunctionCategory|)))))
 ((*1 *2 *3 *4 *3 *5)
  (|partial| AND (|isDomain| *3 (|Equation| *2))
   (|isDomain| *4 (|BasicOperator|)) (|isDomain| *5 (|List| *2))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedFunctionSpace| *6)
                         (|TranscendentalFunctionCategory|)
                         (|PrimitiveFunctionCategory|)))
   (|isDomain| *1 (|ElementaryFunctionODESolver| *6 *2))
   (|ofCategory| *6
                 (|Join| (|Comparable|) (|PolynomialFactorizationExplicit|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))
                         (|CharacteristicZero|)))))
 ((*1 *2 *2 *3 *4 *5)
  (|partial| AND (|isDomain| *3 (|BasicOperator|))
   (|isDomain| *4 (|Equation| *2)) (|isDomain| *5 (|List| *2))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedFunctionSpace| *6)
                         (|TranscendentalFunctionCategory|)
                         (|PrimitiveFunctionCategory|)))
   (|ofCategory| *6
                 (|Join| (|Comparable|) (|PolynomialFactorizationExplicit|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))
                         (|CharacteristicZero|)))
   (|isDomain| *1 (|ElementaryFunctionODESolver| *6 *2))))
 ((*1 *2 *3 *4 *5)
  (|partial| AND (|isDomain| *3 (|Matrix| *6)) (|isDomain| *4 (|Vector| *6))
   (|isDomain| *5
               (|Mapping|
                (|Union|
                 (|Record| (|:| |particular| *6) (|:| |basis| (|List| *6)))
                 "failed")
                *7 *6))
   (|ofCategory| *6 (|Field|))
   (|ofCategory| *7 (|LinearOrdinaryDifferentialOperatorCategory| *6))
   (|isDomain| *2
               (|Record| (|:| |particular| (|Vector| *6))
                         (|:| |basis| (|Matrix| *6))))
   (|isDomain| *1 (|SystemODESolver| *6 *7))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Matrix| *6)) (|isDomain| *4 (|List| (|Vector| *6)))
       (|isDomain| *5
                   (|Mapping|
                    (|Record|
                     (|:| |particular|
                          (|List|
                           (|Record| (|:| |ratpart| *6)
                                     (|:| |coeffs| (|Vector| *6)))))
                     (|:| |basis| (|List| *6)))
                    *7 (|List| *6)))
       (|ofCategory| *6 (|Field|))
       (|ofCategory| *7 (|LinearOrdinaryDifferentialOperatorCategory| *6))
       (|isDomain| *2
                   (|Record|
                    (|:| |particular|
                         (|List|
                          (|Record| (|:| |ratpart| (|Vector| *6))
                                    (|:| |coeffs| (|Vector| *6)))))
                    (|:| |basis| (|List| (|Vector| *6)))))
       (|isDomain| *1 (|SystemODESolver| *6 *7))))
 ((*1 *2 *3 *4 *5 *6)
  (|partial| AND (|isDomain| *3 (|Matrix| *7))
   (|isDomain| *5 (|List| (|Vector| *4)))
   (|isDomain| *6
               (|Mapping|
                (|Record|
                 (|:| |particular|
                      (|List|
                       (|Record| (|:| |ratpart| *4)
                                 (|:| |coeffs| (|Vector| *4)))))
                 (|:| |basis| (|List| *4)))
                *7 (|List| *4)))
   (|ofCategory| *4 (|Field|))
   (|ofCategory| *7 (|UnivariateSkewPolynomialCategory| *4))
   (|isDomain| *2
               (|Record|
                (|:| |particular|
                     (|List|
                      (|Record| (|:| |ratpart| (|Vector| *4))
                                (|:| |coeffs| (|Vector| *4)))))
                (|:| |basis| (|List| (|Vector| *4)))))
   (|isDomain| *1 (|OrePolynomialMatrixOperations| *4 *7))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Polynomial| (|Fraction| (|Integer|))))
       (|isDomain| *4 (|Float|)) (|isDomain| *2 (|List| (|Float|)))
       (|isDomain| *1 (|RealSolvePackage|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Polynomial| (|Integer|))) (|isDomain| *4 (|Float|))
       (|isDomain| *2 (|List| (|Float|)))
       (|isDomain| *1 (|RealSolvePackage|))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|Field|)
                         (CATEGORY |domain|
                          (SIGNATURE ^ ($ $ (|Fraction| (|Integer|)))))))
   (|isDomain| *2 (|List| *4))
   (|isDomain| *1 (|PolynomialSolveByFormulas| *3 *4))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Expression| *4))
       (|ofCategory| *4
                     (|Join| (|Comparable|) (|PolynomialFactorizationExplicit|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|List| (|Equation| (|Expression| *4))))
       (|isDomain| *1 (|TransSolvePackage| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Equation| (|Expression| *4)))
       (|ofCategory| *4
                     (|Join| (|Comparable|) (|PolynomialFactorizationExplicit|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|List| (|Equation| (|Expression| *4))))
       (|isDomain| *1 (|TransSolvePackage| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Equation| (|Expression| *5)))
       (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5
                     (|Join| (|Comparable|) (|PolynomialFactorizationExplicit|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|List| (|Equation| (|Expression| *5))))
       (|isDomain| *1 (|TransSolvePackage| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Expression| *5)) (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5
                     (|Join| (|Comparable|) (|PolynomialFactorizationExplicit|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|List| (|Equation| (|Expression| *5))))
       (|isDomain| *1 (|TransSolvePackage| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Equation| (|Expression| *5))))
       (|isDomain| *4 (|List| (|Symbol|)))
       (|ofCategory| *5
                     (|Join| (|Comparable|) (|PolynomialFactorizationExplicit|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|List| (|List| (|Equation| (|Expression| *5)))))
       (|isDomain| *1 (|TransSolvePackage| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2
                   (|List|
                    (|List| (|Equation| (|Fraction| (|Polynomial| *5))))))
       (|isDomain| *1 (|SystemSolvePackage| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Equation| (|Fraction| (|Polynomial| *5)))))
       (|isDomain| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2
                   (|List|
                    (|List| (|Equation| (|Fraction| (|Polynomial| *5))))))
       (|isDomain| *1 (|SystemSolvePackage| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *4))))
       (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2
                   (|List|
                    (|List| (|Equation| (|Fraction| (|Polynomial| *4))))))
       (|isDomain| *1 (|SystemSolvePackage| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Equation| (|Fraction| (|Polynomial| *4)))))
       (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2
                   (|List|
                    (|List| (|Equation| (|Fraction| (|Polynomial| *4))))))
       (|isDomain| *1 (|SystemSolvePackage| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
       (|isDomain| *4 (|Symbol|)) (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2 (|List| (|Equation| (|Fraction| (|Polynomial| *5)))))
       (|isDomain| *1 (|SystemSolvePackage| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Equation| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *4 (|Symbol|)) (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2 (|List| (|Equation| (|Fraction| (|Polynomial| *5)))))
       (|isDomain| *1 (|SystemSolvePackage| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *4)))
       (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|List| (|Equation| (|Fraction| (|Polynomial| *4)))))
       (|isDomain| *1 (|SystemSolvePackage| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Equation| (|Fraction| (|Polynomial| *4))))
       (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|List| (|Equation| (|Fraction| (|Polynomial| *4)))))
       (|isDomain| *1 (|SystemSolvePackage| *4))))) 
(((*1 *2 *3 *2 *3)
  (AND (|isDomain| *2 (|FortranType|)) (|isDomain| *3 (|Symbol|))
       (|isDomain| *1 (|TheSymbolTable|))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|FortranType|)) (|isDomain| *3 (|Symbol|))
       (|isDomain| *1 (|TheSymbolTable|))))
 ((*1 *2 *3 *2 *4 *1)
  (AND (|isDomain| *2 (|FortranType|)) (|isDomain| *3 (|List| (|Symbol|)))
       (|isDomain| *4 (|Symbol|)) (|isDomain| *1 (|TheSymbolTable|))))
 ((*1 *2 *3 *2 *3 *1)
  (AND (|isDomain| *2 (|FortranType|)) (|isDomain| *3 (|Symbol|))
       (|isDomain| *1 (|TheSymbolTable|))))
 ((*1 *2 *3 *2 *1)
  (AND (|isDomain| *2 (|FortranType|)) (|isDomain| *3 (|Symbol|))
       (|isDomain| *1 (|SymbolTable|))))
 ((*1 *2 *3 *2 *1)
  (AND (|isDomain| *2 (|FortranType|)) (|isDomain| *3 (|List| (|Symbol|)))
       (|isDomain| *1 (|SymbolTable|))))) 
(((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|FortranType|))
       (|isDomain| *1 (|SymbolTable|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Symbol|))) (|isDomain| *1 (|SymbolTable|))))) 
(((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|FortranScalarType|))
       (|isDomain| *2
                   (|List|
                    (|Union| (|:| |name| (|Symbol|))
                             (|:| |bounds|
                                  (|List|
                                   (|Union| (|:| S (|Symbol|))
                                            (|:| P
                                                 (|Polynomial|
                                                  (|Integer|)))))))))
       (|isDomain| *1 (|SymbolTable|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Symbol|))) (|isDomain| *1 (|SymbolTable|))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|List|
                (|List|
                 (|Union| (|:| |name| (|Symbol|))
                          (|:| |bounds|
                               (|List|
                                (|Union| (|:| S (|Symbol|))
                                         (|:| P
                                              (|Polynomial|
                                               (|Integer|))))))))))
   (|isDomain| *1 (|SymbolTable|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|SExpression|)) (|isDomain| *1 (|SymbolTable|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|TheSymbolTable|))))
 ((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|SymbolTable|))))) 
(((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |key| (|Symbol|))
                          (|:| |entry| (|FortranType|)))))
   (|isDomain| *1 (|SymbolTable|))))) 
(((*1 *1) (|isDomain| *1 (|TheSymbolTable|)))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|TheSymbolTable|))))
 ((*1 *2) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TheSymbolTable|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|TheSymbolTable|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|TheSymbolTable|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|TheSymbolTable|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Symbol|))) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|TheSymbolTable|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| (|Symbol|))) (|isDomain| *3 (|Symbol|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TheSymbolTable|))))
 ((*1 *2 *3 *4 *1)
  (AND (|isDomain| *4 (|List| (|Symbol|))) (|isDomain| *3 (|Symbol|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TheSymbolTable|))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|Union| (|:| |fst| (|FortranScalarType|))
                        (|:| |void| #1="void")))
   (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TheSymbolTable|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *4
                   (|Union| (|:| |fst| (|FortranScalarType|))
                            (|:| |void| #1#)))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TheSymbolTable|))))
 ((*1 *2 *3 *4 *1)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *4
                   (|Union| (|:| |fst| (|FortranScalarType|))
                            (|:| |void| #1#)))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TheSymbolTable|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|TheSymbolTable|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|TheSymbolTable|))))
 ((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|TheSymbolTable|))))) 
(((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Union| (|:| |fst| (|FortranScalarType|))
                            (|:| |void| "void")))
       (|isDomain| *1 (|TheSymbolTable|))))) 
(((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|List| (|Symbol|)))
       (|isDomain| *1 (|TheSymbolTable|))))) 
(((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|SymbolTable|))
       (|isDomain| *1 (|TheSymbolTable|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|Vector| *4))
       (|isDomain| *1 (|SymmetricFunctions| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|PositiveInteger|)) (|isDomain| *2 (|Vector| *3))
       (|isDomain| *1 (|SymmetricFunctions| *3)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|Symbol|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|BasicOperator|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FileCategory| *2 *3))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FileNameCategory|)) (|isDomain| *2 (|String|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|FunctionCalled| *3))
       (|ofType| *3 *2)))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|JetBundleCategory|)) (|isDomain| *2 (|Symbol|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|Kernel| *3))
       (|ofCategory| *3 (|Comparable|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|RuleCalled| *3))
       (|ofType| *3 *2)))
 ((*1 *1 *1) (|isDomain| *1 (|Symbol|)))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Symbol|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|OutputForm|))))
 ((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |sub| (|List| (|OutputForm|)))
                         (|:| |sup| (|List| (|OutputForm|)))
                         (|:| |presup| (|List| (|OutputForm|)))
                         (|:| |presub| (|List| (|OutputForm|)))
                         (|:| |args| (|List| (|OutputForm|)))))
   (|isDomain| *1 (|Symbol|))))) 
(((*1 *1 *1 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |sub| (|List| (|OutputForm|)))
                         (|:| |sup| (|List| (|OutputForm|)))
                         (|:| |presup| (|List| (|OutputForm|)))
                         (|:| |presub| (|List| (|OutputForm|)))
                         (|:| |args| (|List| (|OutputForm|)))))
   (|isDomain| *1 (|Symbol|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| (|OutputForm|))))
       (|isDomain| *1 (|Symbol|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|Symbol|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|Symbol|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|Symbol|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|String|))
       (|isDomain| *1 (|OutputFormTools|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|SExpressionCategory| *2 *3 *4 *5))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|StringCategory|))))
 ((*1 *2 *1) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|Symbol|))))) 
(((*1 *1) (|ofCategory| *1 (|AbelianMonoid|)))
 ((*1 *1) (|ofCategory| *1 (|Aggregate|)))
 ((*1 *1)
  (AND (|isDomain| *1 (|CartesianTensor| *2 *3 *4)) (|ofType| *2 (|Integer|))
       (|ofType| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|CommutativeRing|))))
 ((*1 *1) (|ofCategory| *1 (|MagmaWithUnit|)))
 ((*1 *1) (|isDomain| *1 (|Symbol|)))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|JetBundleExpression| *4)))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *2
                   (|List|
                    (|JetBundleExpression| (|JetBundleSymAna| *4 *5 *6))))
       (|isDomain| *1 (|SymmetryAnalysis| *4 *5 *6))
       (|ofType| *5 (|Union| (|Symbol|) (|List| (|Symbol|))))
       (|ofType| *6 (|Union| (|Symbol|) (|List| (|Symbol|))))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|List| (|JetBundleExpression| *4)))
       (|isDomain| *3 (|JetVectorField| *4 (|JetBundleExpression| *4)))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *1 (|SymmetryAnalysis| *4 *5 *6))
       (|ofType| *5 (|Union| (|Symbol|) (|List| (|Symbol|))))
       (|ofType| *6 (|Union| (|Symbol|) (|List| (|Symbol|))))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|JetBundleExpression| *4)))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *2
                   (|List|
                    (|JetBundleExpression| (|JetBundleSymAna| *4 *5 *6))))
       (|isDomain| *1 (|SymmetryAnalysis| *4 *5 *6))
       (|ofType| *5 (|Union| (|Symbol|) (|List| (|Symbol|))))
       (|ofType| *6 (|Union| (|Symbol|) (|List| (|Symbol|))))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|List| (|JetBundleExpression| *4)))
       (|isDomain| *3 (|JetVectorField| *4 (|JetBundleExpression| *4)))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *1 (|SymmetryAnalysis| *4 *5 *6))
       (|ofType| *5 (|Union| (|Symbol|) (|List| (|Symbol|))))
       (|ofType| *6 (|Union| (|Symbol|) (|List| (|Symbol|))))))
 ((*1 *2 *2 *3 *4)
  (AND (|isDomain| *2 (|List| (|JetBundleExpression| *5)))
       (|isDomain| *3 (|List| *5))
       (|isDomain| *4 (|JetVectorField| *5 (|JetBundleExpression| *5)))
       (|ofCategory| *5 (|JetBundleCategory|))
       (|isDomain| *1 (|SymmetryAnalysis| *5 *6 *7))
       (|ofType| *6 (|Union| (|Symbol|) (|List| (|Symbol|))))
       (|ofType| *7 (|Union| (|Symbol|) (|List| (|Symbol|))))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|JetBundleExpression| *4)))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *2
                   (|List|
                    (|JetBundleExpression| (|JetBundleSymAna| *4 *5 *6))))
       (|isDomain| *1 (|SymmetryAnalysis| *4 *5 *6))
       (|ofType| *5 (|Union| (|Symbol|) (|List| (|Symbol|))))
       (|ofType| *6 (|Union| (|Symbol|) (|List| (|Symbol|))))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|List| (|JetBundleExpression| *4)))
       (|isDomain| *3 (|JetVectorField| *4 (|JetBundleExpression| *4)))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *1 (|SymmetryAnalysis| *4 *5 *6))
       (|ofType| *5 (|Union| (|Symbol|) (|List| (|Symbol|))))
       (|ofType| *6 (|Union| (|Symbol|) (|List| (|Symbol|))))))
 ((*1 *2 *2 *3 *4)
  (AND (|isDomain| *2 (|List| (|JetBundleExpression| *5)))
       (|isDomain| *3 (|List| *5))
       (|isDomain| *4 (|JetVectorField| *5 (|JetBundleExpression| *5)))
       (|ofCategory| *5 (|JetBundleCategory|))
       (|isDomain| *1 (|SymmetryAnalysis| *5 *6 *7))
       (|ofType| *6 (|Union| (|Symbol|) (|List| (|Symbol|))))
       (|ofType| *7 (|Union| (|Symbol|) (|List| (|Symbol|))))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|List| (|JetBundleExpression| (|JetBundleSymAna| *4 *5 *6))))
   (|ofCategory| *4 (|JetBundleCategory|))
   (|ofType| *5 (|Union| (|Symbol|) (|List| (|Symbol|))))
   (|ofType| *6 (|Union| (|Symbol|) (|List| (|Symbol|))))
   (|isDomain| *2
               (|List|
                (|JetBundleLinearFunction| (|JetBundleSymAna| *4 *5 *6)
                                           (|JetBundleXExpression|
                                            (|JetBundleSymAna| *4 *5 *6)))))
   (|isDomain| *1 (|SymmetryAnalysis| *4 *5 *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|JetBundleExpression| *4))
       (|isDomain| *1 (|JetCoordinateTransformation| *3 *4 *5 *6))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|ofCategory| *4 (|JetBundleCategory|)) (|ofType| *5 (|Vector| *2))
       (|ofType| *6 (|Vector| *2))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|JetBundleExpression| *4))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *2 (|JetBundleExpression| *5))
       (|isDomain| *1 (|JetCoordinateTransformation| *4 *5 *6 *7))
       (|ofCategory| *5 (|JetBundleCategory|)) (|ofType| *6 (|Vector| *2))
       (|ofType| *7 (|Vector| *2))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|DistributedMultivariatePolynomial| *4 *5))
       (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|GcdDomain|))
       (|isDomain| *2 (|HomogeneousDistributedMultivariatePolynomial| *4 *5))
       (|isDomain| *1 (|LinGroebnerPackage| *4 *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|JetBundleExpression| *4))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *2 (|JetBundleExpression| (|JetBundleSymAna| *4 *5 *6)))
       (|isDomain| *1 (|SymmetryAnalysis| *4 *5 *6))
       (|ofType| *5 (|Union| (|Symbol|) (|List| (|Symbol|))))
       (|ofType| *6 (|Union| (|Symbol|) (|List| (|Symbol|))))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|JetVectorField| *3 (|JetBundleExpression| *3)))
       (|isDomain| *1 (|SymmetryAnalysis| *3 *4 *5))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|ofType| *4 (|Union| (|Symbol|) (|List| (|Symbol|))))
       (|ofType| *5 (|Union| (|Symbol|) (|List| (|Symbol|))))))) 
(((*1 *1 *2 *2)
  (AND
   (|isDomain| *2
               (|Union| (|:| I (|Expression| (|Integer|)))
                        (|:| F (|Expression| (|Float|)))
                        (|:| CF (|Expression| (|Complex| (|Float|))))
                        (|:| |switch| (|Switch|))))
   (|isDomain| *1 (|Switch|))))) 
(((*1 *1 *2 *2)
  (AND
   (|isDomain| *2
               (|Union| (|:| I (|Expression| (|Integer|)))
                        (|:| F (|Expression| (|Float|)))
                        (|:| CF (|Expression| (|Complex| (|Float|))))
                        (|:| |switch| (|Switch|))))
   (|isDomain| *1 (|Switch|))))) 
(((*1 *1 *2 *2)
  (AND
   (|isDomain| *2
               (|Union| (|:| I (|Expression| (|Integer|)))
                        (|:| F (|Expression| (|Float|)))
                        (|:| CF (|Expression| (|Complex| (|Float|))))
                        (|:| |switch| (|Switch|))))
   (|isDomain| *1 (|Switch|))))) 
(((*1 *1 *2 *2)
  (AND
   (|isDomain| *2
               (|Union| (|:| I (|Expression| (|Integer|)))
                        (|:| F (|Expression| (|Float|)))
                        (|:| CF (|Expression| (|Complex| (|Float|))))
                        (|:| |switch| (|Switch|))))
   (|isDomain| *1 (|Switch|))))) 
(((*1 *1 *2 *2)
  (AND
   (|isDomain| *2
               (|Union| (|:| I (|Expression| (|Integer|)))
                        (|:| F (|Expression| (|Float|)))
                        (|:| CF (|Expression| (|Complex| (|Float|))))
                        (|:| |switch| (|Switch|))))
   (|isDomain| *1 (|Switch|))))) 
(((*1 *1 *2 *2)
  (AND
   (|isDomain| *2
               (|Union| (|:| I (|Expression| (|Integer|)))
                        (|:| F (|Expression| (|Float|)))
                        (|:| CF (|Expression| (|Complex| (|Float|))))
                        (|:| |switch| (|Switch|))))
   (|isDomain| *1 (|Switch|))))) 
(((*1 *1 *2 *2)
  (AND
   (|isDomain| *2
               (|Union| (|:| I (|Expression| (|Integer|)))
                        (|:| F (|Expression| (|Float|)))
                        (|:| CF (|Expression| (|Complex| (|Float|))))
                        (|:| |switch| (|Switch|))))
   (|isDomain| *1 (|Switch|))))) 
(((*1 *1 *1) (|isDomain| *1 (|Switch|)))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|Union| (|:| I (|Expression| (|Integer|)))
                        (|:| F (|Expression| (|Float|)))
                        (|:| CF (|Expression| (|Complex| (|Float|))))
                        (|:| |switch| (|Switch|))))
   (|isDomain| *1 (|Switch|))))) 
(((*1 *2 *1 *3 *3 *4)
  (AND (|isDomain| *3 (|Mapping| (|OutputForm|) (|OutputForm|) (|OutputForm|)))
       (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|OutputForm|))
       (|isDomain| *1 (|ListMonoidOps| *5 *6 *7))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|AbelianMonoid|))
       (|ofType| *7 *6)))
 ((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|OutputForm|))
       (|isDomain| *1 (|SparseUnivariateSkewPolynomial| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofType| *4 (|Automorphism| *3))
       (|ofType| *5 (|Mapping| *3 *3))))
 ((*1 *1 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|OutputForm|))))
 ((*1 *1 *2) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|OutputForm|))))
 ((*1 *1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|OutputForm|))))
 ((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|OutputForm|))
       (|isDomain| *1 (|SparseUnivariatePolynomial| *3))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *5 (|Segment| *3))
       (|ofCategory| *3 (|PolynomialCategory| *7 *6 *4))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *7 (|IntegralDomain|))
       (|isDomain| *2 (|Record| (|:| |num| *3) (|:| |den| (|Integer|))))
       (|isDomain| *1 (|InnerPolySum| *6 *4 *7 *3))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *6 (|IntegralDomain|))
       (|isDomain| *2 (|Record| (|:| |num| *3) (|:| |den| (|Integer|))))
       (|isDomain| *1 (|InnerPolySum| *5 *4 *6 *3))
       (|ofCategory| *3 (|PolynomialCategory| *6 *5 *4))))
 ((*1 *1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *1 (|FunctionSpaceSum| *4 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *4) (|CombinatorialOpsCategory|)
                             (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|SegmentBinding| *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *4) (|CombinatorialOpsCategory|)
                             (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *4
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *1 (|FunctionSpaceSum| *4 *2))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Polynomial| *5)) (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))))
       (|isDomain| *2 (|Fraction| (|Polynomial| *5)))
       (|isDomain| *1 (|RationalFunctionSum| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
       (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))))
       (|isDomain| *2
                   (|Union| (|Fraction| (|Polynomial| *5)) (|Expression| *5)))
       (|isDomain| *1 (|RationalFunctionSum| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|SegmentBinding| (|Polynomial| *5)))
       (|isDomain| *3 (|Polynomial| *5))
       (|ofCategory| *5
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))))
       (|isDomain| *2 (|Fraction| (|Polynomial| *5)))
       (|isDomain| *1 (|RationalFunctionSum| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|SegmentBinding| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
       (|ofCategory| *5
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))))
       (|isDomain| *2
                   (|Union| (|Fraction| (|Polynomial| *5)) (|Expression| *5)))
       (|isDomain| *1 (|RationalFunctionSum| *5))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *1 (|Collection| *3))))
 ((*1 *1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|Sequence| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|Distribution| *3))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |exponent| (|NonNegativeInteger|))
                          (|:| |center| *4) (|:| |num| *4))))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
   (|ofCategory| *3 (|Join| (|Field|) (|CharacteristicZero|)))
   (|isDomain| *1 (|FullPartialFractionExpansion| *3 *4))))
 ((*1 *1 *2 *3 *4)
  (AND
   (|isDomain| *2
               (|Union| (|:| |fst| (|FortranScalarType|))
                        (|:| |void| #1="void")))
   (|isDomain| *3 (|List| (|Polynomial| (|Integer|))))
   (|isDomain| *4 (|Boolean|)) (|isDomain| *1 (|FortranType|))))
 ((*1 *1 *2 *3 *4)
  (AND
   (|isDomain| *2 (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| #1#)))
   (|isDomain| *3 (|List| (|Symbol|))) (|isDomain| *4 (|Boolean|))
   (|isDomain| *1 (|FortranType|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Record| (|:| |k| *4) (|:| |c| *3))))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|Comparable|))
       (|ofCategory| *1 (|IndexedDirectProductCategory| *3 *4))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Stream| *3)) (|isDomain| *1 (|InfiniteTuple| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|LieAlgebra| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|LyndonWord| *3)) (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *1 (|LiePolynomial| *3 *4))
       (|ofCategory| *4 (|CommutativeRing|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|LyndonWord| *3)) (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *1 (|LiePolynomial| *3 *4))
       (|ofCategory| *4 (|CommutativeRing|))))
 ((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|LyndonWord| *3)) (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *1 (|LiePolynomial| *3 *4))
       (|ofCategory| *4 (|CommutativeRing|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| (|List| *3))))
       (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|ThreeDimensionalMatrix| *3))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *1 (|ModuleMonomial| *2 *3 *4))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|SetCategory|))
       (|ofType| *4
        (|Mapping| (|Boolean|) (|Record| (|:| |index| *2) (|:| |exponent| *3))
                   (|Record| (|:| |index| *2) (|:| |exponent| *3))))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| (|OutputForm|))) (|isDomain| *2 (|OutputForm|))
       (|isDomain| *1 (|OutputFormTools|))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2 (|List| (|Record| (|:| |key| (|Symbol|)) (|:| |entry| *4))))
   (|ofCategory| *4 (|SetCategory|))
   (|isDomain| *1 (|PatternMatchResult| *3 *4))
   (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *1 (|Product| *2 *3)) (|ofCategory| *2 (|SetCategory|))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| *5))
       (|ofCategory| *5 (|Join| (|SetCategory|) (|Aggregate|)))
       (|isDomain| *2 (|List| (|SplittingNode| *3 *5)))
       (|isDomain| *1 (|SplittingNode| *3 *5))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Record| (|:| |val| *4) (|:| |tower| *5))))
       (|ofCategory| *4 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *5 (|Join| (|SetCategory|) (|Aggregate|)))
       (|isDomain| *2 (|List| (|SplittingNode| *4 *5)))
       (|isDomain| *1 (|SplittingNode| *4 *5))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Record| (|:| |val| *3) (|:| |tower| *4)))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *4 (|Join| (|SetCategory|) (|Aggregate|)))
       (|isDomain| *1 (|SplittingNode| *3 *4))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *1 (|SplittingNode| *2 *3))
       (|ofCategory| *2 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))))
 ((*1 *1 *2 *3 *4)
  (AND (|isDomain| *4 (|Boolean|)) (|isDomain| *1 (|SplittingNode| *2 *3))
       (|ofCategory| *2 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))))
 ((*1 *1 *2 *3 *2 *4)
  (AND (|isDomain| *4 (|List| *3))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))
       (|isDomain| *1 (|SplittingTree| *2 *3))
       (|ofCategory| *2 (|Join| (|SetCategory|) (|Aggregate|)))))
 ((*1 *1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| (|SplittingNode| *2 *3)))
       (|ofCategory| *2 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))
       (|isDomain| *1 (|SplittingTree| *2 *3))))
 ((*1 *1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| (|SplittingTree| *2 *3)))
       (|isDomain| *1 (|SplittingTree| *2 *3))
       (|ofCategory| *2 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|SplittingNode| *3 *4))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *4 (|Join| (|SetCategory|) (|Aggregate|)))
       (|isDomain| *1 (|SplittingTree| *3 *4))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *1 (|SuchThat| *2 *3)) (|ofCategory| *2 (|SetCategory|))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1) (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *4) (|PatternMatchable| *3)
                             (|ConvertibleTo| (|Pattern| *3))))
       (|isDomain| *1 (|RewriteRule| *3 *4 *2))
       (|ofCategory| *4
                     (|Join| (|Ring|) (|PatternMatchable| *3) (|Comparable|)
                             (|ConvertibleTo| (|Pattern| *3))))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|SetCategory|)) (|isDomain| *1 (|SuchThat| *2 *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1) (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *4) (|PatternMatchable| *3)
                             (|ConvertibleTo| (|Pattern| *3))))
       (|isDomain| *1 (|RewriteRule| *3 *4 *2))
       (|ofCategory| *4
                     (|Join| (|Ring|) (|PatternMatchable| *3) (|Comparable|)
                             (|ConvertibleTo| (|Pattern| *3))))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|SetCategory|)) (|isDomain| *1 (|SuchThat| *3 *2))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|RecursiveAggregate| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SubSpace| *3 *4))
       (|ofType| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SubSpace| *3 *4))
       (|ofType| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SubSpace| *3 *4))
       (|ofType| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|SubSpace| *2 *3)) (|ofType| *2 (|PositiveInteger|))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|SubSpace| *3 *4)) (|ofType| *3 (|PositiveInteger|))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|Type|)) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RecursiveAggregate| *3))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|SubSpace| *3 *4)))
       (|isDomain| *1 (|SubSpace| *3 *4)) (|ofType| *3 (|PositiveInteger|))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|SubSpace| *3 *4)) (|ofType| *3 (|PositiveInteger|))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|SubSpace| *2 *3)) (|ofType| *2 (|PositiveInteger|))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|SubSpace| *2 *3)) (|ofType| *2 (|PositiveInteger|))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|FiniteGraph| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|LinearAggregate| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *2 *1 *1)
  (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3 *3))
       (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|LinearAggregate| *3)) (|ofCategory| *3 (|Type|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|PriorityQueueAggregate| *2))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|FiniteSimplicialComplex| *2))
       (|ofCategory| *2 (|AbelianGroup|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *2)) (|ofCategory| *2 (|Ring|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|ThreeSpaceCategory| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|SubSpace| *3 *4)))
       (|isDomain| *1 (|SubSpace| *3 *4)) (|ofType| *3 (|PositiveInteger|))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|SubSpace| *2 *3)) (|ofType| *2 (|PositiveInteger|))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Point| *5)) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|SubSpace| *4 *5)) (|ofType| *4 (|PositiveInteger|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|SubSpace| *4 *5)) (|ofType| *4 (|PositiveInteger|))
       (|ofCategory| *5 (|Ring|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *3 (|Point| *5)) (|ofCategory| *5 (|Ring|))
       (|isDomain| *1 (|SubSpace| *4 *5)) (|ofType| *4 (|PositiveInteger|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Point| *4)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|SubSpace| *3 *4)) (|ofType| *3 (|PositiveInteger|))))) 
(((*1 *1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|Point| *5)) (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *5 (|Ring|)) (|isDomain| *1 (|SubSpace| *4 *5))
       (|ofType| *4 (|PositiveInteger|))))) 
(((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *3 (|Point| *5))
       (|ofCategory| *5 (|Ring|)) (|isDomain| *1 (|SubSpace| *4 *5))
       (|ofType| *4 (|PositiveInteger|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|SubSpace| *4 *5)) (|ofType| *4 (|PositiveInteger|))
       (|ofCategory| *5 (|Ring|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *3 (|Point| *5)) (|ofCategory| *5 (|Ring|))
       (|isDomain| *1 (|SubSpace| *4 *5)) (|ofType| *4 (|PositiveInteger|))))) 
(((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *3 (|Boolean|)) (|isDomain| *1 (|SubSpace| *4 *5))
       (|ofType| *4 (|PositiveInteger|)) (|ofCategory| *5 (|Ring|))))) 
(((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *3 (|SubSpaceComponentProperty|))
       (|isDomain| *1 (|SubSpace| *4 *5)) (|ofType| *4 (|PositiveInteger|))
       (|ofCategory| *5 (|Ring|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|SubSpace| *3 *4)) (|ofType| *3 (|PositiveInteger|))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Point| *4)) (|isDomain| *1 (|SubSpace| *3 *4))
       (|ofType| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|SubSpace| *3 *4)) (|ofType| *3 (|PositiveInteger|))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SubSpace| *3 *4))
       (|ofType| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|SubSpaceComponentProperty|))
       (|isDomain| *1 (|SubSpace| *3 *4)) (|ofType| *3 (|PositiveInteger|))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|SubSpace| *3 *4)) (|ofType| *3 (|PositiveInteger|))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|SubSpace| *2 *3)) (|ofType| *2 (|PositiveInteger|))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Point| *4))) (|isDomain| *1 (|SubSpace| *3 *4))
       (|ofType| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|FiniteAbelianMonoidRing| *2 *3))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *3 (|OrderedAbelianMonoid|))
       (|ofCategory| *2 (|GcdDomain|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *2 *3 *4))
       (|ofCategory| *2 (|UniqueFactorizationDomain|))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| *3)))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|PolynomialCategory| *3 *4 *2))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|GcdDomain|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|PolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|GcdDomain|))))
 ((*1 *2 *2 *3)
  (AND (|ofCategory| *3 (|EuclideanDomain|))
       (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *1 (|SubResultantPackage| *3 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|PrimitiveArray| *3))
       (|isDomain| *1 (|SubResultantPackage| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *1 *1) (|ofCategory| *1 (|ArcHyperbolicFunctionCategory|)))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))) 
(((*1 *1 *1) (|ofCategory| *1 (|ArcHyperbolicFunctionCategory|)))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))) 
(((*1 *1 *1) (|ofCategory| *1 (|ArcHyperbolicFunctionCategory|)))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))) 
(((*1 *1 *1) (|ofCategory| *1 (|ArcHyperbolicFunctionCategory|)))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))) 
(((*1 *1 *1) (|ofCategory| *1 (|ArcHyperbolicFunctionCategory|)))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))) 
(((*1 *1 *1) (|ofCategory| *1 (|ArcHyperbolicFunctionCategory|)))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *1 *1) (|ofCategory| *1 (|HyperbolicFunctionCategory|)))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *1 *1) (|ofCategory| *1 (|HyperbolicFunctionCategory|)))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *1 *1) (|ofCategory| *1 (|HyperbolicFunctionCategory|)))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FortranExpression| *2 *3 *4))
       (|ofType| *2 (|List| (|Symbol|))) (|ofType| *3 (|List| (|Symbol|)))
       (|ofCategory| *4 (|FortranMachineTypeCategory|))))
 ((*1 *1 *1) (|ofCategory| *1 (|HyperbolicFunctionCategory|)))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FortranExpression| *2 *3 *4))
       (|ofType| *2 (|List| (|Symbol|))) (|ofType| *3 (|List| (|Symbol|)))
       (|ofCategory| *4 (|FortranMachineTypeCategory|))))
 ((*1 *1 *1) (|ofCategory| *1 (|HyperbolicFunctionCategory|)))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FortranExpression| *2 *3 *4))
       (|ofType| *2 (|List| (|Symbol|))) (|ofType| *3 (|List| (|Symbol|)))
       (|ofCategory| *4 (|FortranMachineTypeCategory|))))
 ((*1 *1 *1) (|ofCategory| *1 (|HyperbolicFunctionCategory|)))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))) 
(((*1 *1 *1) (|ofCategory| *1 (|ArcTrigonometricFunctionCategory|)))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))) 
(((*1 *1 *1) (|ofCategory| *1 (|ArcTrigonometricFunctionCategory|)))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))) 
(((*1 *1 *1) (|ofCategory| *1 (|ArcTrigonometricFunctionCategory|)))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))) 
(((*1 *1 *1) (|ofCategory| *1 (|ArcTrigonometricFunctionCategory|)))
 ((*1 *1 *1 *1) (|isDomain| *1 (|DoubleFloat|)))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FortranExpression| *2 *3 *4))
       (|ofType| *2 (|List| (|Symbol|))) (|ofType| *3 (|List| (|Symbol|)))
       (|ofCategory| *4 (|FortranMachineTypeCategory|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|Float|)))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))) 
(((*1 *1 *1) (|ofCategory| *1 (|ArcTrigonometricFunctionCategory|)))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FortranExpression| *2 *3 *4))
       (|ofType| *2 (|List| (|Symbol|))) (|ofType| *3 (|List| (|Symbol|)))
       (|ofCategory| *4 (|FortranMachineTypeCategory|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))) 
(((*1 *1 *1) (|ofCategory| *1 (|ArcTrigonometricFunctionCategory|)))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *1 (|ElementaryFunctionsUnivariateLaurentSeries| *3 *4 *2))
       (|ofCategory| *2 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|UnivariateLaurentSeriesCategory| *3))
       (|isDomain| *1
                   (|ElementaryFunctionsUnivariatePuiseuxSeries| *3 *4 *2 *5))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *4))
       (|ofCategory| *5 (|PartialTranscendentalFunctions| *4))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FortranExpression| *2 *3 *4))
       (|ofType| *2 (|List| (|Symbol|))) (|ofType| *3 (|List| (|Symbol|)))
       (|ofCategory| *4 (|FortranMachineTypeCategory|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|StreamTranscendentalFunctionsNonCommutative| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Stream| *4))
       (|ofCategory| *4 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *2
                   (|Record| (|:| |sinh| (|Stream| *4))
                             (|:| |cosh| (|Stream| *4))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Stream| *4))
       (|ofCategory| *4 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *2
                   (|Record| (|:| |sin| (|Stream| *4))
                             (|:| |cos| (|Stream| *4))))
       (|isDomain| *1 (|StreamTranscendentalFunctions| *4))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Field|))
       (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *4 (|Integer|)))
       (|isDomain| *5 (|Mapping| (|Stream| *4))) (|ofCategory| *4 (|Field|))
       (|ofCategory| *4 (|Ring|)) (|isDomain| *2 (|Stream| *4))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *4))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Field|))
       (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|Stream| *4)) (|ofCategory| *4 (|Algebra| *3))
       (|ofCategory| *4 (|Ring|)) (|isDomain| *3 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Stream| (|Stream| *4))) (|isDomain| *2 (|Stream| *4))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *4))
       (|ofCategory| *4 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Mapping| (|Stream| *3))) (|isDomain| *2 (|Stream| *3))
       (|isDomain| *1 (|StreamExponentialSeriesOperations| *3))
       (|ofCategory| *3 (|CommutativeRing|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Mapping| (|Stream| *3))) (|isDomain| *2 (|Stream| *3))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *2 *3 *3)
  (AND (|isDomain| *2 (|Stream| *4)) (|isDomain| *3 (|Integer|))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Stream| (|Stream| *4))) (|isDomain| *2 (|Stream| *4))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *4))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Stream| (|Stream| *4))) (|isDomain| *2 (|Stream| *4))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *4))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|Stream| *4)) (|isDomain| *3 (|Mapping| *4 (|Integer|)))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *4))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|StreamExponentialSeriesOperations| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4
                     (|Join| (|Comparable|) (|PolynomialFactorizationExplicit|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))
                             (|CharacteristicZero|)))
       (|isDomain| *1 (|ODEIntegration| *4 *2))
       (|ofCategory| *2
                     (|Join| (|AlgebraicallyClosedFunctionSpace| *4)
                             (|TranscendentalFunctionCategory|)
                             (|PrimitiveFunctionCategory|)))))
 ((*1 *1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|Stream| *3))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Stream| (|Integer|)))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *4))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Stream| (|Integer|)))
       (|isDomain| *1 (|StreamTaylorSeriesOperations| *4))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *1 *1)
  (|partial| AND (|isDomain| *1 (|CliffordAlgebra| *2 *3 *4))
   (|ofType| *2 (|PositiveInteger|)) (|ofCategory| *3 (|Field|))
   (|ofType| *4 (|SquareMatrix| *2 *3))))
 ((*1 *1 *1)
  (|partial| AND (|ofCategory| *2 (|CommutativeRing|))
   (|isDomain| *1 (|EuclideanModularRing| *2 *3 *4 *5 *6 *7))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))
   (|ofCategory| *4 (|AbelianMonoid|)) (|ofType| *5 (|Mapping| *3 *3 *4))
   (|ofType| *6 (|Mapping| (|Union| *4 "failed") *4 *4))
   (|ofType| *7 (|Mapping| (|Union| *3 "failed") *3 *3 *4))))
 ((*1 *1 *1)
  (|partial| AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *2))
   (|ofCategory| *2 (|CommutativeRing|)) (|ofCategory| *2 (|IntegralDomain|))))
 ((*1 *1 *1) (|partial| |ofCategory| *1 (|MagmaWithUnit|)))
 ((*1 *1 *1)
  (|partial| AND (|isDomain| *1 (|ModularRing| *2 *3 *4 *5 *6))
   (|ofCategory| *2 (|CommutativeRing|)) (|ofCategory| *3 (|AbelianMonoid|))
   (|ofType| *4 (|Mapping| *2 *2 *3))
   (|ofType| *5 (|Mapping| (|Union| *3 "failed") *3 *3))
   (|ofType| *6 (|Mapping| (|Union| *2 "failed") *2 *2 *3))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|MoebiusTransform| *2)) (|ofCategory| *2 (|Field|))))
 ((*1 *1)
  (AND (|isDomain| *1 (|MoebiusTransform| *2)) (|ofCategory| *2 (|Field|))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2 (|Record| (|:| |num| *3) (|:| |den| *3)))
       (|isDomain| *1 (|NormalizationPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))
 ((*1 *2 *2 *1)
  (|partial| AND (|ofCategory| *1 (|RealRootCharacterizationCategory| *3 *2))
   (|ofCategory| *3 (|Join| (|OrderedRing|) (|Field|)))
   (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))
 ((*1 *2 *2)
  (|partial| AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
   (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))) 
(((*1 *1 *1 *2)
  (|partial| AND (|ofCategory| *1 (|ComplexCategory| *2))
   (|ofCategory| *2 (|CommutativeRing|)) (|ofCategory| *2 (|IntegralDomain|))))
 ((*1 *1 *1 *1) (|partial| |ofCategory| *1 (|EntireRing|)))
 ((*1 *1 *1 *2)
  (|partial| AND (|ofCategory| *1 (|FiniteAbelianMonoidRing| *2 *3))
   (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
   (|ofCategory| *3 (|OrderedAbelianMonoid|))
   (|ofCategory| *2 (|EntireRing|))))
 ((*1 *1 *1 *2)
  (|partial| AND (|ofCategory| *1 (|MatrixCategory| *2 *3 *4))
   (|ofCategory| *2 (|AbelianMonoid|))
   (|ofCategory| *3 (|FiniteLinearAggregate| *2))
   (|ofCategory| *4 (|FiniteLinearAggregate| *2))
   (|ofCategory| *2 (|IntegralDomain|))))
 ((*1 *1 *1 *1) (|partial| |isDomain| *1 (|NonNegativeInteger|)))
 ((*1 *1 *1 *2)
  (|partial| AND (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *2))
   (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|EntireRing|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *1 *2)
  (|partial| AND (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *2 *5 *6))
   (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
   (|ofCategory| *5 (|DirectProductCategory| *4 *2))
   (|ofCategory| *6 (|DirectProductCategory| *3 *2))
   (|ofCategory| *2 (|IntegralDomain|))))
 ((*1 *2 *2 *2)
  (|partial| AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|Ring|))
   (|isDomain| *1 (|StreamTaylorSeriesOperations| *3))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|String|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|SingleInteger|))) (|isDomain| *1 (|String|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|Stream| *3))))) 
(((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *4 (|Type|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|Stream| *4))))) 
(((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2
                   (|Record| (|:| |cycle?| (|Boolean|))
                             (|:| |prefix| (|NonNegativeInteger|))
                             (|:| |period| (|NonNegativeInteger|))))
       (|isDomain| *1 (|Stream| *4)) (|ofCategory| *4 (|Type|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| (|Stream| *3))) (|isDomain| *1 (|Stream| *3))
       (|ofCategory| *3 (|Type|))))) 
(((*1 *1 *2 *1) (AND (|isDomain| *1 (|List| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|SequenceCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *1 *2 *1) (AND (|isDomain| *1 (|Stream| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|OutputForm|))
       (|isDomain| *1 (|Stream| *4)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *4 (|Type|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|Stream| *3))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *3 (|Type|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Stream| *3))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *3 (|Type|))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|InfiniteTuple| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|SequenceCategory| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Stream| *3))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|Stream| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|Stream| *3))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|InfiniteTuple| *3))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|Stream| *3))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|InfiniteTuple| *3))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|Stream| *3))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|Distribution| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Distribution| *3))
       (|ofCategory| *3
                     (|Join| (|CommutativeRing|)
                             (|Algebra| (|Fraction| (|Integer|)))))
       (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *3))
       (|ofCategory| *5 (|UnivariateLaurentSeriesConstructorCategory| *3 *4))
       (|isDomain| *1 (|STransformPackage| *3 *4 *5 *6))
       (|ofCategory| *6 (|UnivariatePuiseuxSeriesConstructorCategory| *3 *5))))) 
(((*1 *1 *2 *2 *3)
  (AND (|isDomain| *3 (|Sequence| *4)) (|ofCategory| *4 (|Algebra| *2))
       (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|Distribution| *4))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |puiseux| (|Fraction| (|Integer|)))
                         (|:| |laurent| (|Fraction| (|Integer|)))
                         (|:| |coef| (|Sequence| *3))))
   (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
   (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *1 (|Distribution| *3))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|CommutativeRing|)
                         (|Algebra| (|Fraction| (|Integer|)))))
   (|ofCategory| *5 (|UnivariateTaylorSeriesCategory| *4))
   (|ofCategory| *6 (|UnivariateLaurentSeriesConstructorCategory| *4 *5))
   (|isDomain| *2 (|Distribution| *4))
   (|isDomain| *1 (|STransformPackage| *4 *5 *6 *3))
   (|ofCategory| *3 (|UnivariatePuiseuxSeriesConstructorCategory| *4 *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Distribution| *4))
       (|ofCategory| *4
                     (|Join| (|CommutativeRing|)
                             (|Algebra| (|Fraction| (|Integer|)))))
       (|ofCategory| *5 (|UnivariateTaylorSeriesCategory| *4))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *4 *6))
       (|isDomain| *1 (|STransformPackage| *4 *5 *6 *2))
       (|ofCategory| *6 (|UnivariateLaurentSeriesConstructorCategory| *4 *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Distribution| *4))
       (|ofCategory| *4
                     (|Join| (|CommutativeRing|)
                             (|Algebra| (|Fraction| (|Integer|)))))
       (|ofCategory| *5 (|UnivariateTaylorSeriesCategory| *4))
       (|ofCategory| *2 (|UnivariatePuiseuxSeriesConstructorCategory| *4 *6))
       (|isDomain| *1 (|STransformPackage| *4 *5 *6 *2))
       (|ofCategory| *6 (|UnivariateLaurentSeriesConstructorCategory| *4 *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Distribution| *4))
       (|ofCategory| *4
                     (|Join| (|CommutativeRing|)
                             (|Algebra| (|Fraction| (|Integer|)))))
       (|ofCategory| *5 (|UnivariateLaurentSeriesConstructorCategory| *4 *2))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *4))
       (|isDomain| *1 (|STransformPackage| *4 *2 *5 *6))
       (|ofCategory| *6 (|UnivariatePuiseuxSeriesConstructorCategory| *4 *5))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|STransform| *2)) (|ofCategory| *2 (|SPointCategory|))))) 
(((*1 *2 *1 *2)
  (AND (|isDomain| *1 (|STransform| *2)) (|ofCategory| *2 (|SPointCategory|))))) 
(((*1 *1)
  (AND (|isDomain| *1 (|DenavitHartenbergMatrix| *2))
       (|ofCategory| *2
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)))))
 ((*1 *1)
  (AND (|isDomain| *1 (|STransform| *2)) (|ofCategory| *2 (|SPointCategory|))))) 
(((*1 *1 *2 *2 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *1 (|STransform| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| (|DoubleFloat|))))
       (|isDomain| *1 (|STransform| *3)) (|ofCategory| *3 (|SPointCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|SPointCategory|))
       (|isDomain| *1 (|STransform| *3))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|Mapping| (|Complex| (|DoubleFloat|))
                          (|Complex| (|DoubleFloat|))))
   (|isDomain| *1 (|STransform| *3)) (|ofCategory| *3 (|SPointCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|DoubleFloat|)))
       (|isDomain| *1 (|STransform| *3)) (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Stream| *4)) (|isDomain| *3 (|Mapping| (|List| *4) *4))
       (|ofCategory| *4 (|Type|)) (|isDomain| *1 (|StreamTensor| *4))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|StreamExponentialSeriesOperations| *3))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|StreamExponentialSeriesOperations| *3))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))))
 ((*1 *1) (|ofCategory| *1 (|StepThrough|)))) 
(((*1 *1 *1) (|partial| |ofCategory| *1 (|StepThrough|)))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|StreamAggregate| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|StreamAggregate| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|Stack| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|AbelianMonoidRing| *2 *3))
       (|ofCategory| *3 (|OrderedAbelianMonoid|))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|Ring|)) (|isDomain| *1 (|AntiSymm| *2 *3))
       (|ofType| *3 (|List| (|Symbol|)))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Expression| *3))
       (|isDomain| *1 (|DeRhamComplex| *3 *4))
       (|ofCategory| *3 (|Join| (|Ring|) (|Comparable|)))
       (|ofType| *4 (|List| (|Symbol|)))))
 ((*1 *2 *1)
  (AND (|ofType| *3 (|List| (|Symbol|)))
       (|ofCategory| *5
                     (|DirectProductCategory| (|#| *3) (|NonNegativeInteger|)))
       (|ofType| *6
        (|Mapping| (|Boolean|) (|Record| (|:| |index| *4) (|:| |exponent| *5))
                   (|Record| (|:| |index| *4) (|:| |exponent| *5))))
       (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|GeneralModulePolynomial| *3 *2 *4 *5 *6 *7))
       (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *7
                     (|PolynomialCategory| *2 *5 (|OrderedVariableList| *3)))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|IndexedDirectProductCategory| *2 *3))
       (|ofCategory| *3 (|Comparable|)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|IntegralDomain|))
       (|isDomain| *1 (|LaurentPolynomial| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|PowerSeriesCategory| *2 *3 *4))
       (|ofCategory| *3 (|OrderedAbelianMonoid|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *2))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|SolvableSkewPolynomialCategory| *2 *3 *4))
       (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|AbelianMonoidRing| *2 *3))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *3 (|OrderedAbelianMonoid|))))
 ((*1 *2 *1)
  (AND (|ofType| *3 (|List| (|Symbol|))) (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *6
                     (|DirectProductCategory| (|#| *3) (|NonNegativeInteger|)))
       (|ofType| *7
        (|Mapping| (|Boolean|) (|Record| (|:| |index| *5) (|:| |exponent| *6))
                   (|Record| (|:| |index| *5) (|:| |exponent| *6))))
       (|isDomain| *2 (|ModuleMonomial| *5 *6 *7))
       (|isDomain| *1 (|GeneralModulePolynomial| *3 *4 *5 *6 *7 *8))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *8
                     (|PolynomialCategory| *4 *6 (|OrderedVariableList| *3)))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|IndexedDirectProductCategory| *2 *3))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|Comparable|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|PowerSeriesCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoid|))
       (|ofCategory| *4 (|OrderedSet|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|SolvableSkewPolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))))) 
(((*1 *1 *2 *3)
  (AND (|ofCategory| *1 (|AbelianMonoidRing| *2 *3))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *3 (|OrderedAbelianMonoid|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|List| (|PositiveInteger|)))
       (|isDomain| *1 (|CliffordAlgebra| *4 *2 *5))
       (|ofType| *4 (|PositiveInteger|)) (|ofCategory| *2 (|Field|))
       (|ofType| *5 (|SquareMatrix| *4 *2))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|ModuleMonomial| *5 *6 *7))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6
                     (|DirectProductCategory| (|#| *4) (|NonNegativeInteger|)))
       (|ofType| *7
        (|Mapping| (|Boolean|) (|Record| (|:| |index| *5) (|:| |exponent| *6))
                   (|Record| (|:| |index| *5) (|:| |exponent| *6))))
       (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|GeneralModulePolynomial| *4 *2 *5 *6 *7 *8))
       (|ofCategory| *8
                     (|PolynomialCategory| *2 *6 (|OrderedVariableList| *4)))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *6))
       (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *1 (|MaybeSkewPolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|MaybeSkewPolynomialCategory| *4 *5 *2))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *2 *3)
  (AND (|ofCategory| *1 (|IndexedDirectProductCategory| *2 *3))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|Comparable|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *2 (|IntegralDomain|))
       (|isDomain| *1 (|LaurentPolynomial| *2 *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *2))))
 ((*1 *1 *2 *3)
  (AND (|ofCategory| *1 (|MonoidRingCategory| *2 *3))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|Monoid|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *5))
       (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *1 (|MultivariateTaylorSeriesCategory| *4 *5))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedSet|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|MultivariateTaylorSeriesCategory| *4 *2))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *6)) (|isDomain| *3 (|List| *5))
       (|ofCategory| *1 (|PowerSeriesCategory| *4 *5 *6))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedAbelianMonoid|))
       (|ofCategory| *6 (|OrderedSet|))))
 ((*1 *1 *1 *2 *3)
  (AND (|ofCategory| *1 (|PowerSeriesCategory| *4 *3 *2))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoid|))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *2 *3)
  (AND (|ofCategory| *1 (|SolvableSkewPolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))))) 
(((*1 *2 *3 *1 *4 *4 *4 *4 *4)
  (AND (|isDomain| *4 (|Boolean|)) (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *2 (|List| (|RegularTriangularSet| *5 *6 *7 *3)))
       (|isDomain| *1 (|RegularTriangularSet| *5 *6 *7 *3))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *1 (|RegularTriangularSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|RegularTriangularSetCategory| *3 *4 *5 *2))
       (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *2 (|RecursivePolynomialCategory| *3 *4 *5))))
 ((*1 *2 *3 *1 *4 *4 *4 *4 *4)
  (AND (|isDomain| *4 (|Boolean|)) (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *2 (|List| (|SquareFreeRegularTriangularSet| *5 *6 *7 *3)))
       (|isDomain| *1 (|SquareFreeRegularTriangularSet| *5 *6 *7 *3))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))))) 
(((*1 *2 *3 *4 *4 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *2 (|List| (|RegularTriangularSet| *5 *6 *7 *8)))
       (|isDomain| *1 (|RegularTriangularSet| *5 *6 *7 *8))))
 ((*1 *2 *3 *4 *4 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *2 (|List| (|SquareFreeRegularTriangularSet| *5 *6 *7 *8)))
       (|isDomain| *1 (|SquareFreeRegularTriangularSet| *5 *6 *7 *8))))) 
(((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *2
                   (|Record| (|:| |val| (|List| *8))
                             (|:| |towers|
                                  (|List|
                                   (|RegularTriangularSet| *5 *6 *7 *8)))))
       (|isDomain| *1 (|RegularTriangularSet| *5 *6 *7 *8))))
 ((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *2
                   (|Record| (|:| |val| (|List| *8))
                             (|:| |towers|
                                  (|List|
                                   (|SquareFreeRegularTriangularSet| *5 *6 *7
                                                                     *8)))))
       (|isDomain| *1 (|SquareFreeRegularTriangularSet| *5 *6 *7 *8))))) 
(((*1 *2 *3 *4)
  (AND
   (|isDomain| *3 (|List| (|Record| (|:| |val| (|List| *8)) (|:| |tower| *9))))
   (|isDomain| *4 (|NonNegativeInteger|))
   (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
   (|ofCategory| *9 (|RegularTriangularSetCategory| *5 *6 *7 *8))
   (|ofCategory| *5 (|GcdDomain|))
   (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *7 (|OrderedSet|)) (|isDomain| *2 (|Void|))
   (|isDomain| *1 (|RegularSetDecompositionPackage| *5 *6 *7 *8 *9))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3 (|List| (|Record| (|:| |val| (|List| *8)) (|:| |tower| *9))))
   (|isDomain| *4 (|NonNegativeInteger|))
   (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
   (|ofCategory| *9 (|SquareFreeRegularTriangularSetCategory| *5 *6 *7 *8))
   (|ofCategory| *5 (|GcdDomain|))
   (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *7 (|OrderedSet|)) (|isDomain| *2 (|Void|))
   (|isDomain| *1
               (|SquareFreeRegularSetDecompositionPackage| *5 *6 *7 *8 *9))))) 
(((*1 *2 *3 *4 *2 *5 *6)
  (AND
   (|isDomain| *2
               (|List| (|Record| (|:| |val| (|List| *10)) (|:| |tower| *11))))
   (|isDomain| *5
               (|Record| (|:| |done| (|List| *11))
                         (|:| |todo|
                              (|List|
                               (|Record| (|:| |val| (|List| *10))
                                         (|:| |tower| *11))))))
   (|isDomain| *6 (|NonNegativeInteger|))
   (|ofCategory| *10 (|RecursivePolynomialCategory| *7 *8 *9))
   (|ofCategory| *11 (|RegularTriangularSetCategory| *7 *8 *9 *10))
   (|isDomain| *3 (|List| *10)) (|isDomain| *4 (|List| *11))
   (|ofCategory| *7 (|GcdDomain|))
   (|ofCategory| *8 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *9 (|OrderedSet|))
   (|isDomain| *1 (|RegularSetDecompositionPackage| *7 *8 *9 *10 *11))))
 ((*1 *2 *3 *4 *2 *5 *6)
  (AND
   (|isDomain| *2
               (|List| (|Record| (|:| |val| (|List| *10)) (|:| |tower| *11))))
   (|isDomain| *5
               (|Record| (|:| |done| (|List| *11))
                         (|:| |todo|
                              (|List|
                               (|Record| (|:| |val| (|List| *10))
                                         (|:| |tower| *11))))))
   (|isDomain| *6 (|NonNegativeInteger|))
   (|ofCategory| *10 (|RecursivePolynomialCategory| *7 *8 *9))
   (|ofCategory| *11 (|SquareFreeRegularTriangularSetCategory| *7 *8 *9 *10))
   (|isDomain| *3 (|List| *10)) (|isDomain| *4 (|List| *11))
   (|ofCategory| *7 (|GcdDomain|))
   (|ofCategory| *8 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *9 (|OrderedSet|))
   (|isDomain| *1
               (|SquareFreeRegularSetDecompositionPackage| *7 *8 *9 *10 *11))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteDivisorCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|ofCategory| *6 (|FunctionFieldCategory| *3 *4 *5))
       (|isDomain| *2
                   (|Record|
                    (|:| |id| (|FractionalIdeal| *4 (|Fraction| *4) *5 *6))
                    (|:| |principalPart| *6)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| *6)) (|isDomain| *4 (|Mapping| *6 *6))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *5 (|Field|))
       (|isDomain| *2
                   (|Record| (|:| |poly| *6) (|:| |normal| (|Fraction| *6))
                             (|:| |special| (|Fraction| *6))))
       (|isDomain| *1 (|MonomialExtensionTools| *5 *6))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|List| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *4 (|Field|))
       (|isDomain| *1 (|PartialFractionUtilities| *4 *3))))
 ((*1 *2 *3 *2 *4 *4)
  (AND (|isDomain| *2 (|List| *9)) (|isDomain| *3 (|List| *8))
       (|isDomain| *4 (|Boolean|))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *9 (|RegularTriangularSetCategory| *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *1 (|RegularSetDecompositionPackage| *5 *6 *7 *8 *9))))
 ((*1 *2 *3 *2 *4 *4 *4 *4 *4)
  (AND (|isDomain| *2 (|List| *9)) (|isDomain| *3 (|List| *8))
       (|isDomain| *4 (|Boolean|))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *9 (|RegularTriangularSetCategory| *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *1 (|RegularSetDecompositionPackage| *5 *6 *7 *8 *9))))
 ((*1 *2 *3 *2 *4 *4)
  (AND (|isDomain| *2 (|List| *9)) (|isDomain| *3 (|List| *8))
       (|isDomain| *4 (|Boolean|))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *9 (|SquareFreeRegularTriangularSetCategory| *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *1
                   (|SquareFreeRegularSetDecompositionPackage| *5 *6 *7 *8
                                                               *9))))
 ((*1 *2 *3 *2 *4 *4 *4 *4 *4)
  (AND (|isDomain| *2 (|List| *9)) (|isDomain| *3 (|List| *8))
       (|isDomain| *4 (|Boolean|))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *9 (|SquareFreeRegularTriangularSetCategory| *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *1
                   (|SquareFreeRegularSetDecompositionPackage| *5 *6 *7 *8
                                                               *9))))) 
(((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *5 (|NonNegativeInteger|)) (|isDomain| *6 (|Boolean|))
       (|ofCategory| *7 (|GcdDomain|))
       (|ofCategory| *8 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *9 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *7 *8 *9))
       (|isDomain| *2
                   (|Record| (|:| |done| (|List| *4))
                             (|:| |todo|
                                  (|List|
                                   (|Record| (|:| |val| (|List| *3))
                                             (|:| |tower| *4))))))
       (|isDomain| *1 (|RegularSetDecompositionPackage| *7 *8 *9 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *7 *8 *9 *3))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *5 (|NonNegativeInteger|)) (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *8 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *6 *7 *8))
       (|isDomain| *2
                   (|Record| (|:| |done| (|List| *4))
                             (|:| |todo|
                                  (|List|
                                   (|Record| (|:| |val| (|List| *3))
                                             (|:| |tower| *4))))))
       (|isDomain| *1 (|RegularSetDecompositionPackage| *6 *7 *8 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *6 *7 *8 *3))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2
                   (|Record| (|:| |done| (|List| *4))
                             (|:| |todo|
                                  (|List|
                                   (|Record| (|:| |val| (|List| *3))
                                             (|:| |tower| *4))))))
       (|isDomain| *1 (|RegularSetDecompositionPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *5 (|NonNegativeInteger|)) (|isDomain| *6 (|Boolean|))
       (|ofCategory| *7 (|GcdDomain|))
       (|ofCategory| *8 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *9 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *7 *8 *9))
       (|isDomain| *2
                   (|Record| (|:| |done| (|List| *4))
                             (|:| |todo|
                                  (|List|
                                   (|Record| (|:| |val| (|List| *3))
                                             (|:| |tower| *4))))))
       (|isDomain| *1
                   (|SquareFreeRegularSetDecompositionPackage| *7 *8 *9 *3 *4))
       (|ofCategory| *4
                     (|SquareFreeRegularTriangularSetCategory| *7 *8 *9 *3))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *5 (|NonNegativeInteger|)) (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *8 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *6 *7 *8))
       (|isDomain| *2
                   (|Record| (|:| |done| (|List| *4))
                             (|:| |todo|
                                  (|List|
                                   (|Record| (|:| |val| (|List| *3))
                                             (|:| |tower| *4))))))
       (|isDomain| *1
                   (|SquareFreeRegularSetDecompositionPackage| *6 *7 *8 *3 *4))
       (|ofCategory| *4
                     (|SquareFreeRegularTriangularSetCategory| *6 *7 *8 *3))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2
                   (|Record| (|:| |done| (|List| *4))
                             (|:| |todo|
                                  (|List|
                                   (|Record| (|:| |val| (|List| *3))
                                             (|:| |tower| *4))))))
       (|isDomain| *1
                   (|SquareFreeRegularSetDecompositionPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4
                     (|SquareFreeRegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *5 (|NonNegativeInteger|)) (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *8 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *6 *7 *8))
       (|isDomain| *2
                   (|Record| (|:| |done| (|List| *4))
                             (|:| |todo|
                                  (|List|
                                   (|Record| (|:| |val| (|List| *3))
                                             (|:| |tower| *4))))))
       (|isDomain| *1 (|RegularSetDecompositionPackage| *6 *7 *8 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *6 *7 *8 *3))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2
                   (|Record| (|:| |done| (|List| *4))
                             (|:| |todo|
                                  (|List|
                                   (|Record| (|:| |val| (|List| *3))
                                             (|:| |tower| *4))))))
       (|isDomain| *1 (|RegularSetDecompositionPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *5 (|NonNegativeInteger|)) (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *8 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *6 *7 *8))
       (|isDomain| *2
                   (|Record| (|:| |done| (|List| *4))
                             (|:| |todo|
                                  (|List|
                                   (|Record| (|:| |val| (|List| *3))
                                             (|:| |tower| *4))))))
       (|isDomain| *1
                   (|SquareFreeRegularSetDecompositionPackage| *6 *7 *8 *3 *4))
       (|ofCategory| *4
                     (|SquareFreeRegularTriangularSetCategory| *6 *7 *8 *3))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2
                   (|Record| (|:| |done| (|List| *4))
                             (|:| |todo|
                                  (|List|
                                   (|Record| (|:| |val| (|List| *3))
                                             (|:| |tower| *4))))))
       (|isDomain| *1
                   (|SquareFreeRegularSetDecompositionPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4
                     (|SquareFreeRegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *5 (|Boolean|)) (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *8 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *6 *7 *8))
       (|isDomain| *2
                   (|Record| (|:| |done| (|List| *4))
                             (|:| |todo|
                                  (|List|
                                   (|Record| (|:| |val| (|List| *3))
                                             (|:| |tower| *4))))))
       (|isDomain| *1 (|RegularSetDecompositionPackage| *6 *7 *8 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *6 *7 *8 *3))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2
                   (|Record| (|:| |done| (|List| *4))
                             (|:| |todo|
                                  (|List|
                                   (|Record| (|:| |val| (|List| *3))
                                             (|:| |tower| *4))))))
       (|isDomain| *1
                   (|SquareFreeRegularSetDecompositionPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4
                     (|SquareFreeRegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|List| *9))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *9 (|RegularTriangularSetCategory| *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|)) (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|RegularSetDecompositionPackage| *5 *6 *7 *8 *9))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|List| *9))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *9 (|SquareFreeRegularTriangularSetCategory| *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|)) (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1
                   (|SquareFreeRegularSetDecompositionPackage| *5 *6 *7 *8
                                                               *9))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|List| *9))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *9 (|RegularTriangularSetCategory| *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|)) (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|RegularSetDecompositionPackage| *5 *6 *7 *8 *9))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|List| *9))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *9 (|SquareFreeRegularTriangularSetCategory| *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|)) (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1
                   (|SquareFreeRegularSetDecompositionPackage| *5 *6 *7 *8
                                                               *9))))) 
(((*1 *1) (|isDomain| *1 (|CharacterClass|)))
 ((*1 *1 *1) (|isDomain| *1 (|Character|)))
 ((*1 *1 *1) (|ofCategory| *1 (|StringAggregate|)))) 
(((*1 *1 *1) (|ofCategory| *1 (|StringAggregate|)))) 
(((*1 *1) (|isDomain| *1 (|CharacterClass|)))
 ((*1 *1 *1) (|isDomain| *1 (|Character|)))
 ((*1 *1 *1) (|ofCategory| *1 (|StringAggregate|)))) 
(((*1 *1 *1) (|ofCategory| *1 (|StringAggregate|)))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|StringAggregate|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|StringAggregate|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *1 *3)
  (AND (|ofCategory| *1 (|StringAggregate|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *1 *3)
  (AND (|ofCategory| *1 (|StringAggregate|)) (|isDomain| *3 (|Character|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *1 *2 *1)
  (AND (|ofCategory| *1 (|StringAggregate|))
       (|isDomain| *2 (|UniversalSegment| (|Integer|)))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|SingleInteger|)) (|isDomain| *1 (|BinaryFile|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|CachableSet|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| (|CubicalFacet|))) (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|CubicalFacet|))))
 ((*1 *2 *3 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|LinearAggregate| *3)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *3 (|BasicType|))))
 ((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|LinearAggregate| *3)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *3 (|BasicType|)) (|isDomain| *2 (|Integer|))))
 ((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *4))
       (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|LinearAggregate| *4)) (|ofCategory| *4 (|Type|))
       (|isDomain| *2 (|Integer|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| (|OrientedFacet|))) (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|OrientedFacet|))))
 ((*1 *2 *3 *1 *2)
  (AND (|ofCategory| *1 (|StringAggregate|)) (|isDomain| *2 (|Integer|))
       (|isDomain| *3 (|CharacterClass|))))
 ((*1 *2 *1 *1 *2)
  (AND (|ofCategory| *1 (|StringAggregate|)) (|isDomain| *2 (|Integer|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Factored| *3)) (|isDomain| *1 (|AlgFactor| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|AlgebraicNumber|)))))
 ((*1 *2 *3 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |less| (|BinarySearchTree| *3))
                         (|:| |greater| (|BinarySearchTree| *3))))
   (|isDomain| *1 (|BinarySearchTree| *3)) (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|IntegrationResult| *4))
       (|ofCategory| *4
                     (|Join| (|AlgebraicallyClosedFunctionSpace| *3)
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *3
                     (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                             (|Comparable|)
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *1 (|IntegrationResultToFunction| *3 *4))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|IntegrationResult| (|Fraction| (|Polynomial| *3))))
       (|ofCategory| *3
                     (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                             (|Comparable|)
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *1 (|IntegrationResultRFToFunction| *3))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Mapping| *3 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *5 (|Field|))
       (|isDomain| *2 (|Record| (|:| |normal| *3) (|:| |special| *3)))
       (|isDomain| *1 (|MonomialExtensionTools| *5 *3))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Mapping| *3 *3))
       (|ofCategory| *3 (|PolynomialCategory| *5 (|IndexedExponents| *6) *6))
       (|ofCategory| *5 (|Field|)) (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *2 (|Record| (|:| |normal| *3) (|:| |special| *3)))
       (|isDomain| *1 (|ParallelIntegrationTools| *5 *6 *3))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Matrix| *5))) (|isDomain| *4 (|Vector| *5))
       (|ofCategory| *5 (|Field|)) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|List| (|List| (|Matrix| *5))))
       (|isDomain| *1 (|RepresentationPackage2| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Matrix| *5)))
       (|isDomain| *4 (|Vector| (|Vector| *5))) (|ofCategory| *5 (|Field|))
       (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|List| (|List| (|Matrix| *5))))
       (|isDomain| *1 (|RepresentationPackage2| *5))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|CharacterClass|)) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|StringAggregate|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Character|)) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|StringAggregate|))))) 
(((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|LinearAggregate| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|BasicType|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|StringAggregate|))
       (|isDomain| *2 (|CharacterClass|))))) 
(((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|LinearAggregate| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|BasicType|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|StringAggregate|))
       (|isDomain| *2 (|CharacterClass|))))) 
(((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|LinearAggregate| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|BasicType|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|StringAggregate|))
       (|isDomain| *2 (|CharacterClass|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *2 *3 *4))
       (|ofCategory| *2 (|Type|))
       (|ofCategory| *3 (|IndexedAggregate| (|Integer|) *2))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *2))))
 ((*1 *1 *1 *2 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|CartesianTensor| *3 *4 *5))
       (|ofType| *3 *2) (|ofType| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|CommutativeRing|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|CartesianTensor| *2 *3 *4)) (|ofType| *2 (|Integer|))
       (|ofType| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|CommutativeRing|))))
 ((*1 *1 *2)
  (AND (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *1 (|MatrixCategory| *3 *2 *4))
       (|ofCategory| *2 (|FiniteLinearAggregate| *3))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|SquareMatrix| *2 *3))
       (|ofType| *2 (|NonNegativeInteger|))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Matrix| *4))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|isDomain| *1 (|SquareMatrix| *3 *4))
       (|ofType| *3 (|NonNegativeInteger|))))) 
(((*1 *1 *2 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|)) (|ofCategory| *1 (|SPointCategory|))))
 ((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|)) (|ofCategory| *1 (|SPointCategory|))))) 
(((*1 *1 *2 *2 *2)
  (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|SPointCategory|))))
 ((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|SPointCategory|))))) 
(((*1 *1 *2 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|)) (|ofCategory| *1 (|SPointCategory|))))
 ((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|)) (|ofCategory| *1 (|SPointCategory|))))) 
(((*1 *1 *2 *2 *2)
  (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|SPointCategory|))))
 ((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|SPointCategory|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *1)
  (AND (|ofCategory| *1 (|FloatingPointSystem|))
       (|not| (|ofCategory| *1 (|arbitraryPrecision|)))
       (|not| (|ofCategory| *1 (|arbitraryExponent|)))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteSetAggregate| *2))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|OrderedMultisetAggregate| *2))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|OrderedSet|)))
 ((*1 *1) (|isDomain| *1 (|SingleInteger|)))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SPointCategory|)))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *1)
  (AND (|ofCategory| *1 (|FloatingPointSystem|))
       (|not| (|ofCategory| *1 (|arbitraryPrecision|)))
       (|not| (|ofCategory| *1 (|arbitraryExponent|)))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteSetAggregate| *2))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|OrderedSet|)))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|PriorityQueueAggregate| *2))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1) (|isDomain| *1 (|SingleInteger|)))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SPointCategory|)))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|SPointCategory|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|SPointCategory|)) (|isDomain| *2 (|DoubleFloat|))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|Integer|))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|RecursiveAggregate| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *2 (|Integer|))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|SPointCategory|)) (|isDomain| *2 (|DoubleFloat|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|SPointCategory|)) (|isDomain| *2 (|DoubleFloat|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|SPointCategory|)) (|isDomain| *2 (|DoubleFloat|))))) 
(((*1 *1 *1 *1) (|ofCategory| *1 (|SPointCategory|)))) 
(((*1 *1 *1) (|ofCategory| *1 (|SPointCategory|)))) 
(((*1 *1 *1) (|ofCategory| *1 (|SPointCategory|)))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|SPointCategory|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|SPointCategory|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *1 *1)
  (AND (|ofCategory| *1 (|SPointCategory|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|SPointCategory|)) (|isDomain| *2 (|DoubleFloat|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|SPointCategory|)) (|isDomain| *2 (|DoubleFloat|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|SPointCategory|)) (|isDomain| *2 (|DoubleFloat|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|SPointCategory|))
       (|isDomain| *2 (|List| (|DoubleFloat|)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|SPointCategory|))
       (|isDomain| *2 (|List| (|DoubleFloat|)))))) 
(((*1 *1 *1)
  (|partial| AND (|isDomain| *1 (|SplittingTree| *2 *3))
   (|ofCategory| *2 (|Join| (|SetCategory|) (|Aggregate|)))
   (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|SplittingTree| *2 *3))
       (|ofCategory| *2 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| *4)) (|isDomain| *1 (|SplittingTree| *3 *4))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *4 (|Join| (|SetCategory|) (|Aggregate|)))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Record| (|:| |val| *3) (|:| |tower| *4))))
       (|isDomain| *1 (|SplittingTree| *3 *4))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *4 (|Join| (|SetCategory|) (|Aggregate|)))))) 
(((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|SplittingNode| *4 *5))
       (|ofCategory| *4 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *5 (|Join| (|SetCategory|) (|Aggregate|)))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SplittingTree| *4 *5))))) 
(((*1 *2 *3 *1 *4)
  (AND (|isDomain| *3 (|SplittingNode| *5 *6))
       (|isDomain| *4 (|Mapping| (|Boolean|) *6 *6))
       (|ofCategory| *5 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *6 (|Join| (|SetCategory|) (|Aggregate|)))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SplittingTree| *5 *6))))) 
(((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|Collection| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|BasicType|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3))
       (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|Collection| *3)) (|ofCategory| *3 (|Type|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3))
       (|ofCategory| *1 (|LazyStreamAggregate| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *1 *2 *1 *3)
  (AND (|isDomain| *2 (|Mapping| (|Boolean|) *4)) (|isDomain| *3 (|Integer|))
       (|ofCategory| *4 (|SetCategory|)) (|isDomain| *1 (|Multiset| *4))))
 ((*1 *1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *1 (|Multiset| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|SplittingNode| *3 *4))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *4 (|Join| (|SetCategory|) (|Aggregate|)))
       (|isDomain| *1 (|SplittingTree| *3 *4))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3))
       (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|DictionaryOperations| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|DictionaryOperations| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|BasicType|))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|ExtensibleLinearAggregate| *2))
       (|ofCategory| *2 (|Type|)) (|ofCategory| *2 (|BasicType|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3))
       (|ofCategory| *1 (|ExtensibleLinearAggregate| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *2 *3 *1)
  (|partial| AND (|ofCategory| *1 (|KeyedDictionary| *3 *2))
   (|ofCategory| *3 (|Type|)) (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2 *1 *3)
  (AND (|isDomain| *2 (|Mapping| (|Boolean|) *4)) (|isDomain| *3 (|Integer|))
       (|ofCategory| *4 (|SetCategory|)) (|isDomain| *1 (|Multiset| *4))))
 ((*1 *1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *1 (|Multiset| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|SplittingNode| *3 *4))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *4 (|Join| (|SetCategory|) (|Aggregate|)))
       (|isDomain| *1 (|SplittingTree| *3 *4))))) 
(((*1 *1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|SplittingNode| *4 *5)))
       (|isDomain| *3 (|Mapping| (|Boolean|) *5 *5))
       (|ofCategory| *4 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *5 (|Join| (|SetCategory|) (|Aggregate|)))
       (|isDomain| *1 (|SplittingTree| *4 *5))))
 ((*1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|SplittingNode| *3 *4)))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *4 (|Join| (|SetCategory|) (|Aggregate|)))
       (|isDomain| *1 (|SplittingTree| *3 *4))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|SingleInteger|)) (|isDomain| *1 (|HashState|))))
 ((*1 *2 *1) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|ILogic|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|LatticeJoinOfMeets|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|LatticeMeetOfJoins|))))
 ((*1 *2 *1) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|OrdSetInts|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|QueryEquation|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RecursiveAggregate| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|Join| (|SetCategory|) (|Aggregate|)))
       (|isDomain| *1 (|SplittingNode| *2 *3))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *2 (|Join| (|SetCategory|) (|Aggregate|)))
       (|isDomain| *1 (|SplittingNode| *3 *2))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))))) 
(((*1 *2 *1)
  (|partial| AND (|ofCategory| *3 (|GcdDomain|))
   (|ofCategory| *4 (|OrderedSet|))
   (|ofCategory| *5 (|OrderedAbelianMonoidSup|)) (|isDomain| *2 (|Boolean|))
   (|isDomain| *1 (|QuasiAlgebraicSet| *3 *4 *5 *6))
   (|ofCategory| *6 (|PolynomialCategory| *3 *5 *4))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SplittingNode| *3 *4))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *4 (|Join| (|SetCategory|) (|Aggregate|)))))) 
(((*1 *1 *1) (|ofCategory| *1 (|Aggregate|)))
 ((*1 *1 *1) (|isDomain| *1 (|BasicOperator|)))
 ((*1 *1 *1) (|isDomain| *1 (|SubSpaceComponentProperty|)))
 ((*1 *1 *1) (|ofCategory| *1 (|IntegerNumberSystem|)))
 ((*1 *1 *1)
  (AND (|ofCategory| *2 (|JetBundleCategory|))
       (|isDomain| *1 (|JetDifferentialEquation| *2 *3))
       (|ofCategory| *3 (|JetBundleFunctionCategory| *2))))
 ((*1 *1 *1)
  (AND (|ofCategory| *2 (|JetBundleCategory|))
       (|isDomain| *1 (|JetDifferential| *2 *3))
       (|ofCategory| *3 (|JetBundleFunctionCategory| *2))))
 ((*1 *1 *1)
  (AND (|ofCategory| *2 (|JetBundleCategory|))
       (|isDomain| *1 (|JetVectorField| *2 *3))
       (|ofCategory| *3 (|JetBundleFunctionCategory| *2))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|Pattern| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|SparseEchelonMatrix| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *2)) (|ofCategory| *2 (|Ring|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|SplittingNode| *2 *3))
       (|ofCategory| *2 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|SplittingNode| *2 *3))
       (|ofCategory| *2 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|SplittingNode| *3 *2))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *2 (|Join| (|SetCategory|) (|Aggregate|)))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SplittingNode| *3 *4))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *4 (|Join| (|SetCategory|) (|Aggregate|)))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|SplittingNode| *2 *3))
       (|ofCategory| *2 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *3 (|Join| (|SetCategory|) (|Aggregate|)))))) 
(((*1 *2 *1 *1 *3 *4)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *5 *5))
       (|isDomain| *4 (|Mapping| (|Boolean|) *6 *6))
       (|ofCategory| *5 (|Join| (|SetCategory|) (|Aggregate|)))
       (|ofCategory| *6 (|Join| (|SetCategory|) (|Aggregate|)))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SplittingNode| *5 *6))))) 
(((*1 *2 *1 *1 *3)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *5 *5))
       (|ofCategory| *5 (|Join| (|SetCategory|) (|Aggregate|)))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SplittingNode| *4 *5))
       (|ofCategory| *4 (|Join| (|SetCategory|) (|Aggregate|)))))) 
(((*1 *2 *3 *3 *2)
  (AND (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|SpecialFunctionUnivariateTaylorSeries| *3 *2))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))))) 
(((*1 *2 *3 *3 *2)
  (AND (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|SpecialFunctionUnivariateTaylorSeries| *3 *2))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))))) 
(((*1 *2 *3 *3 *2)
  (AND (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|SpecialFunctionUnivariateTaylorSeries| *3 *2))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))))) 
(((*1 *2 *3 *3 *2)
  (AND (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|SpecialFunctionUnivariateTaylorSeries| *3 *2))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|SpecialFunctionUnivariateTaylorSeries| *3 *2))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))))) 
(((*1 *2 *3 *3 *3 *3 *2)
  (AND (|isDomain| *3 (|List| *2))
       (|ofCategory| *2 (|RetractableTo| (|Integer|)))
       (|ofCategory| *2 (|FunctionSpace| *4))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *4 *2))))
 ((*1 *1 *2 *2 *2 *2 *1)
  (AND (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RetractableTo| (|Integer|)))
       (|ofCategory| *1 (|SpecialFunctionCategory|))))) 
(((*1 *2 *3 *3 *2)
  (AND (|isDomain| *3 (|List| *2))
       (|ofCategory| *2 (|RetractableTo| (|Integer|)))
       (|ofCategory| *2 (|FunctionSpace| *4))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *4 *2))))
 ((*1 *1 *2 *2 *1)
  (AND (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RetractableTo| (|Integer|)))
       (|ofCategory| *1 (|SpecialFunctionCategory|))))) 
(((*1 *2 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|OrthogonalPolynomialFunctions| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *3 *3 *2)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|OrthogonalPolynomialFunctions| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|OrthogonalPolynomialFunctions| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *3)
  (AND (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|EllipticFunctionsUnivariateTaylorSeries| *3 *2))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *3)
  (AND (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|EllipticFunctionsUnivariateTaylorSeries| *3 *2))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *3)
  (AND (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|EllipticFunctionsUnivariateTaylorSeries| *3 *2))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *3 *3)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|EllipticFunctionsUnivariateTaylorSeries| *3 *2))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))))
 ((*1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatEllipticIntegrals|))))
 ((*1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatEllipticIntegrals|))))
 ((*1 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *3)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|EllipticFunctionsUnivariateTaylorSeries| *3 *2))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatEllipticIntegrals|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatEllipticIntegrals|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *3)
  (AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|EllipticFunctionsUnivariateTaylorSeries| *3 *2))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatEllipticIntegrals|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatEllipticIntegrals|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatEllipticIntegrals|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatEllipticIntegrals|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatEllipticIntegrals|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatEllipticIntegrals|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|OrthogonalPolynomialFunctions| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|Mapping| (|Float|)))
       (|isDomain| *1 (|RandomFloatDistributions|))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|ComplexCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|Group|)))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|OctonionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|List| (|Integer|)))
       (|isDomain| *1 (|PartitionsAndPermutations|))))
 ((*1 *1 *1) (|isDomain| *1 (|Partition|)))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|QuaternionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|ComplexCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *2 (|RealNumberSystem|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FortranExpression| *2 *3 *4))
       (|ofType| *2 (|List| (|Symbol|))) (|ofType| *3 (|List| (|Symbol|)))
       (|ofCategory| *4 (|FortranMachineTypeCategory|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|OctonionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *2 (|RealNumberSystem|))))
 ((*1 *1 *1) (|ofCategory| *1 (|OrderedRing|)))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|QuaternionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *2 (|RealNumberSystem|))))
 ((*1 *1 *1) (|ofCategory| *1 (|SpecialFunctionCategory|)))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|SpecialOutputPackage|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|OutputForm|))) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|SpecialOutputPackage|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|SpecialOutputPackage|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|OutputForm|))) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|SpecialOutputPackage|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|FileName|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|FortranPackage|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FortranProgramCategory|)) (|isDomain| *2 (|Void|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|OutputForm|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|SpecialOutputPackage|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|SpecialOutputPackage|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|OutputForm|))) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|SpecialOutputPackage|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|SubSpace| 3 *3)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *1 (|ThreeSpaceCategory| *3))))
 ((*1 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *2)) (|ofCategory| *2 (|Ring|))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|UniqueFactorizationDomain|))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| (|Fraction| *5)))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FunctionFieldCategory&| *3 *4 *5 *6))
       (|ofCategory| *3 (|FunctionFieldCategory| *4 *5 *6))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|Ring|)) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|ThreeSpaceCategory| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|Ring|)) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|ThreeSpaceCategory| *3))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| (|Point| *4)))
       (|ofCategory| *1 (|ThreeSpaceCategory| *4)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *2 *2)
  (AND (|isDomain| *1 (|ParametricPlaneCurve| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2 *2 *2)
  (AND (|isDomain| *1 (|ParametricSpaceCurve| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|List| (|Point| *3)))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Point| *3))) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *1 (|ThreeSpaceCategory| *3))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| *3)))
       (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Point| *3)))
       (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|List| (|Point| *3)))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Point| *3))) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *1 (|ThreeSpaceCategory| *3))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| *3)))
       (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Point| *3)))
       (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|List| (|Point| *3)))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Point| *3))) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *1 (|ThreeSpaceCategory| *3))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| *3)))
       (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Point| *3)))
       (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|List| (|List| (|Point| *3))))))
 ((*1 *1 *2 *3 *3)
  (AND (|isDomain| *2 (|List| (|List| (|Point| *4))))
       (|isDomain| *3 (|Boolean|)) (|ofCategory| *4 (|Ring|))
       (|ofCategory| *1 (|ThreeSpaceCategory| *4))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| (|Point| *3))))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *1 (|ThreeSpaceCategory| *3))))
 ((*1 *1 *1 *2 *3 *3)
  (AND (|isDomain| *2 (|List| (|List| (|List| *4))))
       (|isDomain| *3 (|Boolean|)) (|ofCategory| *1 (|ThreeSpaceCategory| *4))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *1 *1 *2 *3 *3)
  (AND (|isDomain| *2 (|List| (|List| (|Point| *4))))
       (|isDomain| *3 (|Boolean|)) (|ofCategory| *1 (|ThreeSpaceCategory| *4))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|List| (|List| (|List| *5))))
       (|isDomain| *3 (|List| (|SubSpaceComponentProperty|)))
       (|isDomain| *4 (|SubSpaceComponentProperty|))
       (|ofCategory| *1 (|ThreeSpaceCategory| *5)) (|ofCategory| *5 (|Ring|))))
 ((*1 *1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|List| (|List| (|Point| *5))))
       (|isDomain| *3 (|List| (|SubSpaceComponentProperty|)))
       (|isDomain| *4 (|SubSpaceComponentProperty|))
       (|ofCategory| *1 (|ThreeSpaceCategory| *5)) (|ofCategory| *5 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|List| (|Point| *3)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|List| (|List| (|List| (|NonNegativeInteger|)))))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|List| (|List| (|List| (|Point| *3)))))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|List| (|List| (|SubSpaceComponentProperty|))))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|List| (|SubSpaceComponentProperty|)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2
                   (|Record| (|:| |points| (|NonNegativeInteger|))
                             (|:| |curves| (|NonNegativeInteger|))
                             (|:| |polygons| (|NonNegativeInteger|))
                             (|:| |constructs| (|NonNegativeInteger|))))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Union| "skip" "MonteCarlo" "deterministic"))
       (|isDomain| *1 (|GuessOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2 (|Union| "skip" "MonteCarlo" "deterministic"))
       (|isDomain| *1 (|GuessOptionFunctions0|))))
 ((*1 *2 *3 *3)
  (AND
   (|isDomain| *3
               (|List|
                (|Record| (|:| |factor| (|SparseUnivariatePolynomial| *6))
                          (|:| |exponent| (|Integer|)))))
   (|ofCategory| *6 (|EuclideanDomain|))
   (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
   (|isDomain| *1 (|MultivariateSquareFree| *4 *5 *6 *7))
   (|ofCategory| *7 (|PolynomialCategory| *6 *4 *5))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|ThreeSpaceCategory| *2)) (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *4 *4)) (|ofCategory| *4 (|Type|))
       (|isDomain| *1 (|SortPackage| *4 *2))
       (|ofCategory| *2
                     (|Join| (|IndexedAggregate| (|Integer|) *4)
                             (|finiteAggregate|) (|shallowlyMutable|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|SortPackage| *3 *2))
       (|ofCategory| *2
                     (|Join| (|IndexedAggregate| (|Integer|) *3)
                             (|finiteAggregate|) (|shallowlyMutable|)))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *4 *4)) (|ofCategory| *4 (|Type|))
       (|isDomain| *1 (|SortPackage| *4 *2))
       (|ofCategory| *2
                     (|Join| (|IndexedAggregate| (|Integer|) *4)
                             (|finiteAggregate|) (|shallowlyMutable|)))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|SortPackage| *3 *2))
       (|ofCategory| *2
                     (|Join| (|IndexedAggregate| (|Integer|) *3)
                             (|finiteAggregate|) (|shallowlyMutable|)))))) 
(((*1 *1) (|isDomain| *1 (|SmallOrdinal|)))) 
(((*1 *1 *1) (|isDomain| *1 (|SmallOrdinal|)))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|SmallOrdinal|)))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|SmallOrdinal|)))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|SmallOrdinal|)))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|SmallOrdinal|))))) 
(((*1 *1 *1) (|isDomain| *1 (|SmallOrdinal|)))) 
(((*1 *2 *2 *2 *2)
  (AND
   (|isDomain| *2
               (|Fraction| (|SparseUnivariatePolynomial| (|Expression| *3))))
   (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
   (|isDomain| *1 (|TransSolvePackageService| *3))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Equation| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5
                     (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                             (|CharacteristicZero|)))
       (|isDomain| *2
                   (|SuchThat| (|List| (|Expression| *5))
                               (|List| (|Equation| (|Expression| *5)))))
       (|isDomain| *1 (|RadicalSolvePackage| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
       (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5
                     (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                             (|CharacteristicZero|)))
       (|isDomain| *2
                   (|SuchThat| (|List| (|Expression| *5))
                               (|List| (|Equation| (|Expression| *5)))))
       (|isDomain| *1 (|RadicalSolvePackage| *5))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
       (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5
                     (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|List| (|Expression| *5)))
       (|isDomain| *1 (|RadicalSolvePackage| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *4 (|List| (|Symbol|)))
       (|ofCategory| *5
                     (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|List| (|List| (|Expression| *5))))
       (|isDomain| *1 (|RadicalSolvePackage| *5))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
       (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5
                     (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|List| (|Equation| (|Expression| *5))))
       (|isDomain| *1 (|RadicalSolvePackage| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *4)))
       (|ofCategory| *4
                     (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|List| (|Equation| (|Expression| *4))))
       (|isDomain| *1 (|RadicalSolvePackage| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Equation| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5
                     (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|List| (|Equation| (|Expression| *5))))
       (|isDomain| *1 (|RadicalSolvePackage| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Equation| (|Fraction| (|Polynomial| *4))))
       (|ofCategory| *4
                     (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|List| (|Equation| (|Expression| *4))))
       (|isDomain| *1 (|RadicalSolvePackage| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *4 (|List| (|Symbol|)))
       (|ofCategory| *5
                     (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|List| (|List| (|Equation| (|Expression| *5)))))
       (|isDomain| *1 (|RadicalSolvePackage| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *4))))
       (|ofCategory| *4
                     (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|List| (|List| (|Equation| (|Expression| *4)))))
       (|isDomain| *1 (|RadicalSolvePackage| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Equation| (|Fraction| (|Polynomial| *5)))))
       (|isDomain| *4 (|List| (|Symbol|)))
       (|ofCategory| *5
                     (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|List| (|List| (|Equation| (|Expression| *5)))))
       (|isDomain| *1 (|RadicalSolvePackage| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Equation| (|Fraction| (|Polynomial| *4)))))
       (|ofCategory| *4
                     (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|List| (|List| (|Equation| (|Expression| *4)))))
       (|isDomain| *1 (|RadicalSolvePackage| *4))))) 
(((*1 *2 *2 *2 *2 *2 *2)
  (AND
   (|ofCategory| *2
                 (|Join| (|Field|)
                         (CATEGORY |domain|
                          (SIGNATURE ^ ($ $ (|Fraction| (|Integer|)))))))
   (|isDomain| *1 (|PolynomialSolveByFormulas| *3 *2))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *2 *2 *2 *2 *2)
  (AND
   (|ofCategory| *2
                 (|Join| (|Field|)
                         (CATEGORY |domain|
                          (SIGNATURE ^ ($ $ (|Fraction| (|Integer|)))))))
   (|isDomain| *1 (|PolynomialSolveByFormulas| *3 *2))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *2 *2 *2 *2)
  (AND
   (|ofCategory| *2
                 (|Join| (|Field|)
                         (CATEGORY |domain|
                          (SIGNATURE ^ ($ $ (|Fraction| (|Integer|)))))))
   (|isDomain| *1 (|PolynomialSolveByFormulas| *3 *2))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *2 *2 *2)
  (AND
   (|ofCategory| *2
                 (|Join| (|Field|)
                         (CATEGORY |domain|
                          (SIGNATURE ^ ($ $ (|Fraction| (|Integer|)))))))
   (|isDomain| *1 (|PolynomialSolveByFormulas| *3 *2))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|Field|)
                         (CATEGORY |domain|
                          (SIGNATURE ^ ($ $ (|Fraction| (|Integer|)))))))
   (|isDomain| *2 (|List| *4))
   (|isDomain| *1 (|PolynomialSolveByFormulas| *3 *4))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))
 ((*1 *2 *3 *3 *3 *3 *3)
  (AND
   (|ofCategory| *3
                 (|Join| (|Field|)
                         (CATEGORY |domain|
                          (SIGNATURE ^ ($ $ (|Fraction| (|Integer|)))))))
   (|isDomain| *2 (|List| *3))
   (|isDomain| *1 (|PolynomialSolveByFormulas| *4 *3))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|Field|)
                         (CATEGORY |domain|
                          (SIGNATURE ^ ($ $ (|Fraction| (|Integer|)))))))
   (|isDomain| *2 (|List| *4))
   (|isDomain| *1 (|PolynomialSolveByFormulas| *3 *4))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))
 ((*1 *2 *3 *3 *3 *3)
  (AND
   (|ofCategory| *3
                 (|Join| (|Field|)
                         (CATEGORY |domain|
                          (SIGNATURE ^ ($ $ (|Fraction| (|Integer|)))))))
   (|isDomain| *2 (|List| *3))
   (|isDomain| *1 (|PolynomialSolveByFormulas| *4 *3))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|Field|)
                         (CATEGORY |domain|
                          (SIGNATURE ^ ($ $ (|Fraction| (|Integer|)))))))
   (|isDomain| *2 (|List| *4))
   (|isDomain| *1 (|PolynomialSolveByFormulas| *3 *4))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))
 ((*1 *2 *3 *3 *3)
  (AND
   (|ofCategory| *3
                 (|Join| (|Field|)
                         (CATEGORY |domain|
                          (SIGNATURE ^ ($ $ (|Fraction| (|Integer|)))))))
   (|isDomain| *2 (|List| *3))
   (|isDomain| *1 (|PolynomialSolveByFormulas| *4 *3))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|Field|)
                         (CATEGORY |domain|
                          (SIGNATURE ^ ($ $ (|Fraction| (|Integer|)))))))
   (|isDomain| *2 (|List| *4))
   (|isDomain| *1 (|PolynomialSolveByFormulas| *3 *4))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))
 ((*1 *2 *3 *3)
  (AND
   (|ofCategory| *3
                 (|Join| (|Field|)
                         (CATEGORY |domain|
                          (SIGNATURE ^ ($ $ (|Fraction| (|Integer|)))))))
   (|isDomain| *2 (|List| *3))
   (|isDomain| *1 (|PolynomialSolveByFormulas| *4 *3))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Mapping| *5 *5))
       (|ofCategory| *5
                     (|Join| (|Field|)
                             (CATEGORY |domain|
                              (SIGNATURE ^ ($ $ (|Fraction| (|Integer|)))))))
       (|isDomain| *2
                   (|Record| (|:| |solns| (|List| *5))
                             (|:| |maps|
                                  (|List|
                                   (|Record| (|:| |arg| *5) (|:| |res| *5))))))
       (|isDomain| *1 (|PolynomialSolveByFormulas| *3 *5))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))))) 
(((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Vector| *4))
   (|ofCategory| *4 (|LinearlyExplicitOver| *5)) (|ofCategory| *5 (|Field|))
   (|ofCategory| *5 (|IntegralDomain|)) (|isDomain| *2 (|Vector| *5))
   (|isDomain| *1 (|LinearDependence| *5 *4))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Matrix| *6)) (|isDomain| *4 (|Vector| *6))
   (|ofCategory| *6 (|LinearlyExplicitOver| *5)) (|ofCategory| *5 (|Field|))
   (|ofCategory| *5 (|IntegralDomain|)) (|isDomain| *2 (|Vector| *5))
   (|isDomain| *1 (|LinearDependence| *5 *6))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Vector| *4))
   (|ofCategory| *4 (|LinearlyExplicitOver| *5))
   (|not| (|ofCategory| *5 (|Field|))) (|ofCategory| *5 (|IntegralDomain|))
   (|isDomain| *2 (|Vector| (|Fraction| *5)))
   (|isDomain| *1 (|LinearDependence| *5 *4))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Matrix| *6)) (|isDomain| *4 (|Vector| *6))
   (|ofCategory| *6 (|LinearlyExplicitOver| *5))
   (|not| (|ofCategory| *5 (|Field|))) (|ofCategory| *5 (|IntegralDomain|))
   (|isDomain| *2 (|Vector| (|Fraction| *5)))
   (|isDomain| *1 (|LinearDependence| *5 *6))))
 ((*1 *2 *3 *2)
  (|partial| AND (|ofCategory| *4 (|Field|))
   (|ofCategory| *5 (|Join| (|FiniteLinearAggregate| *4) (|shallowlyMutable|)))
   (|ofCategory| *2 (|Join| (|FiniteLinearAggregate| *4) (|shallowlyMutable|)))
   (|isDomain| *1 (|LinearSystemMatrixPackage| *4 *5 *2 *3))
   (|ofCategory| *3 (|MatrixCategory| *4 *5 *2))))
 ((*1 *2 *3 *2)
  (|partial| AND (|isDomain| *2 (|Vector| *4)) (|isDomain| *3 (|Matrix| *4))
   (|ofCategory| *4 (|Field|))
   (|isDomain| *1 (|LinearSystemMatrixPackage1| *4))))
 ((*1 *2 *3 *2 *4 *5)
  (|partial| AND (|isDomain| *4 (|List| *2)) (|isDomain| *5 (|Mapping| *2 *2))
   (|ofCategory| *2 (|Field|)) (|isDomain| *1 (|ODETools| *2 *3))
   (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *2))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| *2
                 (|Join| (|Field|)
                         (CATEGORY |domain|
                          (SIGNATURE ^ ($ $ (|Fraction| (|Integer|)))))))
   (|isDomain| *1 (|PolynomialSolveByFormulas| *3 *2))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *6)) (|isDomain| *4 (|List| (|Stream| *7)))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|PolynomialCategory| *5 (|IndexedExponents| *6) *6))
       (|ofCategory| *5 (|Ring|)) (|isDomain| *2 (|Mapping| (|Stream| *7) *7))
       (|isDomain| *1 (|SparseMultivariateTaylorSeries| *5 *6 *7))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|SparseMultivariatePolynomial| *6 *7))
       (|isDomain| *4 (|List| *7)) (|isDomain| *5 (|List| *8))
       (|ofCategory| *6 (|Ring|)) (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *8 (|OrderedSet|))
       (|isDomain| *2 (|SparseMultivariatePolynomial| *6 *8))
       (|isDomain| *1 (|SparsePolynomialCoercionHelpers| *6 *7 *8))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|EuclideanDomain|))
       (|ofCategory| *6 (|FiniteLinearAggregate| *5))
       (|ofCategory| *4 (|FiniteLinearAggregate| *5))
       (|isDomain| *2
                   (|Record| (|:| |particular| (|Union| *4 "failed"))
                             (|:| |basis| (|List| *4))))
       (|isDomain| *1 (|SmithNormalForm| *5 *6 *4 *3))
       (|ofCategory| *3 (|MatrixCategory| *5 *6 *4))))) 
(((*1 *2 *3 *4)
  (AND
   (|isDomain| *4
               (|Mapping|
                (|Record| (|:| |Smith| (|Matrix| (|Integer|)))
                          (|:| |leftEqMat| (|Matrix| (|Integer|)))
                          (|:| |rightEqMat| (|Matrix| (|Integer|))))
                (|Matrix| (|Integer|))))
   (|isDomain| *3 (|Matrix| (|Integer|)))
   (|isDomain| *2
               (|Record| (|:| |Smith| (|Matrix| (|Integer|)))
                         (|:| |leftEqMat| (|Matrix| (|Integer|)))
                         (|:| |rightEqMat| (|Matrix| (|Integer|)))))
   (|isDomain| *1 (|IntegerSmithNormalForm|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|EuclideanDomain|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *2
                   (|Record| (|:| |Smith| *3) (|:| |leftEqMat| *3)
                             (|:| |rightEqMat| *3)))
       (|isDomain| *1 (|SmithNormalForm| *4 *5 *6 *3))
       (|ofCategory| *3 (|MatrixCategory| *4 *5 *6))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Matrix| (|Integer|)))
       (|isDomain| *1 (|IntegerSmithNormalForm|))))
 ((*1 *2 *2 *3)
  (AND
   (|isDomain| *3 (|Mapping| (|Matrix| (|Integer|)) (|Matrix| (|Integer|))))
   (|isDomain| *2 (|Matrix| (|Integer|)))
   (|isDomain| *1 (|IntegerSmithNormalForm|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|EuclideanDomain|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|isDomain| *1 (|SmithNormalForm| *3 *4 *5 *2))
       (|ofCategory| *2 (|MatrixCategory| *3 *4 *5))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|EuclideanDomain|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *2 (|Record| (|:| |Hermite| *3) (|:| |eqMat| *3)))
       (|isDomain| *1 (|SmithNormalForm| *4 *5 *6 *3))
       (|ofCategory| *3 (|MatrixCategory| *4 *5 *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| (|Integer|)))
       (|isDomain| *1 (|PolynomialNumberTheoryFunctions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|EuclideanDomain|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|isDomain| *1 (|SmithNormalForm| *3 *4 *5 *2))
       (|ofCategory| *2 (|MatrixCategory| *3 *4 *5))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *1 (|MatrixCategory| *3 *4 *5))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))))
 ((*1 *1 *2)
  (AND (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *1 (|SquareMatrixCategory| *3 *2 *4 *5))
       (|ofCategory| *4 (|DirectProductCategory| *3 *2))
       (|ofCategory| *5 (|DirectProductCategory| *3 *2))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *4 (|AbelianMonoid|))
       (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *1 (|MatrixManipulation| *4 *5 *6 *2))
       (|ofCategory| *2 (|TwoDimensionalArrayCategory| *4 *5 *6))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|AbelianMonoid|)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|isDomain| *1 (|MatrixManipulation| *3 *4 *5 *2))
       (|ofCategory| *2 (|TwoDimensionalArrayCategory| *3 *4 *5))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *1)) (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *1 (|MatrixCategory| *3 *4 *5))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *1 (|MatrixCategory| *3 *4 *5))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Vector| *3)) (|ofCategory| *3 (|AbelianMonoid|))
       (|isDomain| *1 (|Matrix| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *4))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *1 (|SquareMatrixCategory| *3 *4 *5 *6))
       (|ofCategory| *5 (|DirectProductCategory| *3 *4))
       (|ofCategory| *6 (|DirectProductCategory| *3 *4))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|SquareMatrixCategory| *3 *4 *2 *5))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *5 (|DirectProductCategory| *3 *4))
       (|ofCategory| *2 (|DirectProductCategory| *3 *4))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *3))
       (|ofCategory| *3 (|Field|)) (|ofCategory| *3 (|Finite|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *2))
       (|ofCategory| *2 (|Field|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteRankAlgebra| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Vector| *4)) (|isDomain| *3 (|PositiveInteger|))
       (|ofCategory| *4 (|FiniteFieldCategory|))
       (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *4))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|SquareMatrixCategory| *3 *2 *4 *5))
       (|ofCategory| *4 (|DirectProductCategory| *3 *2))
       (|ofCategory| *5 (|DirectProductCategory| *3 *2))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| *2))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *2
                     (|Join| (|EuclideanDomain|)
                             (CATEGORY |domain|
                              (SIGNATURE |squareFree| ((|Factored| $) $)))))
       (|isDomain| *1 (|IntegralBasisTools| *2 *4 *5))
       (|ofCategory| *5 (|FramedAlgebra| *2 *4))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|SquareMatrixCategory| *3 *2 *4 *5))
       (|ofCategory| *4 (|DirectProductCategory| *3 *2))
       (|ofCategory| *5 (|DirectProductCategory| *3 *2))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|FiniteLinearAggregate| *2))
       (|ofCategory| *5 (|FiniteLinearAggregate| *2))
       (|ofCategory| *2 (|Field|))
       (|isDomain| *1 (|InnerMatrixLinearAlgebraFunctions| *2 *4 *5 *3))
       (|ofCategory| *3 (|MatrixCategory| *2 *4 *5))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *2 *3 *4))
       (|ofCategory| *3 (|FiniteLinearAggregate| *2))
       (|ofCategory| *4 (|FiniteLinearAggregate| *2))
       (|ofCategory| *2 (|AbelianMonoid|))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|FiniteLinearAggregate| *2))
       (|ofCategory| *5 (|FiniteLinearAggregate| *2))
       (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|MatrixLinearAlgebraFunctions| *2 *4 *5 *3))
       (|ofCategory| *3 (|MatrixCategory| *2 *4 *5))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|SquareMatrixCategory| *3 *2 *4 *5))
       (|ofCategory| *4 (|DirectProductCategory| *3 *2))
       (|ofCategory| *5 (|DirectProductCategory| *3 *2))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *2 *3 *4))
       (|ofCategory| *3 (|FiniteLinearAggregate| *2))
       (|ofCategory| *4 (|FiniteLinearAggregate| *2))
       (|ofCategory| *2 (|AbelianMonoid|))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|FiniteLinearAggregate| *2))
       (|ofCategory| *5 (|FiniteLinearAggregate| *2))
       (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|MatrixLinearAlgebraFunctions| *2 *4 *5 *3))
       (|ofCategory| *3 (|MatrixCategory| *2 *4 *5))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|SquareMatrixCategory| *3 *2 *4 *5))
       (|ofCategory| *4 (|DirectProductCategory| *3 *2))
       (|ofCategory| *5 (|DirectProductCategory| *3 *2))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *2 *3 *4))
       (|ofCategory| *3 (|FiniteLinearAggregate| *2))
       (|ofCategory| *4 (|FiniteLinearAggregate| *2))
       (|ofCategory| *2 (|AbelianMonoid|))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|SquareMatrixCategory| *3 *2 *4 *5))
       (|ofCategory| *4 (|DirectProductCategory| *3 *2))
       (|ofCategory| *5 (|DirectProductCategory| *3 *2))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| *4 *4)) (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|DifferentialExtension| *4))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *3 *3))
       (|ofCategory| *1 (|DifferentialExtension| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|DifferentialRing|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *1 *1) (|ofCategory| *1 (|DifferentialRing|)))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *3 (|Join| (|Field|) (|CharacteristicZero|)))
       (|isDomain| *1 (|FullPartialFractionExpansion| *3 *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))))
 ((*1 *1 *1)
  (AND (|ofCategory| *2 (|Join| (|Field|) (|CharacteristicZero|)))
       (|isDomain| *1 (|FullPartialFractionExpansion| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Symbol|))) (|ofType| *5 (|Union| *2 *3))
       (|ofType| *6 (|Union| *2 *3)) (|isDomain| *2 (|Symbol|))
       (|isDomain| *1 (|JetBundleSymAna| *4 *5 *6))
       (|ofCategory| *4 (|JetBundleCategory|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Symbol|))) (|isDomain| *2 (|Symbol|))
       (|isDomain| *1 (|JetBundle| *4 *5)) (|ofType| *4 *3) (|ofType| *5 *3)))
 ((*1 *1)
  (AND (|ofCategory| *1 (|LinearOrdinaryDifferentialOperatorCategory| *2))
       (|ofCategory| *2 (|Ring|))))
 ((*1 *1 *2)
  (AND (|ofCategory| *2 (|OrderedSet|))
       (|isDomain| *1 (|PartialDifferentialOperator| *3 *2))
       (|ofCategory| *3 (|PartialDifferentialRing| *2))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4))
       (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *1 (|PartialDifferentialRing| *4))
       (|ofCategory| *4 (|SetCategory|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|PartialDifferentialRing| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| *3))
       (|ofCategory| *1 (|PartialDifferentialRing| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|PartialDifferentialRing| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *1 (|SparseMultivariateSkewPolynomial| *3 *2 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *2 (|OrderedSet|))
       (|ofType| *4 (|Mapping| (|Automorphism| *3) *2))
       (|ofType| *5 (|Mapping| (|Mapping| *3 *3) *2))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *1 (|SparseMultivariateSkewPolynomial| *3 *4 *5 *6))
       (|has| *4 (SIGNATURE |variable| (*4 *2))) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *4 (|OrderedSet|))
       (|ofType| *5 (|Mapping| (|Automorphism| *3) *4))
       (|ofType| *6 (|Mapping| (|Mapping| *3 *3) *4))))) 
(((*1 *1 *2)
  (AND (|isDomain| *1 (|SKICombinators| *2)) (|ofCategory| *2 (|VarCat|))))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|SKICombinators| *2)) (|ofCategory| *2 (|VarCat|))))) 
(((*1 *1)
  (AND (|isDomain| *1 (|SKICombinators| *2)) (|ofCategory| *2 (|VarCat|))))) 
(((*1 *1)
  (AND (|isDomain| *1 (|SKICombinators| *2)) (|ofCategory| *2 (|VarCat|))))) 
(((*1 *1)
  (AND (|isDomain| *1 (|SKICombinators| *2)) (|ofCategory| *2 (|VarCat|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|SKICombinators| *3))
       (|ofCategory| *3 (|VarCat|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|NonNegativeInteger|))
       (|isDomain| *2
                   (|Record| (|:| |rft| (|Lambda| *5))
                             (|:| |pout| (|NonNegativeInteger|))))
       (|isDomain| *1 (|Lambda| *5)) (|ofCategory| *5 (|VarCat|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|NonNegativeInteger|))
       (|isDomain| *2
                   (|Record| (|:| |rft| (|SKICombinators| *5))
                             (|:| |pout| (|NonNegativeInteger|))))
       (|isDomain| *1 (|SKICombinators| *5)) (|ofCategory| *5 (|VarCat|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|ILogic|))) (|isDomain| *1 (|ILogic|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Lambda| *3))) (|isDomain| *1 (|Lambda| *3))
       (|ofCategory| *3 (|VarCat|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|LatticeJoinOfMeets|)))
       (|isDomain| *1 (|LatticeJoinOfMeets|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|LatticeMeetOfJoins|)))
       (|isDomain| *1 (|LatticeMeetOfJoins|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|SKICombinators| *3)))
       (|isDomain| *1 (|SKICombinators| *3)) (|ofCategory| *3 (|VarCat|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|ILogic|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Lambda| *3))
       (|ofCategory| *3 (|VarCat|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|LatticeJoinOfMeets|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|LatticeMeetOfJoins|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|OutputFormTools|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|SExpressionCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SKICombinators| *3))
       (|ofCategory| *3 (|VarCat|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SKICombinators| *3))
       (|ofCategory| *3 (|VarCat|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SKICombinators| *3))
       (|ofCategory| *3 (|VarCat|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SKICombinators| *3))
       (|ofCategory| *3 (|VarCat|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SKICombinators| *3))
       (|ofCategory| *3 (|VarCat|))))) 
(((*1 *2 *1) (AND (|isDomain| *1 (|Lambda| *2)) (|ofCategory| *2 (|VarCat|))))
 ((*1 *2 *1)
  (AND (|isDomain| *1 (|SKICombinators| *2)) (|ofCategory| *2 (|VarCat|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SKICombinators| *3))
       (|ofCategory| *3 (|VarCat|))))) 
(((*1 *1 *1) (|isDomain| *1 (|ILogic|)))
 ((*1 *1 *1) (AND (|isDomain| *1 (|Lambda| *2)) (|ofCategory| *2 (|VarCat|))))
 ((*1 *1 *1) (|isDomain| *1 (|LatticeJoinOfMeets|)))
 ((*1 *1 *1) (|isDomain| *1 (|LatticeMeetOfJoins|)))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|SKICombinators| *2)) (|ofCategory| *2 (|VarCat|))))) 
(((*1 *2 *2 *1)
  (AND (|ofCategory| *1 (|StackAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|StackAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|StackAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|CliffordAlgebra| *2 *3 *4))
       (|ofType| *2 (|PositiveInteger|)) (|ofCategory| *3 (|Field|))
       (|ofType| *4 (|SquareMatrix| *2 *3))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|DirectedGraph| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1) (|isDomain| *1 (|ILogic|)))
 ((*1 *1 *1) (|ofCategory| *1 (|Logic|)))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|MultifunctionGraph| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1) (|isDomain| *1 (|SingleInteger|)))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|CliffordAlgebra| *2 *3 *4))
       (|ofType| *2 (|PositiveInteger|)) (|ofCategory| *3 (|Field|))
       (|ofType| *4 (|SquareMatrix| *2 *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|JoinSemilattice|)))
 ((*1 *1 *1 *1) (|isDomain| *1 (|SingleInteger|)))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|CliffordAlgebra| *2 *3 *4))
       (|ofType| *2 (|PositiveInteger|)) (|ofCategory| *3 (|Field|))
       (|ofType| *4 (|SquareMatrix| *2 *3))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|MeetSemilattice|)))
 ((*1 *1 *1 *1) (|isDomain| *1 (|SingleInteger|)))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|SingleInteger|))))) 
(((*1 *1 *1) (|isDomain| *1 (|Boolean|)))
 ((*1 *1 *1) (|ofCategory| *1 (|BitAggregate|)))
 ((*1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *1) (|isDomain| *1 (|SingleInteger|)))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|Boolean|)))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|BitAggregate|)))
 ((*1 *1 *1 *1) (|isDomain| *1 (|SingleInteger|)))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|IndexedBits| *2)) (|ofType| *2 (|Integer|))))
 ((*1 *1 *1) (|isDomain| *1 (|SingleInteger|)))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|IndexedBits| *2)) (|ofType| *2 (|Integer|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|SingleInteger|)))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|IndexedBits| *2)) (|ofType| *2 (|Integer|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|SingleInteger|)))) 
(((*1 *2)
  (AND (|isDomain| *2 (|DeltaComplex| *3))
       (|isDomain| *1 (|DeltaComplexFactory| *3))
       (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|FiniteSimplicialComplex| *3))
       (|isDomain| *1 (|SimplicialComplexFactory| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|FiniteCubicalComplex| (|Integer|)))
       (|isDomain| *1 (|CubicalComplexFactory|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|DeltaComplex| *3))
       (|isDomain| *1 (|DeltaComplexFactory| *3))
       (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|FiniteSimplicialComplex| *3))
       (|isDomain| *1 (|SimplicialComplexFactory| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|FiniteCubicalComplex| (|Integer|)))
       (|isDomain| *1 (|CubicalComplexFactory|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|DeltaComplex| *4))
       (|isDomain| *1 (|DeltaComplexFactory| *4))
       (|ofCategory| *4 (|AbelianGroup|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|FiniteSimplicialComplex| *4))
       (|isDomain| *1 (|SimplicialComplexFactory| *4))
       (|ofCategory| *4 (|AbelianGroup|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|FiniteCubicalComplex| (|Integer|)))
       (|isDomain| *1 (|CubicalComplexFactory|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|FiniteSimplicialComplex| *3))
       (|isDomain| *1 (|SimplicialComplexFactory| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|FiniteCubicalComplex| (|Integer|)))
       (|isDomain| *1 (|CubicalComplexFactory|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|FiniteSimplicialComplex| *3))
       (|isDomain| *1 (|SimplicialComplexFactory| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|FiniteCubicalComplex| (|Integer|)))
       (|isDomain| *1 (|CubicalComplexFactory|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|DeltaComplex| *3))
       (|isDomain| *1 (|DeltaComplexFactory| *3))
       (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|FiniteSimplicialComplex| *3))
       (|isDomain| *1 (|SimplicialComplexFactory| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|FiniteSimplicialComplex| *3))
       (|isDomain| *1 (|SimplicialComplexFactory| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|FiniteCubicalComplex| (|Integer|)))
       (|isDomain| *1 (|CubicalComplexFactory|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|FiniteSimplicialComplex| *4))
       (|isDomain| *1 (|SimplicialComplexFactory| *4))
       (|ofCategory| *4 (|AbelianGroup|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|FiniteCubicalComplex| (|Integer|)))
       (|isDomain| *1 (|CubicalComplexFactory|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|FiniteSimplicialComplex| *4))
       (|isDomain| *1 (|SimplicialComplexFactory| *4))
       (|ofCategory| *4 (|AbelianGroup|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|AbelianGroup|))
       (|isDomain| *1 (|FiniteSimplicialComplex| *3))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4))
       (|isDomain| *3 (|List| (|List| (|NonNegativeInteger|))))
       (|ofCategory| *4 (|AbelianGroup|))
       (|isDomain| *1 (|FiniteSimplicialComplex| *4))))
 ((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|List| *5))
       (|isDomain| *4 (|List| (|List| (|NonNegativeInteger|))))
       (|ofCategory| *5 (|AbelianGroup|))
       (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|FiniteSimplicialComplex| *5))))) 
(((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|DeltaComplex| *3))
   (|ofCategory| *3 (|AbelianGroup|))
   (|isDomain| *1 (|FiniteSimplicialComplex| *3))))
 ((*1 *1 *2 *3)
  (|partial| AND (|isDomain| *2 (|DeltaComplex| *4))
   (|isDomain| *3 (|Boolean|)) (|ofCategory| *4 (|AbelianGroup|))
   (|isDomain| *1 (|FiniteSimplicialComplex| *4))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|OrientedFacet|))
       (|isDomain| *1 (|FiniteSimplicialComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FiniteCubicalComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|IndexedAggregate| *2 *3)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *2 (|Type|)) (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|OrientedFacet|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FiniteSimplicialComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|IndexedAggregate| *2 *3)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *2 (|Type|)) (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|OrientedFacet|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FiniteSimplicialComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|CliffordAlgebra| *3 *4 *5))
       (|ofType| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Field|))
       (|ofType| *5 (|SquareMatrix| *3 *4))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|List| (|CubicalFacet|))))
       (|isDomain| *1 (|FiniteCubicalComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|List| (|OrientedFacet|))))
       (|isDomain| *1 (|FiniteSimplicialComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|LinearAggregate| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3 *3))
       (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|LinearAggregate| *3)) (|ofCategory| *3 (|Type|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|List| (|Permutation| *3)))
       (|isDomain| *1 (|Permutation| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *4 *5 *3))
       (|isDomain| *2
                   (|Record| (|:| |under| *1) (|:| |floor| *1)
                             (|:| |upper| *1)))
       (|ofCategory| *1 (|PolynomialSetCategory| *4 *5 *3 *6))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FiniteSimplicialComplex| *2))
       (|ofCategory| *2 (|AbelianGroup|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|List| (|CubicalFacet|))))
       (|isDomain| *1 (|FiniteCubicalComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|List| (|OrientedFacet|))))
       (|isDomain| *1 (|FiniteSimplicialComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|CubicalFacet|)))
       (|isDomain| *1 (|CubicalFacet|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FiniteCubicalComplex| *2))
       (|ofCategory| *2 (|AbelianGroup|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|OrientedFacet|)))
       (|isDomain| *1 (|OrientedFacet|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|DoubleFloat|)) (|isDomain| *2 (|SBoundary| *4))
       (|isDomain| *1 (|Scene| *4)) (|ofCategory| *4 (|SPointCategory|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FiniteSimplicialComplex| *2))
       (|ofCategory| *2 (|AbelianGroup|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|OrientedFacet|))
       (|isDomain| *1 (|FiniteSimplicialComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|DeltaComplex| *3)) (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|SBoundary| *3))
       (|ofCategory| *3 (|SPointCategory|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|OrientedFacet|))
       (|isDomain| *1 (|FiniteSimplicialComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FiniteSimplicialComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|OrientedFacet|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FiniteSimplicialComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|FiniteSimplicialComplex| *2))
       (|ofCategory| *2 (|AbelianGroup|))))) 
(((*1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FiniteSimplicialComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|UndirectedGraph| (|NonNegativeInteger|)))
       (|isDomain| *1 (|DeltaComplex| *3)) (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|DirectedGraph| (|NonNegativeInteger|)))
       (|isDomain| *1 (|FiniteSimplicialComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|Boolean|)) (|isDomain| *2 (|GroupPresentation|))
       (|isDomain| *1 (|FiniteCubicalComplex| *4))
       (|ofCategory| *4 (|AbelianGroup|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|GroupPresentation|))
       (|isDomain| *1 (|FiniteCubicalComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|Boolean|)) (|isDomain| *2 (|GroupPresentation|))
       (|isDomain| *1 (|DeltaComplex| *4)) (|ofCategory| *4 (|AbelianGroup|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|GroupPresentation|))
       (|isDomain| *1 (|DeltaComplex| *3)) (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|Boolean|)) (|isDomain| *2 (|GroupPresentation|))
       (|isDomain| *1 (|FiniteSimplicialComplex| *4))
       (|ofCategory| *4 (|AbelianGroup|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|GroupPresentation|))
       (|isDomain| *1 (|FiniteSimplicialComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|ChainComplex|))
       (|isDomain| *1 (|FiniteCubicalComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|ChainComplex|)) (|isDomain| *1 (|DeltaComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|ChainComplex|))
       (|isDomain| *1 (|FiniteSimplicialComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|CoChainComplex| *3))
       (|isDomain| *1 (|DeltaComplex| *3)) (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|CoChainComplex| *3))
       (|isDomain| *1 (|FiniteSimplicialComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Homology|))) (|isDomain| *1 (|ChainComplex|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Homology|)))
       (|isDomain| *1 (|FiniteCubicalComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Homology|)))
       (|isDomain| *1 (|DeltaComplex| *3)) (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *1 *2 *3 *2)
  (AND (|isDomain| *2 (|List| (|List| (|Integer|))))
       (|isDomain| *3 (|List| (|Integer|))) (|isDomain| *1 (|Homology|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Homology|)))
       (|isDomain| *1 (|FiniteSimplicialComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Homology|)))
       (|isDomain| *1 (|CoChainComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Homology|)))
       (|isDomain| *1 (|DeltaComplex| *3)) (|ofCategory| *3 (|AbelianGroup|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Homology|)))
       (|isDomain| *1 (|FiniteSimplicialComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *4 (|OrderedIntegralDomain|)) (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|SturmHabichtPackage| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *4 (|OrderedIntegralDomain|)) (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|SturmHabichtPackage| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|OrderedIntegralDomain|)) (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|SturmHabichtPackage| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|OrderedIntegralDomain|)) (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|SturmHabichtPackage| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|OrderedIntegralDomain|)) (|isDomain| *2 (|List| *4))
       (|isDomain| *1 (|SturmHabichtPackage| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|OrderedIntegralDomain|)) (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|SturmHabichtPackage| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|List| (|Integer|)))
       (|isDomain| *1 (|SymmetricGroupCombinatoricFunctions|))))) 
(((*1 *2 *3 *3 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|List| (|Integer|)))
       (|isDomain| *1 (|SymmetricGroupCombinatoricFunctions|))))) 
(((*1 *2 *3 *3 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|List| (|Integer|)))
       (|isDomain| *1 (|SymmetricGroupCombinatoricFunctions|))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|SymmetricGroupCombinatoricFunctions|))))) 
(((*1 *2 *2 *2 *3)
  (AND (|isDomain| *2 (|Vector| (|Integer|))) (|isDomain| *3 (|Integer|))
       (|isDomain| *1 (|SymmetricGroupCombinatoricFunctions|))))
 ((*1 *2 *3 *2 *4)
  (AND (|isDomain| *2 (|Vector| (|Integer|)))
       (|isDomain| *3 (|List| (|Integer|))) (|isDomain| *4 (|Integer|))
       (|isDomain| *1 (|SymmetricGroupCombinatoricFunctions|))))) 
(((*1 *2 *2 *2 *3)
  (AND (|isDomain| *2 (|List| (|Integer|))) (|isDomain| *3 (|Boolean|))
       (|isDomain| *1 (|SymmetricGroupCombinatoricFunctions|))))) 
(((*1 *2 *3 *3 *2)
  (AND (|isDomain| *2 (|Matrix| (|Integer|)))
       (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *1 (|SymmetricGroupCombinatoricFunctions|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|Matrix| (|Integer|)))
       (|isDomain| *1 (|SymmetricGroupCombinatoricFunctions|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|List| (|Matrix| (|Integer|))))
       (|isDomain| *1 (|SymmetricGroupCombinatoricFunctions|))))) 
(((*1 *2 *2 *2 *3)
  (AND (|isDomain| *2 (|List| (|Integer|)))
       (|isDomain| *3 (|Matrix| (|Integer|)))
       (|isDomain| *1 (|SymmetricGroupCombinatoricFunctions|))))) 
(((*1 *2 *3 *3 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|Matrix| (|Integer|)))
       (|isDomain| *1 (|SymmetricGroupCombinatoricFunctions|))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2 (|List| (|Record| (|:| |val| *3) (|:| |tower| *4))))
       (|isDomain| *1
                   (|SquareFreeRegularTriangularSetGcdPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2 (|List| *4))
       (|isDomain| *1
                   (|SquareFreeRegularTriangularSetGcdPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1
                   (|SquareFreeRegularTriangularSetGcdPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |val| (|Boolean|)) (|:| |tower| *4))))
       (|isDomain| *1
                   (|SquareFreeRegularTriangularSetGcdPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2 (|List| *4))
       (|isDomain| *1
                   (|SquareFreeRegularTriangularSetGcdPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |val| (|Boolean|)) (|:| |tower| *4))))
       (|isDomain| *1
                   (|SquareFreeRegularTriangularSetGcdPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2 (|List| *4))
       (|isDomain| *1
                   (|SquareFreeRegularTriangularSetGcdPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |val| (|Boolean|)) (|:| |tower| *4))))
       (|isDomain| *1
                   (|SquareFreeRegularTriangularSetGcdPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *3 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2 (|List| (|Record| (|:| |val| *3) (|:| |tower| *4))))
       (|isDomain| *1
                   (|SquareFreeRegularTriangularSetGcdPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *3 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2 (|List| (|Record| (|:| |val| *3) (|:| |tower| *4))))
       (|isDomain| *1
                   (|SquareFreeRegularTriangularSetGcdPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *3 *3 *4 *5 *5)
  (AND (|isDomain| *5 (|Boolean|)) (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *8 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *6 *7 *8))
       (|isDomain| *2 (|List| (|Record| (|:| |val| *3) (|:| |tower| *4))))
       (|isDomain| *1
                   (|SquareFreeRegularTriangularSetGcdPackage| *6 *7 *8 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *6 *7 *8 *3))))
 ((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3 (|List| (|Record| (|:| |val| (|List| *8)) (|:| |tower| *9))))
   (|isDomain| *5 (|Boolean|))
   (|ofCategory| *8 (|RecursivePolynomialCategory| *6 *7 *4))
   (|ofCategory| *9 (|RegularTriangularSetCategory| *6 *7 *4 *8))
   (|ofCategory| *6 (|GcdDomain|))
   (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *4 (|OrderedSet|))
   (|isDomain| *2 (|List| (|Record| (|:| |val| *8) (|:| |tower| *9))))
   (|isDomain| *1
               (|SquareFreeRegularTriangularSetGcdPackage| *6 *7 *4 *8 *9))))) 
(((*1 *2 *3 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |val| (|List| *3)) (|:| |tower| *4))))
       (|isDomain| *1
                   (|SquareFreeRegularTriangularSetGcdPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2)
  (AND (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|RegularTriangularSetGcdPackage| *3 *4 *5 *6 *7))
       (|ofCategory| *7 (|RegularTriangularSetCategory| *3 *4 *5 *6))))
 ((*1 *2)
  (AND (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1
                   (|SquareFreeRegularTriangularSetGcdPackage| *3 *4 *5 *6 *7))
       (|ofCategory| *7 (|RegularTriangularSetCategory| *3 *4 *5 *6))))) 
(((*1 *2 *3 *3 *3)
  (AND (|isDomain| *3 (|String|)) (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|RegularTriangularSetGcdPackage| *4 *5 *6 *7 *8))
       (|ofCategory| *8 (|RegularTriangularSetCategory| *4 *5 *6 *7))))
 ((*1 *2 *3 *3 *3)
  (AND (|isDomain| *3 (|String|)) (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1
                   (|SquareFreeRegularTriangularSetGcdPackage| *4 *5 *6 *7 *8))
       (|ofCategory| *8 (|RegularTriangularSetCategory| *4 *5 *6 *7))))) 
(((*1 *2)
  (AND (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|RegularTriangularSetGcdPackage| *3 *4 *5 *6 *7))
       (|ofCategory| *7 (|RegularTriangularSetCategory| *3 *4 *5 *6))))
 ((*1 *2)
  (AND (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1
                   (|SquareFreeRegularTriangularSetGcdPackage| *3 *4 *5 *6 *7))
       (|ofCategory| *7 (|RegularTriangularSetCategory| *3 *4 *5 *6))))) 
(((*1 *2 *3 *3 *3)
  (AND (|isDomain| *3 (|String|)) (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|RegularTriangularSetGcdPackage| *4 *5 *6 *7 *8))
       (|ofCategory| *8 (|RegularTriangularSetCategory| *4 *5 *6 *7))))
 ((*1 *2 *3 *3 *3)
  (AND (|isDomain| *3 (|String|)) (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1
                   (|SquareFreeRegularTriangularSetGcdPackage| *4 *5 *6 *7 *8))
       (|ofCategory| *8 (|RegularTriangularSetCategory| *4 *5 *6 *7))))) 
(((*1 *2 *3 *4 *3 *5 *5 *5 *5 *5)
  (|partial| AND (|isDomain| *3 (|List| *9)) (|isDomain| *5 (|Boolean|))
   (|ofCategory| *9 (|RecursivePolynomialCategory| *6 *7 *8))
   (|ofCategory| *6 (|GcdDomain|))
   (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *8 (|OrderedSet|))
   (|isDomain| *2
               (|Record| (|:| |eq| (|List| *9)) (|:| |tower| *4)
                         (|:| |ineq| (|List| *9))))
   (|isDomain| *1 (|QuasiComponentPackage| *6 *7 *8 *9 *4))
   (|ofCategory| *4 (|RegularTriangularSetCategory| *6 *7 *8 *9))))
 ((*1 *2 *3 *4 *3 *5 *5 *5 *5 *5)
  (|partial| AND (|isDomain| *3 (|List| *9)) (|isDomain| *5 (|Boolean|))
   (|ofCategory| *9 (|RecursivePolynomialCategory| *6 *7 *8))
   (|ofCategory| *6 (|GcdDomain|))
   (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *8 (|OrderedSet|))
   (|isDomain| *2
               (|Record| (|:| |eq| (|List| *9)) (|:| |tower| *4)
                         (|:| |ineq| (|List| *9))))
   (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *6 *7 *8 *9 *4))
   (|ofCategory| *4 (|RegularTriangularSetCategory| *6 *7 *8 *9))))) 
(((*1 *2 *3 *4 *5 *5)
  (AND (|isDomain| *3 (|List| *9)) (|isDomain| *4 (|List| *10))
       (|isDomain| *5 (|Boolean|))
       (|ofCategory| *9 (|RecursivePolynomialCategory| *6 *7 *8))
       (|ofCategory| *10 (|RegularTriangularSetCategory| *6 *7 *8 *9))
       (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *8 (|OrderedSet|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |eq| (|List| *9)) (|:| |tower| *10)
                              (|:| |ineq| (|List| *9)))))
       (|isDomain| *1 (|QuasiComponentPackage| *6 *7 *8 *9 *10))))
 ((*1 *2 *3 *4 *5 *5)
  (AND (|isDomain| *3 (|List| *9)) (|isDomain| *4 (|List| *10))
       (|isDomain| *5 (|Boolean|))
       (|ofCategory| *9 (|RecursivePolynomialCategory| *6 *7 *8))
       (|ofCategory| *10 (|RegularTriangularSetCategory| *6 *7 *8 *9))
       (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *8 (|OrderedSet|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |eq| (|List| *9)) (|:| |tower| *10)
                              (|:| |ineq| (|List| *9)))))
       (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *6 *7 *8 *9 *10))))) 
(((*1 *2 *2)
  (AND
   (|isDomain| *2 (|List| (|Record| (|:| |val| (|List| *6)) (|:| |tower| *7))))
   (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
   (|ofCategory| *7 (|RegularTriangularSetCategory| *3 *4 *5 *6))
   (|ofCategory| *3 (|GcdDomain|))
   (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|))
   (|isDomain| *1 (|QuasiComponentPackage| *3 *4 *5 *6 *7))))
 ((*1 *2 *2)
  (AND
   (|isDomain| *2 (|List| (|Record| (|:| |val| (|List| *6)) (|:| |tower| *7))))
   (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
   (|ofCategory| *7 (|RegularTriangularSetCategory| *3 *4 *5 *6))
   (|ofCategory| *3 (|GcdDomain|))
   (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|))
   (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *3 *4 *5 *6 *7))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|Record| (|:| |val| (|List| *7)) (|:| |tower| *8)))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *8 (|RegularTriangularSetCategory| *4 *5 *6 *7))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|QuasiComponentPackage| *4 *5 *6 *7 *8))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|Record| (|:| |val| (|List| *7)) (|:| |tower| *8)))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *8 (|RegularTriangularSetCategory| *4 *5 *6 *7))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *4 *5 *6 *7 *8))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *7))
       (|ofCategory| *7 (|RegularTriangularSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *1 (|QuasiComponentPackage| *3 *4 *5 *6 *7))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *7))
       (|ofCategory| *7 (|RegularTriangularSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *3 *4 *5 *6 *7))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|QuasiComponentPackage| *4 *5 *6 *7 *3))
       (|ofCategory| *3 (|RegularTriangularSetCategory| *4 *5 *6 *7))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| *3))
       (|ofCategory| *3 (|RegularTriangularSetCategory| *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|QuasiComponentPackage| *5 *6 *7 *8 *3))))
 ((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *4 *5 *6 *7 *3))
       (|ofCategory| *3 (|RegularTriangularSetCategory| *4 *5 *6 *7))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| *3))
       (|ofCategory| *3 (|RegularTriangularSetCategory| *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *5 *6 *7 *8 *3))))) 
(((*1 *2 *3 *3)
  (|partial| AND (|ofCategory| *4 (|GcdDomain|))
   (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *6 (|OrderedSet|))
   (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
   (|isDomain| *2 (|Boolean|))
   (|isDomain| *1 (|QuasiComponentPackage| *4 *5 *6 *7 *3))
   (|ofCategory| *3 (|RegularTriangularSetCategory| *4 *5 *6 *7))))
 ((*1 *2 *3 *3)
  (|partial| AND (|ofCategory| *4 (|GcdDomain|))
   (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *6 (|OrderedSet|))
   (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
   (|isDomain| *2 (|Boolean|))
   (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *4 *5 *6 *7 *3))
   (|ofCategory| *3 (|RegularTriangularSetCategory| *4 *5 *6 *7))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|QuasiComponentPackage| *4 *5 *6 *7 *8))
       (|ofCategory| *8 (|RegularTriangularSetCategory| *4 *5 *6 *7))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *4 *5 *6 *7 *8))
       (|ofCategory| *8 (|RegularTriangularSetCategory| *4 *5 *6 *7))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|QuasiComponentPackage| *4 *5 *6 *7 *8))
       (|ofCategory| *8 (|RegularTriangularSetCategory| *4 *5 *6 *7))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *4 *5 *6 *7 *8))
       (|ofCategory| *8 (|RegularTriangularSetCategory| *4 *5 *6 *7))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|QuasiComponentPackage| *4 *5 *6 *7 *8))
       (|ofCategory| *8 (|RegularTriangularSetCategory| *4 *5 *6 *7))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *4 *5 *6 *7 *8))
       (|ofCategory| *8 (|RegularTriangularSetCategory| *4 *5 *6 *7))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|QuasiComponentPackage| *4 *5 *6 *7 *3))
       (|ofCategory| *3 (|RegularTriangularSetCategory| *4 *5 *6 *7))))
 ((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *4 *5 *6 *7 *3))
       (|ofCategory| *3 (|RegularTriangularSetCategory| *4 *5 *6 *7))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|QuasiComponentPackage| *4 *5 *6 *7 *3))
       (|ofCategory| *3 (|RegularTriangularSetCategory| *4 *5 *6 *7))))
 ((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *4 *5 *6 *7 *3))
       (|ofCategory| *3 (|RegularTriangularSetCategory| *4 *5 *6 *7))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *7))
       (|ofCategory| *7 (|RegularTriangularSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *1 (|QuasiComponentPackage| *3 *4 *5 *6 *7))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *7))
       (|ofCategory| *7 (|RegularTriangularSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *3 *4 *5 *6 *7))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|QuasiComponentPackage| *4 *5 *6 *7 *3))
       (|ofCategory| *3 (|RegularTriangularSetCategory| *4 *5 *6 *7))))
 ((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *4 *5 *6 *7 *3))
       (|ofCategory| *3 (|RegularTriangularSetCategory| *4 *5 *6 *7))))) 
(((*1 *2)
  (AND (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|QuasiComponentPackage| *3 *4 *5 *6 *7))
       (|ofCategory| *7 (|RegularTriangularSetCategory| *3 *4 *5 *6))))
 ((*1 *2)
  (AND (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *3 *4 *5 *6 *7))
       (|ofCategory| *7 (|RegularTriangularSetCategory| *3 *4 *5 *6))))) 
(((*1 *2 *3 *3 *3)
  (AND (|isDomain| *3 (|String|)) (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|QuasiComponentPackage| *4 *5 *6 *7 *8))
       (|ofCategory| *8 (|RegularTriangularSetCategory| *4 *5 *6 *7))))
 ((*1 *2 *3 *3 *3)
  (AND (|isDomain| *3 (|String|)) (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|SquareFreeQuasiComponentPackage| *4 *5 *6 *7 *8))
       (|ofCategory| *8 (|RegularTriangularSetCategory| *4 *5 *6 *7))))) 
(((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|FortranScalarType|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|SimpleFortranProgram| *5 *4))
       (|ofCategory| *4 (|FunctionSpace| *5))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|SExpressionCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|SExpressionCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|SExpressionCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|SExpressionCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|OutputFormTools|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|SExpressionCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|OutputFormTools|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Pattern| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|SExpressionCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FortranScalarType|))))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|IntegerRetractions| *3))
       (|ofCategory| *3 (|RetractableTo| (|Integer|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|OutputFormTools|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|SExpressionCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|SExpressionCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2 (|List| (|Record| (|:| |key| (|Symbol|)) (|:| |entry| *4))))
   (|isDomain| *1 (|PatternMatchResult| *3 *4))
   (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|SExpressionCategory| *3 *4 *5 *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *1))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *4))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *2 (|SparseEchelonMatrix| *4 *1))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|Symbol|))
       (|isDomain| *1 (|OutputFormTools|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|SExpressionCategory| *3 *2 *4 *5))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|IntegerRetractions| *3))
       (|ofCategory| *3 (|RetractableTo| *2))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|OutputFormTools|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|SExpressionCategory| *3 *4 *2 *5))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *1 *2 *2 *3)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *3 (|PositiveInteger|))
       (|ofCategory| *1 (|FloatingPointSystem|))))
 ((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|FloatingPointSystem|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|SExpressionCategory| *3 *4 *5 *2))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|SExpressionCategory| *2 *3 *4 *5))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *5 (|SetCategory|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|SExpressionCategory| *2 *3 *4 *5))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *5 (|SetCategory|))))) 
(((*1 *1 *1 *2)
  (|partial| AND (|isDomain| *2 (|PositiveInteger|))
   (|isDomain| *1 (|SetOfMIntegersInOneToN| *3 *4)) (|ofType| *3 *2)
   (|ofType| *4 *2)))) 
(((*1 *1 *1 *2 *2)
  (|partial| AND (|isDomain| *2 (|PositiveInteger|))
   (|isDomain| *1 (|SetOfMIntegersInOneToN| *3 *4)) (|ofType| *3 *2)
   (|ofType| *4 *2)))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|PositiveInteger|)))
       (|isDomain| *1 (|SetOfMIntegersInOneToN| *3 *4))
       (|ofType| *3 (|PositiveInteger|)) (|ofType| *4 (|PositiveInteger|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|PositiveInteger|)))
       (|isDomain| *1 (|SetOfMIntegersInOneToN| *3 *4))
       (|ofType| *3 (|PositiveInteger|)) (|ofType| *4 (|PositiveInteger|))))) 
(((*1 *2) (AND (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|Finite|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|Vector| (|SetOfMIntegersInOneToN| *3 *4)))
       (|isDomain| *1 (|SetOfMIntegersInOneToN| *3 *4))
       (|ofType| *3 (|PositiveInteger|)) (|ofType| *4 (|PositiveInteger|))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|SetOfMIntegersInOneToN| *4 *5)) (|ofType| *4 *3)
       (|ofType| *5 *3)))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|SubsetLattice| *3 *4)) (|ofType| *4 *2)))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|FiniteSetAggregate| *2))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *2 (|Finite|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|SubsetLattice| *3 *4)) (|ofType| *4 *2)))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|SubsetLattice| *2 *3))
       (|ofCategory| *2 (|SetCategory|)) (|ofType| *3 (|List| *2))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|SetCategory|)) (|isDomain| *2 (|SingleInteger|))))) 
(((*1 *2 *2 *1)
  (AND (|ofCategory| *1 (|SetCategory|)) (|isDomain| *2 (|HashState|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|SetCategory|)) (|isDomain| *2 (|String|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *1 (|SetAggregate| *3))))
 ((*1 *1)
  (AND (|ofCategory| *1 (|SetAggregate| *2))
       (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|PolynomialIdeal| *3 *4 *5 *6)))
       (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialIdeal| *3 *4 *5 *6))
       (|ofCategory| *6 (|PolynomialCategory| *3 *4 *5))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *2 (|Field|))
       (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialIdeal| *2 *3 *4 *5))
       (|ofCategory| *5 (|PolynomialCategory| *2 *3 *4))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *3))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|List| *1)) (|isDomain| *3 (|List| *7))
       (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *7))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))))
 ((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *7))))
 ((*1 *2 *3 *1)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *3))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|SetAggregate| *2))
       (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|SetAggregate| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|SetAggregate| *2))
       (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|SetAggregate| *2))
       (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|SetAggregate| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|List| (|Kernel| *4)))
       (|ofCategory| *4 (|FunctionSpace| *3)) (|ofCategory| *3 (|Comparable|))
       (|isDomain| *1 (|IntegrationTools| *3 *4))))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|PatternMatchResult| *2 *3))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|SBoundary| *3)))
       (|isDomain| *1 (|SBoundary| *3)) (|ofCategory| *3 (|SPointCategory|))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|SetAggregate| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|SetAggregate| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|SetAggregate| *2))
       (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *3 *4 *2)
  (AND (|isDomain| *4 (|Mapping| *2 *2)) (|ofCategory| *2 (|LeftModule| *5))
       (|ofCategory| *5 (|Ring|))
       (|isDomain| *1 (|ApplyUnivariateSkewPolynomial| *5 *2 *3))
       (|ofCategory| *3 (|UnivariateSkewPolynomialCategory| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Distribution| *5))
       (|ofCategory| *5 (|CommutativeRing|))
       (|ofCategory| *6 (|Join| (|CommutativeRing|) (|Module| *5)))
       (|isDomain| *2 (|Distribution| *6))
       (|isDomain| *1 (|DistributionPolynomialPackage| *5 *6 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *6))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|FiniteMoebiusFunction| *3))
       (|ofCategory| *3 (|Join| (|PartialOrder|) (|SetCategory|)))))
 ((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FunctionGraph| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Matrix| *3))
       (|ofCategory| *1 (|FramedNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|))))
 ((*1 *2 *1 *3 *3)
  (AND (|ofCategory| *2 (|Field|))
       (|isDomain| *1 (|GeneralizedFiniteMoebiusFunction| *3 *2))
       (|ofCategory| *3 (|Join| (|PartialOrder|) (|SetCategory|)))))
 ((*1 *2 *1 *3 *3)
  (AND (|ofCategory| *2 (|Ring|)) (|isDomain| *1 (|IncidenceAlgebra| *2 *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *2 (|Ring|))
       (|isDomain| *1 (|IncidenceAlgebra| *2 *4))
       (|ofCategory| *4 (|SetCategory|))))
 ((*1 *2 *1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|MultifunctionGraph| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1 *2 *2)
  (AND (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *2))
       (|ofCategory| *2 (|Ring|))))
 ((*1 *2 *3 *2 *2 *4 *5)
  (AND (|isDomain| *4 (|Automorphism| *2)) (|isDomain| *5 (|Mapping| *2 *2))
       (|ofCategory| *2 (|Ring|))
       (|isDomain| *1 (|UnivariateSkewPolynomialCategoryOps| *2 *3))
       (|ofCategory| *3 (|UnivariateSkewPolynomialCategory| *2))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Partition|)) (|ofCategory| *1 (|SequenceCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *1 (|SequenceCategory| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *1 (|SequenceCategory| *3))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|SequenceCategory| *4))
       (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|List| *4))))) 
(((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|SequenceCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|DirectProductCategory| *4 *5))
       (|ofCategory| *7 (|DirectProductCategory| *3 *5))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|SparseEchelonMatrix| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|DirectProductCategory| *4 *5))
       (|ofCategory| *7 (|DirectProductCategory| *3 *5))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|SparseEchelonMatrix| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|SparseEchelonMatrix| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|SparseEchelonMatrix| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *4))
       (|ofCategory| *4 (|OrderedSet|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|SparseEchelonMatrix| *4 *5))
       (|ofCategory| *5 (|Ring|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *4))
       (|ofCategory| *4 (|OrderedSet|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|SparseEchelonMatrix| *4 *5))
       (|ofCategory| *5 (|Ring|))))) 
(((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *2 *5))
       (|ofCategory| *4 (|Type|)) (|ofCategory| *5 (|IndexedAggregate| *3 *4))
       (|isDomain| *3 (|Integer|))
       (|ofCategory| *2 (|IndexedAggregate| *3 *4))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|ofCategory| *1 (|RectangularMatrixCategory| *4 *5 *6 *2 *7))
       (|ofCategory| *6 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *7 (|DirectProductCategory| *4 *6))
       (|ofCategory| *2 (|DirectProductCategory| *5 *6))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2
                   (|Record| (|:| |Indices| (|List| *4))
                             (|:| |Entries| (|List| *5))))
       (|isDomain| *1 (|SparseEchelonMatrix| *4 *5))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Ring|))))) 
(((*1 *1 *1 *2 *3)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *3 *5))
       (|ofCategory| *4 (|Type|)) (|ofCategory| *3 (|IndexedAggregate| *2 *4))
       (|ofCategory| *5 (|IndexedAggregate| *2 *4))
       (|isDomain| *2 (|Integer|))))
 ((*1 *2 *1 *3 *4 *5)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *4 (|List| *6))
       (|isDomain| *5 (|List| *7)) (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|Ring|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|SparseEchelonMatrix| *6 *7))))
 ((*1 *2 *1 *3 *4)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *4
                   (|Record| (|:| |Indices| (|List| *5))
                             (|:| |Entries| (|List| *6))))
       (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|Ring|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|SparseEchelonMatrix| *5 *6))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|SparseEchelonMatrix| *4 *5))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Ring|))))) 
(((*1 *2 *1 *3)
  (AND
   (|isDomain| *3
               (|Record| (|:| |Indices| (|List| *4))
                         (|:| |Entries| (|List| *5))))
   (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Ring|))
   (|isDomain| *2 (|Void|)) (|isDomain| *1 (|SparseEchelonMatrix| *4 *5))))) 
(((*1 *2 *1 *3)
  (AND
   (|isDomain| *3
               (|Record| (|:| |Indices| (|List| *4))
                         (|:| |Entries| (|List| *5))))
   (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Ring|))
   (|isDomain| *2 (|Void|)) (|isDomain| *1 (|SparseEchelonMatrix| *4 *5))))) 
(((*1 *1 *1 *2 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|SparseEchelonMatrix| *3 *4))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|isDomain| *1 (|InnerMatrixLinearAlgebraFunctions| *3 *4 *5 *2))
       (|ofCategory| *2 (|MatrixCategory| *3 *4 *5))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|ofCategory| *7 (|QuotientFieldCategory| *4))
       (|ofCategory| *2 (|MatrixCategory| *7 *8 *9))
       (|isDomain| *1
                   (|InnerMatrixQuotientFieldFunctions| *4 *5 *6 *3 *7 *8 *9
                                                        *2))
       (|ofCategory| *3 (|MatrixCategory| *4 *5 *6))
       (|ofCategory| *8 (|FiniteLinearAggregate| *7))
       (|ofCategory| *9 (|FiniteLinearAggregate| *7))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *2 *3 *4))
       (|ofCategory| *2 (|AbelianMonoid|))
       (|ofCategory| *3 (|FiniteLinearAggregate| *2))
       (|ofCategory| *4 (|FiniteLinearAggregate| *2))
       (|ofCategory| *2 (|EuclideanDomain|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|EuclideanDomain|))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|isDomain| *1 (|MatrixLinearAlgebraFunctions| *3 *4 *5 *2))
       (|ofCategory| *2 (|MatrixCategory| *3 *4 *5))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|EuclideanDomain|))
       (|isDomain| *1 (|ModularHermitianRowReduction| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Matrix| *4))
       (|ofCategory| *4 (|UnivariateSkewPolynomialCategory| *3))
       (|ofCategory| *3 (|Field|))
       (|isDomain| *1 (|OrePolynomialMatrixOperations| *3 *4))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Matrix| *6)) (|isDomain| *5 (|List| (|Vector| *4)))
       (|ofCategory| *4 (|Field|))
       (|ofCategory| *6 (|UnivariateSkewPolynomialCategory| *4))
       (|isDomain| *2
                   (|Record| (|:| |mat| (|Matrix| *6))
                             (|:| |vecs| (|List| (|Vector| *4)))))
       (|isDomain| *1 (|OrePolynomialMatrixOperations| *4 *6))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|RectangularMatrixCategory| *2 *3 *4 *5 *6))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *5 (|DirectProductCategory| *3 *4))
       (|ofCategory| *6 (|DirectProductCategory| *2 *4))
       (|ofCategory| *4 (|EuclideanDomain|))))
 ((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |Ech| (|SparseEchelonMatrix| *3 *4))
                         (|:| |Lt| (|Matrix| *4)) (|:| |Pivots| (|List| *4))
                         (|:| |Rank| (|NonNegativeInteger|))))
   (|isDomain| *1 (|SparseEchelonMatrix| *3 *4))
   (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|SparseEchelonMatrix| *3 *4))
       (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |Ech| (|SparseEchelonMatrix| *3 *4))
                         (|:| |Lt| (|Matrix| (|Fraction| *4)))
                         (|:| |Pivots| (|List| *4))
                         (|:| |Rank| (|NonNegativeInteger|))))
   (|isDomain| *1 (|SparseEchelonMatrix| *3 *4))
   (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *3 (|OrderedSet|))
   (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|Record| (|:| |Index| *4) (|:| |Entry| *5)))
       (|isDomain| *1 (|SparseEchelonMatrix| *4 *5))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|Ring|))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |Indices| (|List| *3))
                         (|:| |Entries| (|List| *4))))
   (|isDomain| *1 (|SparseEchelonMatrix| *3 *4))
   (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|ofCategory| *1 (|Dcpo| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *2 (|JetBundleCategory|))
       (|isDomain| *1 (|JetDifferentialEquation| *2 *3))
       (|ofCategory| *3 (|JetBundleFunctionCategory| *2))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|LatticeJoinOfMeets|)))
       (|isDomain| *1 (|LatticeJoinOfMeets|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|LatticeMeetOfJoins|)))
       (|isDomain| *1 (|LatticeMeetOfJoins|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OrientedFacet|)))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|SparseEchelonMatrix| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|SparseEchelonMatrix| *2 *3))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *4))
       (|ofCategory| *6 (|IndexedAggregate| (|Integer|) *4))
       (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *4))
       (|ofCategory| *6 (|IndexedAggregate| (|Integer|) *4))
       (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))))
 ((*1 *2 *1 *3)
  (AND
   (|isDomain| *2
               (|Record| (|:| |Left| (|SparseEchelonMatrix| *3 *4))
                         (|:| |Right| (|SparseEchelonMatrix| *3 *4))))
   (|isDomain| *1 (|SparseEchelonMatrix| *3 *4))
   (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|SegmentCategory| *3))
       (|ofCategory| *3 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|SegmentCategory| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|SegmentCategory| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|SegmentCategory| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|SegmentCategory| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|SegmentCategory| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *2 (|Integer|))))) 
(((*1 *1 *2 *2)
  (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|String|))
       (|isDomain| *1 (|QueryEquation|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|Segment| *4))
       (|ofCategory| *4 (|Type|)) (|isDomain| *1 (|SegmentBinding| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| *1))
       (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *4))
       (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|Vector| (|Matrix| *4)))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|Vector| (|Matrix| *4)))
       (|isDomain| *1 (|FramedNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FramedNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FramedNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *2 (|Vector| (|Matrix| *3)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Symbol|)))
       (|isDomain| *4 (|Matrix| (|Fraction| (|Polynomial| *5))))
       (|ofCategory| *5 (|Field|))
       (|isDomain| *2 (|Vector| (|Matrix| (|Fraction| (|Polynomial| *5)))))
       (|isDomain| *1 (|StructuralConstantsPackage| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Symbol|)))
       (|isDomain| *4 (|Matrix| (|Polynomial| *5))) (|ofCategory| *5 (|Field|))
       (|isDomain| *2 (|Vector| (|Matrix| (|Polynomial| *5))))
       (|isDomain| *1 (|StructuralConstantsPackage| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Matrix| *4))) (|ofCategory| *4 (|Field|))
       (|isDomain| *2 (|Vector| (|Matrix| *4)))
       (|isDomain| *1 (|StructuralConstantsPackage| *4))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|SConformal| *2)) (|ofType| *2 (|PositiveInteger|))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|Scene| *4)))
       (|isDomain| *3 (|List| (|String|))) (|ofCategory| *4 (|SPointCategory|))
       (|isDomain| *1 (|SceneNamedPoints| *4))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4)) (|isDomain| *3 (|List| (|String|)))
       (|ofCategory| *4 (|SPointCategory|))
       (|isDomain| *1 (|SceneNamedPoints| *4))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|SceneNamedPoints| *4)))
       (|isDomain| *3 (|List| (|String|)))
       (|isDomain| *1 (|SceneNamedPoints| *4))
       (|ofCategory| *4 (|SPointCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SceneNamedPoints| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SceneNamedPoints| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SceneNamedPoints| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *1 (|SceneNamedPoints| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *1 (|SceneNamedPoints| *2))
       (|ofCategory| *2 (|SPointCategory|))))) 
(((*1 *1 *1 *2 *1)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|SceneNamedPoints| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *3 (|Scene| *4))
       (|ofCategory| *4 (|SPointCategory|))
       (|isDomain| *1 (|SceneNamedPoints| *4))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Scene| *4))
       (|isDomain| *1 (|SceneNamedPoints| *4))
       (|ofCategory| *4 (|SPointCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|PermutationGroup| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|SceneIFS| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|List| (|NonNegativeInteger|))))
       (|isDomain| *1 (|SceneIFS| *3)) (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|List| *6)) (|isDomain| *4 (|DoubleFloat|))
       (|isDomain| *5 (|Integer|)) (|ofCategory| *6 (|SPointCategory|))
       (|isDomain| *2 (|List| (|List| *6))) (|isDomain| *1 (|SceneIFS| *6))))) 
(((*1 *1 *2 *3 *4)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |source| (|Mapping| *5 (|DoubleFloat|)))
                          (|:| |ranges| (|List| (|Segment| (|DoubleFloat|))))
                          (|:| |knots| (|List| (|DoubleFloat|)))
                          (|:| |points| (|List| *5)))))
   (|isDomain| *3 (|DoubleFloat|)) (|isDomain| *4 (|Integer|))
   (|ofCategory| *5 (|SPointCategory|)) (|isDomain| *1 (|SceneIFS| *5))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|SceneIFS| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|SceneIFS| *2)) (|ofCategory| *2 (|SPointCategory|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SPointCategory|))
       (|isDomain| *1 (|SceneIFS| *3))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|List| *4))) (|isDomain| *3 (|Boolean|))
       (|ofCategory| *4 (|SPointCategory|)) (|isDomain| *1 (|SceneIFS| *4))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|SubSpace| 3 (|DoubleFloat|)))
       (|isDomain| *4 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Export3D|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Scene| *4)) (|ofCategory| *4 (|SPointCategory|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Scene| *4)) (|ofCategory| *4 (|SPointCategory|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Scene| *4)) (|ofCategory| *4 (|SPointCategory|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Scene| *4)) (|ofCategory| *4 (|SPointCategory|))))) 
(((*1 *2 *1 *3 *4 *5 *6 *7)
  (AND (|isDomain| *3 (|Reference| (|List| *8)))
       (|isDomain| *4 (|Reference| (|List| (|List| (|NonNegativeInteger|)))))
       (|isDomain| *5 (|Reference| (|NonNegativeInteger|)))
       (|isDomain| *6 (|STransform| *8)) (|isDomain| *7 (|SBoundary| *8))
       (|ofCategory| *8 (|SPointCategory|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Scene| *8))))
 ((*1 *2 *1 *3 *4 *5 *6 *7)
  (AND (|isDomain| *3 (|Reference| (|List| *8)))
       (|isDomain| *4 (|Reference| (|List| (|List| (|NonNegativeInteger|)))))
       (|isDomain| *5 (|Reference| (|NonNegativeInteger|)))
       (|isDomain| *6 (|STransform| *8))
       (|isDomain| *7 (|Record| (|:| |mins| *8) (|:| |maxs| *8)))
       (|ofCategory| *8 (|SPointCategory|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Scene| *8))))) 
(((*1 *2 *1 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|Record| (|:| |lineWidth| (|DoubleFloat|))
                         (|:| |lineCol| (|String|)) (|:| |fillCol| (|String|))
                         (|:| |matOpacity| (|DoubleFloat|))))
   (|isDomain| *4 (|STransform| *6)) (|isDomain| *5 (|SBoundary| *6))
   (|ofCategory| *6 (|SPointCategory|)) (|isDomain| *2 (|XmlElement|))
   (|isDomain| *1 (|Scene| *6))))
 ((*1 *2 *1 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|Record| (|:| |lineWidth| (|DoubleFloat|))
                         (|:| |lineCol| (|String|)) (|:| |fillCol| (|String|))
                         (|:| |matOpacity| (|DoubleFloat|))))
   (|isDomain| *4 (|STransform| *6))
   (|isDomain| *5 (|Record| (|:| |mins| *6) (|:| |maxs| *6)))
   (|ofCategory| *6 (|SPointCategory|)) (|isDomain| *2 (|XmlElement|))
   (|isDomain| *1 (|Scene| *6))))) 
(((*1 *2 *1 *3 *4 *5 *6 *7 *7 *8)
  (AND
   (|isDomain| *3
               (|Record| (|:| |lineWidth| (|DoubleFloat|))
                         (|:| |lineCol| (|String|)) (|:| |fillCol| (|String|))
                         (|:| |matOpacity| (|DoubleFloat|))))
   (|isDomain| *4 (|STransform| *9)) (|isDomain| *5 (|SBoundary| *9))
   (|isDomain| *6 (|DoubleFloat|)) (|isDomain| *7 (|Boolean|))
   (|isDomain| *8 (|SceneNamedPoints| *9)) (|ofCategory| *9 (|SPointCategory|))
   (|isDomain| *2 (|XmlElement|)) (|isDomain| *1 (|Scene| *9))))
 ((*1 *2 *1 *3 *4 *5 *6 *7 *7 *8)
  (AND
   (|isDomain| *3
               (|Record| (|:| |lineWidth| (|DoubleFloat|))
                         (|:| |lineCol| (|String|)) (|:| |fillCol| (|String|))
                         (|:| |matOpacity| (|DoubleFloat|))))
   (|isDomain| *4 (|STransform| *9))
   (|isDomain| *5 (|Record| (|:| |mins| *9) (|:| |maxs| *9)))
   (|isDomain| *6 (|DoubleFloat|)) (|isDomain| *7 (|Boolean|))
   (|isDomain| *8 (|SceneNamedPoints| *9)) (|ofCategory| *9 (|SPointCategory|))
   (|isDomain| *2 (|XmlElement|)) (|isDomain| *1 (|Scene| *9))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|STransform| *4)) (|ofCategory| *4 (|SPointCategory|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|Scene| *4))))) 
(((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|Scene| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|Scene| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *1 *1 *2 *3 *3 *4)
  (AND (|isDomain| *2 (|Mapping| *5 *5))
       (|isDomain| *3 (|Segment| (|DoubleFloat|)))
       (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|SPointCategory|)) (|isDomain| *1 (|Scene| *5))))) 
(((*1 *1 *2 *3 *3 *4)
  (AND (|isDomain| *2 (|Mapping| *5 *5))
       (|isDomain| *3 (|Segment| (|DoubleFloat|)))
       (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|SPointCategory|)) (|isDomain| *1 (|Scene| *5))))) 
(((*1 *1 *1 *2 *3 *3 *4)
  (AND (|isDomain| *2 (|Mapping| *5 (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *3 (|Segment| (|DoubleFloat|)))
       (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|SPointCategory|)) (|isDomain| *1 (|Scene| *5))))
 ((*1 *1 *1 *2 *3 *3 *4)
  (AND
   (|isDomain| *2
               (|ParametricSurface|
                (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|))))
   (|isDomain| *3 (|Segment| (|DoubleFloat|)))
   (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *1 (|Scene| *5))
   (|ofCategory| *5 (|SPointCategory|))))) 
(((*1 *1 *2 *3 *3 *4)
  (AND (|isDomain| *2 (|Mapping| *5 (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *3 (|Segment| (|DoubleFloat|)))
       (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|SPointCategory|)) (|isDomain| *1 (|Scene| *5))))
 ((*1 *1 *2 *3 *3 *4)
  (AND
   (|isDomain| *2
               (|ParametricSurface|
                (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|))))
   (|isDomain| *3 (|Segment| (|DoubleFloat|)))
   (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *1 (|Scene| *5))
   (|ofCategory| *5 (|SPointCategory|))))) 
(((*1 *1 *1 *2 *3 *3 *4)
  (AND
   (|isDomain| *2 (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)))
   (|isDomain| *3 (|Segment| (|DoubleFloat|)))
   (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *1 (|Scene| *5))
   (|ofCategory| *5 (|SPointCategory|))))) 
(((*1 *1 *2 *3 *3 *4)
  (AND (|isDomain| *2 (|Mapping| *5 (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *3 (|Segment| (|DoubleFloat|)))
       (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|SPointCategory|)) (|isDomain| *1 (|Scene| *5))))
 ((*1 *1 *2 *3 *3 *4)
  (AND
   (|isDomain| *2 (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)))
   (|isDomain| *3 (|Segment| (|DoubleFloat|)))
   (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *1 (|Scene| *5))
   (|ofCategory| *5 (|SPointCategory|))))) 
(((*1 *1 *1 *2 *3 *4)
  (AND
   (|isDomain| *2
               (|ParametricSpaceCurve|
                (|Mapping| (|DoubleFloat|) (|DoubleFloat|))))
   (|isDomain| *3 (|Segment| (|DoubleFloat|)))
   (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *1 (|Scene| *5))
   (|ofCategory| *5 (|SPointCategory|))))
 ((*1 *1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Mapping| *5 (|DoubleFloat|)))
       (|isDomain| *3 (|Segment| (|DoubleFloat|)))
       (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|SPointCategory|)) (|isDomain| *1 (|Scene| *5))))) 
(((*1 *1 *2 *3 *4)
  (AND
   (|isDomain| *2
               (|ParametricSpaceCurve|
                (|Mapping| (|DoubleFloat|) (|DoubleFloat|))))
   (|isDomain| *3 (|Segment| (|DoubleFloat|)))
   (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *1 (|Scene| *5))
   (|ofCategory| *5 (|SPointCategory|))))
 ((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Mapping| *5 (|DoubleFloat|)))
       (|isDomain| *3 (|Segment| (|DoubleFloat|)))
       (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|SPointCategory|)) (|isDomain| *1 (|Scene| *5))))) 
(((*1 *1 *1 *2 *3 *4)
  (AND
   (|isDomain| *2
               (|ParametricPlaneCurve|
                (|Mapping| (|DoubleFloat|) (|DoubleFloat|))))
   (|isDomain| *3 (|Segment| (|DoubleFloat|)))
   (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *1 (|Scene| *5))
   (|ofCategory| *5 (|SPointCategory|))))) 
(((*1 *1 *2 *3 *4)
  (AND
   (|isDomain| *2
               (|ParametricPlaneCurve|
                (|Mapping| (|DoubleFloat|) (|DoubleFloat|))))
   (|isDomain| *3 (|Segment| (|DoubleFloat|)))
   (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *1 (|Scene| *5))
   (|ofCategory| *5 (|SPointCategory|))))) 
(((*1 *1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Mapping| *5 (|DoubleFloat|)))
       (|isDomain| *3 (|Segment| (|DoubleFloat|)))
       (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|SPointCategory|)) (|isDomain| *1 (|Scene| *5))))
 ((*1 *1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *3 (|Segment| (|DoubleFloat|)))
       (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *1 (|Scene| *5))
       (|ofCategory| *5 (|SPointCategory|))))) 
(((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Mapping| *5 (|DoubleFloat|)))
       (|isDomain| *3 (|Segment| (|DoubleFloat|)))
       (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|SPointCategory|)) (|isDomain| *1 (|Scene| *5))))
 ((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *3 (|Segment| (|DoubleFloat|)))
       (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *1 (|Scene| *5))
       (|ofCategory| *5 (|SPointCategory|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|STransform| *3)) (|ofCategory| *3 (|SPointCategory|))
       (|isDomain| *1 (|Scene| *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|STransform| *3)) (|ofCategory| *3 (|SPointCategory|))
       (|isDomain| *1 (|Scene| *3))))) 
(((*1 *1 *1 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |lineWidth| (|DoubleFloat|))
                         (|:| |lineCol| (|String|)) (|:| |fillCol| (|String|))
                         (|:| |matOpacity| (|DoubleFloat|))))
   (|isDomain| *1 (|Scene| *3)) (|ofCategory| *3 (|SPointCategory|))))
 ((*1 *1 *1 *2 *3 *3)
  (AND (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *3 (|String|))
       (|isDomain| *1 (|Scene| *4)) (|ofCategory| *4 (|SPointCategory|))))) 
(((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |lineWidth| (|DoubleFloat|))
                         (|:| |lineCol| (|String|)) (|:| |fillCol| (|String|))
                         (|:| |matOpacity| (|DoubleFloat|))))
   (|isDomain| *1 (|Scene| *3)) (|ofCategory| *3 (|SPointCategory|))))
 ((*1 *1 *2 *3 *3)
  (AND (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *3 (|String|))
       (|isDomain| *1 (|Scene| *4)) (|ofCategory| *4 (|SPointCategory|))))) 
(((*1 *1 *1 *2 *3 *3 *4)
  (AND (|isDomain| *2 (|DirectedGraph| (|String|)))
       (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *4 (|Boolean|))
       (|isDomain| *1 (|Scene| *5)) (|ofCategory| *5 (|SPointCategory|))))) 
(((*1 *1 *2 *3 *3 *4)
  (AND (|isDomain| *2 (|DirectedGraph| (|String|)))
       (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *4 (|Boolean|))
       (|isDomain| *1 (|Scene| *5)) (|ofCategory| *5 (|SPointCategory|))))) 
(((*1 *1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *4 (|SBoundary| *3))
       (|ofCategory| *3 (|SPointCategory|)) (|isDomain| *1 (|Scene| *3))))
 ((*1 *1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *4 (|Record| (|:| |mins| *3) (|:| |maxs| *3)))
       (|ofCategory| *3 (|SPointCategory|)) (|isDomain| *1 (|Scene| *3))))) 
(((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *4 (|SBoundary| *3))
       (|ofCategory| *3 (|SPointCategory|)) (|isDomain| *1 (|Scene| *3))))
 ((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *4 (|Record| (|:| |mins| *3) (|:| |maxs| *3)))
       (|ofCategory| *3 (|SPointCategory|)) (|isDomain| *1 (|Scene| *3))))) 
(((*1 *1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *4 (|SBoundary| *5)) (|ofCategory| *5 (|SPointCategory|))
       (|isDomain| *1 (|Scene| *5))))
 ((*1 *1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *4 (|Record| (|:| |mins| *5) (|:| |maxs| *5)))
       (|ofCategory| *5 (|SPointCategory|)) (|isDomain| *1 (|Scene| *5))))) 
(((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *4 (|SBoundary| *5)) (|ofCategory| *5 (|SPointCategory|))
       (|isDomain| *1 (|Scene| *5))))
 ((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *4 (|Record| (|:| |mins| *5) (|:| |maxs| *5)))
       (|ofCategory| *5 (|SPointCategory|)) (|isDomain| *1 (|Scene| *5))))) 
(((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *3 (|SBoundary| *4))
       (|ofCategory| *4 (|SPointCategory|)) (|isDomain| *1 (|Scene| *4))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *3 (|Record| (|:| |mins| *4) (|:| |maxs| *4)))
       (|ofCategory| *4 (|SPointCategory|)) (|isDomain| *1 (|Scene| *4))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|SBoundary| *3)) (|ofCategory| *3 (|SPointCategory|))
       (|isDomain| *1 (|Scene| *3))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Record| (|:| |mins| *3) (|:| |maxs| *3)))
       (|ofCategory| *3 (|SPointCategory|)) (|isDomain| *1 (|Scene| *3))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *3 (|SBoundary| *4))
       (|ofCategory| *4 (|SPointCategory|)) (|isDomain| *1 (|Scene| *4))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *3 (|Record| (|:| |mins| *4) (|:| |maxs| *4)))
       (|ofCategory| *4 (|SPointCategory|)) (|isDomain| *1 (|Scene| *4))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|SBoundary| *3)) (|ofCategory| *3 (|SPointCategory|))
       (|isDomain| *1 (|Scene| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Record| (|:| |mins| *3) (|:| |maxs| *3)))
       (|ofCategory| *3 (|SPointCategory|)) (|isDomain| *1 (|Scene| *3))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|SBoundary| *3)) (|ofCategory| *3 (|SPointCategory|))
       (|isDomain| *1 (|Scene| *3))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Record| (|:| |mins| *3) (|:| |maxs| *3)))
       (|ofCategory| *3 (|SPointCategory|)) (|isDomain| *1 (|Scene| *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|SBoundary| *3)) (|ofCategory| *3 (|SPointCategory|))
       (|isDomain| *1 (|Scene| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Record| (|:| |mins| *3) (|:| |maxs| *3)))
       (|ofCategory| *3 (|SPointCategory|)) (|isDomain| *1 (|Scene| *3))))) 
(((*1 *1 *1 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |txt| (|String|))
                         (|:| |siz| (|NonNegativeInteger|)) (|:| |pos| *3)
                         (|:| |np| (|List| (|String|)))))
   (|ofCategory| *3 (|SPointCategory|)) (|isDomain| *1 (|Scene| *3))))
 ((*1 *1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|Scene| *4)) (|ofCategory| *4 (|SPointCategory|))))
 ((*1 *1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *1 (|Scene| *4))
       (|ofCategory| *4 (|SPointCategory|))))) 
(((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |txt| (|String|))
                         (|:| |siz| (|NonNegativeInteger|)) (|:| |pos| *3)
                         (|:| |np| (|List| (|String|)))))
   (|ofCategory| *3 (|SPointCategory|)) (|isDomain| *1 (|Scene| *3))))
 ((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|Scene| *4)) (|ofCategory| *4 (|SPointCategory|))))
 ((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *1 (|Scene| *4))
       (|ofCategory| *4 (|SPointCategory|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *1 (|Scene| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *1 (|Scene| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|List| (|NonNegativeInteger|))))
       (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|SPointCategory|))
       (|isDomain| *1 (|Scene| *4))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|SceneIFS| *3)) (|ofCategory| *3 (|SPointCategory|))
       (|isDomain| *1 (|Scene| *3))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|List| (|NonNegativeInteger|))))
       (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|SPointCategory|))
       (|isDomain| *1 (|Scene| *4))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|SceneIFS| *3)) (|ofCategory| *3 (|SPointCategory|))
       (|isDomain| *1 (|Scene| *3))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|SceneNamedPoints| *3))
       (|ofCategory| *3 (|SPointCategory|)) (|isDomain| *1 (|Scene| *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|SceneNamedPoints| *3))
       (|ofCategory| *3 (|SPointCategory|)) (|isDomain| *1 (|Scene| *3))))) 
(((*1 *1 *1 *2 *2 *3 *4 *5)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *4 (|Symbol|))
       (|isDomain| *5 (|DoubleFloat|)) (|isDomain| *1 (|Scene| *3))
       (|ofCategory| *3 (|SPointCategory|))))
 ((*1 *1 *1 *1 *1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *4 (|DoubleFloat|))
       (|isDomain| *1 (|Scene| *2)) (|ofCategory| *2 (|SPointCategory|))))) 
(((*1 *1 *2 *2 *3 *4 *5)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *4 (|Symbol|))
       (|isDomain| *5 (|DoubleFloat|)) (|isDomain| *1 (|Scene| *3))
       (|ofCategory| *3 (|SPointCategory|))))
 ((*1 *1 *1 *1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *4 (|DoubleFloat|))
       (|isDomain| *1 (|Scene| *2)) (|ofCategory| *2 (|SPointCategory|))))) 
(((*1 *1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|List| (|List| *5))) (|isDomain| *3 (|Symbol|))
       (|isDomain| *4 (|DoubleFloat|)) (|ofCategory| *5 (|SPointCategory|))
       (|isDomain| *1 (|Scene| *5))))) 
(((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|List| (|List| *5))) (|isDomain| *3 (|Symbol|))
       (|isDomain| *4 (|DoubleFloat|)) (|ofCategory| *5 (|SPointCategory|))
       (|isDomain| *1 (|Scene| *5))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|Scene| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|Scene| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *1 *1 *2 *1)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|Scene| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|Scene| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *1 *1 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |shptype| (|Symbol|)) (|:| |centre| *3)
                         (|:| |size| *3) (|:| |fill| (|Boolean|))))
   (|ofCategory| *3 (|SPointCategory|)) (|isDomain| *1 (|Scene| *3))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|SBoundary| *3)) (|ofCategory| *3 (|SPointCategory|))
       (|isDomain| *1 (|Scene| *3))))) 
(((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |shptype| (|Symbol|)) (|:| |centre| *3)
                         (|:| |size| *3) (|:| |fill| (|Boolean|))))
   (|ofCategory| *3 (|SPointCategory|)) (|isDomain| *1 (|Scene| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|SBoundary| *3)) (|ofCategory| *3 (|SPointCategory|))
       (|isDomain| *1 (|Scene| *3))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| *3)))
       (|ofCategory| *3 (|SPointCategory|)) (|isDomain| *1 (|Scene| *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| *3)))
       (|ofCategory| *3 (|SPointCategory|)) (|isDomain| *1 (|Scene| *3))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SPointCategory|))
       (|isDomain| *1 (|Scene| *3))))
 ((*1 *1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *1 (|Scene| *3))
       (|ofCategory| *3 (|SPointCategory|))))
 ((*1 *1 *1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *3 (|Boolean|))
       (|isDomain| *1 (|Scene| *4)) (|ofCategory| *4 (|SPointCategory|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SPointCategory|))
       (|isDomain| *1 (|Scene| *3))))
 ((*1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *1 (|Scene| *3))
       (|ofCategory| *3 (|SPointCategory|))))
 ((*1 *1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *3 (|Boolean|))
       (|isDomain| *1 (|Scene| *4)) (|ofCategory| *4 (|SPointCategory|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|Scene| *2)) (|ofCategory| *2 (|SPointCategory|))))) 
(((*1 *1)
  (AND (|isDomain| *1 (|Scene| *2)) (|ofCategory| *2 (|SPointCategory|))))) 
(((*1 *1)
  (AND (|isDomain| *1 (|Scene| *2)) (|ofCategory| *2 (|SPointCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|SBoundary| *3)) (|ofCategory| *3 (|SPointCategory|))
       (|isDomain| *1 (|Scene| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Record| (|:| |mins| *3) (|:| |maxs| *3)))
       (|ofCategory| *3 (|SPointCategory|)) (|isDomain| *1 (|Scene| *3))))
 ((*1 *1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Scene| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *6)) (|isDomain| *4 (|Symbol|))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *5 (|RealClosedField|))
       (|isDomain| *2 (|List| (|SimpleCell| *5 *6)))
       (|isDomain| *1 (|SimpleCell| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Symbol|)) (|ofCategory| *5 (|RealClosedField|))
       (|isDomain| *2 (|List| (|SimpleCell| *5 *3)))
       (|isDomain| *1 (|SimpleCell| *5 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|Cell| *4)) (|ofCategory| *4 (|RealClosedField|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|RealClosedField|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|SimpleCell| *3 *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|Cell| *3))
       (|ofCategory| *3 (|RealClosedField|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|RealClosedField|))
       (|isDomain| *1 (|SimpleCell| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|RealClosedField|)) (|isDomain| *2 (|Symbol|))
       (|isDomain| *1 (|SimpleCell| *3 *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|ScanningUtilities|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *2))
       (|ofCategory| *2 (|CachableSet|)) (|isDomain| *1 (|SortedCache| *2))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Mapping| (|Integer|) *2 *2))
       (|ofCategory| *2 (|CachableSet|)) (|isDomain| *1 (|SortedCache| *2))))) 
(((*1 *2 *2 *3)
  (|partial| AND (|isDomain| *3 (|Mapping| (|Boolean|) *2))
   (|ofCategory| *2 (|CachableSet|)) (|isDomain| *1 (|SortedCache| *2))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|SortedCache| *3))
       (|ofCategory| *3 (|CachableSet|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *1 (|SBoundary| *2)) (|ofCategory| *2 (|SPointCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *1 (|SBoundary| *2)) (|ofCategory| *2 (|SPointCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *1 (|SBoundary| *2)) (|ofCategory| *2 (|SPointCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SBoundary| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SBoundary| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SBoundary| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *2 *1 *2)
  (AND (|isDomain| *1 (|SBoundary| *2)) (|ofCategory| *2 (|SPointCategory|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|SBoundary| *3))
       (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|SBoundary| *2)) (|ofCategory| *2 (|SPointCategory|))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|SBoundary| *2)) (|ofCategory| *2 (|SPointCategory|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|SBoundary| *3)))
       (|isDomain| *1 (|SBoundary| *3)) (|ofCategory| *3 (|SPointCategory|))))) 
(((*1 *1 *2 *2)
  (AND (|isDomain| *1 (|SBoundary| *2)) (|ofCategory| *2 (|SPointCategory|))))) 
(((*1 *1 *2 *2)
  (AND (|isDomain| *1 (|SBoundary| *2)) (|ofCategory| *2 (|SPointCategory|))))) 
(((*1 *1)
  (AND (|isDomain| *1 (|SBoundary| *2)) (|ofCategory| *2 (|SPointCategory|))))) 
(((*1 *1) (|isDomain| *1 (|SingletonAsOrderedSet|)))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Boolean|))
       (|ofCategory| *5
                     (|Join| (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2 (|List| *3))
       (|isDomain| *1
                   (|InternalRationalUnivariateRepresentationPackage| *5 *6 *7
                                                                      *8 *3))
       (|ofCategory| *3
                     (|SquareFreeRegularTriangularSetCategory| *5 *6 *7 *8))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Polynomial| *5))) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *5
                     (|Join| (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|isDomain| *2
                   (|List|
                    (|Record|
                     (|:| |complexRoots| (|SparseUnivariatePolynomial| *5))
                     (|:| |coordinates| (|List| (|Polynomial| *5))))))
       (|isDomain| *1 (|RationalUnivariateRepresentationPackage| *5 *6))
       (|ofType| *6 (|List| (|Symbol|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Polynomial| *4)))
       (|ofCategory| *4
                     (|Join| (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|isDomain| *2
                   (|List|
                    (|Record|
                     (|:| |complexRoots| (|SparseUnivariatePolynomial| *4))
                     (|:| |coordinates| (|List| (|Polynomial| *4))))))
       (|isDomain| *1 (|RationalUnivariateRepresentationPackage| *4 *5))
       (|ofType| *5 (|List| (|Symbol|)))))
 ((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|List| (|Polynomial| *5))) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *5
                     (|Join| (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|isDomain| *2
                   (|List|
                    (|Record|
                     (|:| |complexRoots| (|SparseUnivariatePolynomial| *5))
                     (|:| |coordinates| (|List| (|Polynomial| *5))))))
       (|isDomain| *1 (|RationalUnivariateRepresentationPackage| *5 *6))
       (|ofType| *6 (|List| (|Symbol|)))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|RewriteRule| *3 *4 *5)))
       (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *4
                     (|Join| (|Ring|) (|PatternMatchable| *3) (|Comparable|)
                             (|ConvertibleTo| (|Pattern| *3))))
       (|ofCategory| *5
                     (|Join| (|FunctionSpace| *4) (|PatternMatchable| *3)
                             (|ConvertibleTo| (|Pattern| *3))))
       (|isDomain| *1 (|Ruleset| *3 *4 *5))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *4
                     (|Join| (|Ring|) (|PatternMatchable| *3) (|Comparable|)
                             (|ConvertibleTo| (|Pattern| *3))))
       (|isDomain| *2 (|List| (|RewriteRule| *3 *4 *5)))
       (|isDomain| *1 (|Ruleset| *3 *4 *5))
       (|ofCategory| *5
                     (|Join| (|FunctionSpace| *4) (|PatternMatchable| *3)
                             (|ConvertibleTo| (|Pattern| *3))))))) 
(((*1 *1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| (|Symbol|))) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5
                     (|Join| (|Ring|) (|PatternMatchable| *4) (|Comparable|)
                             (|ConvertibleTo| (|Pattern| *4))))
       (|isDomain| *1 (|RewriteRule| *4 *5 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *5) (|PatternMatchable| *4)
                             (|ConvertibleTo| (|Pattern| *4))))))
 ((*1 *1 *2 *2)
  (AND (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *4
                     (|Join| (|Ring|) (|PatternMatchable| *3) (|Comparable|)
                             (|ConvertibleTo| (|Pattern| *3))))
       (|isDomain| *1 (|RewriteRule| *3 *4 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *4) (|PatternMatchable| *3)
                             (|ConvertibleTo| (|Pattern| *3))))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Pattern| *4))
       (|isDomain| *3 (|Mapping| (|Boolean|) *5))
       (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *5 (|Type|))
       (|isDomain| *1 (|PatternFunctions1| *4 *5))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Pattern| *4))
       (|isDomain| *3 (|List| (|Mapping| (|Boolean|) *5)))
       (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *5 (|Type|))
       (|isDomain| *1 (|PatternFunctions1| *4 *5))))
 ((*1 *2 *2 *3 *4)
  (AND (|isDomain| *2 (|Pattern| *5)) (|isDomain| *3 (|List| (|Symbol|)))
       (|isDomain| *4 (|Mapping| (|Boolean|) (|List| *6)))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|Type|))
       (|isDomain| *1 (|PatternFunctions1| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *4 (|Mapping| (|Boolean|) *5))
       (|ofCategory| *5 (|Type|)) (|isDomain| *2 (|Expression| (|Integer|)))
       (|isDomain| *1 (|AttachPredicates| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *4 (|List| (|Mapping| (|Boolean|) *5)))
       (|ofCategory| *5 (|Type|)) (|isDomain| *2 (|Expression| (|Integer|)))
       (|isDomain| *1 (|AttachPredicates| *5))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *5)) (|ofCategory| *5 (|Type|))
       (|ofCategory| *4 (|Comparable|))
       (|isDomain| *1 (|FunctionSpaceAttachPredicates| *4 *2 *5))
       (|ofCategory| *2 (|FunctionSpace| *4))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| (|Mapping| (|Boolean|) *5)))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *4 (|Comparable|))
       (|isDomain| *1 (|FunctionSpaceAttachPredicates| *4 *2 *5))
       (|ofCategory| *2 (|FunctionSpace| *4))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|Symbol|)))
       (|isDomain| *3 (|Mapping| (|Boolean|) (|List| *6)))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| *5) (|PatternMatchable| *4)
                             (|ConvertibleTo| (|Pattern| *4))))
       (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5
                     (|Join| (|Ring|) (|PatternMatchable| *4) (|Comparable|)
                             (|ConvertibleTo| (|Pattern| *4))))
       (|isDomain| *1 (|RewriteRule| *4 *5 *6))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *4
                     (|Join| (|Ring|) (|PatternMatchable| *3) (|Comparable|)
                             (|ConvertibleTo| *2)))
       (|isDomain| *2 (|Pattern| *3)) (|isDomain| *1 (|RewriteRule| *3 *4 *5))
       (|ofCategory| *5
                     (|Join| (|FunctionSpace| *4) (|PatternMatchable| *3)
                             (|ConvertibleTo| *2)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *4
                     (|Join| (|Ring|) (|PatternMatchable| *3) (|Comparable|)
                             (|ConvertibleTo| (|Pattern| *3))))
       (|isDomain| *2 (|List| (|Symbol|)))
       (|isDomain| *1 (|RewriteRule| *3 *4 *5))
       (|ofCategory| *5
                     (|Join| (|FunctionSpace| *4) (|PatternMatchable| *3)
                             (|ConvertibleTo| (|Pattern| *3))))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2 (|List| (|Record| (|:| |val| *3) (|:| |tower| *4))))
       (|isDomain| *1 (|RegularTriangularSetGcdPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2 (|List| *4))
       (|isDomain| *1 (|RegularTriangularSetGcdPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|RegularTriangularSetGcdPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |val| (|Boolean|)) (|:| |tower| *4))))
       (|isDomain| *1 (|RegularTriangularSetGcdPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *3 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2 (|List| (|Record| (|:| |val| *3) (|:| |tower| *4))))
       (|isDomain| *1 (|RegularTriangularSetGcdPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *3 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2 (|List| (|Record| (|:| |val| *3) (|:| |tower| *4))))
       (|isDomain| *1 (|RegularTriangularSetGcdPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *3 *3 *4 *5 *5)
  (AND (|isDomain| *5 (|Boolean|)) (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *8 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *6 *7 *8))
       (|isDomain| *2 (|List| (|Record| (|:| |val| *3) (|:| |tower| *4))))
       (|isDomain| *1 (|RegularTriangularSetGcdPackage| *6 *7 *8 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *6 *7 *8 *3))))
 ((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3 (|List| (|Record| (|:| |val| (|List| *8)) (|:| |tower| *9))))
   (|isDomain| *5 (|Boolean|))
   (|ofCategory| *8 (|RecursivePolynomialCategory| *6 *7 *4))
   (|ofCategory| *9 (|RegularTriangularSetCategory| *6 *7 *4 *8))
   (|ofCategory| *6 (|GcdDomain|))
   (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *4 (|OrderedSet|))
   (|isDomain| *2 (|List| (|Record| (|:| |val| *8) (|:| |tower| *9))))
   (|isDomain| *1 (|RegularTriangularSetGcdPackage| *6 *7 *4 *8 *9))))) 
(((*1 *2 *3 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |val| (|List| *3)) (|:| |tower| *4))))
       (|isDomain| *1 (|RegularTriangularSetGcdPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|RegularTriangularSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *3))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *3))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *3))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *3))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *1)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Union| (|Boolean|) (|List| *1)))
       (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *3))))) 
(((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *3))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3 *1)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |val| (|Boolean|)) (|:| |tower| *1))))
       (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *3))))) 
(((*1 *2 *3 *1)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *3))))) 
(((*1 *2 *3 *3 *1)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|Union| *3 (|List| *1)))
       (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *3))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|NewSparseUnivariatePolynomial| *2))
       (|ofCategory| *2 (|IntegralDomain|)) (|ofCategory| *2 (|Ring|))))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *1 (|PseudoRemainderSequence| *3 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|IntegralDomain|))))
 ((*1 *2 *3 *3 *1)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|List| (|Record| (|:| |val| *3) (|:| |tower| *1))))
       (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *3))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|List| *1)) (|isDomain| *3 (|List| *7))
       (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *7))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))))
 ((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *7))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *3))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))))
 ((*1 *2 *3 *1)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RegularTriangularSetCategory| *4 *5 *6 *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|IntervalCategory| *3))
       (|ofCategory| *3
                     (|Join| (|FloatingPointSystem|)
                             (|TranscendentalFunctionCategory|)))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|OrderedRing|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|RealRootCharacterizationCategory| *4 *3))
       (|ofCategory| *4 (|Join| (|OrderedRing|) (|Field|)))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|IntervalCategory| *3))
       (|ofCategory| *3
                     (|Join| (|FloatingPointSystem|)
                             (|TranscendentalFunctionCategory|)))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|OrderedRing|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|RealRootCharacterizationCategory| *4 *3))
       (|ofCategory| *4 (|Join| (|OrderedRing|) (|Field|)))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|RetractableTo| (|Integer|)))
       (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|AlgebraicFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *4))
       (|isDomain| *1 (|ComplexCategory&| *3 *4))
       (|ofCategory| *3 (|ComplexCategory| *4))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|Ring|)) (|ofCategory| *1 (|ExpressionSpace|))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *3))
       (|ofCategory| *3 (|Field|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *3))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|MonogenicAlgebra| *3 *2))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RealRootCharacterizationCategory| *3 *2))
       (|ofCategory| *3 (|Join| (|OrderedRing|) (|Field|)))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Polynomial| (|Integer|))) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RealClosedField|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Polynomial| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|RealClosedField|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Polynomial| *1)) (|ofCategory| *1 (|RealClosedField|))
       (|isDomain| *2 (|List| *1))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| (|Integer|)))
       (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|RealClosedField|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|RealClosedField|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *1))
       (|ofCategory| *1 (|RealClosedField|)) (|isDomain| *2 (|List| *1))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|Join| (|OrderedRing|) (|Field|)))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RealRootCharacterizationCategory| *4 *3))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *1))
       (|isDomain| *3 (|Symbol|))
       (|ofCategory| *1 (|AlgebraicallyClosedField|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *1))
       (|ofCategory| *1 (|AlgebraicallyClosedField|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Polynomial| *1))
       (|ofCategory| *1 (|AlgebraicallyClosedField|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Symbol|))
       (|ofCategory| *1 (|AlgebraicallyClosedFunctionSpace| *3))
       (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|AlgebraicallyClosedFunctionSpace| *2))
       (|ofCategory| *2 (|Join| (|Comparable|) (|IntegralDomain|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *2))
       (|isDomain| *4 (|Symbol|)) (|ofCategory| *2 (|FunctionSpace| *5))
       (|isDomain| *1 (|AlgebraicFunction| *5 *2))
       (|ofCategory| *5 (|Join| (|Comparable|) (|IntegralDomain|)))))
 ((*1 *1 *2 *3)
  (|partial| AND (|isDomain| *2 (|SparseUnivariatePolynomial| *1))
   (|isDomain| *3 (|PositiveInteger|)) (|ofCategory| *1 (|RealClosedField|))))
 ((*1 *1 *2 *3 *4)
  (|partial| AND (|isDomain| *2 (|SparseUnivariatePolynomial| *1))
   (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *4 (|OutputForm|))
   (|ofCategory| *1 (|RealClosedField|))))
 ((*1 *1 *2 *3)
  (|partial| AND (|isDomain| *3 (|PositiveInteger|))
   (|ofCategory| *4 (|Join| (|OrderedRing|) (|Field|)))
   (|ofCategory| *1 (|RealRootCharacterizationCategory| *4 *2))
   (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|RealClosure| *3))
       (|ofCategory| *3 (|Join| (|OrderedRing|) (|Field|) (|RealConstant|)))))
 ((*1 *2 *3 *1 *2)
  (AND (|ofCategory| *2 (|Join| (|OrderedRing|) (|Field|)))
       (|isDomain| *1 (|RightOpenIntervalRootCharacterization| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))
 ((*1 *2 *3 *1 *2)
  (AND (|ofCategory| *1 (|RealRootCharacterizationCategory| *2 *3))
       (|ofCategory| *2 (|Join| (|OrderedRing|) (|Field|)))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|PolynomialSetCategory| *3 *4 *2 *5))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|RecursivePolynomialCategory| *3 *4 *2))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *2))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *2 (|OrderedSet|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|DoublyLinkedAggregate| *2))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|Ring|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|GaloisGroupPolynomialUtilities| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))))) 
(((*1 *2 *1 *1)
  (|partial| AND (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
   (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *1 *1 *2)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *2))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))))) 
(((*1 *1 *1 *1 *2)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *2))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))))) 
(((*1 *1 *1 *1 *2)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *2))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))))) 
(((*1 *1 *1 *1 *2)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *2))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))))) 
(((*1 *2 *1 *1 *3)
  (AND (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *2
                   (|Record| (|:| |coef| *1) (|:| |gap| (|NonNegativeInteger|))
                             (|:| |remainder| *1)))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *4 *5 *3))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *2
                   (|Record| (|:| |coef| *1) (|:| |gap| (|NonNegativeInteger|))
                             (|:| |remainder| *1)))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))))) 
(((*1 *2 *1 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |coef| *3) (|:| |gap| (|NonNegativeInteger|))
                         (|:| |quotient| (|NewSparseUnivariatePolynomial| *3))
                         (|:| |remainder|
                              (|NewSparseUnivariatePolynomial| *3))))
   (|isDomain| *1 (|NewSparseUnivariatePolynomial| *3))
   (|ofCategory| *3 (|Ring|))))
 ((*1 *2 *1 *1 *3)
  (AND (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *2
                   (|Record| (|:| |coef| *1) (|:| |gap| (|NonNegativeInteger|))
                             (|:| |quotient| *1) (|:| |remainder| *1)))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *4 *5 *3))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *2
                   (|Record| (|:| |coef| *1) (|:| |gap| (|NonNegativeInteger|))
                             (|:| |quotient| *1) (|:| |remainder| *1)))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|NewSparseUnivariatePolynomial| *2))
       (|ofCategory| *2 (|Ring|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))))) 
(((*1 *2 *1 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |polnum| (|NewSparseUnivariatePolynomial| *3))
                         (|:| |polden| *3)
                         (|:| |power| (|NonNegativeInteger|))))
   (|isDomain| *1 (|NewSparseUnivariatePolynomial| *3))
   (|ofCategory| *3 (|Ring|))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *2
                   (|Record| (|:| |polnum| *1) (|:| |polden| *1)
                             (|:| |power| (|NonNegativeInteger|))))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))))) 
(((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|Any|)) (|isDomain| *1 (|AnyFunctions1| *2))
   (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Polynomial| (|Float|)))
   (|isDomain| *1 (|FortranExpression| *3 *4 *5))
   (|ofCategory| *5 (|RetractableTo| (|Float|)))
   (|ofType| *3 (|List| (|Symbol|))) (|ofType| *4 (|List| (|Symbol|)))
   (|ofCategory| *5 (|FortranMachineTypeCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Fraction| (|Polynomial| (|Float|))))
   (|isDomain| *1 (|FortranExpression| *3 *4 *5))
   (|ofCategory| *5 (|RetractableTo| (|Float|)))
   (|ofType| *3 (|List| (|Symbol|))) (|ofType| *4 (|List| (|Symbol|)))
   (|ofCategory| *5 (|FortranMachineTypeCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Expression| (|Float|)))
   (|isDomain| *1 (|FortranExpression| *3 *4 *5))
   (|ofCategory| *5 (|RetractableTo| (|Float|)))
   (|ofType| *3 (|List| (|Symbol|))) (|ofType| *4 (|List| (|Symbol|)))
   (|ofCategory| *5 (|FortranMachineTypeCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Polynomial| (|Integer|)))
   (|isDomain| *1 (|FortranExpression| *3 *4 *5))
   (|ofCategory| *5 (|RetractableTo| (|Integer|)))
   (|ofType| *3 (|List| (|Symbol|))) (|ofType| *4 (|List| (|Symbol|)))
   (|ofCategory| *5 (|FortranMachineTypeCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Fraction| (|Polynomial| (|Integer|))))
   (|isDomain| *1 (|FortranExpression| *3 *4 *5))
   (|ofCategory| *5 (|RetractableTo| (|Integer|)))
   (|ofType| *3 (|List| (|Symbol|))) (|ofType| *4 (|List| (|Symbol|)))
   (|ofCategory| *5 (|FortranMachineTypeCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Expression| (|Integer|)))
   (|isDomain| *1 (|FortranExpression| *3 *4 *5))
   (|ofCategory| *5 (|RetractableTo| (|Integer|)))
   (|ofType| *3 (|List| (|Symbol|))) (|ofType| *4 (|List| (|Symbol|)))
   (|ofCategory| *5 (|FortranMachineTypeCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Symbol|))
   (|isDomain| *1 (|FortranExpression| *3 *4 *5)) (|ofType| *3 (|List| *2))
   (|ofType| *4 (|List| *2)) (|ofCategory| *5 (|FortranMachineTypeCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Expression| *5))
   (|ofCategory| *5 (|FortranMachineTypeCategory|))
   (|isDomain| *1 (|FortranExpression| *3 *4 *5))
   (|ofType| *3 (|List| (|Symbol|))) (|ofType| *4 (|List| (|Symbol|)))))
 ((*1 *1 *2)
  (|partial| AND
   (|isDomain| *2 (|Matrix| (|Fraction| (|Polynomial| (|Integer|)))))
   (|ofCategory| *1 (|FortranMatrixFunctionCategory|))))
 ((*1 *1 *2)
  (|partial| AND
   (|isDomain| *2 (|Matrix| (|Fraction| (|Polynomial| (|Float|)))))
   (|ofCategory| *1 (|FortranMatrixFunctionCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Matrix| (|Polynomial| (|Integer|))))
   (|ofCategory| *1 (|FortranMatrixFunctionCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Matrix| (|Polynomial| (|Float|))))
   (|ofCategory| *1 (|FortranMatrixFunctionCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Matrix| (|Expression| (|Integer|))))
   (|ofCategory| *1 (|FortranMatrixFunctionCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Matrix| (|Expression| (|Float|))))
   (|ofCategory| *1 (|FortranMatrixFunctionCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Fraction| (|Polynomial| (|Integer|))))
   (|ofCategory| *1 (|FortranFunctionCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Fraction| (|Polynomial| (|Float|))))
   (|ofCategory| *1 (|FortranFunctionCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Polynomial| (|Integer|)))
   (|ofCategory| *1 (|FortranFunctionCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Polynomial| (|Float|)))
   (|ofCategory| *1 (|FortranFunctionCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Expression| (|Integer|)))
   (|ofCategory| *1 (|FortranFunctionCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Expression| (|Float|)))
   (|ofCategory| *1 (|FortranFunctionCategory|))))
 ((*1 *1 *2)
  (|partial| AND
   (|isDomain| *2 (|Vector| (|Fraction| (|Polynomial| (|Integer|)))))
   (|ofCategory| *1 (|FortranVectorFunctionCategory|))))
 ((*1 *1 *2)
  (|partial| AND
   (|isDomain| *2 (|Vector| (|Fraction| (|Polynomial| (|Float|)))))
   (|ofCategory| *1 (|FortranVectorFunctionCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Vector| (|Polynomial| (|Integer|))))
   (|ofCategory| *1 (|FortranVectorFunctionCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Vector| (|Polynomial| (|Float|))))
   (|ofCategory| *1 (|FortranVectorFunctionCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Vector| (|Expression| (|Integer|))))
   (|ofCategory| *1 (|FortranVectorFunctionCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Vector| (|Expression| (|Float|))))
   (|ofCategory| *1 (|FortranVectorFunctionCategory|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|JetBundleExpression| *3))
   (|ofCategory| *3 (|JetBundleCategory|))
   (|isDomain| *1 (|JetBundleLinearFunction| *3 *4))
   (|has| *4 (SIGNATURE |retractIfCan| ((|Union| *4 "failed") *2)))
   (|ofCategory| *4 (|JetBundleBaseFunctionCategory| *3))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|JetBundleExpression| *3))
   (|ofCategory| *3 (|JetBundleCategory|))
   (|isDomain| *1 (|JetBundleXExpression| *3))))
 ((*1 *2 *3)
  (|partial| AND (|ofCategory| *4 (|FiniteFieldCategory|))
   (|ofCategory| *5 (|FiniteAlgebraicExtensionField| *4))
   (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
   (|isDomain| *2
               (|SparseUnivariatePolynomial|
                (|SparseUnivariatePolynomial| *4)))
   (|isDomain| *1 (|NormRetractPackage| *4 *5 *6 *3 *7))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *6))
   (|ofType| *7 (|PositiveInteger|))))
 ((*1 *1 *2)
  (|partial| AND (|ofCategory| *1 (|RetractableFrom| *2))
   (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1)
  (|partial| AND (|ofCategory| *1 (|RetractableTo| *2))
   (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Polynomial| *3)) (|ofCategory| *3 (|Ring|))
   (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
   (|ofCategory| *5 (|ConvertibleTo| (|Symbol|)))
   (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Polynomial| (|Integer|)))
   (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
   (|ofCategory| *3 (|Algebra| (|Integer|)))
   (|ofCategory| *5 (|ConvertibleTo| (|Symbol|))) (|ofCategory| *3 (|Ring|))
   (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|))))
 ((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Polynomial| (|Fraction| (|Integer|))))
   (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
   (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
   (|ofCategory| *5 (|ConvertibleTo| (|Symbol|))) (|ofCategory| *3 (|Ring|))
   (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Any|)) (|isDomain| *1 (|AnyFunctions1| *2))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Polynomial| (|Float|)))
       (|isDomain| *1 (|FortranExpression| *3 *4 *5))
       (|ofCategory| *5 (|RetractableTo| (|Float|)))
       (|ofType| *3 (|List| (|Symbol|))) (|ofType| *4 (|List| (|Symbol|)))
       (|ofCategory| *5 (|FortranMachineTypeCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Fraction| (|Polynomial| (|Float|))))
       (|isDomain| *1 (|FortranExpression| *3 *4 *5))
       (|ofCategory| *5 (|RetractableTo| (|Float|)))
       (|ofType| *3 (|List| (|Symbol|))) (|ofType| *4 (|List| (|Symbol|)))
       (|ofCategory| *5 (|FortranMachineTypeCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Expression| (|Float|)))
       (|isDomain| *1 (|FortranExpression| *3 *4 *5))
       (|ofCategory| *5 (|RetractableTo| (|Float|)))
       (|ofType| *3 (|List| (|Symbol|))) (|ofType| *4 (|List| (|Symbol|)))
       (|ofCategory| *5 (|FortranMachineTypeCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Polynomial| (|Integer|)))
       (|isDomain| *1 (|FortranExpression| *3 *4 *5))
       (|ofCategory| *5 (|RetractableTo| (|Integer|)))
       (|ofType| *3 (|List| (|Symbol|))) (|ofType| *4 (|List| (|Symbol|)))
       (|ofCategory| *5 (|FortranMachineTypeCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Fraction| (|Polynomial| (|Integer|))))
       (|isDomain| *1 (|FortranExpression| *3 *4 *5))
       (|ofCategory| *5 (|RetractableTo| (|Integer|)))
       (|ofType| *3 (|List| (|Symbol|))) (|ofType| *4 (|List| (|Symbol|)))
       (|ofCategory| *5 (|FortranMachineTypeCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Expression| (|Integer|)))
       (|isDomain| *1 (|FortranExpression| *3 *4 *5))
       (|ofCategory| *5 (|RetractableTo| (|Integer|)))
       (|ofType| *3 (|List| (|Symbol|))) (|ofType| *4 (|List| (|Symbol|)))
       (|ofCategory| *5 (|FortranMachineTypeCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *1 (|FortranExpression| *3 *4 *5)) (|ofType| *3 (|List| *2))
       (|ofType| *4 (|List| *2))
       (|ofCategory| *5 (|FortranMachineTypeCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Expression| *5))
       (|ofCategory| *5 (|FortranMachineTypeCategory|))
       (|isDomain| *1 (|FortranExpression| *3 *4 *5))
       (|ofType| *3 (|List| (|Symbol|))) (|ofType| *4 (|List| (|Symbol|)))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Matrix| (|Fraction| (|Polynomial| (|Integer|)))))
       (|ofCategory| *1 (|FortranMatrixFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Matrix| (|Fraction| (|Polynomial| (|Float|)))))
       (|ofCategory| *1 (|FortranMatrixFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Matrix| (|Polynomial| (|Integer|))))
       (|ofCategory| *1 (|FortranMatrixFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Matrix| (|Polynomial| (|Float|))))
       (|ofCategory| *1 (|FortranMatrixFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Matrix| (|Expression| (|Integer|))))
       (|ofCategory| *1 (|FortranMatrixFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Matrix| (|Expression| (|Float|))))
       (|ofCategory| *1 (|FortranMatrixFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Fraction| (|Polynomial| (|Integer|))))
       (|ofCategory| *1 (|FortranFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Fraction| (|Polynomial| (|Float|))))
       (|ofCategory| *1 (|FortranFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Polynomial| (|Integer|)))
       (|ofCategory| *1 (|FortranFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Polynomial| (|Float|)))
       (|ofCategory| *1 (|FortranFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Expression| (|Integer|)))
       (|ofCategory| *1 (|FortranFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Expression| (|Float|)))
       (|ofCategory| *1 (|FortranFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Vector| (|Fraction| (|Polynomial| (|Integer|)))))
       (|ofCategory| *1 (|FortranVectorFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Vector| (|Fraction| (|Polynomial| (|Float|)))))
       (|ofCategory| *1 (|FortranVectorFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Vector| (|Polynomial| (|Integer|))))
       (|ofCategory| *1 (|FortranVectorFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Vector| (|Polynomial| (|Float|))))
       (|ofCategory| *1 (|FortranVectorFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Vector| (|Expression| (|Integer|))))
       (|ofCategory| *1 (|FortranVectorFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Vector| (|Expression| (|Float|))))
       (|ofCategory| *1 (|FortranVectorFunctionCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|JetBundleExpression| *3))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|JetBundleLinearFunction| *3 *4))
       (|has| *4 (SIGNATURE |retractIfCan| ((|Union| *4 "failed") *2)))
       (|ofCategory| *4 (|JetBundleBaseFunctionCategory| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|JetBundleExpression| *3))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|JetBundleXExpression| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|JetBundleCategory|)) (|isDomain| *2 (|List| *4))
       (|isDomain| *1 (|JetDifferentialEquation| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))
 ((*1 *1 *2)
  (AND (|ofCategory| *1 (|RetractableFrom| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RetractableTo| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Polynomial| *3)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *5 (|ConvertibleTo| (|Symbol|)))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Polynomial| (|Integer|)))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Algebra| (|Integer|)))
       (|ofCategory| *5 (|ConvertibleTo| (|Symbol|)))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Polynomial| (|Fraction| (|Integer|))))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *5 (|ConvertibleTo| (|Symbol|)))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|IntegralDomain|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|IntegralDomain|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *2 *1 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |gcd| (|NewSparseUnivariatePolynomial| *3))
                         (|:| |coef1| (|NewSparseUnivariatePolynomial| *3))
                         (|:| |coef2| (|NewSparseUnivariatePolynomial| *3))))
   (|isDomain| *1 (|NewSparseUnivariatePolynomial| *3))
   (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Ring|))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *2
                   (|Record| (|:| |gcd| *1) (|:| |coef1| *1) (|:| |coef2| *1)))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))))) 
(((*1 *2 *1 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |gcd| (|NewSparseUnivariatePolynomial| *3))
                         (|:| |coef1| (|NewSparseUnivariatePolynomial| *3))))
   (|isDomain| *1 (|NewSparseUnivariatePolynomial| *3))
   (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Ring|))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *2 (|Record| (|:| |gcd| *1) (|:| |coef1| *1)))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))))) 
(((*1 *2 *1 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |gcd| (|NewSparseUnivariatePolynomial| *3))
                         (|:| |coef2| (|NewSparseUnivariatePolynomial| *3))))
   (|isDomain| *1 (|NewSparseUnivariatePolynomial| *3))
   (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Ring|))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *2 (|Record| (|:| |gcd| *1) (|:| |coef2| *1)))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))))) 
(((*1 *2 *2 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *2 (|IntegralDomain|))
       (|isDomain| *1 (|PseudoRemainderSequence| *2 *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *2))))
 ((*1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *3 (|IntegralDomain|))))) 
(((*1 *2 *2 *3 *3 *4)
  (AND (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *1 (|PseudoRemainderSequence| *3 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))
 ((*1 *1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *3 (|IntegralDomain|))))) 
(((*1 *1 *1 *1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *2 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *2 *4 *5))
       (|isDomain| *1 (|PolynomialSetCategory&| *3 *2 *4 *5 *6))
       (|ofCategory| *3 (|PolynomialSetCategory| *2 *4 *5 *6))))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *1 (|PolynomialSetCategory| *2 *3 *4 *5))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|IntegralDomain|))))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *2 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|RecursivePolynomialCategory&| *3 *2 *4 *5))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *2 *4 *5))))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|GcdDomain|))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|GcdDomain|)))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *2)) (|isDomain| *1 (|HeuGcd| *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *2 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *1 (|ModularDistinctDegreeFactorizer| *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|NonNegativeInteger|)))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|EuclideanDomain|))
       (|isDomain| *1 (|PolynomialGcdPackage| *3 *4 *5 *2))
       (|ofCategory| *2 (|PolynomialCategory| *5 *3 *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *2))
       (|ofCategory| *2 (|PolynomialCategory| *6 *4 *5))
       (|isDomain| *1 (|PolynomialGcdPackage| *4 *5 *6 *2))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|EuclideanDomain|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *6))
       (|ofCategory| *6 (|PolynomialCategory| *5 *3 *4))
       (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|EuclideanDomain|))
       (|isDomain| *1 (|PolynomialGcdPackage| *3 *4 *5 *6))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|SparseUnivariatePolynomial| *7)))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|EuclideanDomain|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *7))
       (|isDomain| *1 (|PolynomialGcdPackage| *4 *5 *6 *7))
       (|ofCategory| *7 (|PolynomialCategory| *6 *4 *5))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|PositiveInteger|)))
 ((*1 *2 *2 *2 *3)
  (AND (|isDomain| *2 (|U32Vector|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))
 ((*1 *2 *3 *4 *4 *4)
  (AND (|isDomain| *3 (|PrimitiveArray| (|U32Vector|)))
       (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|U32Vector|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *1 (|PseudoRemainderSequence| *3 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))
 ((*1 *2 *2 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|GcdDomain|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|GcdDomain|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|GcdDomain|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|GcdDomain|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|RecursivePolynomialCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *2 (|GcdDomain|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|RomanNumeral|))))
 ((*1 *1 *2) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|RomanNumeral|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|BinaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FreeMagma| *2)) (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|LyndonWord| *2)) (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|OutputForm|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|Join| (|OrderedRing|) (|Field|)))
       (|isDomain| *1 (|RightOpenIntervalRootCharacterization| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|BinaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FreeMagma| *2)) (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|LyndonWord| *2)) (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|OutputForm|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|Join| (|OrderedRing|) (|Field|)))
       (|isDomain| *1 (|RightOpenIntervalRootCharacterization| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *2)
  (AND (|ofType| *4 *2) (|ofCategory| *5 (|Type|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|DirectProductCategory&| *3 *4 *5))
       (|ofCategory| *3 (|DirectProductCategory| *4 *5))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FreeAbelianMonoidCategory| *3 *4))
       (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *4 (|CancellationAbelianMonoid|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|Field|)) (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FiniteAlgebraicExtensionField&| *3 *4))
       (|ofCategory| *3 (|FiniteAlgebraicExtensionField| *4))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|FreeGroup| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|Finite|)) (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|FreeMonoid| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FramedModule&| *3 *4))
       (|ofCategory| *3 (|FramedModule| *4))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|SetCategory|)) (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FiniteSetAggregate&| *3 *4))
       (|ofCategory| *3 (|FiniteSetAggregate| *4))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|ListMonoidOps| *3 *4 *5))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|AbelianMonoid|))
       (|ofType| *5 *4)))
 ((*1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|RandomNumberSource|))))
 ((*1 *2)
  (AND (|ofType| *4 *2) (|ofType| *5 *2)
       (|ofCategory| *6 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *7 (|DirectProductCategory| *5 *6))
       (|ofCategory| *8 (|DirectProductCategory| *4 *6))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|RectangularMatrixCategory&| *3 *4 *5 *6 *7 *8))
       (|ofCategory| *3 (|RectangularMatrixCategory| *4 *5 *6 *7 *8))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|Join| (|OrderedRing|) (|Field|)))
       (|isDomain| *1 (|RightOpenIntervalRootCharacterization| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *2 (|Join| (|OrderedRing|) (|Field|)))
       (|isDomain| *1 (|RightOpenIntervalRootCharacterization| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|PlaneAlgebraicCurvePlot|))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Mapping| (|Factored| *4) *4))
       (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|Factored| *4))
       (|isDomain| *1 (|FactoredFunctionUtilities| *4))))
 ((*1 *1 *1) (|isDomain| *1 (|Plot|)))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot|))))
 ((*1 *1 *1) (|isDomain| *1 (|Plot3D|)))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot3D|))))
 ((*1 *2 *3 *2 *4)
  (AND
   (|isDomain| *2
               (|Record| (|:| |left| (|Fraction| (|Integer|)))
                         (|:| |right| (|Fraction| (|Integer|)))))
   (|isDomain| *4 (|Fraction| (|Integer|)))
   (|isDomain| *1 (|RealZeroPackage| *3))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3 *2 *2)
  (|partial| AND
   (|isDomain| *2
               (|Record| (|:| |left| (|Fraction| (|Integer|)))
                         (|:| |right| (|Fraction| (|Integer|)))))
   (|isDomain| *1 (|RealZeroPackage| *3))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3 *2 *4)
  (AND
   (|isDomain| *2
               (|Record| (|:| |left| (|Fraction| (|Integer|)))
                         (|:| |right| (|Fraction| (|Integer|)))))
   (|isDomain| *4 (|Fraction| (|Integer|)))
   (|isDomain| *1 (|RealZeroPackageQ| *3))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))
 ((*1 *2 *3 *2 *2)
  (|partial| AND
   (|isDomain| *2
               (|Record| (|:| |left| (|Fraction| (|Integer|)))
                         (|:| |right| (|Fraction| (|Integer|)))))
   (|isDomain| *1 (|RealZeroPackageQ| *3))
   (|ofCategory| *3
                 (|UnivariatePolynomialCategory| (|Fraction| (|Integer|))))))
 ((*1 *1 *1)
  (AND (|ofCategory| *2 (|Join| (|OrderedRing|) (|Field|)))
       (|isDomain| *1 (|RightOpenIntervalRootCharacterization| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *2 *3 *1)
  (AND (|ofCategory| *4 (|Join| (|OrderedRing|) (|Field|)))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|RightOpenIntervalRootCharacterization| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Kernel| (|AlgebraicNumber|))))
       (|isDomain| *1 (|AlgebraicNumber|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Kernel| (|AlgebraicNumber|)))
       (|isDomain| *1 (|AlgebraicNumber|))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| (|AlgebraicNumber|)))
       (|isDomain| *3 (|List| (|Kernel| (|AlgebraicNumber|))))
       (|isDomain| *1 (|AlgebraicNumber|))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| (|AlgebraicNumber|)))
       (|isDomain| *3 (|Kernel| (|AlgebraicNumber|)))
       (|isDomain| *1 (|AlgebraicNumber|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|ComplexCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *2 (|Join| (|Field|) (|OrderedRing|)))
       (|isDomain| *1 (|ComplexRootFindingPackage| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Complex| *2)))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *3))
       (|ofCategory| *3 (|Field|)) (|ofCategory| *3 (|Finite|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *2))
       (|ofCategory| *2 (|Field|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteRankAlgebra| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *4 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *2 (|QuotientFieldCategory| *3))
       (|isDomain| *1 (|FractionalIdeal| *3 *2 *4 *5))
       (|ofCategory| *3 (|EuclideanDomain|))
       (|ofCategory| *5
                     (|Join| (|FramedAlgebra| *2 *4) (|RetractableTo| *2)))))
 ((*1 *2 *1)
  (AND (|ofCategory| *4 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *2 (|QuotientFieldCategory| *3))
       (|isDomain| *1 (|FractionalIdealAsModule| *3 *2 *4 *5 *6))
       (|ofCategory| *3 (|EuclideanDomain|))
       (|ofCategory| *5 (|FramedAlgebra| *2 *4)) (|ofType| *6 (|Vector| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|Ring|))
       (|ofCategory| *2
                     (|Join| (|FloatingPointSystem|) (|RetractableTo| *5)
                             (|Field|) (|TranscendentalFunctionCategory|)
                             (|ElementaryFunctionCategory|)))
       (|isDomain| *1 (|GaloisGroupFactorizationUtilities| *5 *3 *2))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Kernel| (|InnerAlgebraicNumber|))))
       (|isDomain| *1 (|InnerAlgebraicNumber|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Kernel| (|InnerAlgebraicNumber|)))
       (|isDomain| *1 (|InnerAlgebraicNumber|))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| (|InnerAlgebraicNumber|)))
       (|isDomain| *3 (|List| (|Kernel| (|InnerAlgebraicNumber|))))
       (|isDomain| *1 (|InnerAlgebraicNumber|))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| (|InnerAlgebraicNumber|)))
       (|isDomain| *3 (|Kernel| (|InnerAlgebraicNumber|)))
       (|isDomain| *1 (|InnerAlgebraicNumber|))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Vector| *4)) (|isDomain| *3 (|PositiveInteger|))
       (|ofCategory| *4 (|FiniteFieldCategory|))
       (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *4))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|MonogenicAlgebra| *4 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *1 (|NormInMonogenicAlgebra| *4 *2 *5 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|OctonionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|QuaternionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *1 *1) (|ofCategory| *1 (|RealNumberSystem|)))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|QuotientFieldCategory| *2))
       (|ofCategory| *2 (|IntegralDomain|))
       (|ofCategory| *2 (|IntegerNumberSystem|))))
 ((*1 *1 *1) (|ofCategory| *1 (|RealNumberSystem|)))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|QuotientFieldCategory| *2))
       (|ofCategory| *2 (|IntegralDomain|))
       (|ofCategory| *2 (|IntegerNumberSystem|))))
 ((*1 *1 *1) (|ofCategory| *1 (|RealNumberSystem|)))) 
(((*1 *2 *1)
  (AND (|isDomain| *1 (|ContinuedFraction| *2))
       (|ofCategory| *2 (|EuclideanDomain|))))
 ((*1 *2 *1)
  (AND (|isDomain| *1 (|PartialFraction| *2))
       (|ofCategory| *2 (|EuclideanDomain|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|QuotientFieldCategory| *2))
       (|ofCategory| *2 (|IntegralDomain|))
       (|ofCategory| *2 (|EuclideanDomain|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RealNumberSystem|)) (|isDomain| *2 (|Integer|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|BinaryExpansion|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|DecimalExpansion|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|HexadecimalExpansion|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|QuotientFieldCategory| *2))
       (|ofCategory| *2 (|IntegralDomain|))
       (|ofCategory| *2 (|EuclideanDomain|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|RadixExpansion| *3)) (|ofType| *3 (|Integer|))))
 ((*1 *1 *1) (|ofCategory| *1 (|RealNumberSystem|)))) 
(((*1 *1 *1) (|ofCategory| *1 (|RealNumberSystem|)))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|ComplexCategory&| *3 *4))
       (|ofCategory| *3 (|ComplexCategory| *4))))
 ((*1 *2)
  (AND (|ofType| *4 *2) (|ofCategory| *5 (|Type|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|DirectProductCategory&| *3 *4 *5))
       (|ofCategory| *3 (|DirectProductCategory| *4 *5))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|Comparable|)) (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FunctionSpace&| *3 *4))
       (|ofCategory| *3 (|FunctionSpace| *4))))
 ((*1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|IntegerNumberSystem&| *3))
       (|ofCategory| *3 (|IntegerNumberSystem|))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|JetBundleFunctionCategory&| *3 *4))
       (|ofCategory| *3 (|JetBundleFunctionCategory| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|NonAssociativeRing|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|OctonionCategory&| *3 *4))
       (|ofCategory| *3 (|OctonionCategory| *4))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|QuotientFieldCategory&| *3 *4))
       (|ofCategory| *3 (|QuotientFieldCategory| *4))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|QuaternionCategory&| *3 *4))
       (|ofCategory| *3 (|QuaternionCategory| *4))))
 ((*1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|RealClosedField&| *3))
       (|ofCategory| *3 (|RealClosedField|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|RealNumberSystem&| *3))
       (|ofCategory| *3 (|RealNumberSystem|))))) 
(((*1 *2 *1 *1) (AND (|ofCategory| *1 (|Rng|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Matrix| *5))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|isDomain| *1 (|RectangularMatrix| *3 *4 *5))
       (|ofType| *3 (|NonNegativeInteger|))
       (|ofType| *4 (|NonNegativeInteger|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Matrix| *3)) (|isDomain| *1 (|IncidenceAlgebra| *3 *4))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|SetCategory|))))
 ((*1 *1 *2 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *3 (|Mapping| *4 (|Integer|) (|Integer|)))
       (|ofCategory| *4 (|AbelianMonoid|))
       (|ofCategory| *1 (|MatrixCategory| *4 *5 *6))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| *3))) (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *1 (|MatrixCategory| *3 *4 *5))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| (|OutputForm|))))
       (|isDomain| *1 (|OutputForm|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|SquareMatrix| *3 *4))
       (|isDomain| *1 (|QuadraticForm| *3 *4))
       (|ofType| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Field|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| *5)))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7))
       (|ofCategory| *6 (|DirectProductCategory| *4 *5))
       (|ofCategory| *7 (|DirectProductCategory| *3 *5))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *3 *4 *5))
       (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|DirectProductCategory| *4 *5))
       (|ofCategory| *7 (|DirectProductCategory| *3 *5))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *3 *4 *5))
       (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|DirectProductCategory| *4 *5))
       (|ofCategory| *7 (|DirectProductCategory| *3 *5))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *3 *4 *5))
       (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|DirectProductCategory| *4 *5))
       (|ofCategory| *7 (|DirectProductCategory| *3 *5))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *3 *4 *5))
       (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|ofCategory| *3 (|AbelianGroup|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|DirectProductCategory| *4 *5))
       (|ofCategory| *7 (|DirectProductCategory| *3 *5))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|)) (|ofCategory| *4 (|IndexedAggregate| *2 *3))
       (|ofCategory| *5 (|IndexedAggregate| *2 *3))
       (|isDomain| *2 (|Integer|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|DirectProductCategory| *4 *5))
       (|ofCategory| *7 (|DirectProductCategory| *3 *5))
       (|isDomain| *2 (|Integer|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|)) (|ofCategory| *4 (|IndexedAggregate| *2 *3))
       (|ofCategory| *5 (|IndexedAggregate| *2 *3))
       (|isDomain| *2 (|Integer|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|DirectProductCategory| *4 *5))
       (|ofCategory| *7 (|DirectProductCategory| *3 *5))
       (|isDomain| *2 (|Integer|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|)) (|ofCategory| *4 (|IndexedAggregate| *2 *3))
       (|ofCategory| *5 (|IndexedAggregate| *2 *3))
       (|isDomain| *2 (|Integer|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|DirectProductCategory| *4 *5))
       (|ofCategory| *7 (|DirectProductCategory| *3 *5))
       (|isDomain| *2 (|Integer|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|)) (|ofCategory| *4 (|IndexedAggregate| *2 *3))
       (|ofCategory| *5 (|IndexedAggregate| *2 *3))
       (|isDomain| *2 (|Integer|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|DirectProductCategory| *4 *5))
       (|ofCategory| *7 (|DirectProductCategory| *3 *5))
       (|isDomain| *2 (|Integer|))))) 
(((*1 *2 *1 *3 *3)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *2 *4 *5))
       (|ofCategory| *4 (|IndexedAggregate| *3 *2))
       (|ofCategory| *5 (|IndexedAggregate| *3 *2)) (|isDomain| *3 (|Integer|))
       (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|EltableAggregate| *3 *2)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|ofCategory| *1 (|RectangularMatrixCategory| *4 *5 *2 *6 *7))
       (|ofCategory| *6 (|DirectProductCategory| *5 *2))
       (|ofCategory| *7 (|DirectProductCategory| *4 *2))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))))) 
(((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *2))
       (|ofCategory| *4 (|Type|)) (|ofCategory| *5 (|IndexedAggregate| *3 *4))
       (|isDomain| *3 (|Integer|))
       (|ofCategory| *2 (|IndexedAggregate| *3 *4))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|ofCategory| *1 (|RectangularMatrixCategory| *4 *5 *6 *7 *2))
       (|ofCategory| *6 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *7 (|DirectProductCategory| *5 *6))
       (|ofCategory| *2 (|DirectProductCategory| *4 *6))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|Field|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|InnerMatrixLinearAlgebraFunctions| *4 *5 *6 *3))
       (|ofCategory| *3 (|MatrixCategory| *4 *5 *6))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *3 *4 *5))
       (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|MatrixLinearAlgebraFunctions| *4 *5 *6 *3))
       (|ofCategory| *3 (|MatrixCategory| *4 *5 *6))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|RectangularMatrixCategory| *3 *4 *5 *6 *7))
       (|ofCategory| *5 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *6 (|DirectProductCategory| *4 *5))
       (|ofCategory| *7 (|DirectProductCategory| *3 *5))
       (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *3 *3 *4)
  (AND (|isDomain| *3 (|List| *5))
       (|ofCategory| *5 (|Join| (|IntegralDomain|) (|GcdDomain|)))
       (|isDomain| *4 (|NonNegativeInteger|))
       (|isDomain| *2 (|Fraction| (|SparseUnivariatePolynomial| *5)))
       (|isDomain| *1 (|FractionFreeFastGaussian| *5 *6))
       (|ofCategory| *6 (|AbelianMonoidRing| *5 *4))))
 ((*1 *2 *3 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| *5)))
       (|ofCategory| *5 (|Join| (|IntegralDomain|) (|GcdDomain|)))
       (|isDomain| *4 (|NonNegativeInteger|))
       (|isDomain| *2 (|Fraction| (|SparseUnivariatePolynomial| *5)))
       (|isDomain| *1 (|FractionFreeFastGaussian| *5 *6))
       (|ofCategory| *6 (|AbelianMonoidRing| *5 *4))))
 ((*1 *2 *2 *3 *3)
  (AND (|isDomain| *2 (|UnivariatePolynomial| *4 *5))
       (|isDomain| *3 (|List| *5)) (|ofType| *4 (|Symbol|))
       (|ofCategory| *5 (|Field|))
       (|isDomain| *1 (|PolynomialInterpolation| *4 *5))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| *5)) (|ofCategory| *5 (|Field|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *5))
       (|isDomain| *1 (|PolynomialInterpolation| *4 *5))
       (|ofType| *4 (|Symbol|))))
 ((*1 *2 *3 *3 *4 *4)
  (AND (|isDomain| *3 (|List| *6)) (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *6 (|Field|))
       (|isDomain| *2 (|Fraction| (|Polynomial| *6)))
       (|isDomain| *1 (|RationalInterpolation| *5 *6))
       (|ofType| *5 (|Symbol|))))) 
(((*1 *2 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|RandomIntegerDistributions|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Fraction| (|Integer|)))
       (|isDomain| *2 (|Mapping| (|Integer|)))
       (|isDomain| *1 (|RandomIntegerDistributions|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Fraction| (|Integer|)))
       (|isDomain| *2 (|Mapping| (|Integer|)))
       (|isDomain| *1 (|RandomIntegerDistributions|))))) 
(((*1 *1 *1 *1) (|ofCategory| *1 (|CombinatorialFunctionCategory|)))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|CombinatorialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *1 (|IntegerCombinatoricFunctions| *2))
       (|ofCategory| *2 (|IntegerNumberSystem|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Fraction| (|Integer|))) (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|Mapping| (|Integer|)))
       (|isDomain| *1 (|RandomIntegerDistributions|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Set| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|Mapping| *4))
       (|isDomain| *1 (|RandomDistributions| *4))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|Float|)) (|isDomain| *2 (|Mapping| (|Float|)))
       (|isDomain| *1 (|RandomFloatDistributions|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Segment| (|Integer|)))
       (|isDomain| *2 (|Mapping| (|Integer|)))
       (|isDomain| *1 (|RandomIntegerDistributions|))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|Kernel| *3)) (|ofCategory| *3 (|FunctionSpace| *6))
       (|ofCategory| *6
                     (|Join| (|IntegralDomain|) (|RetractableTo| *5)
                             (|Comparable|)))
       (|isDomain| *5 (|Integer|)) (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|RootFSSplit| *6 *3))))) 
(((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|List| *6)) (|isDomain| *4 (|Kernel| *6))
       (|ofCategory| *6 (|FunctionSpace| *5))
       (|ofCategory| *5
                     (|Join| (|IntegralDomain|) (|RetractableTo| (|Integer|))
                             (|Comparable|)))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |funs| (|List| *6)) (|:| |nroot| *6)
                              (|:| |npow1| (|Integer|))
                              (|:| |npow2| (|Integer|)))))
       (|isDomain| *1 (|RootFSSplit| *5 *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *4)))
       (|ofCategory| *4 (|EuclideanDomain|))
       (|isDomain| *2 (|Fraction| (|Factored| (|Polynomial| *4))))
       (|isDomain| *1 (|RationalFunctionFactorizer| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|Mapping| (|Float|)))
       (|isDomain| *1 (|RandomFloatDistributions|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|Mapping| (|Float|)))
       (|isDomain| *1 (|RandomFloatDistributions|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|Mapping| (|Float|)))
       (|isDomain| *1 (|RandomFloatDistributions|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|UnivariatePuiseuxSeries| *3 *4 *5))
       (|ofCategory| *3 (|Join| (|Field|) (|Comparable|)))
       (|ofType| *4 (|Symbol|)) (|ofType| *5 *3)
       (|isDomain| *1 (|ExponentialOfUnivariatePuiseuxSeries| *3 *4 *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Float|)) (|isDomain| *2 (|Mapping| (|Float|)))
       (|isDomain| *1 (|RandomFloatDistributions|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|Float|)) (|isDomain| *2 (|Mapping| (|Float|)))
       (|isDomain| *1 (|RandomFloatDistributions|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Float|))
       (|isDomain| *1 (|RandomFloatDistributions|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|RandomFloatDistributions|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|RandomFloatDistributions|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|RandomFloatDistributions|))))) 
(((*1 *2 *3 *4 *2)
  (AND
   (|isDomain| *3
               (|SparseUnivariatePolynomial|
                (|Fraction| (|SparseUnivariatePolynomial| *2))))
   (|isDomain| *4 (|Kernel| *2))
   (|ofCategory| *2
                 (|Join| (|FunctionSpace| *5) (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)))
   (|ofCategory| *5
                 (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                         (|Comparable|) (|CharacteristicZero|)
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *1 (|GenusZeroIntegration| *5 *2 *6))
   (|ofCategory| *6 (|SetCategory|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *1))
       (|ofCategory| *1 (|PolynomialCategory| *4 *5 *3))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *4))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *1 (|PolynomialCategory| *4 *5 *3))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|SparseUnivariatePolynomial| *2)))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *6 (|Ring|))
       (|ofCategory| *2
                     (|Join| (|Field|)
                             (CATEGORY |domain| (SIGNATURE |coerce| ($ *7))
                              (SIGNATURE |numer| (*7 $))
                              (SIGNATURE |denom| (*7 $)))))
       (|isDomain| *1 (|PolynomialCategoryQuotientFunctions| *5 *4 *6 *7 *2))
       (|ofCategory| *7 (|PolynomialCategory| *6 *5 *4))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|Fraction|
                (|SparseUnivariatePolynomial| (|Fraction| (|Polynomial| *5)))))
   (|isDomain| *4 (|Symbol|)) (|isDomain| *2 (|Fraction| (|Polynomial| *5)))
   (|isDomain| *1 (|RationalFunction| *5))
   (|ofCategory| *5 (|IntegralDomain|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Kernel| *1)) (|ofCategory| *1 (|FunctionSpace| *4))
       (|ofCategory| *4 (|Comparable|)) (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|Fraction| (|SparseUnivariatePolynomial| *1)))))
 ((*1 *2 *3 *4 *4 *5)
  (AND (|isDomain| *4 (|Kernel| *3))
       (|isDomain| *5 (|SparseUnivariatePolynomial| *3))
       (|ofCategory| *3
                     (|Join| (|FunctionSpace| *6) (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                             (|Comparable|) (|CharacteristicZero|)
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|SparseUnivariatePolynomial|
                    (|Fraction| (|SparseUnivariatePolynomial| *3))))
       (|isDomain| *1 (|GenusZeroIntegration| *6 *3 *7))
       (|ofCategory| *7 (|SetCategory|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Polynomial| *6)) (|isDomain| *4 (|Variable| *5))
       (|ofType| *5 (|Symbol|)) (|ofCategory| *6 (|Ring|))
       (|isDomain| *2 (|UnivariatePolynomial| *5 (|Polynomial| *6)))
       (|isDomain| *1 (|PolynomialToUnivariatePolynomial| *5 *6))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|PolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *3))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *1))
       (|ofCategory| *1 (|PolynomialCategory| *4 *5 *3))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *6 (|Ring|))
       (|ofCategory| *7 (|PolynomialCategory| *6 *5 *4))
       (|isDomain| *2 (|Fraction| (|SparseUnivariatePolynomial| *3)))
       (|isDomain| *1 (|PolynomialCategoryQuotientFunctions| *5 *4 *6 *7 *3))
       (|ofCategory| *3
                     (|Join| (|Field|)
                             (CATEGORY |domain| (SIGNATURE |coerce| ($ *7))
                              (SIGNATURE |numer| (*7 $))
                              (SIGNATURE |denom| (*7 $)))))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *3))
       (|ofCategory| *3
                     (|Join| (|Field|)
                             (CATEGORY |domain| (SIGNATURE |coerce| ($ *7))
                              (SIGNATURE |numer| (*7 $))
                              (SIGNATURE |denom| (*7 $)))))
       (|ofCategory| *7 (|PolynomialCategory| *6 *5 *4))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *6 (|Ring|))
       (|isDomain| *1 (|PolynomialCategoryQuotientFunctions| *5 *4 *6 *7 *3))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
       (|isDomain| *4 (|Symbol|)) (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2
                   (|Fraction|
                    (|SparseUnivariatePolynomial|
                     (|Fraction| (|Polynomial| *5)))))
       (|isDomain| *1 (|RationalFunction| *5))))) 
(((*1 *2 *1)
  (|partial| AND (|ofCategory| *1 (|MaybeSkewPolynomialCategory| *3 *4 *2))
   (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
   (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *2 *3)
  (|partial| AND (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|Ring|)) (|ofCategory| *6 (|PolynomialCategory| *5 *4 *2))
   (|ofCategory| *2 (|OrderedSet|))
   (|isDomain| *1 (|PolynomialCategoryQuotientFunctions| *4 *2 *5 *6 *3))
   (|ofCategory| *3
                 (|Join| (|Field|)
                         (CATEGORY |domain| (SIGNATURE |coerce| ($ *6))
                          (SIGNATURE |numer| (*6 $))
                          (SIGNATURE |denom| (*6 $)))))))
 ((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|Fraction| (|Polynomial| *4)))
   (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|Symbol|))
   (|isDomain| *1 (|RationalFunction| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *7))
       (|ofCategory| *7 (|PolynomialCategory| *6 *4 *5))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|Ring|))
       (|isDomain| *2 (|List| *5))
       (|isDomain| *1 (|FactoringUtilities| *4 *5 *6 *7))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Symbol|)))
       (|isDomain| *1 (|FortranExpression| *3 *4 *5)) (|ofType| *3 *2)
       (|ofType| *4 *2) (|ofCategory| *5 (|FortranMachineTypeCategory|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *1)) (|ofCategory| *1 (|FunctionSpace| *4))
       (|ofCategory| *4 (|Comparable|)) (|isDomain| *2 (|List| (|Symbol|)))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FunctionSpace| *3)) (|ofCategory| *3 (|Comparable|))
       (|isDomain| *2 (|List| (|Symbol|)))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|MaybeSkewPolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|List| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *4 (|PositiveInteger|)) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|JetBundleCategory|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|JetBundleCategory|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Pattern| *3))) (|isDomain| *1 (|Pattern| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|Ring|))
       (|ofCategory| *7 (|PolynomialCategory| *6 *4 *5))
       (|isDomain| *2 (|List| *5))
       (|isDomain| *1 (|PolynomialCategoryQuotientFunctions| *4 *5 *6 *7 *3))
       (|ofCategory| *3
                     (|Join| (|Field|)
                             (CATEGORY |domain| (SIGNATURE |coerce| ($ *7))
                              (SIGNATURE |numer| (*7 $))
                              (SIGNATURE |denom| (*7 $)))))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|PowerSeriesCategory| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoid|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|List| *5))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|PolynomialSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *2 (|List| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *4)))
       (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|List| (|Symbol|)))
       (|isDomain| *1 (|RationalFunction| *4))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Polynomial| *6)))
       (|isDomain| *4 (|List| (|Symbol|)))
       (|ofCategory| *6 (|Join| (|IntegralDomain|) (|RetractableTo| *5)))
       (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2
                   (|List|
                    (|List| (|Equation| (|Fraction| (|Polynomial| *6))))))
       (|isDomain| *1 (|RetractSolvePackage| *5 *6))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Result|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Result|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *6))
       (|isDomain| *4 (|Kernel| *6))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| *5) (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                             (|Comparable|) (|CharacteristicZero|)
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|SparseUnivariatePolynomial|
                    (|Fraction| (|SparseUnivariatePolynomial| *6))))
       (|isDomain| *1 (|GenusZeroIntegration| *5 *6 *7))
       (|ofCategory| *7 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))
       (|isDomain| *1 (|ModMonic| *3 *2)) (|ofCategory| *3 (|Ring|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|MonogenicAlgebra| *3 *2))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))
 ((*1 *2 *3 *4 *4 *5 *6 *7 *8)
  (|partial| AND (|isDomain| *3 (|SparseUnivariatePolynomial| *5))
   (|isDomain| *4 (|SparseUnivariatePolynomial| *11))
   (|isDomain| *6 (|List| *10)) (|isDomain| *7 (|List| (|NonNegativeInteger|)))
   (|isDomain| *8 (|List| *11)) (|ofCategory| *10 (|OrderedSet|))
   (|ofCategory| *11 (|EuclideanDomain|))
   (|ofCategory| *5 (|PolynomialCategory| *11 *9 *10))
   (|ofCategory| *9 (|OrderedAbelianMonoidSup|))
   (|isDomain| *2 (|List| (|SparseUnivariatePolynomial| *5)))
   (|isDomain| *1 (|MultivariateSquareFree| *9 *10 *11 *5))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|PolynomialCategory| *3 *4 *5))
       (|isDomain| *1 (|ResidueRing| *3 *4 *5 *2 *6))
       (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|ofType| *6 (|List| *2))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *1 (|RepeatedSquaring| *2))
       (|ofCategory| *2
                     (|Join| (|SetCategory|)
                             (CATEGORY |domain| (SIGNATURE * ($ $ $)))))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *1 (|RepeatedDoubling| *2))
       (|ofCategory| *2
                     (|Join| (|SetCategory|)
                             (CATEGORY |domain| (SIGNATURE + ($ $ $)))))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Vector| *5))) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|Vector| *5))
       (|isDomain| *1 (|RepresentationPackage2| *5))
       (|ofCategory| *5 (|Field|)) (|ofCategory| *5 (|Finite|))
       (|ofCategory| *5 (|Ring|))))) 
(((*1 *2 *3 *4 *5 *5)
  (AND (|isDomain| *3 (|List| (|Matrix| *6))) (|isDomain| *4 (|Boolean|))
       (|isDomain| *5 (|Integer|)) (|ofCategory| *6 (|Field|))
       (|ofCategory| *6 (|Finite|)) (|ofCategory| *6 (|Ring|))
       (|isDomain| *2 (|List| (|List| (|Matrix| *6))))
       (|isDomain| *1 (|RepresentationPackage2| *6))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Matrix| *4))) (|ofCategory| *4 (|Field|))
       (|ofCategory| *4 (|Finite|)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|List| (|List| (|Matrix| *4))))
       (|isDomain| *1 (|RepresentationPackage2| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Matrix| *5))) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *5 (|Field|)) (|ofCategory| *5 (|Finite|))
       (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|List| (|List| (|Matrix| *5))))
       (|isDomain| *1 (|RepresentationPackage2| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Matrix| *5)))
       (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|Field|))
       (|ofCategory| *5 (|Finite|)) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|List| (|List| (|Matrix| *5))))
       (|isDomain| *1 (|RepresentationPackage2| *5))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Matrix| *5))) (|isDomain| *4 (|Integer|))
       (|ofCategory| *5 (|Field|)) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|RepresentationPackage2| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Matrix| *4))) (|ofCategory| *4 (|Field|))
       (|ofCategory| *4 (|Ring|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|RepresentationPackage2| *4))))) 
(((*1 *2 *3 *3 *4 *5)
  (AND (|isDomain| *3 (|List| (|Matrix| *6))) (|isDomain| *4 (|Boolean|))
       (|isDomain| *5 (|Integer|)) (|isDomain| *2 (|Matrix| *6))
       (|isDomain| *1 (|RepresentationPackage2| *6))
       (|ofCategory| *6 (|Field|)) (|ofCategory| *6 (|Ring|))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| (|Matrix| *4))) (|isDomain| *2 (|Matrix| *4))
       (|isDomain| *1 (|RepresentationPackage2| *4))
       (|ofCategory| *4 (|Field|)) (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *3 *3 *4)
  (AND (|isDomain| *3 (|List| (|Matrix| *5))) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|Matrix| *5))
       (|isDomain| *1 (|RepresentationPackage2| *5))
       (|ofCategory| *5 (|Field|)) (|ofCategory| *5 (|Ring|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Matrix| *5))) (|isDomain| *4 (|Vector| *5))
       (|ofCategory| *5 (|EuclideanDomain|)) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|Matrix| *5))
       (|isDomain| *1 (|RepresentationPackage2| *5))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Matrix| *5))) (|isDomain| *4 (|Vector| *5))
       (|ofCategory| *5 (|EuclideanDomain|)) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|Vector| (|Vector| *5)))
       (|isDomain| *1 (|RepresentationPackage2| *5))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|List| (|Matrix| *4))) (|isDomain| *2 (|Matrix| *4))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|RepresentationPackage2| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| (|Vector| *4))) (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|Matrix| *4))
       (|isDomain| *1 (|RepresentationPackage2| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Permutation| (|Integer|)))
       (|isDomain| *1 (|FiniteGroupPackage| *3))
       (|ofCategory| *3 (|Join| (|Group|) (|Finite|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Permutation| (|Integer|))) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|Matrix| (|Integer|)))
       (|isDomain| *1 (|RepresentationPackage1| *5))
       (|ofCategory| *5 (|Ring|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|Matrix| (|Integer|)))
       (|isDomain| *1 (|RepresentationPackage1| *4))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Permutation| (|Integer|))))
       (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|List| (|Matrix| (|Integer|))))
       (|isDomain| *1 (|RepresentationPackage1| *5))
       (|ofCategory| *5 (|Ring|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|List| (|Integer|))))
       (|isDomain| *2 (|List| (|Matrix| (|Integer|))))
       (|isDomain| *1 (|RepresentationPackage1| *4))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|RepresentationPackage1| *3))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|List| (|Matrix| *3))) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|RepresentationPackage1| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|RepresentationPackage1| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|List| (|Matrix| *3))) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|RepresentationPackage1| *3))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Matrix| *4)) (|isDomain| *3 (|PositiveInteger|))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|RepresentationPackage1| *4))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|List| (|Matrix| *4)))
       (|isDomain| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|RepresentationPackage1| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|Matrix| (|Polynomial| *4)))
       (|isDomain| *1 (|RepresentationPackage1| *4))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Matrix| *4)) (|isDomain| *3 (|PositiveInteger|))
       (|ofCategory| *4 (|CommutativeRing|)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|RepresentationPackage1| *4))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|List| (|Matrix| *4)))
       (|isDomain| *3 (|PositiveInteger|))
       (|ofCategory| *4 (|CommutativeRing|)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|RepresentationPackage1| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *2 (|List| (|Matrix| (|Expression| (|Integer|)))))
       (|isDomain| *1 (|RadicalEigenPackage|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| (|Matrix| (|Expression| (|Integer|)))))
       (|isDomain| *1 (|RadicalEigenPackage|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Matrix| (|Expression| (|Integer|))))
       (|isDomain| *1 (|RadicalEigenPackage|))))) 
(((*1 *2 *3)
  (|partial| AND
   (|isDomain| *3 (|Matrix| (|Fraction| (|Polynomial| (|Integer|)))))
   (|isDomain| *2 (|Matrix| (|Expression| (|Integer|))))
   (|isDomain| *1 (|RadicalEigenPackage|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|RadicalEigenPackage|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Expression| (|Integer|)))
       (|isDomain| *4 (|Matrix| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *2 (|List| (|Matrix| (|Expression| (|Integer|)))))
       (|isDomain| *1 (|RadicalEigenPackage|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |radval| (|Expression| (|Integer|)))
                              (|:| |radmult| (|Integer|))
                              (|:| |radvect|
                                   (|List|
                                    (|Matrix| (|Expression| (|Integer|))))))))
       (|isDomain| *1 (|RadicalEigenPackage|))))) 
(((*1 *1 *2) (AND (|isDomain| *1 (|Reference| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1) (AND (|isDomain| *1 (|Reference| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1 *2)
  (AND (|isDomain| *1 (|Reference| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2 *3)
  (AND (|ofCategory| *3 (|Field|)) (|isDomain| *1 (|ReductionOfOrder| *3 *2))
       (|ofCategory| *2 (|LinearOrdinaryDifferentialOperatorCategory| *3))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| *5)) (|ofCategory| *5 (|Field|))
       (|isDomain| *2 (|Record| (|:| |eq| *3) (|:| |op| (|List| *5))))
       (|isDomain| *1 (|ReductionOfOrder| *5 *3))
       (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *5))))) 
(((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|Comparable|) (|IntegralDomain|)
                         (|ConvertibleTo| (|InputForm|))))
   (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|RecurrenceOperator| *4 *3))
   (|ofCategory| *3
                 (|Join| (|FunctionSpace| *4) (|AbelianMonoid|)
                         (|RetractableTo| (|Integer|))
                         (|RetractableTo| (|Symbol|))
                         (|PartialDifferentialRing| (|Symbol|))
                         (|CombinatorialOpsCategory|)))))) 
(((*1 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|Comparable|) (|IntegralDomain|)
                         (|ConvertibleTo| (|InputForm|))))
   (|isDomain| *2 (|NonNegativeInteger|))
   (|isDomain| *1 (|RecurrenceOperator| *3 *4))
   (|ofCategory| *4
                 (|Join| (|FunctionSpace| *3) (|AbelianMonoid|)
                         (|RetractableTo| (|Integer|))
                         (|RetractableTo| (|Symbol|))
                         (|PartialDifferentialRing| (|Symbol|))
                         (|CombinatorialOpsCategory|)))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *3
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|ConvertibleTo| (|InputForm|))))
       (|isDomain| *1 (|RecurrenceOperator| *3 *4))
       (|ofCategory| *4
                     (|Join| (|FunctionSpace| *3) (|AbelianMonoid|)
                             (|RetractableTo| (|Integer|))
                             (|RetractableTo| (|Symbol|))
                             (|PartialDifferentialRing| (|Symbol|))
                             (|CombinatorialOpsCategory|)))))) 
(((*1 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|Comparable|) (|IntegralDomain|)
                         (|ConvertibleTo| (|InputForm|))))
   (|isDomain| *1 (|RecurrenceOperator| *3 *2))
   (|ofCategory| *2
                 (|Join| (|FunctionSpace| *3) (|AbelianMonoid|)
                         (|RetractableTo| (|Integer|))
                         (|RetractableTo| (|Symbol|))
                         (|PartialDifferentialRing| (|Symbol|))
                         (|CombinatorialOpsCategory|)))))) 
(((*1 *2 *3 *4 *4 *2 *5 *6)
  (AND (|isDomain| *3 (|BasicOperator|)) (|isDomain| *5 (|List| *2))
       (|isDomain| *6 (|Stream| *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *7) (|AbelianMonoid|)
                             (|RetractableTo| (|Integer|)) (|RetractableTo| *4)
                             (|PartialDifferentialRing| *4)
                             (|CombinatorialOpsCategory|)))
       (|isDomain| *4 (|Symbol|))
       (|ofCategory| *7
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|ConvertibleTo| (|InputForm|))))
       (|isDomain| *1 (|RecurrenceOperator| *7 *2))))) 
(((*1 *2 *3 *4 *2 *5 *6)
  (AND (|isDomain| *3 (|BasicOperator|)) (|isDomain| *5 (|List| *2))
       (|isDomain| *6 (|Stream| *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *7) (|AbelianMonoid|)
                             (|RetractableTo| (|Integer|)) (|RetractableTo| *4)
                             (|PartialDifferentialRing| *4)
                             (|CombinatorialOpsCategory|)))
       (|isDomain| *4 (|Symbol|))
       (|ofCategory| *7
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|ConvertibleTo| (|InputForm|))))
       (|isDomain| *1 (|RecurrenceOperator| *7 *2))))) 
(((*1 *1 *2 *3)
  (AND
   (|isDomain| *2
               (|RightOpenIntervalRootCharacterization| (|RealClosure| *4)
                                                        (|SparseUnivariatePolynomial|
                                                         (|RealClosure| *4))))
   (|isDomain| *3 (|OutputForm|)) (|isDomain| *1 (|RealClosure| *4))
   (|ofCategory| *4 (|Join| (|OrderedRing|) (|Field|) (|RealConstant|)))))) 
(((*1 *2 *1)
  (|partial| AND
   (|isDomain| *2
               (|RightOpenIntervalRootCharacterization| (|RealClosure| *3)
                                                        (|SparseUnivariatePolynomial|
                                                         (|RealClosure| *3))))
   (|isDomain| *1 (|RealClosure| *3))
   (|ofCategory| *3 (|Join| (|OrderedRing|) (|Field|) (|RealConstant|)))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |left| (|Fraction| (|Integer|)))
                          (|:| |right| (|Fraction| (|Integer|))))))
   (|isDomain| *1 (|RealZeroPackage| *3))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *4
               (|Record| (|:| |left| (|Fraction| (|Integer|)))
                         (|:| |right| (|Fraction| (|Integer|)))))
   (|isDomain| *2
               (|List|
                (|Record| (|:| |left| (|Fraction| (|Integer|)))
                          (|:| |right| (|Fraction| (|Integer|))))))
   (|isDomain| *1 (|RealZeroPackage| *3))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Fraction| (|Integer|)))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |left| (|Fraction| (|Integer|)))
                              (|:| |right| (|Fraction| (|Integer|))))))
       (|isDomain| *1 (|RealZeroPackage| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *4
               (|Record| (|:| |left| (|Fraction| (|Integer|)))
                         (|:| |right| (|Fraction| (|Integer|)))))
   (|isDomain| *5 (|Fraction| (|Integer|)))
   (|isDomain| *2
               (|List|
                (|Record| (|:| |left| (|Fraction| (|Integer|)))
                          (|:| |right| (|Fraction| (|Integer|))))))
   (|isDomain| *1 (|RealZeroPackage| *3))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |left| (|Fraction| (|Integer|)))
                          (|:| |right| (|Fraction| (|Integer|))))))
   (|isDomain| *1 (|RealZeroPackageQ| *3))
   (|ofCategory| *3
                 (|UnivariatePolynomialCategory| (|Fraction| (|Integer|))))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *4
               (|Record| (|:| |left| (|Fraction| (|Integer|)))
                         (|:| |right| (|Fraction| (|Integer|)))))
   (|isDomain| *2
               (|List|
                (|Record| (|:| |left| (|Fraction| (|Integer|)))
                          (|:| |right| (|Fraction| (|Integer|))))))
   (|isDomain| *1 (|RealZeroPackageQ| *3))
   (|ofCategory| *3
                 (|UnivariatePolynomialCategory| (|Fraction| (|Integer|))))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Fraction| (|Integer|)))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |left| (|Fraction| (|Integer|)))
                              (|:| |right| (|Fraction| (|Integer|))))))
       (|isDomain| *1 (|RealZeroPackageQ| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))
 ((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *4
               (|Record| (|:| |left| (|Fraction| (|Integer|)))
                         (|:| |right| (|Fraction| (|Integer|)))))
   (|isDomain| *5 (|Fraction| (|Integer|)))
   (|isDomain| *2
               (|List|
                (|Record| (|:| |left| (|Fraction| (|Integer|)))
                          (|:| |right| (|Fraction| (|Integer|))))))
   (|isDomain| *1 (|RealZeroPackageQ| *3))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|List|
                (|Record| (|:| |left| (|Fraction| (|Integer|)))
                          (|:| |right| (|Fraction| (|Integer|))))))
   (|isDomain| *2 (|List| (|Fraction| (|Integer|))))
   (|isDomain| *1 (|RealZeroPackage| *4))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|Record| (|:| |left| (|Fraction| (|Integer|)))
                         (|:| |right| (|Fraction| (|Integer|)))))
   (|isDomain| *2 (|Fraction| (|Integer|)))
   (|isDomain| *1 (|RealZeroPackage| *4))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Vector| *6)) (|isDomain| *4 (|Vector| (|Integer|)))
       (|isDomain| *5 (|Integer|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *2 (|Mapping| *6))
       (|isDomain| *1 (|RandomDistributions| *6))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|List| (|Record| (|:| |value| *4) (|:| |weight| (|Integer|)))))
   (|ofCategory| *4 (|SetCategory|)) (|isDomain| *2 (|Mapping| *4))
   (|isDomain| *1 (|RandomDistributions| *4))))) 
(((*1 *2 *3 *3 *3)
  (|partial| AND (|isDomain| *3 (|Fraction| *5))
   (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
   (|ofCategory| *4
                 (|Join| (|Field|) (|CharacteristicZero|)
                         (|RetractableTo| (|Integer|))))
   (|isDomain| *2 (|List| (|Fraction| *5)))
   (|isDomain| *1 (|TranscendentalRischDESystem| *4 *5))))) 
(((*1 *2 *3 *3 *3 *4)
  (|partial| AND (|isDomain| *3 (|Fraction| *6))
   (|isDomain| *4 (|Mapping| *6 *6))
   (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
   (|ofCategory| *5
                 (|Join| (|Field|) (|CharacteristicZero|)
                         (|RetractableTo| (|Integer|))))
   (|isDomain| *2
               (|Record| (|:| |a| *6) (|:| |b| (|Fraction| *6)) (|:| |h| *6)
                         (|:| |c1| (|Fraction| *6)) (|:| |c2| (|Fraction| *6))
                         (|:| |t| *6)))
   (|isDomain| *1 (|TranscendentalRischDESystem| *5 *6))))) 
(((*1 *2 *3 *4 *2 *2 *5 *6 *7)
  (AND
   (|isDomain| *4 (|LaurentPolynomial| *6 (|SparseUnivariatePolynomial| *6)))
   (|isDomain| *7
               (|Mapping|
                (|Record| (|:| |logands| (|List| *6))
                          (|:| |basis|
                               (|List| (|Vector| (|Fraction| (|Integer|))))))
                (|List| (|Kernel| *6)) (|List| *6)))
   (|ofCategory| *6
                 (|Join| (|TranscendentalFunctionCategory|)
                         (|AlgebraicallyClosedField|) (|FunctionSpace| *8)))
   (|isDomain| *2 (|Integer|))
   (|isDomain| *3 (|SparseUnivariatePolynomial| *6))
   (|isDomain| *5 (|List| (|Kernel| *6)))
   (|ofCategory| *8
                 (|Join| (|GcdDomain|) (|Comparable|) (|CharacteristicZero|)
                         (|RetractableTo| *2) (|LinearlyExplicitOver| *2)))
   (|isDomain| *1 (|ParametricRischDE| *8 *6))))) 
(((*1 *2 *3 *4 *5 *6 *7 *8)
  (AND (|isDomain| *5 (|Symbol|))
       (|isDomain| *7
                   (|Mapping|
                    (|List|
                     (|Record| (|:| |ratpart| *3)
                               (|:| |coeffs| (|Vector| *3))))
                    (|List| (|Kernel| *3)) (|List| *3)))
       (|isDomain| *8
                   (|Mapping|
                    (|Record| (|:| |logands| (|List| *3))
                              (|:| |basis|
                                   (|List|
                                    (|Vector| (|Fraction| (|Integer|))))))
                    (|List| (|Kernel| *3)) (|List| *3)))
       (|isDomain| *4 (|List| *3)) (|isDomain| *6 (|List| (|Kernel| *3)))
       (|ofCategory| *3
                     (|Join| (|TranscendentalFunctionCategory|)
                             (|AlgebraicallyClosedField|)
                             (|FunctionSpace| *9)))
       (|ofCategory| *9
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |ratpart| *3)
                              (|:| |coeffs| (|Vector| *3)))))
       (|isDomain| *1 (|ParametricRischDE| *9 *3))))) 
(((*1 *2 *3 *4 *5 *6 *7 *8 *9)
  (AND (|isDomain| *6 (|Symbol|))
       (|isDomain| *8
                   (|Mapping|
                    (|List|
                     (|Record| (|:| |ratpart| *4)
                               (|:| |coeffs| (|Vector| *4))))
                    (|List| (|Kernel| *4)) (|List| *4)))
       (|isDomain| *9
                   (|Mapping|
                    (|Record| (|:| |logands| (|List| *4))
                              (|:| |basis|
                                   (|List|
                                    (|Vector| (|Fraction| (|Integer|))))))
                    (|List| (|Kernel| *4)) (|List| *4)))
       (|isDomain| *3 (|Integer|)) (|isDomain| *5 (|List| *4))
       (|isDomain| *7 (|List| (|Kernel| *4)))
       (|ofCategory| *4
                     (|Join| (|TranscendentalFunctionCategory|)
                             (|AlgebraicallyClosedField|)
                             (|FunctionSpace| *10)))
       (|ofCategory| *10
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|CharacteristicZero|) (|RetractableTo| *3)
                             (|LinearlyExplicitOver| *3)))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |ratpart| *4)
                              (|:| |coeffs| (|Vector| *4)))))
       (|isDomain| *1 (|ParametricRischDE| *10 *4))))
 ((*1 *2 *3 *4 *4 *5 *6 *7 *8 *9)
  (AND (|isDomain| *6 (|Symbol|))
       (|isDomain| *8
                   (|Mapping|
                    (|List|
                     (|Record| (|:| |ratpart| *4)
                               (|:| |coeffs| (|Vector| *4))))
                    (|List| (|Kernel| *4)) (|List| *4)))
       (|isDomain| *9
                   (|Mapping|
                    (|Record| (|:| |logands| (|List| *4))
                              (|:| |basis|
                                   (|List|
                                    (|Vector| (|Fraction| (|Integer|))))))
                    (|List| (|Kernel| *4)) (|List| *4)))
       (|ofCategory| *4
                     (|Join| (|TranscendentalFunctionCategory|)
                             (|AlgebraicallyClosedField|)
                             (|FunctionSpace| *10)))
       (|isDomain| *3 (|Integer|)) (|isDomain| *5 (|List| *4))
       (|isDomain| *7 (|List| (|Kernel| *4)))
       (|ofCategory| *10
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|CharacteristicZero|) (|RetractableTo| *3)
                             (|LinearlyExplicitOver| *3)))
       (|isDomain| *2
                   (|Record|
                    (|:| |particular|
                         (|Union|
                          (|Record| (|:| |ratpart| *4)
                                    (|:| |coeffs| (|Vector| *4)))
                          "failed"))
                    (|:| |basis|
                         (|List|
                          (|Record| (|:| |ratpart| *4)
                                    (|:| |coeffs| (|Vector| *4)))))))
       (|isDomain| *1 (|ParametricRischDE| *10 *4))))) 
(((*1 *2 *3 *3 *4 *5 *6)
  (|partial| AND (|isDomain| *4 (|List| *3)) (|isDomain| *5 (|Symbol|))
   (|isDomain| *6 (|List| (|Kernel| *3)))
   (|ofCategory| *3
                 (|Join| (|TranscendentalFunctionCategory|)
                         (|AlgebraicallyClosedField|) (|FunctionSpace| *7)))
   (|ofCategory| *7
                 (|Join| (|GcdDomain|) (|Comparable|) (|CharacteristicZero|)
                         (|PolynomialFactorizationExplicit|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *2 (|Record| (|:| |ratpart| *3) (|:| |coeffs| (|Vector| *3))))
   (|isDomain| *1 (|ElementaryRischDEX2| *7 *3))))) 
(((*1 *2 *3 *3 *4 *5)
  (AND (|isDomain| *4 (|Symbol|)) (|isDomain| *5 (|List| (|Kernel| *3)))
       (|ofCategory| *3
                     (|Join| (|TranscendentalFunctionCategory|)
                             (|AlgebraicallyClosedField|)
                             (|FunctionSpace| *6)))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|PolynomialFactorizationExplicit|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Record| (|:| |ans| *3) (|:| |right| *3)
                             (|:| |primpart| *3) (|:| |sol?| (|Boolean|))))
       (|isDomain| *1 (|ElementaryRischDEX2| *6 *3))))) 
(((*1 *2 *3 *4 *4 *5)
  (AND (|isDomain| *5 (|Symbol|)) (|isDomain| *3 (|Integer|))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|PolynomialFactorizationExplicit|)
                             (|RetractableTo| *3) (|LinearlyExplicitOver| *3)))
       (|isDomain| *2
                   (|Record| (|:| |ans| *4) (|:| |right| *4)
                             (|:| |primpart| *4) (|:| |sol?| (|Boolean|))))
       (|isDomain| *1 (|ElementaryRischDEX2| *6 *4))
       (|ofCategory| *4
                     (|Join| (|TranscendentalFunctionCategory|)
                             (|AlgebraicallyClosedField|)
                             (|FunctionSpace| *6)))))) 
(((*1 *2 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                         (|CharacteristicZero|) (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *1 (|ElementaryRischDEX| *3 *2))
   (|ofCategory| *2
                 (|Join| (|TranscendentalFunctionCategory|)
                         (|AlgebraicallyClosedField|)
                         (|LiouvillianFunctionCategory|)
                         (|SpecialFunctionCategory|) (|FunctionSpace| *3)))))) 
(((*1 *2 *3 *4 *4 *5)
  (AND (|isDomain| *5 (|Symbol|)) (|isDomain| *3 (|Integer|))
       (|ofCategory| *6
                     (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                             (|CharacteristicZero|) (|RetractableTo| *3)
                             (|LinearlyExplicitOver| *3)))
       (|isDomain| *2
                   (|Record| (|:| |ans| *4) (|:| |right| *4)
                             (|:| |primpart| *4) (|:| |sol?| (|Boolean|))))
       (|isDomain| *1 (|ElementaryRischDEX| *6 *4))
       (|ofCategory| *4
                     (|Join| (|TranscendentalFunctionCategory|)
                             (|AlgebraicallyClosedField|)
                             (|LiouvillianFunctionCategory|)
                             (|SpecialFunctionCategory|)
                             (|FunctionSpace| *6)))))) 
(((*1 *2 *3 *4 *4 *4 *5 *6 *7)
  (|partial| AND (|isDomain| *5 (|Symbol|))
   (|isDomain| *6
               (|Mapping|
                (|Union|
                 (|Record| (|:| |mainpart| *4)
                           (|:| |limitedlogs|
                                (|List|
                                 (|Record| (|:| |coeff| *4)
                                           (|:| |logand| *4)))))
                 "failed")
                *4 (|List| *4)))
   (|isDomain| *7
               (|Mapping|
                (|Union| (|Record| (|:| |ratpart| *4) (|:| |coeff| *4))
                         "failed")
                *4 *4))
   (|ofCategory| *4
                 (|Join| (|TranscendentalFunctionCategory|)
                         (|AlgebraicallyClosedField|) (|FunctionSpace| *8)))
   (|ofCategory| *8
                 (|Join| (|GcdDomain|) (|Comparable|) (|CharacteristicZero|)
                         (|RetractableTo| *3) (|LinearlyExplicitOver| *3)))
   (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|List| *4))
   (|isDomain| *1 (|ElementaryRischDESystem| *8 *4))))) 
(((*1 *2 *3 *3 *4)
  (AND
   (|isDomain| *4
               (|Mapping| (|SparseUnivariatePolynomial| *5)
                          (|SparseUnivariatePolynomial| *5)))
   (|isDomain| *3 (|SparseUnivariatePolynomial| *5))
   (|ofCategory| *5 (|Field|))
   (|isDomain| *2
               (|Record| (|:| |ans| (|SparseUnivariatePolynomial| *5))
                         (|:| |remainder| (|SparseUnivariatePolynomial| *5))))
   (|isDomain| *1 (|RDEaux| *5))))) 
(((*1 *2 *3 *3 *4 *5 *6)
  (AND (|isDomain| *4 (|List| (|SparseUnivariatePolynomial| *7)))
       (|isDomain| *5 (|Integer|))
       (|isDomain| *6
                   (|Mapping| (|SparseUnivariatePolynomial| *7)
                              (|SparseUnivariatePolynomial| *7)))
       (|isDomain| *3 (|SparseUnivariatePolynomial| *7))
       (|ofCategory| *7 (|Field|))
       (|isDomain| *2
                   (|Union|
                    (|List|
                     (|Record| (|:| |ans| (|SparseUnivariatePolynomial| *7))
                               (|:| |remainder|
                                    (|SparseUnivariatePolynomial| *7))))
                    (|Record|
                     (|:| |ans| (|List| (|SparseUnivariatePolynomial| *7)))
                     (|:| |acoeff| (|SparseUnivariatePolynomial| *7))
                     (|:| |eegen| (|SparseUnivariatePolynomial| *7))
                     (|:| |bpar| (|SparseUnivariatePolynomial| *7))
                     (|:| |lcpar| (|List| (|SparseUnivariatePolynomial| *7)))
                     (|:| |dpar| (|Integer|)))))
       (|isDomain| *1 (|RDEaux| *7))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|FortranExpression| *2 *3 *4))
       (|ofType| *2 (|List| (|Symbol|))) (|ofType| *3 (|List| (|Symbol|)))
       (|ofCategory| *4 (|FortranMachineTypeCategory|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|PAdicIntegerCategory| *3))
       (|isDomain| *2 (|Integer|))))
 ((*1 *1 *1) (|ofCategory| *1 (|RadicalCategory|)))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|RealClosedField|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|ofCategory| *1 (|RealClosedField|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|RealClosedField|))
       (|isDomain| *2 (|PositiveInteger|))))
 ((*1 *1 *1) (|ofCategory| *1 (|RealClosedField|)))) 
(((*1 *2 *1)
  (|partial| AND (|ofCategory| *1 (|RealClosedField|))
   (|isDomain| *2 (|OutputForm|))))) 
(((*1 *2 *1)
  (|partial| AND (|isDomain| *2 (|SparseUnivariatePolynomial| *1))
   (|ofCategory| *1 (|RealClosedField|))))) 
(((*1 *2 *1)
  (|partial| AND (|isDomain| *2 (|SparseUnivariatePolynomial| *1))
   (|ofCategory| *1 (|RealClosedField|))))) 
(((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|RealClosedField|)) (|isDomain| *2 (|OutputForm|))))) 
(((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|RealClosedField|)) (|isDomain| *2 (|OutputForm|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|Type|)) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|RecursiveAggregate| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|RecursiveAggregate| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *2 (|List| *3))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|RecursiveAggregate| *3)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *3 (|BasicType|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|RecursiveAggregate| *3)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *3 (|BasicType|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|RecursiveAggregate| *3)) (|ofCategory| *3 (|Type|))))) 
(((*1 *2 *1 *2)
  (AND (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|RecursiveAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (|partial| AND (|ofCategory| *1 (|ComplexCategory| *3))
   (|ofCategory| *3 (|CommutativeRing|))
   (|ofCategory| *3 (|IntegerNumberSystem|))
   (|isDomain| *2 (|Fraction| (|Integer|)))))
 ((*1 *2 *1)
  (|partial| AND (|isDomain| *2 (|Fraction| (|Integer|)))
   (|isDomain| *1 (|Factored| *3)) (|ofCategory| *3 (|IntegerNumberSystem|))
   (|ofCategory| *3 (|IntegralDomain|))))
 ((*1 *2 *1)
  (|partial| AND (|ofCategory| *1 (|IntegerNumberSystem|))
   (|isDomain| *2 (|Fraction| (|Integer|)))))
 ((*1 *2 *1)
  (|partial| AND (|ofCategory| *1 (|OctonionCategory| *3))
   (|ofCategory| *3 (|CommutativeRing|))
   (|ofCategory| *3 (|IntegerNumberSystem|))
   (|isDomain| *2 (|Fraction| (|Integer|)))))
 ((*1 *2 *1)
  (|partial| AND (|isDomain| *2 (|Fraction| (|Integer|)))
   (|isDomain| *1 (|OnePointCompletion| *3))
   (|ofCategory| *3 (|IntegerNumberSystem|))
   (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (|partial| AND (|isDomain| *2 (|Fraction| (|Integer|)))
   (|isDomain| *1 (|OrderedCompletion| *3))
   (|ofCategory| *3 (|IntegerNumberSystem|))
   (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (|partial| AND (|ofCategory| *1 (|QuaternionCategory| *3))
   (|ofCategory| *3 (|CommutativeRing|))
   (|ofCategory| *3 (|IntegerNumberSystem|))
   (|isDomain| *2 (|Fraction| (|Integer|)))))
 ((*1 *2 *3)
  (|partial| AND (|isDomain| *2 (|Fraction| (|Integer|)))
   (|isDomain| *1 (|RationalRetractions| *3))
   (|ofCategory| *3 (|RetractableTo| *2))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ComplexCategory| *3))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *3 (|IntegerNumberSystem|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Factored| *3))
       (|ofCategory| *3 (|IntegerNumberSystem|))
       (|ofCategory| *3 (|IntegralDomain|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|IntegerNumberSystem|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|OctonionCategory| *3))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *3 (|IntegerNumberSystem|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OnePointCompletion| *3))
       (|ofCategory| *3 (|IntegerNumberSystem|))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OrderedCompletion| *3))
       (|ofCategory| *3 (|IntegerNumberSystem|))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|QuaternionCategory| *3))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *3 (|IntegerNumberSystem|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|RationalRetractions| *3))
       (|ofCategory| *3 (|RetractableTo| (|Fraction| (|Integer|))))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ComplexCategory| *3))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *3 (|IntegerNumberSystem|))
       (|isDomain| *2 (|Fraction| (|Integer|)))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Fraction| (|Integer|))) (|isDomain| *1 (|Factored| *3))
       (|ofCategory| *3 (|IntegerNumberSystem|))
       (|ofCategory| *3 (|IntegralDomain|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|IntegerNumberSystem|))
       (|isDomain| *2 (|Fraction| (|Integer|)))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|OctonionCategory| *3))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *3 (|IntegerNumberSystem|))
       (|isDomain| *2 (|Fraction| (|Integer|)))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|OnePointCompletion| *3))
       (|ofCategory| *3 (|IntegerNumberSystem|))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|OrderedCompletion| *3))
       (|ofCategory| *3 (|IntegerNumberSystem|))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|QuaternionCategory| *3))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *3 (|IntegerNumberSystem|))
       (|isDomain| *2 (|Fraction| (|Integer|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|RationalRetractions| *3))
       (|ofCategory| *3 (|RetractableTo| *2))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|FiniteFieldCategory|))
       (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|DistinctDegreeFactorize| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| (|NonNegativeInteger|)))
       (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|List| (|NonNegativeInteger|)))
       (|isDomain| *5 (|NonNegativeInteger|)) (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3 *4 *4)
  (AND (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|Factored| *3)) (|isDomain| *1 (|RationalFactorize| *3))
       (|ofCategory| *3
                     (|UnivariatePolynomialCategory|
                      (|Fraction| (|Integer|))))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|RandomNumberSource|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|RandomNumberSource|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|RandomNumberSource|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|RandomNumberSource|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Integer|))) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|Any|)) (|isDomain| *1 (|RadixUtilities|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Integer|)))
       (|isDomain| *1 (|RadixExpansion| *3)) (|ofType| *3 (|Integer|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Stream| (|Integer|)))
       (|isDomain| *1 (|RadixExpansion| *3)) (|ofType| *3 (|Integer|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Integer|)))
       (|isDomain| *1 (|RadixExpansion| *3)) (|ofType| *3 (|Integer|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Integer|)))
       (|isDomain| *1 (|RadixExpansion| *3)) (|ofType| *3 (|Integer|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Integer|)))
       (|isDomain| *1 (|RadixExpansion| *3)) (|ofType| *3 (|Integer|))))) 
(((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|List| (|Integer|)))
       (|isDomain| *1 (|RadixExpansion| *3)) (|ofType| *3 (|Integer|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Factored| *5)) (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2
                   (|Record| (|:| |exponent| (|NonNegativeInteger|))
                             (|:| |coef| *5) (|:| |radicand| (|List| *5))))
       (|isDomain| *1 (|FactoredFunctions| *5))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|RadicalCategory|)) (|isDomain| *2 (|Integer|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|Queue| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|OctonionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|QuaternionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|OctonionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|QuaternionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|OctonionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|QuaternionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *1 *2 *2 *2 *2)
  (AND (|ofCategory| *1 (|QuaternionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *2 *1)
  (AND (|ofCategory| *1 (|QueueAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|QueueAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|QueueAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|QueueAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|QueueAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|SquareMatrix| *3 *4)) (|ofType| *3 (|PositiveInteger|))
       (|ofCategory| *4 (|Field|)) (|isDomain| *1 (|QuadraticForm| *3 *4))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|SparseMultivariatePolynomial| (|Integer|)
                                               (|Kernel| (|AlgebraicNumber|))))
   (|isDomain| *1 (|AlgebraicNumber|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|EuclideanDomain|))
       (|ofCategory| *4 (|QuotientFieldCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *2 (|Vector| *6))
       (|isDomain| *1 (|FractionalIdeal| *3 *4 *5 *6))
       (|ofCategory| *6
                     (|Join| (|FramedAlgebra| *4 *5) (|RetractableTo| *4)))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|Ring|)) (|ofCategory| *3 (|Comparable|))
       (|isDomain| *2 (|SparseMultivariatePolynomial| *3 (|Kernel| *1)))
       (|ofCategory| *1 (|FunctionSpace| *3))))
 ((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|SparseMultivariatePolynomial| (|Integer|)
                                               (|Kernel|
                                                (|InnerAlgebraicNumber|))))
   (|isDomain| *1 (|InnerAlgebraicNumber|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|Algebra| *3)) (|isDomain| *1 (|LocalAlgebra| *2 *3))
       (|ofCategory| *3 (|CommutativeRing|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|Module| *3)) (|isDomain| *1 (|Localize| *2 *3))
       (|ofCategory| *3 (|CommutativeRing|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|QuotientFieldCategory| *2))
       (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|SparseMultivariatePolynomial| (|Integer|)
                                               (|Kernel| (|AlgebraicNumber|))))
   (|isDomain| *1 (|AlgebraicNumber|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|QuotientFieldCategory| *2))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *2 (|EuclideanDomain|))
       (|isDomain| *1 (|FractionalIdeal| *2 *3 *4 *5))
       (|ofCategory| *5
                     (|Join| (|FramedAlgebra| *3 *4) (|RetractableTo| *3)))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Comparable|))
       (|isDomain| *2 (|SparseMultivariatePolynomial| *3 (|Kernel| *1)))
       (|ofCategory| *1 (|FunctionSpace| *3))))
 ((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|SparseMultivariatePolynomial| (|Integer|)
                                               (|Kernel|
                                                (|InnerAlgebraicNumber|))))
   (|isDomain| *1 (|InnerAlgebraicNumber|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|LocalAlgebra| *3 *2))
       (|ofCategory| *3 (|Algebra| *2))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|CommutativeRing|)) (|isDomain| *1 (|Localize| *3 *2))
       (|ofCategory| *3 (|Module| *2))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|QuotientFieldCategory| *2))
       (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|FunctionSpace| *2)) (|ofCategory| *2 (|Comparable|))
       (|ofCategory| *2 (|Ring|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|JetBundleFunctionCategory| *2))
       (|ofCategory| *2 (|JetBundleCategory|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|QuotientFieldCategory| *2))
       (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|FunctionSpace| *2)) (|ofCategory| *2 (|Comparable|))
       (|ofCategory| *2 (|IntegralDomain|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|JetBundleFunctionCategory| *2))
       (|ofCategory| *2 (|JetBundleCategory|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|QuotientFieldCategory| *2))
       (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *2 *2)
  (AND
   (|isDomain| *2
               (|QuasiAlgebraicSet| (|Fraction| (|Integer|))
                                    (|OrderedVariableList| *3)
                                    (|DirectProduct| (|#| *3)
                                                     (|NonNegativeInteger|))
                                    (|DistributedMultivariatePolynomial| *3
                                                                         (|Fraction|
                                                                          (|Integer|)))))
   (|ofType| *3 (|List| (|Symbol|)))
   (|isDomain| *1 (|QuasiAlgebraicSet2| *3))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *3))
       (|ofCategory| *3 (|PolynomialCategory| *4 *6 *5))
       (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *1 (|QuasiAlgebraicSet| *4 *5 *6 *3))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Union| (|Boolean|) "failed"))
       (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|isDomain| *1 (|QuasiAlgebraicSet| *3 *4 *5 *6))
       (|ofCategory| *6 (|PolynomialCategory| *3 *5 *4))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|List| *6))
       (|isDomain| *1 (|QuasiAlgebraicSet| *3 *4 *5 *6))
       (|ofCategory| *6 (|PolynomialCategory| *3 *5 *4))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *2 (|PolynomialCategory| *3 *5 *4))
       (|isDomain| *1 (|QuasiAlgebraicSet| *3 *4 *5 *2))
       (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *2 (|GcdDomain|)) (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|isDomain| *1 (|QuasiAlgebraicSet| *2 *3 *4 *5))
       (|ofCategory| *5 (|PolynomialCategory| *2 *4 *3))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *1 (|PAdicWildFunctionFieldIntegralBasis| *4 *2 *3 *5))
       (|ofCategory| *4 (|FiniteFieldCategory|))
       (|ofCategory| *5 (|MonogenicAlgebra| *2 *3))))) 
(((*1 *2 *2 *3)
  (AND (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *3
                     (|Join| (|OrderedSet|)
                             (CATEGORY |domain|
                              (SIGNATURE |convert| ((|Symbol|) $)))))
       (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *1 (|MPolyCatRationalFunctionFactorizer| *4 *3 *5 *2))
       (|ofCategory| *2
                     (|PolynomialCategory| (|Fraction| (|Polynomial| *5)) *4
                                           *3))))
 ((*1 *2 *2 *3)
  (AND (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *3
                     (|Join| (|OrderedSet|)
                             (CATEGORY |domain|
                              (SIGNATURE |convert| ((|Symbol|) $))
                              (SIGNATURE |variable|
                               ((|Union| $ #1="failed") (|Symbol|))))))
       (|isDomain| *1 (|PushVariables| *4 *5 *3 *2))
       (|ofCategory| *2 (|PolynomialCategory| (|Polynomial| *4) *5 *3))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| *6))
       (|ofCategory| *6
                     (|Join| (|OrderedSet|)
                             (CATEGORY |domain|
                              (SIGNATURE |convert| ((|Symbol|) $))
                              (SIGNATURE |variable|
                               ((|Union| $ #1#) (|Symbol|))))))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|isDomain| *1 (|PushVariables| *4 *5 *6 *2))
       (|ofCategory| *2 (|PolynomialCategory| (|Polynomial| *4) *5 *6))))) 
(((*1 *2 *2 *3)
  (AND (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *3
                     (|Join| (|OrderedSet|)
                             (CATEGORY |domain|
                              (SIGNATURE |convert| ((|Symbol|) $)))))
       (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *1 (|MPolyCatRationalFunctionFactorizer| *4 *3 *5 *2))
       (|ofCategory| *2
                     (|PolynomialCategory| (|Fraction| (|Polynomial| *5)) *4
                                           *3))))
 ((*1 *2 *2 *3)
  (AND (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *3
                     (|Join| (|OrderedSet|)
                             (CATEGORY |domain|
                              (SIGNATURE |convert| ((|Symbol|) $))
                              (SIGNATURE |variable|
                               ((|Union| $ #1="failed") (|Symbol|))))))
       (|isDomain| *1 (|PushVariables| *4 *5 *3 *2))
       (|ofCategory| *2 (|PolynomialCategory| (|Polynomial| *4) *5 *3))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| *6))
       (|ofCategory| *6
                     (|Join| (|OrderedSet|)
                             (CATEGORY |domain|
                              (SIGNATURE |convert| ((|Symbol|) $))
                              (SIGNATURE |variable|
                               ((|Union| $ #1#) (|Symbol|))))))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|isDomain| *1 (|PushVariables| *4 *5 *6 *2))
       (|ofCategory| *2 (|PolynomialCategory| (|Polynomial| *4) *5 *6))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2 *3)
  (|partial| AND (|isDomain| *3 (|NonNegativeInteger|))
   (|ofCategory| *1 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Palette|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Point| *2)) (|isDomain| *1 (|PointPackage| *2))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Color|))))
 ((*1 *2 *1) (AND (|isDomain| *2 (|Color|)) (|isDomain| *1 (|Palette|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Point| *2)) (|isDomain| *1 (|PointPackage| *2))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Color|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Point| *2)) (|isDomain| *1 (|PointPackage| *2))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Point| *2)) (|isDomain| *1 (|PointPackage| *2))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Point| *2)) (|isDomain| *1 (|PointPackage| *2))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Point| *2)) (|isDomain| *1 (|PointPackage| *2))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Point| *2)) (|isDomain| *1 (|PointPackage| *2))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Point| *2)) (|isDomain| *1 (|PointPackage| *2))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Point| *2)) (|isDomain| *1 (|PointPackage| *2))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *5)) (|isDomain| *4 (|List| (|Vector| *5)))
       (|ofCategory| *5 (|Field|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| C (|Matrix| *5))
                              (|:| |lg| (|List| (|Vector| *5))))))
       (|isDomain| *1 (|PseudoLinearNormalForm| *5))))) 
(((*1 *1 *2 *2 *3)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *1 (|MachineFloat|))))
 ((*1 *2 *2 *2 *3 *4)
  (AND (|isDomain| *2 (|Matrix| *5)) (|isDomain| *3 (|Automorphism| *5))
       (|isDomain| *4 (|Mapping| *5 *5)) (|ofCategory| *5 (|Field|))
       (|isDomain| *1 (|PseudoLinearNormalForm| *5))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| *2))
       (|ofCategory| *2 (|PolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|Field|)) (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *1 (|GroebnerPackage| *4 *5 *6 *2))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Matrix| *6)) (|isDomain| *4 (|Automorphism| *6))
       (|isDomain| *5 (|Mapping| *6 *6)) (|ofCategory| *6 (|Field|))
       (|isDomain| *2
                   (|Record| (|:| R (|Matrix| *6)) (|:| A (|Matrix| *6))
                             (|:| |Ainv| (|Matrix| *6))))
       (|isDomain| *1 (|PseudoLinearNormalForm| *6))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|CharacteristicZero|))
       (|ofCategory| *3 (|PolynomialFactorizationExplicit|))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *3 *4 *5 *6))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|CharacteristicZero|))
       (|ofCategory| *3 (|PolynomialFactorizationExplicit|))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *3 *4 *5 *6))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|CharacteristicZero|))
       (|ofCategory| *3 (|PolynomialFactorizationExplicit|))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *3 *4 *5 *6))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *3 *4 *5 *6))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *3 *4 *5 *6))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *3 *4 *5 *6))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *3 *4 *5 *6))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|List| *7)) (|isDomain| *3 (|Boolean|))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *7))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *3))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))))) 
(((*1 *2 *2 *3 *4)
  (AND (|isDomain| *2 (|List| *8))
       (|isDomain| *3 (|Mapping| (|Boolean|) *8 *8))
       (|isDomain| *4 (|Mapping| *8 *8 *8))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *5 *6 *7 *8))))) 
(((*1 *2 *2 *3 *4 *5)
  (AND (|isDomain| *2 (|List| *9)) (|isDomain| *3 (|Mapping| (|Boolean|) *9))
       (|isDomain| *4 (|Mapping| (|Boolean|) *9 *9))
       (|isDomain| *5 (|Mapping| *9 *9 *9))
       (|ofCategory| *9 (|RecursivePolynomialCategory| *6 *7 *8))
       (|ofCategory| *6 (|IntegralDomain|))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *8 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *6 *7 *8 *9))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *3 *4 *5 *6))))) 
(((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|List| *7))
   (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
   (|ofCategory| *4 (|IntegralDomain|))
   (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *6 (|OrderedSet|))
   (|isDomain| *2
               (|Record| (|:| |bas| (|GeneralTriangularSet| *4 *5 *6 *7))
                         (|:| |top| (|List| *7))))
   (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *7))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *3 *4 *5 *6))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| *2))
       (|ofCategory| *2 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *2))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *3 *4 *5 *6))))
 ((*1 *2 *2 *2 *3)
  (AND (|isDomain| *2 (|List| *7)) (|isDomain| *3 (|Boolean|))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *7))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *2
                   (|Record| (|:| |goodPols| (|List| *7))
                             (|:| |badPols| (|List| *7))))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *7))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *3))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *2
                   (|Record| (|:| |goodPols| (|List| *7))
                             (|:| |badPols| (|List| *7))))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *7))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *3))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *2
                   (|Record| (|:| |goodPols| (|List| *7))
                             (|:| |badPols| (|List| *7))))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *7))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *3))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *2
                   (|Record| (|:| |goodPols| (|List| *7))
                             (|:| |badPols| (|List| *7))))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *7))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Mapping| (|Boolean|) *8)))
       (|isDomain| *4 (|List| *8))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *2
                   (|Record| (|:| |goodPols| (|List| *8))
                             (|:| |badPols| (|List| *8))))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *5 *6 *7 *8))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Mapping| (|Boolean|) *8)))
       (|isDomain| *4 (|List| *8))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *2
                   (|Record| (|:| |goodPols| (|List| *8))
                             (|:| |badPols| (|List| *8))))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *5 *6 *7 *8))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *8)) (|isDomain| *4 (|List| *8))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *2
                   (|Record| (|:| |goodPols| (|List| *8))
                             (|:| |badPols| (|List| *8))))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *5 *6 *7 *8))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *7))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| (|List| *8))) (|isDomain| *3 (|List| *8))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *5 *6 *7 *8))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *7))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *3 *4 *5 *6))))
 ((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *3))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|List| *3))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *3))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *3 *4 *5 *6))))
 ((*1 *2 *2 *2 *3)
  (AND (|isDomain| *3 (|Mapping| (|List| *7) (|List| *7)))
       (|isDomain| *2 (|List| *7))
       (|ofCategory| *7 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *7))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *4 *5 *6 *3))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialSetUtilitiesPackage| *3 *4 *5 *6))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|PolynomialSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *2 (|List| *5))))) 
(((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|PolynomialSetCategory| *4 *5 *3 *6))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *4 *5 *3))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|PolynomialSetCategory| *3 *4 *2 *5))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *2 (|OrderedSet|))
       (|ofCategory| *5 (|RecursivePolynomialCategory| *3 *4 *2))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *2 (|JetBundleCategory|))
       (|isDomain| *1 (|JetLazyFunction| *2 *3))
       (|ofCategory| *3 (|JetBundleFunctionCategory| *2))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|PolynomialSetCategory| *3 *4 *2 *5))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *2 (|OrderedSet|))
       (|ofCategory| *5 (|RecursivePolynomialCategory| *3 *4 *2))))) 
(((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|PolynomialSetCategory| *3 *4 *2 *5))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *2 (|OrderedSet|))
       (|ofCategory| *5 (|RecursivePolynomialCategory| *3 *4 *2))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|PolynomialSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|PolynomialSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|PolynomialSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|PolynomialSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|PolynomialSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|PolynomialSetCategory| *4 *5 *6 *3))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|Record| (|:| |num| *3) (|:| |den| *4)))))) 
(((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|PolynomialSetCategory| *4 *5 *6 *3))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2
                   (|Record| (|:| |rnum| *4) (|:| |polnum| *3)
                             (|:| |den| *4)))))) 
(((*1 *2 *2 *1)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *1 (|PolynomialSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|IntegralDomain|))))) 
(((*1 *2 *2 *1)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *1 (|PolynomialSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|IntegralDomain|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|PolynomialSetCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|PlottablePlaneCurveCategory|))
       (|isDomain| *2 (|List| (|List| (|Point| (|DoubleFloat|)))))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|PlottableSpaceCurveCategory|))
       (|isDomain| *2 (|List| (|List| (|Point| (|DoubleFloat|)))))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|PlottablePlaneCurveCategory|))
       (|isDomain| *2 (|Segment| (|DoubleFloat|)))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|PlottableSpaceCurveCategory|))
       (|isDomain| *2 (|Segment| (|DoubleFloat|)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|PlottablePlaneCurveCategory|))
       (|isDomain| *2 (|Segment| (|DoubleFloat|)))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|PlottableSpaceCurveCategory|))
       (|isDomain| *2 (|Segment| (|DoubleFloat|)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|PlottableSpaceCurveCategory|))
       (|isDomain| *2 (|Segment| (|DoubleFloat|)))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|InnerTaylorSeries| *3))
       (|ofCategory| *3 (|Ring|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|PowerSeriesCategory| *3 *4 *5))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoid|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|JetDifferentialEquation| *4 *5))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|ofCategory| *5 (|JetBundleFunctionCategory| *4))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|CartanKuranishi| *4 *5))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|ContinuedFraction| *2))
       (|ofCategory| *2 (|EuclideanDomain|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|SymmetricPolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|CycleIndicators|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|LazyStreamAggregate| *2))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *1) (|ofCategory| *1 (|PAdicIntegerCategory| *2)))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|PowerSeriesCategory| *2 *3 *4))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedAbelianMonoid|))
       (|ofCategory| *4 (|OrderedSet|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *1 (|IntegerCombinatoricFunctions| *2))
       (|ofCategory| *2 (|IntegerNumberSystem|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Integer|))) (|isDomain| *1 (|Partition|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|List| (|List| (|Integer|))))
       (|isDomain| *1 (|Partition|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Partition|))))) 
(((*1 *2 *2 *2 *2 *3)
  (AND (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *1 (|PseudoRemainderSequence| *3 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Record| (|:| |quotient| *1) (|:| |remainder| *1)))
       (|ofCategory| *1 (|EuclideanDomain|))))
 ((*1 *2 *1 *1)
  (|partial| AND
   (|isDomain| *2
               (|Record| (|:| |lm| (|FreeMonoid| *3))
                         (|:| |rm| (|FreeMonoid| *3))))
   (|isDomain| *1 (|FreeMonoid| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |quotient| (|NonNegativeInteger|))
                         (|:| |remainder| (|NonNegativeInteger|))))
   (|isDomain| *1 (|NonNegativeInteger|))))
 ((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|Record| (|:| |quotient| *3) (|:| |remainder| *3)))
       (|isDomain| *1 (|PseudoRemainderSequence| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|Record| (|:| |coef2| *3) (|:| |resultantReduit| *4)))
       (|isDomain| *1 (|PseudoRemainderSequence| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2
                   (|Record| (|:| |coef1| *3) (|:| |coef2| *3)
                             (|:| |resultantReduit| *4)))
       (|isDomain| *1 (|PseudoRemainderSequence| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *2 (|IntegralDomain|)) (|ofCategory| *2 (|GcdDomain|))
       (|isDomain| *1 (|PseudoRemainderSequence| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|PseudoRemainderSequence| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|PseudoRemainderSequence| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|Record| (|:| |coef2| *3) (|:| |discriminant| *4)))
       (|isDomain| *1 (|PseudoRemainderSequence| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2
                   (|Record| (|:| |coef1| *3) (|:| |coef2| *3)
                             (|:| |discriminant| *4)))
       (|isDomain| *1 (|PseudoRemainderSequence| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|Record| (|:| |coef1| *3) (|:| |gcd| *3)))
       (|isDomain| *1 (|PseudoRemainderSequence| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|Record| (|:| |coef2| *3) (|:| |gcd| *3)))
       (|isDomain| *1 (|PseudoRemainderSequence| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2
                   (|Record| (|:| |coef1| *3) (|:| |coef2| *3) (|:| |gcd| *3)))
       (|isDomain| *1 (|PseudoRemainderSequence| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|Record| (|:| |coef2| *3) (|:| |subResultant| *3)))
       (|isDomain| *1 (|PseudoRemainderSequence| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2
                   (|Record| (|:| |coef1| *3) (|:| |coef2| *3)
                             (|:| |subResultant| *3)))
       (|isDomain| *1 (|PseudoRemainderSequence| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3 *4)
  (AND (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2 (|Record| (|:| |coef2| *3) (|:| |subResultant| *3)))
       (|isDomain| *1 (|PseudoRemainderSequence| *5 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))))) 
(((*1 *2 *3 *3 *4)
  (AND (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2
                   (|Record| (|:| |coef1| *3) (|:| |coef2| *3)
                             (|:| |subResultant| *3)))
       (|isDomain| *1 (|PseudoRemainderSequence| *5 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))))) 
(((*1 *2 *2 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *1 (|PseudoRemainderSequence| *4 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3 *4)
  (AND (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2 (|Record| (|:| |coef2| *3) (|:| |subResultant| *3)))
       (|isDomain| *1 (|PseudoRemainderSequence| *5 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))))) 
(((*1 *2 *3 *3 *4)
  (AND (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2
                   (|Record| (|:| |coef1| *3) (|:| |coef2| *3)
                             (|:| |subResultant| *3)))
       (|isDomain| *1 (|PseudoRemainderSequence| *5 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))))) 
(((*1 *2 *2 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *1 (|PseudoRemainderSequence| *4 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|Record| (|:| |coef1| *3) (|:| |resultant| *4)))
       (|isDomain| *1 (|PseudoRemainderSequence| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|Record| (|:| |coef2| *3) (|:| |resultant| *4)))
       (|isDomain| *1 (|PseudoRemainderSequence| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2
                   (|Record| (|:| |coef1| *3) (|:| |coef2| *3)
                             (|:| |resultant| *4)))
       (|isDomain| *1 (|PseudoRemainderSequence| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|Join| (|Field|) (|RetractableTo| (|Fraction| *2))))
       (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|BoundIntegerRoots| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| *4 (|Join| (|IntegralDomain|) (|LinearlyExplicitOver| *2)))
   (|isDomain| *2 (|Integer|))
   (|isDomain| *1 (|PolynomialRationalRoots| *4 *3))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Kernel| *3)) (|ofCategory| *3 (|FunctionSpace| *5))
       (|ofCategory| *5
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|FunctionSpaceRationalRoots| *5 *3))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|IntegralDomain|)
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *2 (|List| (|Fraction| (|Integer|))))
   (|isDomain| *1 (|PolynomialRationalRoots| *4 *3))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|ExtensibleLinearAggregate| *2))
       (|ofCategory| *2 (|Type|)) (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *2 *1 *1)
  (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3 *3))
       (|ofCategory| *1 (|ExtensibleLinearAggregate| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|PriorityQueueAggregate| *2))
       (|ofCategory| *2 (|OrderedSet|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OutputForm|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|PrintPackage|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|IntegerPrimesPackage| *3))
       (|ofCategory| *3 (|IntegerNumberSystem|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *1 (|IntegerPrimesPackage| *2))
       (|ofCategory| *2 (|IntegerNumberSystem|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *1 (|IntegerPrimesPackage| *2))
       (|ofCategory| *2 (|IntegerNumberSystem|))))) 
(((*1 *1) (|ofCategory| *1 (|FiniteFieldCategory|)))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *5)) (|ofCategory| *5 (|FunctionSpace| *4))
       (|ofCategory| *4
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|CharacteristicZero|)))
       (|isDomain| *2
                   (|Record| (|:| |primelt| *5)
                             (|:| |poly|
                                  (|List| (|SparseUnivariatePolynomial| *5)))
                             (|:| |prim| (|SparseUnivariatePolynomial| *5))))
       (|isDomain| *1 (|FunctionSpacePrimitiveElement| *4 *5))))
 ((*1 *2 *3 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|IntegralDomain|) (|Comparable|)
                         (|CharacteristicZero|)))
   (|isDomain| *2
               (|Record| (|:| |primelt| *3)
                         (|:| |pol1| (|SparseUnivariatePolynomial| *3))
                         (|:| |pol2| (|SparseUnivariatePolynomial| *3))
                         (|:| |prim| (|SparseUnivariatePolynomial| *3))))
   (|isDomain| *1 (|FunctionSpacePrimitiveElement| *4 *3))
   (|ofCategory| *3 (|AlgebraicallyClosedField|))
   (|ofCategory| *3 (|FunctionSpace| *4))))
 ((*1 *2 *3 *4 *3 *4)
  (AND (|isDomain| *3 (|Polynomial| *5)) (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5 (|Join| (|Field|) (|CharacteristicZero|)))
       (|isDomain| *2
                   (|Record| (|:| |coef1| (|Integer|))
                             (|:| |coef2| (|Integer|))
                             (|:| |prim| (|SparseUnivariatePolynomial| *5))))
       (|isDomain| *1 (|PrimitiveElement| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Polynomial| *5)))
       (|isDomain| *4 (|List| (|Symbol|)))
       (|ofCategory| *5 (|Join| (|Field|) (|CharacteristicZero|)))
       (|isDomain| *2
                   (|Record| (|:| |coef| (|List| (|Integer|)))
                             (|:| |poly|
                                  (|List| (|SparseUnivariatePolynomial| *5)))
                             (|:| |prim| (|SparseUnivariatePolynomial| *5))))
       (|isDomain| *1 (|PrimitiveElement| *5))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|List| (|Polynomial| *6)))
       (|isDomain| *4 (|List| (|Symbol|))) (|isDomain| *5 (|Symbol|))
       (|ofCategory| *6 (|Join| (|Field|) (|CharacteristicZero|)))
       (|isDomain| *2
                   (|Record| (|:| |coef| (|List| (|Integer|)))
                             (|:| |poly|
                                  (|List| (|SparseUnivariatePolynomial| *6)))
                             (|:| |prim| (|SparseUnivariatePolynomial| *6))))
       (|isDomain| *1 (|PrimitiveElement| *6))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *1 (|IntegrationResult| *2))
       (|ofCategory| *2 (|RetractableTo| *3)) (|ofCategory| *2 (|Field|))))
 ((*1 *1 *2 *2)
  (AND (|isDomain| *1 (|IntegrationResult| *2)) (|ofCategory| *2 (|Field|))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|LiouvillianFunction| *4 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *4) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|SegmentBinding| *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *4) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|LiouvillianFunction| *4 *2))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|PrimitiveFunctionCategory|))
       (|isDomain| *2 (|Symbol|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|SegmentBinding| *1))
       (|ofCategory| *1 (|PrimitiveFunctionCategory|))))) 
(((*1 *2 *3 *3 *4 *5 *5)
  (AND
   (|isDomain| *4
               (|List|
                (|SparseMultivariatePolynomial| (|Integer|) (|Symbol|))))
   (|isDomain| *5 (|List| (|Symbol|)))
   (|isDomain| *3 (|SparseMultivariatePolynomial| (|Integer|) (|Symbol|)))
   (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|PrimGCD|))))) 
(((*1 *2 *2 *3 *4 *4)
  (AND
   (|isDomain| *3
               (|List|
                (|SparseMultivariatePolynomial| (|Integer|) (|Symbol|))))
   (|isDomain| *4 (|List| (|Symbol|)))
   (|isDomain| *2 (|SparseMultivariatePolynomial| (|Integer|) (|Symbol|)))
   (|isDomain| *1 (|PrimGCD|))))) 
(((*1 *2 *2 *2 *3 *4)
  (AND (|isDomain| *2 (|SparseMultivariatePolynomial| (|Integer|) (|Symbol|)))
       (|isDomain| *3 (|List| (|Symbol|))) (|isDomain| *4 (|Symbol|))
       (|isDomain| *1 (|PrimGCD|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|SparseMultivariatePolynomial| (|Integer|) (|Symbol|)))
       (|isDomain| *4 (|List| (|Symbol|)))
       (|isDomain| *2
                   (|List|
                    (|SparseMultivariatePolynomial| (|Integer|) (|Symbol|))))
       (|isDomain| *1 (|PrimGCD|))))) 
(((*1 *2 *3 *4 *2)
  (AND
   (|isDomain| *2
               (|List|
                (|SparseMultivariatePolynomial| (|Integer|) (|Symbol|))))
   (|isDomain| *3 (|SparseMultivariatePolynomial| (|Integer|) (|Symbol|)))
   (|isDomain| *4 (|List| (|Symbol|))) (|isDomain| *1 (|PrimGCD|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|SparseMultivariatePolynomial| (|Integer|) (|Symbol|)))
       (|isDomain| *4 (|Symbol|))
       (|isDomain| *2
                   (|Record|
                    (|:| |lczlc|
                         (|SparseMultivariatePolynomial| (|Integer|)
                                                         (|Symbol|)))
                    (|:| |k| (|Integer|))))
       (|isDomain| *1 (|PrimGCD|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|SparseMultivariatePolynomial| (|Integer|) (|Symbol|)))
       (|isDomain| *4 (|List| (|Symbol|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |lcx0lc|
                         (|SparseMultivariatePolynomial| (|Integer|)
                                                         (|Symbol|)))
                    (|:| |lcx0m|
                         (|SparseMultivariatePolynomial| (|Integer|)
                                                         (|Symbol|)))))
       (|isDomain| *1 (|PrimGCD|))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *1 (|Preorder| *4))
       (|ofCategory| *4 (|SetCategory|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *4 (|PositiveInteger|))
   (|ofCategory| *5 (|IntegralDomain|)) (|isDomain| *2 (|Matrix| *5))
   (|isDomain| *1 (|PrecomputedAssociatedEquations| *5 *3))
   (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|FiniteBiCPO| *4)) (|isDomain| *1 (|PosetFactory| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|FiniteBiCPO| *4)) (|isDomain| *1 (|PosetFactory| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|FiniteBiCPO| *4)) (|isDomain| *1 (|PosetFactory| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|FiniteBiCPO| *4)) (|isDomain| *1 (|PosetFactory| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|FiniteBiCPO| *4)) (|isDomain| *1 (|PosetFactory| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|FiniteBiCPO| *4)) (|isDomain| *1 (|PosetFactory| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|FiniteBiCPO| (|List| *4)))
       (|isDomain| *1 (|PosetFactory| *4))))) 
(((*1 *1 *1 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |value| *3) (|:| |posX| (|NonNegativeInteger|))
                         (|:| |posY| (|NonNegativeInteger|))))
   (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|FiniteGraph| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|Poset| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4))
       (|isDomain| *3 (|List| (|List| (|Boolean|))))
       (|ofCategory| *4 (|SetCategory|)) (|isDomain| *1 (|FiniteBiCPO| *4))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4))
       (|isDomain| *3 (|List| (|List| (|Boolean|))))
       (|ofCategory| *4 (|SetCategory|)) (|isDomain| *1 (|FiniteCoDcpo| *4))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4))
       (|isDomain| *3 (|List| (|List| (|Boolean|))))
       (|ofCategory| *4 (|SetCategory|)) (|isDomain| *1 (|FiniteDcpo| *4))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4))
       (|isDomain| *3 (|Mapping| (|Boolean|) *4 *4))
       (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *1 (|Poset| *4))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4))
       (|isDomain| *3 (|List| (|List| (|Boolean|))))
       (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *1 (|Poset| *4))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|Poset| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|List| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|Poset| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|List| (|List| (|Boolean|))))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *1 (|Poset| *4))
       (|ofCategory| *4 (|SetCategory|)) (|isDomain| *2 (|Void|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| (|List| (|Boolean|))))
       (|ofCategory| *1 (|Poset| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|Void|))))) 
(((*1 *1 *1 *2 *3 *3)
  (AND (|isDomain| *2 (|String|)) (|ofCategory| *1 (|FiniteGraph| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *1 *2 *3 *3 *4)
  (AND (|isDomain| *2 (|String|))
       (|isDomain| *4 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *1 (|FiniteGraph| *5)) (|ofCategory| *5 (|SetCategory|))
       (|isDomain| *3 (|NonNegativeInteger|))))
 ((*1 *1 *1 *2 *3 *3)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))))
 ((*1 *1 *1 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |name| (|String|))
                         (|:| |arrType| (|NonNegativeInteger|))
                         (|:| |fromOb| (|NonNegativeInteger|))
                         (|:| |toOb| (|NonNegativeInteger|))
                         (|:| |xOffset| (|Integer|))
                         (|:| |yOffset| (|Integer|))
                         (|:| |map| (|List| (|NonNegativeInteger|)))))
   (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|ofCategory| *1 (|Poset| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|Poset| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *1 *2)
  (AND (|ofCategory| *1 (|Poset| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|Boolean|)))
 ((*1 *1 *1 *1) (|isDomain| *1 (|ILogic|)))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *1 (|Poset| *4))
       (|ofCategory| *4 (|SetCategory|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *3)
  (|partial| AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
   (|ofCategory| *1 (|Poset| *4)) (|ofCategory| *4 (|SetCategory|))
   (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1 *2 *2)
  (|partial| AND (|isDomain| *2 (|NonNegativeInteger|))
   (|ofCategory| *1 (|Poset| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1 *3)
  (|partial| AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
   (|ofCategory| *1 (|Poset| *4)) (|ofCategory| *4 (|SetCategory|))
   (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1 *2 *2)
  (|partial| AND (|isDomain| *2 (|NonNegativeInteger|))
   (|ofCategory| *1 (|Poset| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1 *3)
  (|partial| AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
   (|ofCategory| *1 (|Poset| *4)) (|ofCategory| *4 (|SetCategory|))
   (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *1 *3)
  (|partial| AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
   (|ofCategory| *1 (|Poset| *4)) (|ofCategory| *4 (|SetCategory|))
   (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|Poset| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|Poset| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *1 (|Poset| *2))
       (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|Poset| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|Poset| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|Poset| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|Poset| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|Poset| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|Poset| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *2 *2 *2 *2)
  (AND (|isDomain| *1 (|MoebiusTransform| *2)) (|ofCategory| *2 (|Field|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|Poset| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|IncidenceAlgebra| (|Integer|) *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|Poset| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|IncidenceAlgebra| (|Integer|) *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|Poset| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|IncidenceAlgebra| (|Integer|) *3))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|SetCategory|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FiniteGraph&| *3 *4))
       (|ofCategory| *3 (|FiniteGraph| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|SetCategory|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|Poset&| *3 *4)) (|ofCategory| *3 (|Poset| *4))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|FiniteGraph&| *3 *4))
       (|ofCategory| *3 (|FiniteGraph| *4))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|Poset&| *3 *4)) (|ofCategory| *3 (|Poset| *4))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|FiniteGraph&| *3 *4))
       (|ofCategory| *3 (|FiniteGraph| *4))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|Poset&| *3 *4)) (|ofCategory| *3 (|Poset| *4))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|FiniteGraph&| *3 *4))
       (|ofCategory| *3 (|FiniteGraph| *4))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|Poset&| *3 *4)) (|ofCategory| *3 (|Poset| *4))))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|PermutationGroup| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|PartialOrder|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|PartialOrder|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|JetBundleCategory|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|PartialOrder|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|PermutationCategory| *3))
       (|ofCategory| *3 (|SetCategory|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|PermutationGroup| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|PartialOrder|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *3 *4)
  (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|List| (|U32Vector|)))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|GcdDomain|))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|GcdDomain|)))
 ((*1 *2 *3 *4 *4 *4)
  (AND (|isDomain| *3 (|PrimitiveArray| (|U32Vector|)))
       (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|U32Vector|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|U32Vector|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| (|Integer|)))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| (|Integer|)))
       (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|U32Vector|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))) 
(((*1 *2 *3 *4 *3 *4 *4 *4 *4)
  (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))) 
(((*1 *2 *3 *3 *4)
  (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))) 
(((*1 *2 *3 *3 *3 *4)
  (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))) 
(((*1 *2)
  (AND (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|PrimitiveArray| (|ModMonic| *3 *4)))
       (|isDomain| *1 (|ModMonic| *3 *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))))
 ((*1 *2 *2 *3 *4 *5)
  (AND (|isDomain| *2 (|U32Vector|)) (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *5 (|Integer|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))) 
(((*1 *2 *3 *3 *3 *4 *4)
  (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))) 
(((*1 *2 *2 *2 *3 *3)
  (AND (|isDomain| *2 (|U32Vector|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))) 
(((*1 *2 *2 *2 *3)
  (AND (|isDomain| *2 (|U32Vector|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))) 
(((*1 *2 *3 *4 *4 *4)
  (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))) 
(((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))
 ((*1 *2 *3 *4 *4 *4)
  (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))) 
(((*1 *2 *3 *3 *4 *4 *4 *4)
  (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))) 
(((*1 *2 *3 *2 *2 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *3 (|U32Vector|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))) 
(((*1 *2 *3 *3 *4 *4)
  (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))) 
(((*1 *2 *3 *3 *4)
  (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|U32VectorPolynomialOperations|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|ofCategory| *7 (|IntegralDomain|))
       (|ofCategory| *3 (|PolynomialCategory| *7 *5 *6))
       (|isDomain| *2
                   (|Record| (|:| |exponent| (|NonNegativeInteger|))
                             (|:| |coef| *3) (|:| |radicand| (|List| *3))))
       (|isDomain| *1 (|PolynomialRoots| *5 *6 *7 *3 *8))
       (|ofCategory| *8
                     (|Join| (|Field|)
                             (CATEGORY |domain| (SIGNATURE |numer| (*3 $))
                              (SIGNATURE |denom| (*3 $))
                              (SIGNATURE |coerce| ($ *3)))))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|NonNegativeInteger|)) (|ofCategory| *7 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|ofCategory| *7 (|IntegralDomain|))
       (|ofCategory| *8 (|PolynomialCategory| *7 *5 *6))
       (|isDomain| *2
                   (|Record| (|:| |exponent| (|NonNegativeInteger|))
                             (|:| |coef| *3) (|:| |radicand| *3)))
       (|isDomain| *1 (|PolynomialRoots| *5 *6 *7 *8 *3))
       (|ofCategory| *3
                     (|Join| (|Field|)
                             (CATEGORY |domain| (SIGNATURE |numer| (*8 $))
                              (SIGNATURE |denom| (*8 $))
                              (SIGNATURE |coerce| ($ *8)))))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Integer|)))
       (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|ofCategory| *7 (|IntegralDomain|))
       (|ofCategory| *8 (|PolynomialCategory| *7 *5 *6))
       (|isDomain| *2
                   (|Record| (|:| |exponent| (|NonNegativeInteger|))
                             (|:| |coef| *9) (|:| |radicand| *9)))
       (|isDomain| *1 (|PolynomialRoots| *5 *6 *7 *8 *9))
       (|ofCategory| *9
                     (|Join| (|Field|)
                             (CATEGORY |domain| (SIGNATURE |numer| (*8 $))
                              (SIGNATURE |denom| (*8 $))
                              (SIGNATURE |coerce| ($ *8)))))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *7 (|PolynomialCategory| *3 *5 *6))
       (|isDomain| *2
                   (|Record| (|:| |exponent| (|NonNegativeInteger|))
                             (|:| |coef| *8) (|:| |radicand| *8)))
       (|isDomain| *1 (|PolynomialRoots| *5 *6 *3 *7 *8))
       (|ofCategory| *8
                     (|Join| (|Field|)
                             (CATEGORY |domain| (SIGNATURE |numer| (*7 $))
                              (SIGNATURE |denom| (*7 $))
                              (SIGNATURE |coerce| ($ *7)))))))) 
(((*1 *2 *1)
  (|partial| AND (|ofCategory| *3 (|Ring|)) (|ofCategory| *3 (|Comparable|))
   (|isDomain| *2 (|Record| (|:| |val| *1) (|:| |exponent| (|Integer|))))
   (|ofCategory| *1 (|FunctionSpace| *3))))
 ((*1 *2 *1)
  (|partial| AND
   (|isDomain| *2
               (|Record| (|:| |val| (|Pattern| *3))
                         (|:| |exponent| (|Pattern| *3))))
   (|isDomain| *1 (|Pattern| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *3)
  (|partial| AND (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|Ring|))
   (|ofCategory| *7 (|PolynomialCategory| *6 *4 *5))
   (|isDomain| *2 (|Record| (|:| |val| *3) (|:| |exponent| (|Integer|))))
   (|isDomain| *1 (|PolynomialCategoryQuotientFunctions| *4 *5 *6 *7 *3))
   (|ofCategory| *3
                 (|Join| (|Field|)
                         (CATEGORY |domain| (SIGNATURE |coerce| ($ *7))
                          (SIGNATURE |numer| (*7 $))
                          (SIGNATURE |denom| (*7 $)))))))) 
(((*1 *2 *1 *3)
  (|partial| AND (|isDomain| *3 (|Symbol|)) (|ofCategory| *4 (|Ring|))
   (|ofCategory| *4 (|Comparable|))
   (|isDomain| *2
               (|Record| (|:| |var| (|Kernel| *1))
                         (|:| |exponent| (|Integer|))))
   (|ofCategory| *1 (|FunctionSpace| *4))))
 ((*1 *2 *1 *3)
  (|partial| AND (|isDomain| *3 (|BasicOperator|)) (|ofCategory| *4 (|Ring|))
   (|ofCategory| *4 (|Comparable|))
   (|isDomain| *2
               (|Record| (|:| |var| (|Kernel| *1))
                         (|:| |exponent| (|Integer|))))
   (|ofCategory| *1 (|FunctionSpace| *4))))
 ((*1 *2 *1)
  (|partial| AND (|ofCategory| *3 (|SemiGroup|))
   (|ofCategory| *3 (|Comparable|))
   (|isDomain| *2
               (|Record| (|:| |var| (|Kernel| *1))
                         (|:| |exponent| (|Integer|))))
   (|ofCategory| *1 (|FunctionSpace| *3))))
 ((*1 *2 *1)
  (|partial| AND
   (|isDomain| *2
               (|Record| (|:| |val| (|Pattern| *3))
                         (|:| |exponent| (|NonNegativeInteger|))))
   (|isDomain| *1 (|Pattern| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (|partial| AND (|ofCategory| *1 (|PolynomialCategory| *3 *4 *5))
   (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
   (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *3 (|SemiRing|))
   (|isDomain| *2
               (|Record| (|:| |var| *5)
                         (|:| |exponent| (|NonNegativeInteger|))))))
 ((*1 *2 *3)
  (|partial| AND (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|Ring|))
   (|ofCategory| *7 (|PolynomialCategory| *6 *4 *5))
   (|isDomain| *2 (|Record| (|:| |var| *5) (|:| |exponent| (|Integer|))))
   (|isDomain| *1 (|PolynomialCategoryQuotientFunctions| *4 *5 *6 *7 *3))
   (|ofCategory| *3
                 (|Join| (|Field|)
                         (CATEGORY |domain| (SIGNATURE |coerce| ($ *7))
                          (SIGNATURE |numer| (*7 $))
                          (SIGNATURE |denom| (*7 $)))))))) 
(((*1 *2 *1)
  (|partial| AND (|ofCategory| *3 (|SemiGroup|))
   (|ofCategory| *3 (|Comparable|)) (|isDomain| *2 (|List| *1))
   (|ofCategory| *1 (|FunctionSpace| *3))))
 ((*1 *2 *1)
  (|partial| AND (|isDomain| *2 (|List| (|Pattern| *3)))
   (|isDomain| *1 (|Pattern| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (|partial| AND (|ofCategory| *3 (|SemiRing|))
   (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
   (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|List| *1))
   (|ofCategory| *1 (|PolynomialCategory| *3 *4 *5))))
 ((*1 *2 *3)
  (|partial| AND (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|Ring|))
   (|ofCategory| *7 (|PolynomialCategory| *6 *4 *5))
   (|isDomain| *2 (|List| *3))
   (|isDomain| *1 (|PolynomialCategoryQuotientFunctions| *4 *5 *6 *7 *3))
   (|ofCategory| *3
                 (|Join| (|Field|)
                         (CATEGORY |domain| (SIGNATURE |coerce| ($ *7))
                          (SIGNATURE |numer| (*7 $))
                          (SIGNATURE |denom| (*7 $)))))))) 
(((*1 *2 *1)
  (|partial| AND (|ofCategory| *3 (|AbelianSemiGroup|))
   (|ofCategory| *3 (|Comparable|)) (|isDomain| *2 (|List| *1))
   (|ofCategory| *1 (|FunctionSpace| *3))))
 ((*1 *2 *1)
  (|partial| AND (|isDomain| *2 (|List| (|Pattern| *3)))
   (|isDomain| *1 (|Pattern| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (|partial| AND (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
   (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|List| *1))
   (|ofCategory| *1 (|PolynomialCategory| *3 *4 *5))))
 ((*1 *2 *3)
  (|partial| AND (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|Ring|))
   (|ofCategory| *7 (|PolynomialCategory| *6 *4 *5))
   (|isDomain| *2 (|List| *3))
   (|isDomain| *1 (|PolynomialCategoryQuotientFunctions| *4 *5 *6 *7 *3))
   (|ofCategory| *3
                 (|Join| (|Field|)
                         (CATEGORY |domain| (SIGNATURE |coerce| ($ *7))
                          (SIGNATURE |numer| (*7 $))
                          (SIGNATURE |denom| (*7 $)))))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteAbelianMonoidRing| *3 *2))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *2 (|OrderedAbelianMonoid|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| *6))
       (|ofCategory| *1 (|PolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|PolynomialCategory| *4 *5 *3))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteAbelianMonoidRing| *2 *3))
       (|ofCategory| *3 (|OrderedAbelianMonoid|))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *2 (|GcdDomain|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Integer|)))
       (|isDomain| *2 (|List| (|Integer|))) (|isDomain| *1 (|HeuGcd| *4))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|PolynomialCategory| *3 *4 *2))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *2 (|OrderedSet|)) (|ofCategory| *3 (|GcdDomain|))))) 
(((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|Integer|))
       (|ofCategory| *5 (|OrderedRing|)) (|ofCategory| *5 (|Field|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|RealPolynomialUtilitiesPackage| *5 *6))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|OrderedRing|))
       (|ofCategory| *4 (|Field|)) (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|RealPolynomialUtilitiesPackage| *4 *5))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *2 (|Field|)) (|ofCategory| *2 (|OrderedRing|))
       (|isDomain| *1 (|RealPolynomialUtilitiesPackage| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|Field|)) (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|RealPolynomialUtilitiesPackage| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|Field|)) (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|RealPolynomialUtilitiesPackage| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Polynomial| *5)) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|DistributedMultivariatePolynomial| *4 *5))
       (|isDomain| *1 (|PolToPol| *4 *5)) (|ofType| *4 (|List| (|Symbol|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|DistributedMultivariatePolynomial| *4 *5))
       (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|Polynomial| *5)) (|isDomain| *1 (|PolToPol| *4 *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|HomogeneousDistributedMultivariatePolynomial| *4 *5))
       (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|Polynomial| *5)) (|isDomain| *1 (|PolToPol| *4 *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Polynomial| *5)) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|HomogeneousDistributedMultivariatePolynomial| *4 *5))
       (|isDomain| *1 (|PolToPol| *4 *5)) (|ofType| *4 (|List| (|Symbol|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|HomogeneousDistributedMultivariatePolynomial| *4 *5))
       (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|DistributedMultivariatePolynomial| *4 *5))
       (|isDomain| *1 (|PolToPol| *4 *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|DistributedMultivariatePolynomial| *4 *5))
       (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|HomogeneousDistributedMultivariatePolynomial| *4 *5))
       (|isDomain| *1 (|PolToPol| *4 *5))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|IntegerNumberTheoryFunctions|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|PolynomialNumberTheoryFunctions|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| (|Integer|)))
       (|isDomain| *1 (|PolynomialNumberTheoryFunctions|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| (|Integer|)))
       (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|PolynomialNumberTheoryFunctions|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|IntegerNumberTheoryFunctions|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|PolynomialNumberTheoryFunctions|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| (|Integer|)))
       (|isDomain| *1 (|CyclotomicPolynomialPackage|))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|NumberTheoreticPolynomialFunctions| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| (|Integer|)))
       (|isDomain| *1 (|PolynomialNumberTheoryFunctions|))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|OrthogonalPolynomialFunctions| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| (|Integer|)))
       (|isDomain| *1 (|PolynomialNumberTheoryFunctions|))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|OrthogonalPolynomialFunctions| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| (|Integer|)))
       (|isDomain| *1 (|PolynomialNumberTheoryFunctions|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|IntegerNumberTheoryFunctions|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|PolynomialNumberTheoryFunctions|))))) 
(((*1 *2 *3 *4 *2 *5)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|List| (|Pattern| *6)))
       (|isDomain| *5
                   (|Mapping| (|PatternMatchResult| *6 *8) *8 (|Pattern| *6)
                              (|PatternMatchResult| *6 *8)))
       (|ofCategory| *6 (|SetCategory|))
       (|ofCategory| *8
                     (|Join| (|Ring|) (|ConvertibleTo| (|Pattern| *6))
                             (|RetractableTo| *7)))
       (|isDomain| *2 (|PatternMatchResult| *6 *8))
       (|ofCategory| *7 (|Join| (|Comparable|) (|Ring|)))
       (|isDomain| *1 (|PatternMatchTools| *6 *7 *8))))) 
(((*1 *2 *3 *4 *2)
  (AND (|isDomain| *2 (|PatternMatchResult| *5 *3))
       (|isDomain| *4 (|Pattern| *5)) (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *3 (|ComplexCategory| *6))
       (|ofCategory| (|Polynomial| *6) (|PatternMatchable| *5))
       (|ofCategory| *6 (|Join| (|PatternMatchable| *5) (|CommutativeRing|)))
       (|isDomain| *1 (|ComplexPatternMatch| *5 *6 *3))))
 ((*1 *2 *1 *3 *2)
  (AND (|isDomain| *2 (|PatternMatchResult| *4 *1))
       (|isDomain| *3 (|Pattern| *4)) (|ofCategory| *1 (|PatternMatchable| *4))
       (|ofCategory| *4 (|SetCategory|))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *2 (|PatternMatchResult| *5 *6))
       (|isDomain| *4 (|Pattern| *5)) (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *6 (|Join| (|SetCategory|) (|RetractableTo| *3)))
       (|ofCategory| *3 (|PatternMatchable| *5))
       (|isDomain| *1 (|PatternMatchPushDown| *5 *3 *6))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *2 (|PatternMatchResult| *5 *3))
       (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *3
                     (|Join| (|FunctionSpace| *6) (|ConvertibleTo| *4)
                             (|PatternMatchable| *5)
                             (|RetractableTo| (|Kernel| $))))
       (|isDomain| *4 (|Pattern| *5))
       (|ofCategory| *6
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|PatternMatchable| *5)))
       (|isDomain| *1 (|PatternMatchFunctionSpace| *5 *6 *3))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *2 (|PatternMatchResult| (|Integer|) *3))
       (|isDomain| *4 (|Pattern| (|Integer|)))
       (|ofCategory| *3 (|IntegerNumberSystem|))
       (|isDomain| *1 (|PatternMatchIntegerNumberSystem| *3))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *2 (|PatternMatchResult| *5 *6))
       (|isDomain| *3 (|Kernel| *6)) (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *6
                     (|Join| (|Comparable|) (|RetractableTo| (|Kernel| $))
                             (|ConvertibleTo| *4) (|PatternMatchable| *5)))
       (|isDomain| *4 (|Pattern| *5))
       (|isDomain| *1 (|PatternMatchKernel| *5 *6))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *2 (|PatternMatchListResult| *5 *6 *3))
       (|isDomain| *4 (|Pattern| *5)) (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *6 (|PatternMatchable| *5))
       (|ofCategory| *3 (|ListAggregate| *6))
       (|isDomain| *1 (|PatternMatchListAggregate| *5 *6 *3))))
 ((*1 *2 *3 *4 *2 *5)
  (AND
   (|isDomain| *5
               (|Mapping| (|PatternMatchResult| *6 *3) *8 (|Pattern| *6)
                          (|PatternMatchResult| *6 *3)))
   (|ofCategory| *8 (|OrderedSet|))
   (|isDomain| *2 (|PatternMatchResult| *6 *3)) (|isDomain| *4 (|Pattern| *6))
   (|ofCategory| *6 (|SetCategory|))
   (|ofCategory| *3
                 (|Join| (|PolynomialCategory| *9 *7 *8) (|ConvertibleTo| *4)))
   (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *9 (|Join| (|Ring|) (|Comparable|) (|PatternMatchable| *6)))
   (|isDomain| *1 (|PatternMatchPolynomialCategory| *6 *7 *8 *9 *3))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *2 (|PatternMatchResult| *5 *3))
       (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *3
                     (|Join| (|PolynomialCategory| *8 *6 *7)
                             (|ConvertibleTo| *4)))
       (|isDomain| *4 (|Pattern| *5)) (|ofCategory| *7 (|PatternMatchable| *5))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *8
                     (|Join| (|Ring|) (|Comparable|) (|PatternMatchable| *5)))
       (|isDomain| *1 (|PatternMatchPolynomialCategory| *5 *6 *7 *8 *3))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *2 (|PatternMatchResult| *5 *3))
       (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *3 (|QuotientFieldCategory| *6))
       (|ofCategory| *6
                     (|Join| (|IntegralDomain|) (|PatternMatchable| *5)
                             (|ConvertibleTo| *4)))
       (|isDomain| *4 (|Pattern| *5))
       (|isDomain| *1 (|PatternMatchQuotientFieldCategory| *5 *6 *3))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *2 (|PatternMatchResult| *5 (|Symbol|)))
       (|isDomain| *3 (|Symbol|)) (|isDomain| *4 (|Pattern| *5))
       (|ofCategory| *5 (|SetCategory|))
       (|isDomain| *1 (|PatternMatchSymbol| *5))))
 ((*1 *2 *3 *4 *5 *2 *6)
  (AND (|isDomain| *4 (|List| (|Pattern| *7)))
       (|isDomain| *5 (|Mapping| *9 (|List| *9)))
       (|isDomain| *6
                   (|Mapping| (|PatternMatchResult| *7 *9) *9 (|Pattern| *7)
                              (|PatternMatchResult| *7 *9)))
       (|ofCategory| *7 (|SetCategory|))
       (|ofCategory| *9
                     (|Join| (|Ring|) (|ConvertibleTo| (|Pattern| *7))
                             (|RetractableTo| *8)))
       (|isDomain| *2 (|PatternMatchResult| *7 *9)) (|isDomain| *3 (|List| *9))
       (|ofCategory| *8 (|Join| (|Comparable|) (|Ring|)))
       (|isDomain| *1 (|PatternMatchTools| *7 *8 *9))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *6))
       (|ofCategory| *6 (|Join| (|SetCategory|) (|RetractableTo| *5)))
       (|ofCategory| *5 (|PatternMatchable| *4))
       (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|Mapping| (|Boolean|) *5))
       (|isDomain| *1 (|PatternMatchPushDown| *4 *5 *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Expression| (|Integer|)))
       (|isDomain| *1 (|PatternMatchAssertions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Comparable|))
       (|isDomain| *1 (|FunctionSpaceAssertions| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Expression| (|Integer|)))
       (|isDomain| *1 (|PatternMatchAssertions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Comparable|))
       (|isDomain| *1 (|FunctionSpaceAssertions| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|List| (|Point| (|DoubleFloat|)))))
       (|isDomain| *2 (|List| (|Segment| (|DoubleFloat|))))
       (|isDomain| *1 (|PlotTools|))))) 
(((*1 *1 *2 *3 *3 *3)
  (AND (|isDomain| *2 (|Mapping| (|Point| (|DoubleFloat|)) (|DoubleFloat|)))
       (|isDomain| *3 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| (|Point| (|DoubleFloat|)) (|DoubleFloat|)))
       (|isDomain| *3 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot|))))
 ((*1 *1 *2 *3 *3 *3 *3)
  (AND (|isDomain| *2 (|Mapping| (|Point| (|DoubleFloat|)) (|DoubleFloat|)))
       (|isDomain| *3 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot3D|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| (|Point| (|DoubleFloat|)) (|DoubleFloat|)))
       (|isDomain| *3 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot3D|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot|))))
 ((*1 *1 *2 *2 *3 *3 *3)
  (AND (|isDomain| *2 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *3 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot|))))
 ((*1 *1 *2 *2 *3)
  (AND (|isDomain| *2 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *3 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot|))))
 ((*1 *1 *2 *3 *3)
  (AND (|isDomain| *2 (|List| (|Mapping| (|DoubleFloat|) (|DoubleFloat|))))
       (|isDomain| *3 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|Mapping| (|DoubleFloat|) (|DoubleFloat|))))
       (|isDomain| *3 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot|))))
 ((*1 *1 *2 *3 *3)
  (AND (|isDomain| *2 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *3 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *3 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot|))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|Symbol|)) (|isDomain| *5 (|Segment| (|DoubleFloat|)))
       (|isDomain| *2 (|Plot|)) (|isDomain| *1 (|PlotFunctions1| *3))
       (|ofCategory| *3 (|ConvertibleTo| (|InputForm|)))))
 ((*1 *2 *3 *3 *4 *5)
  (AND (|isDomain| *4 (|Symbol|)) (|isDomain| *5 (|Segment| (|DoubleFloat|)))
       (|isDomain| *2 (|Plot|)) (|isDomain| *1 (|PlotFunctions1| *3))
       (|ofCategory| *3 (|ConvertibleTo| (|InputForm|)))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot3D|))))
 ((*1 *1 *2 *2 *2 *2 *3 *3 *3 *3)
  (AND (|isDomain| *2 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *3 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot3D|))))
 ((*1 *1 *2 *2 *2 *2 *3)
  (AND (|isDomain| *2 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *3 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot3D|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot3D|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|List| (|DoubleFloat|))))
       (|isDomain| *1 (|Plot3D|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Plot3D|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Plot3D|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Plot3D|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Plot3D|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Plot3D|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Plot3D|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Plot3D|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Plot3D|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Plot3D|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Plot3D|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *1 (|Plot|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *3 (|Segment| (|DoubleFloat|))) (|isDomain| *1 (|Plot|))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|Symbol|)) (|isDomain| *5 (|Segment| (|DoubleFloat|)))
       (|isDomain| *2 (|Plot|)) (|isDomain| *1 (|PlotFunctions1| *3))
       (|ofCategory| *3 (|ConvertibleTo| (|InputForm|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Symbol|)) (|isDomain| *2 (|Plot|))
       (|isDomain| *1 (|PlotFunctions1| *3))
       (|ofCategory| *3 (|ConvertibleTo| (|InputForm|)))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Plot|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|GraphicsDefaults|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|GraphicsDefaults|))))
 ((*1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Plot|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Plot|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|GraphicsDefaults|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|GraphicsDefaults|))))
 ((*1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Plot|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Plot|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|GraphicsDefaults|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|GraphicsDefaults|))))
 ((*1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Plot|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Plot|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Plot|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Plot|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Plot|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GuessOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|))) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|GuessOptionFunctions0|))))
 ((*1 *2 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Plot|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|PolynomialCategory| *4 *6 *5))
       (|ofCategory| *4
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *5 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|ParametricLinearEquations| *4 *5 *6 *7))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Polynomial| *4)))
       (|ofCategory| *4
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *5 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|ParametricLinearEquations| *4 *5 *6 *7))
       (|ofCategory| *7 (|PolynomialCategory| *4 *6 *5))))) 
(((*1 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|EuclideanDomain|)
                         (|PolynomialFactorizationExplicit|)
                         (|CharacteristicZero|)))
   (|ofCategory| *4 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
   (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
   (|isDomain| *1 (|ParametricLinearEquations| *3 *4 *5 *2))
   (|ofCategory| *2 (|PolynomialCategory| *3 *5 *4))))) 
(((*1 *2 *3 *4 *5 *6 *7 *7 *8)
  (AND
   (|isDomain| *3
               (|Record| (|:| |det| *12) (|:| |rows| (|List| (|Integer|)))
                         (|:| |cols| (|List| (|Integer|)))))
   (|isDomain| *4 (|Matrix| *12))
   (|isDomain| *5 (|List| (|Fraction| (|Polynomial| *9))))
   (|isDomain| *6 (|List| (|List| *12))) (|isDomain| *7 (|NonNegativeInteger|))
   (|isDomain| *8 (|Integer|))
   (|ofCategory| *9
                 (|Join| (|EuclideanDomain|)
                         (|PolynomialFactorizationExplicit|)
                         (|CharacteristicZero|)))
   (|ofCategory| *12 (|PolynomialCategory| *9 *11 *10))
   (|ofCategory| *10 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
   (|ofCategory| *11 (|OrderedAbelianMonoidSup|))
   (|isDomain| *2
               (|Record| (|:| |eqzro| (|List| *12)) (|:| |neqzro| (|List| *12))
                         (|:| |wcond| (|List| (|Polynomial| *9)))
                         (|:| |bsoln|
                              (|Record|
                               (|:| |partsol|
                                    (|Vector| (|Fraction| (|Polynomial| *9))))
                               (|:| |basis|
                                    (|List|
                                     (|Vector|
                                      (|Fraction| (|Polynomial| *9)))))))))
   (|isDomain| *1 (|ParametricLinearEquations| *9 *10 *11 *12))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Matrix| *7)) (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|PolynomialCategory| *4 *6 *5))
       (|ofCategory| *4
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *5 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *1 (|ParametricLinearEquations| *4 *5 *6 *7))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *8)) (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *8 (|PolynomialCategory| *5 *7 *6))
       (|ofCategory| *5
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *6 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |det| *8) (|:| |rows| (|List| (|Integer|)))
                              (|:| |cols| (|List| (|Integer|))))))
       (|isDomain| *1 (|ParametricLinearEquations| *5 *6 *7 *8))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| (|List| *8))) (|isDomain| *3 (|List| *8))
       (|ofCategory| *8 (|PolynomialCategory| *5 *7 *6))
       (|ofCategory| *5
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *6 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|ParametricLinearEquations| *5 *6 *7 *8))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|ofCategory| *4
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *5 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|List| (|List| (|Integer|))))
       (|isDomain| *1 (|ParametricLinearEquations| *4 *5 *6 *7))
       (|ofCategory| *7 (|PolynomialCategory| *4 *6 *5))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| (|List| *6)))
       (|ofCategory| *6 (|PolynomialCategory| *3 *5 *4))
       (|ofCategory| *3
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *4 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|isDomain| *1 (|ParametricLinearEquations| *3 *4 *5 *6))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|List|
                (|Record| (|:| |rank| (|NonNegativeInteger|))
                          (|:| |eqns|
                               (|List|
                                (|Record| (|:| |det| *7)
                                          (|:| |rows| (|List| (|Integer|)))
                                          (|:| |cols| (|List| (|Integer|))))))
                          (|:| |fgb| (|List| *7)))))
   (|ofCategory| *7 (|PolynomialCategory| *4 *6 *5))
   (|ofCategory| *4
                 (|Join| (|EuclideanDomain|)
                         (|PolynomialFactorizationExplicit|)
                         (|CharacteristicZero|)))
   (|ofCategory| *5 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
   (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
   (|isDomain| *2 (|NonNegativeInteger|))
   (|isDomain| *1 (|ParametricLinearEquations| *4 *5 *6 *7))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|List|
                (|Record| (|:| |rank| (|NonNegativeInteger|))
                          (|:| |eqns|
                               (|List|
                                (|Record| (|:| |det| *7)
                                          (|:| |rows| (|List| (|Integer|)))
                                          (|:| |cols| (|List| (|Integer|))))))
                          (|:| |fgb| (|List| *7)))))
   (|ofCategory| *7 (|PolynomialCategory| *4 *6 *5))
   (|ofCategory| *4
                 (|Join| (|EuclideanDomain|)
                         (|PolynomialFactorizationExplicit|)
                         (|CharacteristicZero|)))
   (|ofCategory| *5 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
   (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
   (|isDomain| *2 (|NonNegativeInteger|))
   (|isDomain| *1 (|ParametricLinearEquations| *4 *5 *6 *7))))) 
(((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|EuclideanDomain|)
                         (|PolynomialFactorizationExplicit|)
                         (|CharacteristicZero|)))
   (|ofCategory| *5 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
   (|ofCategory| *6 (|OrderedAbelianMonoidSup|)) (|isDomain| *2 (|List| *3))
   (|isDomain| *1 (|ParametricLinearEquations| *4 *5 *6 *3))
   (|ofCategory| *3 (|PolynomialCategory| *4 *6 *5))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|Record| (|:| |mat| (|Matrix| (|Fraction| (|Polynomial| *4))))
                         (|:| |vec| (|List| (|Fraction| (|Polynomial| *4))))
                         (|:| |rank| (|NonNegativeInteger|))
                         (|:| |rows| (|List| (|Integer|)))
                         (|:| |cols| (|List| (|Integer|)))))
   (|ofCategory| *4
                 (|Join| (|EuclideanDomain|)
                         (|PolynomialFactorizationExplicit|)
                         (|CharacteristicZero|)))
   (|ofCategory| *5 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
   (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
   (|isDomain| *2
               (|Record|
                (|:| |partsol| (|Vector| (|Fraction| (|Polynomial| *4))))
                (|:| |basis|
                     (|List| (|Vector| (|Fraction| (|Polynomial| *4)))))))
   (|isDomain| *1 (|ParametricLinearEquations| *4 *5 *6 *7))
   (|ofCategory| *7 (|PolynomialCategory| *4 *6 *5))))) 
(((*1 *2 *2 *3)
  (AND
   (|isDomain| *2
               (|Record|
                (|:| |partsol| (|Vector| (|Fraction| (|Polynomial| *4))))
                (|:| |basis|
                     (|List| (|Vector| (|Fraction| (|Polynomial| *4)))))))
   (|isDomain| *3 (|List| *7))
   (|ofCategory| *4
                 (|Join| (|EuclideanDomain|)
                         (|PolynomialFactorizationExplicit|)
                         (|CharacteristicZero|)))
   (|ofCategory| *7 (|PolynomialCategory| *4 *6 *5))
   (|ofCategory| *5 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
   (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
   (|isDomain| *1 (|ParametricLinearEquations| *4 *5 *6 *7))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *8)) (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *8 (|PolynomialCategory| *5 *7 *6))
       (|ofCategory| *5
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *6 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |rank| (|NonNegativeInteger|))
                              (|:| |eqns|
                                   (|List|
                                    (|Record| (|:| |det| *8)
                                              (|:| |rows| (|List| (|Integer|)))
                                              (|:| |cols|
                                                   (|List| (|Integer|))))))
                              (|:| |fgb| (|List| *8)))))
       (|isDomain| *1 (|ParametricLinearEquations| *5 *6 *7 *8))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|PolynomialCategory| *4 *6 *5))
       (|ofCategory| *4
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *5 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2
                   (|Record| (|:| |sysok| (|Boolean|)) (|:| |z0| (|List| *7))
                             (|:| |n0| (|List| *7))))
       (|isDomain| *1 (|ParametricLinearEquations| *4 *5 *6 *7))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Polynomial| *4))
       (|ofCategory| *4
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *2 (|PolynomialCategory| *4 *6 *5))
       (|isDomain| *1 (|ParametricLinearEquations| *4 *5 *6 *2))
       (|ofCategory| *5 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Symbol|)))
       (|ofCategory| *4
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *5 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|List| (|Fraction| (|Polynomial| *4))))
       (|isDomain| *1 (|ParametricLinearEquations| *4 *5 *6 *7))
       (|ofCategory| *7 (|PolynomialCategory| *4 *6 *5))))) 
(((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|EuclideanDomain|)
                         (|PolynomialFactorizationExplicit|)
                         (|CharacteristicZero|)))
   (|ofCategory| *5 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
   (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
   (|isDomain| *2 (|Fraction| (|Polynomial| *4)))
   (|isDomain| *1 (|ParametricLinearEquations| *4 *5 *6 *3))
   (|ofCategory| *3 (|PolynomialCategory| *4 *6 *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| *7))
       (|ofCategory| *7 (|PolynomialCategory| *4 *6 *5))
       (|ofCategory| *4
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *5 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Matrix| (|Fraction| (|Polynomial| *4))))
       (|isDomain| *1 (|ParametricLinearEquations| *4 *5 *6 *7))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|PolynomialCategory| *4 *6 *5))
       (|ofCategory| *4
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *5 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|List| (|Fraction| (|Polynomial| *4))))
       (|isDomain| *1 (|ParametricLinearEquations| *4 *5 *6 *7))))) 
(((*1 *2 *3 *4 *5 *6 *7)
  (AND (|isDomain| *3 (|Matrix| *11))
       (|isDomain| *4 (|List| (|Fraction| (|Polynomial| *8))))
       (|isDomain| *5 (|NonNegativeInteger|)) (|isDomain| *6 (|String|))
       (|isDomain| *7 (|Integer|))
       (|ofCategory| *8
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *11 (|PolynomialCategory| *8 *10 *9))
       (|ofCategory| *9 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *10 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2
                   (|Record|
                    (|:| |rgl|
                         (|List|
                          (|Record| (|:| |eqzro| (|List| *11))
                                    (|:| |neqzro| (|List| *11))
                                    (|:| |wcond| (|List| (|Polynomial| *8)))
                                    (|:| |bsoln|
                                         (|Record|
                                          (|:| |partsol|
                                               (|Vector|
                                                (|Fraction|
                                                 (|Polynomial| *8))))
                                          (|:| |basis|
                                               (|List|
                                                (|Vector|
                                                 (|Fraction|
                                                  (|Polynomial| *8))))))))))
                    (|:| |rgsz| (|Integer|))))
       (|isDomain| *1 (|ParametricLinearEquations| *8 *9 *10 *11))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|))
       (|ofCategory| *4
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *5 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |eqzro| (|List| *7))
                              (|:| |neqzro| (|List| *7))
                              (|:| |wcond| (|List| (|Polynomial| *4)))
                              (|:| |bsoln|
                                   (|Record|
                                    (|:| |partsol|
                                         (|Vector|
                                          (|Fraction| (|Polynomial| *4))))
                                    (|:| |basis|
                                         (|List|
                                          (|Vector|
                                           (|Fraction|
                                            (|Polynomial| *4))))))))))
       (|isDomain| *1 (|ParametricLinearEquations| *4 *5 *6 *7))
       (|ofCategory| *7 (|PolynomialCategory| *4 *6 *5))))) 
(((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|List|
                (|Record| (|:| |eqzro| (|List| *8)) (|:| |neqzro| (|List| *8))
                          (|:| |wcond| (|List| (|Polynomial| *5)))
                          (|:| |bsoln|
                               (|Record|
                                (|:| |partsol|
                                     (|Vector| (|Fraction| (|Polynomial| *5))))
                                (|:| |basis|
                                     (|List|
                                      (|Vector|
                                       (|Fraction| (|Polynomial| *5))))))))))
   (|isDomain| *4 (|String|))
   (|ofCategory| *5
                 (|Join| (|EuclideanDomain|)
                         (|PolynomialFactorizationExplicit|)
                         (|CharacteristicZero|)))
   (|ofCategory| *8 (|PolynomialCategory| *5 *7 *6))
   (|ofCategory| *6 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
   (|ofCategory| *7 (|OrderedAbelianMonoidSup|)) (|isDomain| *2 (|Integer|))
   (|isDomain| *1 (|ParametricLinearEquations| *5 *6 *7 *8))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *8)) (|isDomain| *4 (|List| *8))
       (|ofCategory| *8 (|PolynomialCategory| *5 *7 *6))
       (|ofCategory| *5
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *6 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |eqzro| (|List| *8))
                              (|:| |neqzro| (|List| *8))
                              (|:| |wcond| (|List| (|Polynomial| *5)))
                              (|:| |bsoln|
                                   (|Record|
                                    (|:| |partsol|
                                         (|Vector|
                                          (|Fraction| (|Polynomial| *5))))
                                    (|:| |basis|
                                         (|List|
                                          (|Vector|
                                           (|Fraction|
                                            (|Polynomial| *5))))))))))
       (|isDomain| *1 (|ParametricLinearEquations| *5 *6 *7 *8))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *8)) (|isDomain| *4 (|List| (|Symbol|)))
       (|ofCategory| *8 (|PolynomialCategory| *5 *7 *6))
       (|ofCategory| *5
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *6 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |eqzro| (|List| *8))
                              (|:| |neqzro| (|List| *8))
                              (|:| |wcond| (|List| (|Polynomial| *5)))
                              (|:| |bsoln|
                                   (|Record|
                                    (|:| |partsol|
                                         (|Vector|
                                          (|Fraction| (|Polynomial| *5))))
                                    (|:| |basis|
                                         (|List|
                                          (|Vector|
                                           (|Fraction|
                                            (|Polynomial| *5))))))))))
       (|isDomain| *1 (|ParametricLinearEquations| *5 *6 *7 *8))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| *7))
       (|ofCategory| *7 (|PolynomialCategory| *4 *6 *5))
       (|ofCategory| *4
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *5 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |eqzro| (|List| *7))
                              (|:| |neqzro| (|List| *7))
                              (|:| |wcond| (|List| (|Polynomial| *4)))
                              (|:| |bsoln|
                                   (|Record|
                                    (|:| |partsol|
                                         (|Vector|
                                          (|Fraction| (|Polynomial| *4))))
                                    (|:| |basis|
                                         (|List|
                                          (|Vector|
                                           (|Fraction|
                                            (|Polynomial| *4))))))))))
       (|isDomain| *1 (|ParametricLinearEquations| *4 *5 *6 *7))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Matrix| *9)) (|isDomain| *4 (|List| *9))
       (|isDomain| *5 (|PositiveInteger|))
       (|ofCategory| *9 (|PolynomialCategory| *6 *8 *7))
       (|ofCategory| *6
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *7 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *8 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |eqzro| (|List| *9))
                              (|:| |neqzro| (|List| *9))
                              (|:| |wcond| (|List| (|Polynomial| *6)))
                              (|:| |bsoln|
                                   (|Record|
                                    (|:| |partsol|
                                         (|Vector|
                                          (|Fraction| (|Polynomial| *6))))
                                    (|:| |basis|
                                         (|List|
                                          (|Vector|
                                           (|Fraction|
                                            (|Polynomial| *6))))))))))
       (|isDomain| *1 (|ParametricLinearEquations| *6 *7 *8 *9))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Matrix| *9)) (|isDomain| *4 (|List| (|Symbol|)))
       (|isDomain| *5 (|PositiveInteger|))
       (|ofCategory| *9 (|PolynomialCategory| *6 *8 *7))
       (|ofCategory| *6
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *7 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *8 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |eqzro| (|List| *9))
                              (|:| |neqzro| (|List| *9))
                              (|:| |wcond| (|List| (|Polynomial| *6)))
                              (|:| |bsoln|
                                   (|Record|
                                    (|:| |partsol|
                                         (|Vector|
                                          (|Fraction| (|Polynomial| *6))))
                                    (|:| |basis|
                                         (|List|
                                          (|Vector|
                                           (|Fraction|
                                            (|Polynomial| *6))))))))))
       (|isDomain| *1 (|ParametricLinearEquations| *6 *7 *8 *9))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *8)) (|isDomain| *4 (|PositiveInteger|))
       (|ofCategory| *8 (|PolynomialCategory| *5 *7 *6))
       (|ofCategory| *5
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *6 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |eqzro| (|List| *8))
                              (|:| |neqzro| (|List| *8))
                              (|:| |wcond| (|List| (|Polynomial| *5)))
                              (|:| |bsoln|
                                   (|Record|
                                    (|:| |partsol|
                                         (|Vector|
                                          (|Fraction| (|Polynomial| *5))))
                                    (|:| |basis|
                                         (|List|
                                          (|Vector|
                                           (|Fraction|
                                            (|Polynomial| *5))))))))))
       (|isDomain| *1 (|ParametricLinearEquations| *5 *6 *7 *8))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Matrix| *9)) (|isDomain| *4 (|List| *9))
       (|isDomain| *5 (|String|))
       (|ofCategory| *9 (|PolynomialCategory| *6 *8 *7))
       (|ofCategory| *6
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *7 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *8 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|ParametricLinearEquations| *6 *7 *8 *9))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Matrix| *9)) (|isDomain| *4 (|List| (|Symbol|)))
       (|isDomain| *5 (|String|))
       (|ofCategory| *9 (|PolynomialCategory| *6 *8 *7))
       (|ofCategory| *6
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *7 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *8 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|ParametricLinearEquations| *6 *7 *8 *9))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *8)) (|isDomain| *4 (|String|))
       (|ofCategory| *8 (|PolynomialCategory| *5 *7 *6))
       (|ofCategory| *5
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *6 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|ParametricLinearEquations| *5 *6 *7 *8))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|Matrix| *10)) (|isDomain| *4 (|List| *10))
       (|isDomain| *5 (|PositiveInteger|)) (|isDomain| *6 (|String|))
       (|ofCategory| *10 (|PolynomialCategory| *7 *9 *8))
       (|ofCategory| *7
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *8 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *9 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|ParametricLinearEquations| *7 *8 *9 *10))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|Matrix| *10)) (|isDomain| *4 (|List| (|Symbol|)))
       (|isDomain| *5 (|PositiveInteger|)) (|isDomain| *6 (|String|))
       (|ofCategory| *10 (|PolynomialCategory| *7 *9 *8))
       (|ofCategory| *7
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *8 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *9 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|ParametricLinearEquations| *7 *8 *9 *10))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Matrix| *9)) (|isDomain| *4 (|PositiveInteger|))
       (|isDomain| *5 (|String|))
       (|ofCategory| *9 (|PolynomialCategory| *6 *8 *7))
       (|ofCategory| *6
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *7 (|Join| (|OrderedSet|) (|ConvertibleTo| (|Symbol|))))
       (|ofCategory| *8 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|ParametricLinearEquations| *6 *7 *8 *9))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|Field|))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *1 (|PolynomialInterpolationAlgorithms| *4 *2))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *1)) (|ofCategory| *1 (|PrincipalIdealDomain|))
       (|isDomain| *2
                   (|Record| (|:| |coef| (|List| *1)) (|:| |generator| *1)))))) 
(((*1 *2 *2 *1)
  (|partial| AND (|isDomain| *2 (|List| *1))
   (|ofCategory| *1 (|PrincipalIdealDomain|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|NonNegativeInteger|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|PositiveInteger|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|List| (|Polynomial| *4)))
       (|isDomain| *3 (|List| (|Symbol|))) (|ofCategory| *4 (|GcdDomain|))
       (|isDomain| *1 (|PolyGroebner| *4))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|List| (|Polynomial| *4)))
       (|isDomain| *3 (|List| (|Symbol|))) (|ofCategory| *4 (|GcdDomain|))
       (|isDomain| *1 (|PolyGroebner| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Partition|))
       (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|GroupPresentation|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|GroupPresentation|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|PositiveInteger|)))
       (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|GroupPresentation|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|PermutationGroup| (|Integer|)))
       (|isDomain| *1 (|PermutationGroupExamples|))))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|EuclideanDomain|))
       (|isDomain| *1 (|PolynomialGcdPackage| *3 *4 *5 *2))
       (|ofCategory| *2 (|PolynomialCategory| *5 *3 *4))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *6))
       (|ofCategory| *6 (|PolynomialCategory| *5 *3 *4))
       (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *5 (|EuclideanDomain|))
       (|isDomain| *1 (|PolynomialGcdPackage| *3 *4 *5 *6))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *2))
       (|ofCategory| *2 (|PolynomialCategory| *6 *4 *5))
       (|isDomain| *1 (|PolynomialGcdPackage| *4 *5 *6 *2))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|EuclideanDomain|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Fraction| *3))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *3 (|EuclideanDomain|))
       (|isDomain| *1 (|PartialFraction| *3))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|Factored| *2)) (|ofCategory| *2 (|EuclideanDomain|))
       (|isDomain| *1 (|PartialFraction| *2))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
       (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|Any|)) (|isDomain| *1 (|PartialFractionPackage| *5))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|Factored| (|Polynomial| *6)))
       (|isDomain| *5 (|Symbol|)) (|isDomain| *3 (|Polynomial| *6))
       (|ofCategory| *6
                     (|Join| (|EuclideanDomain|)
                             (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|Any|)) (|isDomain| *1 (|PartialFractionPackage| *6))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|PartialFraction| *2))
       (|ofCategory| *2 (|EuclideanDomain|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Factored| *3)) (|isDomain| *1 (|PartialFraction| *3))
       (|ofCategory| *3 (|EuclideanDomain|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *1 (|PartialFraction| *2))
       (|ofCategory| *2 (|EuclideanDomain|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|PartialFraction| *3))
       (|ofCategory| *3 (|EuclideanDomain|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|PartialFraction| *3))
       (|ofCategory| *3 (|EuclideanDomain|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Fraction| *3)))
       (|isDomain| *1 (|PartialFraction| *3))
       (|ofCategory| *3 (|EuclideanDomain|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *3))
       (|isDomain| *1 (|PartialFraction| *3))
       (|ofCategory| *3 (|EuclideanDomain|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|PartialFraction| *2))
       (|ofCategory| *2 (|EuclideanDomain|))))) 
(((*1 *2 *2)
  (AND
   (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Fraction| (|Integer|))))
   (|isDomain| *1 (|PointsOfFiniteOrderTools| *3 *2))
   (|ofCategory| *2 (|UnivariatePolynomialCategory| (|Fraction| *3)))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| *2)))
       (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|PointsOfFiniteOrderTools| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Fraction| *4)))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|List|
                (|Record| (|:| |den| (|Integer|)) (|:| |gcdnum| (|Integer|)))))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| *2)))
   (|isDomain| *2 (|Integer|))
   (|isDomain| *1 (|PointsOfFiniteOrderTools| *4 *5))
   (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))))) 
(((*1 *2 *3)
  (AND
   (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Fraction| (|Integer|))))
   (|isDomain| *2
               (|Record| (|:| |den| (|Integer|)) (|:| |gcdnum| (|Integer|))))
   (|isDomain| *1 (|PointsOfFiniteOrderTools| *3 *4))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| *3)))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| *2)))
       (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|PointsOfFiniteOrderTools| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Fraction| *4)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| *3)))
       (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|PointsOfFiniteOrderTools| *4 *5))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))))) 
(((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|FiniteDivisor| *5 *6 *7 *8))
   (|ofCategory| *5 (|FunctionSpace| *4))
   (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
   (|ofCategory| *7 (|UnivariatePolynomialCategory| (|Fraction| *6)))
   (|ofCategory| *8 (|FunctionFieldCategory| *5 *6 *7))
   (|ofCategory| *4
                 (|Join| (|Comparable|) (|IntegralDomain|)
                         (|RetractableTo| (|Integer|))))
   (|isDomain| *2
               (|Record| (|:| |order| (|NonNegativeInteger|))
                         (|:| |function| *8)))
   (|isDomain| *1 (|PointsOfFiniteOrder| *4 *5 *6 *7 *8))))
 ((*1 *2 *3)
  (|partial| AND
   (|isDomain| *3 (|FiniteDivisor| (|Fraction| (|Integer|)) *4 *5 *6))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| (|Integer|))))
   (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
   (|ofCategory| *6 (|FunctionFieldCategory| (|Fraction| (|Integer|)) *4 *5))
   (|isDomain| *2
               (|Record| (|:| |order| (|NonNegativeInteger|))
                         (|:| |function| *6)))
   (|isDomain| *1 (|PointsOfFiniteOrderRational| *4 *5 *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|FiniteDivisor| *5 *6 *7 *8))
       (|ofCategory| *5 (|FunctionSpace| *4))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| (|Fraction| *6)))
       (|ofCategory| *8 (|FunctionFieldCategory| *5 *6 *7))
       (|ofCategory| *4
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|RetractableTo| (|Integer|))))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PointsOfFiniteOrder| *4 *5 *6 *7 *8))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|FiniteDivisor| (|Fraction| (|Integer|)) *4 *5 *6))
       (|ofCategory| *4
                     (|UnivariatePolynomialCategory| (|Fraction| (|Integer|))))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|ofCategory| *6
                     (|FunctionFieldCategory| (|Fraction| (|Integer|)) *4 *5))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PointsOfFiniteOrderRational| *4 *5 *6))))) 
(((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|Record| (|:| |ncurve| *8) (|:| |n_div_numer| (|Vector| *8))
                         (|:| |n_div_denom| *8)
                         (|:| |need_change| (|Boolean|))))
   (|isDomain| *4 (|List| (|Kernel| *6)))
   (|ofCategory| *6 (|AlgebraicallyClosedField|))
   (|ofCategory| *6 (|FunctionSpace| *5))
   (|ofCategory| *8 (|UnivariatePolynomialCategory| (|Fraction| *7)))
   (|ofCategory| *5 (|CharacteristicZero|))
   (|ofCategory| *5
                 (|Join| (|Comparable|) (|IntegralDomain|)
                         (|RetractableTo| (|Integer|))))
   (|ofCategory| *7 (|UnivariatePolynomialCategory| *6))
   (|isDomain| *2 (|NonNegativeInteger|))
   (|isDomain| *1 (|PointsOfFiniteOrder| *5 *6 *7 *8 *9))
   (|ofCategory| *9 (|FunctionFieldCategory| *6 *7 *8))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|FiniteDivisor| *5 *6 *7 *8))
       (|ofCategory| *5 (|FunctionSpace| *4))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| (|Fraction| *6)))
       (|ofCategory| *8 (|FunctionFieldCategory| *5 *6 *7))
       (|ofCategory| *4
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|RetractableTo| (|Integer|))))
       (|isDomain| *2
                   (|Record| (|:| |ncurve| *7)
                             (|:| |n_div_numer| (|Vector| *7))
                             (|:| |n_div_denom| *7)
                             (|:| |need_change| (|Boolean|))))
       (|isDomain| *1 (|PointsOfFiniteOrder| *4 *5 *6 *7 *8))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|FiniteDivisor| *5 *6 *7 *8))
       (|ofCategory| *5 (|FunctionSpace| *4))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| (|Fraction| *6)))
       (|ofCategory| *8 (|FunctionFieldCategory| *5 *6 *7))
       (|ofCategory| *4
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|RetractableTo| (|Integer|))))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|PointsOfFiniteOrder| *4 *5 *6 *7 *8))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3 (|List| (|SparseMultivariatePolynomial| *4 (|Kernel| *5))))
   (|ofCategory| *4
                 (|Join| (|Comparable|) (|IntegralDomain|)
                         (|RetractableTo| (|Integer|))))
   (|ofCategory| *5 (|FunctionSpace| *4))
   (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
   (|ofCategory| *7 (|UnivariatePolynomialCategory| (|Fraction| *6)))
   (|isDomain| *2 (|SparseMultivariatePolynomial| *4 (|Kernel| *5)))
   (|isDomain| *1 (|PointsOfFiniteOrder| *4 *5 *6 *7 *8))
   (|ofCategory| *8 (|FunctionFieldCategory| *5 *6 *7))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *1))
       (|ofCategory| *1 (|GcdDomain|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *6))
       (|ofCategory| *6 (|PolynomialCategory| *5 *3 *4))
       (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|PolynomialFactorizationExplicit|))
       (|isDomain| *1 (|GeneralPolynomialGcdPackage| *3 *4 *5 *6))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *1))
       (|ofCategory| *1 (|PolynomialFactorizationExplicit|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *1))
       (|ofCategory| *1 (|PolynomialFactorizationExplicit|))
       (|isDomain| *2 (|Factored| (|SparseUnivariatePolynomial| *1)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *5))
       (|ofCategory| *5 (|FunctionSpace| *4))
       (|ofCategory| *4 (|Join| (|GcdDomain|) (|Comparable|)))
       (|isDomain| *2 (|Factored| (|SparseUnivariatePolynomial| *5)))
       (|isDomain| *1 (|ExpressionFactorPolynomial| *4 *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *1))
       (|ofCategory| *1 (|PolynomialFactorizationExplicit|))
       (|isDomain| *2 (|Factored| (|SparseUnivariatePolynomial| *1)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *1))
       (|ofCategory| *1 (|PolynomialFactorizationExplicit|))
       (|isDomain| *2 (|Factored| (|SparseUnivariatePolynomial| *1)))))) 
(((*1 *2 *2 *3)
  (|partial| AND (|isDomain| *2 (|List| (|SparseUnivariatePolynomial| *5)))
   (|isDomain| *3 (|SparseUnivariatePolynomial| *5))
   (|ofCategory| *5 (|ComplexCategory| *4))
   (|ofCategory| *4 (|IntegerNumberSystem|))
   (|isDomain| *1 (|ComplexIntegerSolveLinearPolynomialEquation| *4 *5))))
 ((*1 *2 *2 *3)
  (|partial| AND (|isDomain| *2 (|List| *3))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))
   (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
   (|ofCategory| *4 (|FiniteFieldCategory|))
   (|isDomain| *1 (|FiniteFieldSolveLinearPolynomialEquation| *4 *5 *3))))
 ((*1 *2 *2 *3)
  (|partial| AND
   (|isDomain| *2 (|List| (|SparseUnivariatePolynomial| (|Integer|))))
   (|isDomain| *3 (|SparseUnivariatePolynomial| (|Integer|)))
   (|isDomain| *1 (|IntegerSolveLinearPolynomialEquation|))))
 ((*1 *2 *2 *3)
  (|partial| AND (|isDomain| *2 (|List| (|SparseUnivariatePolynomial| *1)))
   (|isDomain| *3 (|SparseUnivariatePolynomial| *1))
   (|ofCategory| *1 (|PolynomialFactorizationExplicit|))))) 
(((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|Matrix| *1))
   (|ofCategory| *1 (|CharacteristicNonZero|))
   (|ofCategory| *1 (|PolynomialFactorizationExplicit|))
   (|isDomain| *2 (|Vector| *1))))) 
(((*1 *1 *1) (|partial| |ofCategory| *1 (|CharacteristicNonZero|)))
 ((*1 *1 *1) (|ofCategory| *1 (|FiniteFieldCategory|)))
 ((*1 *1 *1)
  (|partial| AND (|ofCategory| *1 (|CharacteristicNonZero|))
   (|ofCategory| *1 (|PolynomialFactorizationExplicit|))))) 
(((*1 *2 *2 *3 *4)
  (|partial| AND (|isDomain| *2 (|List| (|SparseUnivariatePolynomial| *7)))
   (|isDomain| *3 (|SparseUnivariatePolynomial| *7))
   (|ofCategory| *7 (|PolynomialCategory| *5 *6 *4))
   (|ofCategory| *5 (|PolynomialFactorizationExplicit|))
   (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *4 (|OrderedSet|))
   (|isDomain| *1 (|PolynomialFactorizationByRecursion| *5 *6 *4 *7))))) 
(((*1 *2)
  (AND (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *2 (|PolynomialFactorizationExplicit|))
       (|isDomain| *1 (|GeneralPolynomialGcdPackage| *3 *4 *2 *5))
       (|ofCategory| *5 (|PolynomialCategory| *2 *3 *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *2 (|PolynomialFactorizationExplicit|))
       (|isDomain| *1 (|PolynomialFactorizationByRecursion| *2 *4 *5 *6))
       (|ofCategory| *6 (|PolynomialCategory| *2 *4 *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *7))
       (|ofCategory| *7 (|PolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|PolynomialFactorizationExplicit|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *2 (|Factored| (|SparseUnivariatePolynomial| *7)))
       (|isDomain| *1 (|PolynomialFactorizationByRecursion| *4 *5 *6 *7))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *7))
       (|ofCategory| *7 (|PolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|PolynomialFactorizationExplicit|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *2 (|Factored| (|SparseUnivariatePolynomial| *7)))
       (|isDomain| *1 (|PolynomialFactorizationByRecursion| *4 *5 *6 *7))))) 
(((*1 *2 *2 *3)
  (|partial| AND (|isDomain| *2 (|List| (|SparseUnivariatePolynomial| *7)))
   (|isDomain| *3 (|SparseUnivariatePolynomial| *7))
   (|ofCategory| *7 (|PolynomialCategory| *4 *5 *6))
   (|ofCategory| *4 (|PolynomialFactorizationExplicit|))
   (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *6 (|OrderedSet|))
   (|isDomain| *1 (|PolynomialFactorizationByRecursion| *4 *5 *6 *7))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|ProductFacet|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *3
                   (|List|
                    (|Record| (|:| |left| (|NonNegativeInteger|))
                              (|:| |right| (|NonNegativeInteger|)))))
       (|isDomain| *1 (|ProductFacet|))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |left| (|NonNegativeInteger|))
                          (|:| |right| (|NonNegativeInteger|)))))
   (|isDomain| *1 (|ProductFacet|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|ProductFacet|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|ProductFacet|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|OrientedFacet|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|ProductFacet|))))) 
(((*1 *1 *1 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |left| (|NonNegativeInteger|))
                         (|:| |right| (|NonNegativeInteger|))))
   (|isDomain| *1 (|ProductFacet|))))) 
(((*1 *2 *3 *4 *5 *2)
  (AND (|isDomain| *3 (|Polynomial| (|Integer|)))
       (|isDomain| *4 (|List| (|Symbol|))) (|isDomain| *5 (|List| (|Integer|)))
       (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|PolynomialEvaluationUtilities|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|ofCategory| *1 (|ModularEvaluationCategory| *4 *2))
       (|ofCategory| *4 (|Type|)) (|ofCategory| *2 (|Type|))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Polynomial| (|Integer|))) (|isDomain| *3 (|Integer|))
       (|isDomain| *1 (|PolynomialEvaluationUtilities|))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Fraction| (|Polynomial| (|Integer|))))
   (|isDomain| *4 (|Integer|))
   (|isDomain| *2
               (|Record| (|:| |numer| (|Polynomial| (|Integer|)))
                         (|:| |denom| (|Polynomial| (|Integer|)))))
   (|isDomain| *1 (|PolynomialEvaluationUtilities|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *2 (|JetBundleCategory|))
       (|isDomain| *1 (|JetLazyFunction| *2 *3))
       (|ofCategory| *3 (|JetBundleFunctionCategory| *2))))
 ((*1 *2 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *5
                   (|Record| (|:| |prime| (|Integer|))
                             (|:| |eval1coeffbuf| (|U32Vector|))
                             (|:| |eval1expbuf| (|SortedExponentVector|))))
       (|ofCategory| *1 (|ModularEvaluationCategory| *6 *2))
       (|ofCategory| *6 (|Type|)) (|ofCategory| *2 (|Type|))
       (|isDomain| *4 (|Integer|))))
 ((*1 *2 *2 *3 *4 *5)
  (AND (|isDomain| *2 (|Polynomial| (|Integer|))) (|isDomain| *3 (|Symbol|))
       (|isDomain| *5
                   (|Record| (|:| |prime| (|Integer|))
                             (|:| |eval1coeffbuf| (|U32Vector|))
                             (|:| |eval1expbuf| (|SortedExponentVector|))))
       (|isDomain| *4 (|Integer|))
       (|isDomain| *1 (|PolynomialEvaluationUtilities|))))
 ((*1 *2 *2 *3 *4 *5)
  (|partial| AND
   (|isDomain| *2
               (|Record| (|:| |numer| (|Polynomial| (|Integer|)))
                         (|:| |denom| (|Polynomial| (|Integer|)))))
   (|isDomain| *3 (|Symbol|))
   (|isDomain| *5
               (|Record| (|:| |prime| (|Integer|))
                         (|:| |eval1coeffbuf| (|U32Vector|))
                         (|:| |eval1expbuf| (|SortedExponentVector|))))
   (|isDomain| *4 (|Integer|))
   (|isDomain| *1 (|PolynomialEvaluationUtilities|))))) 
(((*1 *2 *3 *2 *4)
  (AND
   (|isDomain| *4
               (|Record| (|:| |prime| (|Integer|))
                         (|:| |eval1coeffbuf| (|U32Vector|))
                         (|:| |eval1expbuf| (|SortedExponentVector|))))
   (|ofCategory| *1 (|ModularEvaluationCategory| *5 *3))
   (|ofCategory| *5 (|Type|)) (|ofCategory| *3 (|Type|))
   (|isDomain| *2 (|Integer|))))
 ((*1 *2 *3 *2 *4)
  (AND (|isDomain| *3 (|Polynomial| (|Integer|)))
       (|isDomain| *4
                   (|Record| (|:| |prime| (|Integer|))
                             (|:| |eval1coeffbuf| (|U32Vector|))
                             (|:| |eval1expbuf| (|SortedExponentVector|))))
       (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|PolynomialEvaluationUtilities|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|FinitelyGenerated|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|List| *6))
       (|isDomain| *1 (|PolynomialIdeal| *3 *4 *5 *6))
       (|ofCategory| *6 (|PolynomialCategory| *3 *4 *5))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Permutation| *3)))
       (|isDomain| *1 (|PermutationGroup| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *4))
       (|isDomain| *1 (|FiniteFieldPolynomialPackage| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *4))
       (|isDomain| *1 (|FiniteFieldPolynomialPackage| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|))))
 ((*1 *1) (|ofCategory| *1 (|Finite|)))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|Vector| *4))
       (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|))))
 ((*1 *1 *1) (|ofCategory| *1 (|IntegerNumberSystem|)))
 ((*1 *1 *1) (|isDomain| *1 (|Integer|)))
 ((*1 *1 *1) (|isDomain| *1 (|NonNegativeInteger|)))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Permutation| *3))
       (|isDomain| *1 (|PermutationGroup| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Permutation| *4))
       (|isDomain| *1 (|PermutationGroup| *4))
       (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *2)
  (AND (|ofCategory| *1 (|FloatingPointSystem|))
       (|isDomain| *2 (|PositiveInteger|))))
 ((*1 *1) (|ofCategory| *1 (|IntegerNumberSystem|)))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|MachineFloat|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|MachineFloat|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|PermutationGroup| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Permutation| *3)))
       (|isDomain| *1 (|PermutationGroup| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|List| (|NonNegativeInteger|))))
       (|isDomain| *1 (|PermutationGroup| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Permutation| *3)))
       (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|PermutationGroup| *3))))) 
(((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|PermutationCategory| *3))
       (|ofCategory| *3 (|SetCategory|)) (|isDomain| *2 (|Set| *3))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|Set| (|List| *4)))
       (|isDomain| *1 (|PermutationGroup| *4))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Set| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|Set| (|Set| *4)))
       (|isDomain| *1 (|PermutationGroup| *4))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *2 (|Set| *3)) (|isDomain| *1 (|PermutationGroup| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Set| (|Set| *3)))
       (|isDomain| *1 (|PermutationGroup| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|Permutation| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|PermutationGroup| *4))))) 
(((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|Permutation| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|PermutationGroup| *4))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Set| *3)) (|isDomain| *1 (|Permutation| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Set| *3)) (|isDomain| *1 (|PermutationGroup| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|PermutationGroup| *4))
       (|ofCategory| *4 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|PermutationGroup| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|List| (|Integer|))))
       (|isDomain| *1 (|PermutationGroup| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|List| (|Integer|))))
       (|isDomain| *1 (|PermutationGroup| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|List| *6)) (|isDomain| *4 (|Permutation| *6))
       (|isDomain| *5 (|NonNegativeInteger|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *2 (|Vector| (|NonNegativeInteger|)))
       (|isDomain| *1 (|PermutationGroup| *6))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *1 (|PermutationCategory| *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| *3))) (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *1 (|PermutationCategory| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|SquareMatrix| *4 *2)) (|ofType| *4 (|PositiveInteger|))
       (|ofCategory| *2 (|Join| (|Ring|) (|CommutativeStar|)))
       (|isDomain| *1 (|Permanent| *4 *2))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |preimage| (|List| *3))
                         (|:| |image| (|List| *3))))
   (|isDomain| *1 (|Permutation| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| *3))) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|Permutation| *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| *3))) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|Permutation| *3))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Partition|)) (|isDomain| *1 (|Permutation| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|Permutation| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|RetractableTo| (|Integer|)))
       (|ofCategory| *1 (|ExpressionSpace|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|IntegerNumberSystem|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Permutation| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|RetractableTo| (|Integer|)))
       (|ofCategory| *1 (|ExpressionSpace|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|IntegerNumberSystem|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Permutation| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Set| *3)) (|isDomain| *1 (|Permutation| *3))
       (|ofCategory| *3 (|Finite|)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *2)
  (OR
   (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|Finite|))
        (|ofCategory| *3 (|SetCategory|)) (|isDomain| *1 (|Permutation| *3)))
   (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|IntegerNumberSystem|))
        (|ofCategory| *3 (|SetCategory|)) (|isDomain| *1 (|Permutation| *3)))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|PendantTree| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *1 (|PendantTree| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *3 (|OrderedSet|)) (|isDomain| *2 (|Mapping| *4 *4))
       (|isDomain| *1 (|PartialDifferentialOperatorHelper| *4 *3))
       (|ofCategory| *4 (|PartialDifferentialRing| *3))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *3 (|OrderedSet|)) (|isDomain| *2 (|Automorphism| *4))
       (|isDomain| *1 (|PartialDifferentialOperatorHelper| *4 *3))
       (|ofCategory| *4 (|PartialDifferentialRing| *3))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|LinearOrdinaryDifferentialOperatorCategory| *2))
       (|ofCategory| *2 (|Ring|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *2 (|Record| (|:| |adjMat| *3) (|:| |detMat| *4)))
       (|isDomain| *1 (|MatrixLinearAlgebraFunctions| *4 *5 *6 *3))
       (|ofCategory| *3 (|MatrixCategory| *4 *5 *6))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *2 (|CommutativeRing|)) (|ofCategory| *2 (|Ring|))
       (|isDomain| *1 (|ModuleOperator| *2 *3))
       (|ofCategory| *3 (|LeftModule| *2))))
 ((*1 *1 *1)
  (AND (|ofCategory| *2 (|CommutativeRing|)) (|ofCategory| *2 (|Ring|))
       (|isDomain| *1 (|ModuleOperator| *2 *3))
       (|ofCategory| *3 (|LeftModule| *2))))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|Operator| *2)) (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *2 (|Ring|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|Operator| *2)) (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *2 (|Ring|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *1 (|PartialDifferentialOperator| *2 *3))
       (|ofCategory| *2 (|PartialDifferentialRing| *3))))) 
(((*1 *1)
  (AND (|ofCategory| *1 (|GradedAlgebra| *2 *3))
       (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *3 (|AbelianMonoid|))))
 ((*1 *1) (|isDomain| *1 (|InputForm|)))
 ((*1 *1) (|ofCategory| *1 (|JetBundleCategory|)))
 ((*1 *1) (|ofCategory| *1 (|MagmaWithUnit|)))
 ((*1 *1)
  (AND (|isDomain| *1 (|Pattern| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1)
  (AND (|isDomain| *1 (|PoincareBirkhoffWittLyndonBasis| *2))
       (|ofCategory| *2 (|OrderedSet|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|IndexedDirectProductCategory| *3 *4))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|Comparable|))
       (|isDomain| *2 (|List| (|Record| (|:| |k| *4) (|:| |c| *3))))))
 ((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |k| (|PoincareBirkhoffWittLyndonBasis| *3))
                          (|:| |c| *4))))
   (|isDomain| *1 (|LieExponentials| *3 *4 *5))
   (|ofCategory| *3 (|OrderedSet|))
   (|ofCategory| *4
                 (|Join| (|CommutativeRing|)
                         (|Module| (|Fraction| (|Integer|)))))
   (|ofType| *5 (|PositiveInteger|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|LyndonWord| *3)))
       (|isDomain| *1 (|PoincareBirkhoffWittLyndonBasis| *3))
       (|ofCategory| *3 (|OrderedSet|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|AntiSymm| *3 *4))
       (|ofCategory| *3 (|Ring|)) (|ofType| *4 (|List| (|Symbol|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Any|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|AnyFunctions1| *4)) (|ofCategory| *4 (|Type|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|DeRhamComplex| *3 *4))
       (|ofCategory| *3 (|Join| (|Ring|) (|Comparable|)))
       (|ofType| *4 (|List| (|Symbol|)))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FreeMagma| *3))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|LyndonWord| *3))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PoincareBirkhoffWittLyndonBasis| *3))
       (|ofCategory| *3 (|OrderedSet|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Pattern| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|List| *5)) (|isDomain| *1 (|PatternFunctions1| *4 *5))
       (|ofCategory| *5 (|Type|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Any|)) (|isDomain| *1 (|Pattern| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Pattern| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|PatternFunctions1| *4 *3)) (|ofCategory| *3 (|Type|))))) 
(((*1 *2 *1 *3)
  (|partial| AND (|isDomain| *3 (|Pattern| *4))
   (|ofCategory| *4 (|SetCategory|)) (|isDomain| *2 (|Boolean|))
   (|isDomain| *1 (|PatternMatchResult| *4 *5))
   (|ofCategory| *5 (|SetCategory|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Pattern| *5)) (|ofCategory| *5 (|SetCategory|))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|PatternFunctions1| *5 *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *6)) (|isDomain| *4 (|Pattern| *5))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|Type|))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PatternFunctions1| *5 *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Pattern| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|Mapping| (|Boolean|) *5))
       (|isDomain| *1 (|PatternFunctions1| *4 *5)) (|ofCategory| *5 (|Type|))))) 
(((*1 *2 *1)
  (|partial| AND
   (|isDomain| *2
               (|Record| (|:| |op| (|BasicOperator|))
                         (|:| |arg| (|List| (|Pattern| *3)))))
   (|isDomain| *1 (|Pattern| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1 *3)
  (|partial| AND (|isDomain| *3 (|BasicOperator|))
   (|isDomain| *2 (|List| (|Pattern| *4))) (|isDomain| *1 (|Pattern| *4))
   (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *2 *1)
  (|partial| AND
   (|isDomain| *2
               (|Record| (|:| |num| (|Pattern| *3))
                         (|:| |den| (|Pattern| *3))))
   (|isDomain| *1 (|Pattern| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (|partial| AND (|isDomain| *2 (|List| (|Pattern| *3)))
   (|isDomain| *1 (|Pattern| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|Pattern| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Pattern| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Pattern| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Pattern| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Pattern| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Pattern| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Pattern| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Any|))) (|isDomain| *1 (|Pattern| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Any|))) (|isDomain| *1 (|Pattern| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Any|))) (|isDomain| *1 (|Pattern| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *2 *3 *3 *3)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|Boolean|))
       (|isDomain| *1 (|Pattern| *4)) (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|Symbol|))) (|isDomain| *3 (|Any|))
       (|isDomain| *1 (|Pattern| *4)) (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |var| (|List| (|Symbol|))) (|:| |pred| (|Any|))))
   (|isDomain| *1 (|Pattern| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Pattern| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|Pattern| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Any|))) (|isDomain| *1 (|Pattern| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *2)
  (|partial| AND (|isDomain| *2 (|List| (|Pattern| *3)))
   (|isDomain| *1 (|Pattern| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *4 (|SetCategory|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PatternMatchListResult| *3 *4 *5))
       (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *5 (|ListAggregate| *4))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|PatternMatchResult| *3 *4))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *1)
  (AND (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|PatternMatchListResult| *2 *3 *4))
       (|ofCategory| *2 (|SetCategory|))
       (|ofCategory| *4 (|ListAggregate| *3))))
 ((*1 *1)
  (AND (|isDomain| *1 (|PatternMatchResult| *2 *3))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *3 *1)
  (|partial| AND (|isDomain| *3 (|Pattern| *4))
   (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *2 (|SetCategory|))
   (|isDomain| *1 (|PatternMatchResult| *4 *2))))) 
(((*1 *1 *2 *3 *1)
  (AND (|isDomain| *2 (|Pattern| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|PatternMatchResult| *4 *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *2 *3 *1)
  (AND (|isDomain| *2 (|Pattern| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|PatternMatchResult| *4 *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *2 *3 *1 *3)
  (AND (|isDomain| *2 (|Pattern| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|PatternMatchResult| *4 *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *6)) (|ofCategory| *6 (|PatternMatchable| *5))
       (|ofCategory| *5 (|SetCategory|))
       (|isDomain| *2 (|PatternMatchListResult| *5 *6 (|List| *6)))
       (|isDomain| *1 (|PatternMatch| *5 *6 *4))
       (|ofCategory| *4 (|ConvertibleTo| (|Pattern| *5)))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|SetCategory|))
       (|isDomain| *2 (|List| (|Equation| *3)))
       (|isDomain| *1 (|PatternMatch| *5 *3 *4))
       (|ofCategory| *3 (|RetractableTo| (|Symbol|)))
       (|ofCategory| *3 (|PatternMatchable| *5))
       (|ofCategory| *4 (|ConvertibleTo| (|Pattern| *5)))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|SetCategory|))
       (|isDomain| *2 (|List| (|Equation| (|Polynomial| *3))))
       (|isDomain| *1 (|PatternMatch| *5 *3 *4)) (|ofCategory| *3 (|Ring|))
       (|not| (|ofCategory| *3 (|RetractableTo| (|Symbol|))))
       (|ofCategory| *3 (|PatternMatchable| *5))
       (|ofCategory| *4 (|ConvertibleTo| (|Pattern| *5)))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|SetCategory|))
       (|isDomain| *2 (|PatternMatchResult| *5 *3))
       (|isDomain| *1 (|PatternMatch| *5 *3 *4))
       (|not| (|ofCategory| *3 (|RetractableTo| (|Symbol|))))
       (|not| (|ofCategory| *3 (|Ring|)))
       (|ofCategory| *3 (|PatternMatchable| *5))
       (|ofCategory| *4 (|ConvertibleTo| (|Pattern| *5)))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|BasicOperator|))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|ExpressionSpace|)) (|isDomain| *3 (|Symbol|))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|ExpressionSpace|)) (|isDomain| *3 (|BasicOperator|))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|Kernel| *4)) (|ofCategory| *4 (|Comparable|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|BasicOperator|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|Kernel| *4)) (|ofCategory| *4 (|Comparable|))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|SetCategory|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PatternMatch| *5 *3 *4))
       (|ofCategory| *3 (|PatternMatchable| *5))
       (|ofCategory| *4 (|ConvertibleTo| (|Pattern| *5)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *6)) (|ofCategory| *6 (|PatternMatchable| *5))
       (|ofCategory| *5 (|SetCategory|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PatternMatch| *5 *6 *4))
       (|ofCategory| *4 (|ConvertibleTo| (|Pattern| *5)))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|PatternMatchResult| *4 *5))
       (|isDomain| *3 (|PatternMatchResult| *4 *6))
       (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *6 (|ListAggregate| *5))
       (|isDomain| *1 (|PatternMatchListResult| *4 *5 *6))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|PatternMatchResult| *3 *4))
       (|isDomain| *1 (|PatternMatchListResult| *3 *4 *5))
       (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *5 (|ListAggregate| *4))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|PatternMatchResult| *3 *5))
       (|isDomain| *1 (|PatternMatchListResult| *3 *4 *5))
       (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *5 (|ListAggregate| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|Stream| (|List| (|Integer|))))
       (|isDomain| *1 (|PartitionsAndPermutations|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|Stream| (|List| (|Integer|))))
       (|isDomain| *1 (|PartitionsAndPermutations|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|Stream| (|List| (|Integer|))))
       (|isDomain| *1 (|PartitionsAndPermutations|))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|Stream| (|List| (|Integer|))))
       (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *1 (|PartitionsAndPermutations|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|Stream| (|List| (|Integer|))))
       (|isDomain| *1 (|PartitionsAndPermutations|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Stream| (|List| (|Integer|))))
       (|isDomain| *1 (|PartitionsAndPermutations|))))) 
(((*1 *2 *3 *3 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|Stream| (|List| (|Integer|))))
       (|isDomain| *1 (|PartitionsAndPermutations|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|Stream| (|List| (|Integer|))))
       (|isDomain| *1 (|PartitionsAndPermutations|))))) 
(((*1 *2 *3 *3 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|Stream| (|List| (|Integer|))))
       (|isDomain| *1 (|PartitionsAndPermutations|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|Stream| (|List| (|Integer|))))
       (|isDomain| *1 (|PartitionsAndPermutations|))))) 
(((*1 *2 *3 *3 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|Stream| (|List| (|Integer|))))
       (|isDomain| *1 (|PartitionsAndPermutations|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|Stream| (|List| (|Integer|))))
       (|isDomain| *1 (|PartitionsAndPermutations|))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|Stream| (|List| (|Integer|))))
       (|isDomain| *1 (|PartitionsAndPermutations|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|ParametricPlaneCurve| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|ParametricSpaceCurve| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|ParametricSurface| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *2 *2 *2)
  (AND (|isDomain| *1 (|ParametricSurface| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|DequeueAggregate| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Stream| (|List| *4))) (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|Stream| *4)) (|isDomain| *1 (|PathArrayPackage| *4))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|Stream| *4)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|Stream| (|List| *4)))
       (|isDomain| *1 (|PathArrayPackage| *4))))) 
(((*1 *2 *3 *3 *3)
  (AND (|isDomain| *3 (|Stream| *4)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|Stream| (|List| *4)))
       (|isDomain| *1 (|PathArrayPackage| *4))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Color|)) (|isDomain| *1 (|Palette|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Color|)) (|isDomain| *1 (|Palette|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *1 (|DisplayPackage|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|List| (|String|))) (|isDomain| *1 (|DisplayPackage|))))
 ((*1 *1 *2) (AND (|isDomain| *2 (|Color|)) (|isDomain| *1 (|Palette|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Color|)) (|isDomain| *1 (|Palette|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Color|)) (|isDomain| *1 (|Palette|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|ContinuedFraction| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|BalancedPAdicRational| *3)) (|ofType| *3 (|Integer|))))
 ((*1 *1 *2 *3 *3)
  (AND (|isDomain| *3 (|Stream| *2)) (|ofCategory| *2 (|EuclideanDomain|))
       (|isDomain| *1 (|ContinuedFraction| *2))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Fraction| *3)) (|ofCategory| *3 (|EuclideanDomain|))
       (|isDomain| *1 (|ContinuedFraction| *3))))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|ContinuedFraction| (|Integer|)))
       (|isDomain| *1 (|NumericContinuedFraction| *3))
       (|ofCategory| *3 (|FloatingPointSystem|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|ContinuedFraction| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|PAdicRational| *3)) (|ofType| *3 (|Integer|))))
 ((*1 *2 *1)
  (AND (|ofType| *3 (|Integer|))
       (|isDomain| *2 (|ContinuedFraction| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|PAdicRationalConstructor| *3 *4))
       (|ofCategory| *4 (|PAdicIntegerCategory| *3))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|FloatingPointSystem&| *3))
       (|ofCategory| *3 (|FloatingPointSystem|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|FloatingPointSystem&| *3))
       (|ofCategory| *3 (|FloatingPointSystem|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|ofCategory| *1 (|arbitraryPrecision|))
       (|ofCategory| *1 (|FloatingPointSystem|))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FloatingPointSystem|))
       (|isDomain| *2 (|PositiveInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|PAdicIntegerCategory| *3))
       (|isDomain| *2 (|Stream| (|Integer|)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *2 (|AbelianMonoid|))
       (|isDomain| *1 (|EuclideanModularRing| *3 *4 *2 *5 *6 *7))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofType| *5 (|Mapping| *4 *4 *2))
       (|ofType| *6 (|Mapping| (|Union| *2 "failed") *2 *2))
       (|ofType| *7 (|Mapping| (|Union| *4 "failed") *4 *4 *2))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|AbelianMonoid|))
       (|isDomain| *1 (|ModularField| *3 *2 *4 *5 *6))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofType| *4 (|Mapping| *3 *3 *2))
       (|ofType| *5 (|Mapping| (|Union| *2 "failed") *2 *2))
       (|ofType| *6 (|Mapping| (|Union| *3 "failed") *3 *3 *2))))
 ((*1 *2)
  (AND (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))
       (|isDomain| *1 (|ModMonic| *3 *2)) (|ofCategory| *3 (|Ring|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|AbelianMonoid|))
       (|isDomain| *1 (|ModularRing| *3 *2 *4 *5 *6))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofType| *4 (|Mapping| *3 *3 *2))
       (|ofType| *5 (|Mapping| (|Union| *2 "failed") *2 *2))
       (|ofType| *6 (|Mapping| (|Union| *3 "failed") *3 *3 *2))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|PAdicIntegerCategory| *3))
       (|isDomain| *2 (|Integer|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|PAdicIntegerCategory| *3))
       (|isDomain| *2 (|Integer|))))) 
(((*1 *1 *1) (|ofCategory| *1 (|PAdicIntegerCategory| *2)))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| (|Integer|)))
       (|isDomain| *3 (|Integer|))
       (|ofCategory| *1 (|PAdicIntegerCategory| *4))))) 
(((*1 *2 *3 *3 *4 *4)
  (|partial| AND (|isDomain| *3 (|NonNegativeInteger|))
   (|ofCategory| *5 (|Field|)) (|isDomain| *2 (|Fraction| *6))
   (|isDomain| *1 (|PadeApproximants| *5 *4 *6))
   (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *5))
   (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))))
 ((*1 *2 *3 *3 *4 *4)
  (|partial| AND (|isDomain| *3 (|NonNegativeInteger|))
   (|isDomain| *4 (|UnivariateTaylorSeries| *5 *6 *7))
   (|ofCategory| *5 (|Field|)) (|ofType| *6 (|Symbol|)) (|ofType| *7 *5)
   (|isDomain| *2 (|Fraction| (|UnivariatePolynomial| *6 *5)))
   (|isDomain| *1 (|PadeApproximantPackage| *5 *6 *7))))
 ((*1 *2 *3 *3 *4)
  (|partial| AND (|isDomain| *3 (|NonNegativeInteger|))
   (|isDomain| *4 (|UnivariateTaylorSeries| *5 *6 *7))
   (|ofCategory| *5 (|Field|)) (|ofType| *6 (|Symbol|)) (|ofType| *7 *5)
   (|isDomain| *2 (|Fraction| (|UnivariatePolynomial| *6 *5)))
   (|isDomain| *1 (|PadeApproximantPackage| *5 *6 *7))))) 
(((*1 *2 *3 *3 *4 *4)
  (|partial| AND (|isDomain| *3 (|NonNegativeInteger|))
   (|ofCategory| *5 (|Field|)) (|isDomain| *2 (|ContinuedFraction| *6))
   (|isDomain| *1 (|PadeApproximants| *5 *4 *6))
   (|ofCategory| *4 (|UnivariateTaylorSeriesCategory| *5))
   (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|OutputForm|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|OutputForm|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|OutputForm|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|OutputForm|))))) 
(((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|OutputForm|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|OutputForm|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|OutputForm|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|OutputForm|))))) 
(((*1 *1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|OutputForm|))))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OutputForm|))))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|ExpressionSpace|))))
 ((*1 *1 *1) (|ofCategory| *1 (|ExpressionSpace|)))
 ((*1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|List| (|Polynomial| (|Integer|))))
       (|isDomain| *4 (|Expression| (|Complex| (|Float|))))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|List| (|Polynomial| (|Integer|))))
       (|isDomain| *4 (|Expression| (|Float|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|List| (|Polynomial| (|Integer|))))
       (|isDomain| *4 (|Expression| (|Integer|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|Vector| (|Expression| (|Complex| (|Float|)))))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|Vector| (|Expression| (|Float|))))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|Vector| (|Expression| (|Integer|))))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|Matrix| (|Expression| (|Complex| (|Float|)))))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|Matrix| (|Expression| (|Float|))))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|Matrix| (|Expression| (|Integer|))))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|Expression| (|Complex| (|Float|))))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|Expression| (|Float|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|Expression| (|Integer|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|List| (|Polynomial| (|Integer|))))
       (|isDomain| *4 (|Expression| (|MachineComplex|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|List| (|Polynomial| (|Integer|))))
       (|isDomain| *4 (|Expression| (|MachineFloat|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|List| (|Polynomial| (|Integer|))))
       (|isDomain| *4 (|Expression| (|MachineInteger|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|Vector| (|Expression| (|MachineComplex|))))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|Vector| (|Expression| (|MachineFloat|))))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|Vector| (|Expression| (|MachineInteger|))))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|Matrix| (|Expression| (|MachineComplex|))))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|Matrix| (|Expression| (|MachineFloat|))))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|Matrix| (|Expression| (|MachineInteger|))))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|Vector| (|MachineComplex|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|Vector| (|MachineFloat|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|Vector| (|MachineInteger|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|Matrix| (|MachineComplex|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|Matrix| (|MachineFloat|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|Matrix| (|MachineInteger|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|Expression| (|MachineComplex|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|Expression| (|MachineFloat|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|Expression| (|MachineInteger|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|String|))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|OutputForm|))))) 
(((*1 *1) (|isDomain| *1 (|Character|)))
 ((*1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|OutputForm|))))
 ((*1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))
 ((*1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|OutputForm|))))
 ((*1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|OutputForm|))))
 ((*1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *1)) (|ofCategory| *1 (|ExpressionSpace|))))
 ((*1 *1 *1) (|ofCategory| *1 (|ExpressionSpace|)))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|OutputForm|))))
 ((*1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|OutputForm|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|OutputForm|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|OutputForm|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|OutputForm|))) (|isDomain| *1 (|OutputForm|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|BasicType|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *1 *1) (|ofCategory| *1 (|EuclideanDomain|)))
 ((*1 *1 *1 *1) (|isDomain| *1 (|NonNegativeInteger|)))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *1 *1) (|ofCategory| *1 (|EuclideanDomain|)))
 ((*1 *1 *1 *1) (|isDomain| *1 (|NonNegativeInteger|)))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|Boolean|)))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|BitAggregate|)))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|Boolean|)))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|BitAggregate|)))
 ((*1 *1 *1 *1) (|isDomain| *1 (|OutputForm|)))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Any|))) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|OutputPackage|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|OutputPackage|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|OutputPackage|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|OutputForm|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OutputPackage|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *3 (|Field|)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|Record| (|:| |quotient| *1) (|:| |remainder| *1)))
       (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *3))))
 ((*1 *2 *3 *3 *4)
  (AND (|isDomain| *4 (|Automorphism| *5)) (|ofCategory| *5 (|Field|))
       (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|Record| (|:| |quotient| *3) (|:| |remainder| *3)))
       (|isDomain| *1 (|UnivariateSkewPolynomialCategoryOps| *5 *3))
       (|ofCategory| *3 (|UnivariateSkewPolynomialCategory| *5))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *3 (|Field|)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|Record| (|:| |quotient| *1) (|:| |remainder| *1)))
       (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *3))))
 ((*1 *2 *3 *3 *4)
  (AND (|isDomain| *4 (|Automorphism| *5)) (|ofCategory| *5 (|Field|))
       (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|Record| (|:| |quotient| *3) (|:| |remainder| *3)))
       (|isDomain| *1 (|UnivariateSkewPolynomialCategoryOps| *5 *3))
       (|ofCategory| *3 (|UnivariateSkewPolynomialCategory| *5))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|Record| (|:| |quotient| *1) (|:| |remainder| *1)))
       (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *3))))
 ((*1 *2 *3 *3 *4)
  (AND (|isDomain| *4 (|Automorphism| *5)) (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|Record| (|:| |quotient| *3) (|:| |remainder| *3)))
       (|isDomain| *1 (|UnivariateSkewPolynomialCategoryOps| *5 *3))
       (|ofCategory| *3 (|UnivariateSkewPolynomialCategory| *5))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|Record| (|:| |quotient| *1) (|:| |remainder| *1)))
       (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *3))))
 ((*1 *2 *3 *3 *4)
  (AND (|isDomain| *4 (|Automorphism| *5)) (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|Record| (|:| |quotient| *3) (|:| |remainder| *3)))
       (|isDomain| *1 (|UnivariateSkewPolynomialCategoryOps| *5 *3))
       (|ofCategory| *3 (|UnivariateSkewPolynomialCategory| *5))))) 
(((*1 *2 *2 *2 *3 *4)
  (AND (|isDomain| *3 (|Automorphism| *5)) (|isDomain| *4 (|Mapping| *5 *5))
       (|ofCategory| *5 (|Ring|))
       (|isDomain| *1 (|UnivariateSkewPolynomialCategoryOps| *5 *2))
       (|ofCategory| *2 (|UnivariateSkewPolynomialCategory| *5))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *2))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|Field|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *2))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|Field|))))) 
(((*1 *1 *1 *1)
  (|partial| AND (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *2))
   (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|Field|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *2))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|Field|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *3 (|Field|)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2
                   (|Record| (|:| |coef1| *1) (|:| |coef2| *1)
                             (|:| |generator| *1)))
       (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *3))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *2))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|Field|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *2))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|Field|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *2))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|Field|))))) 
(((*1 *1 *1 *1)
  (|partial| AND (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *2))
   (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|Field|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *2))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|Field|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *3 (|Field|)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2
                   (|Record| (|:| |coef1| *1) (|:| |coef2| *1)
                             (|:| |generator| *1)))
       (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *3))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *3 (|Field|)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *2
                   (|Record| (|:| |generator| *1) (|:| |coef1| *1)
                             (|:| |coef2| *1) (|:| |coefu| *1)
                             (|:| |coefv| *1)))
       (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *3))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|UnivariateSkewPolynomialCategory| *2))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|Field|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|Vector| *5)) (|ofCategory| *5 (|OrderedAbelianMonoid|))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OrderingFunctions| *4 *5))
       (|ofType| *4 (|NonNegativeInteger|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|Vector| *5)) (|ofCategory| *5 (|OrderedAbelianMonoid|))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OrderingFunctions| *4 *5))
       (|ofType| *4 (|NonNegativeInteger|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|Vector| *5)) (|ofCategory| *5 (|OrderedAbelianMonoid|))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OrderingFunctions| *4 *5))
       (|ofType| *4 (|NonNegativeInteger|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|OrderedCompletion| (|Integer|)))
       (|isDomain| *1 (|Infinity|))))
 ((*1 *1)
  (AND (|isDomain| *1 (|OrderedCompletion| *2))
       (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|OrderedCompletion| (|Integer|)))
       (|isDomain| *1 (|Infinity|))))
 ((*1 *1)
  (AND (|isDomain| *1 (|OrderedCompletion| *2))
       (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|CardinalNumber|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OnePointCompletion| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OrderedCompletion| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OnePointCompletion| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OrderedCompletion| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|SingleInteger|))
       (|isDomain| *1 (|OrderedCompletion| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Database| (|IndexCard|)))
       (|isDomain| *1 (|OperationsQuery|))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *2 (|CommutativeRing|)) (|ofCategory| *2 (|Ring|))
       (|isDomain| *1 (|ModuleOperator| *2 *3))
       (|ofCategory| *3 (|LeftModule| *2))))
 ((*1 *2 *2)
  (AND (|isDomain| *1 (|Operator| *2)) (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|BasicOperator|)) (|isDomain| *4 (|List| *2))
   (|isDomain| *1 (|BasicOperatorFunctions1| *2))
   (|ofCategory| *2 (|SetCategory|))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|BasicOperator|))
       (|isDomain| *3 (|Mapping| *4 (|List| *4)))
       (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|BasicOperatorFunctions1| *4))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|BasicOperator|)) (|isDomain| *3 (|Mapping| *4 *4))
       (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|BasicOperatorFunctions1| *4))))
 ((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|BasicOperator|))
   (|isDomain| *2 (|Mapping| *4 (|List| *4)))
   (|isDomain| *1 (|BasicOperatorFunctions1| *4))
   (|ofCategory| *4 (|SetCategory|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *4 *4)) (|ofCategory| *4 (|LeftModule| *3))
       (|ofCategory| *3 (|Ring|)) (|isDomain| *1 (|ModuleOperator| *3 *4))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|Operator| *3))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *4 *4)) (|ofCategory| *4 (|LeftModule| *3))
       (|ofCategory| *3 (|Ring|)) (|isDomain| *1 (|ModuleOperator| *3 *4))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|Operator| *3))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|BasicOperator|)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|ModuleOperator| *4 *2))
       (|ofCategory| *2 (|LeftModule| *4))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|BasicOperator|)) (|isDomain| *1 (|Operator| *2))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|FreeGroup| (|BasicOperator|)))
       (|ofCategory| *2 (|Ring|)) (|isDomain| *1 (|ModuleOperator| *2 *4))
       (|ofCategory| *4 (|LeftModule| *2))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|FreeGroup| (|BasicOperator|)))
       (|isDomain| *1 (|Operator| *2)) (|ofCategory| *2 (|Ring|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|OnePointCompletion| (|Integer|)))
       (|isDomain| *1 (|Infinity|))))
 ((*1 *1)
  (AND (|isDomain| *1 (|OnePointCompletion| *2))
       (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|SingleInteger|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|OpenMathServerPackage|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|OpenMathConnection|)) (|isDomain| *4 (|Any|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathServerPackage|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|OpenMathConnection|)) (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|OpenMathServerPackage|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Exit|))
       (|isDomain| *1 (|OpenMathPackage|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|OpenMathPackage|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|OpenMathPackage|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *1 (|OpenMathPackage|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *1 (|OpenMathPackage|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|OpenMathPackage|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|OpenMathPackage|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|OpenMathDevice|)) (|isDomain| *2 (|Any|))
       (|isDomain| *1 (|OpenMathPackage|))))) 
(((*1 *2 *1) (AND (|ofCategory| *1 (|OpenMath|)) (|isDomain| *2 (|String|))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|OpenMath|)) (|isDomain| *3 (|Boolean|))
       (|isDomain| *2 (|String|))))
 ((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|OpenMath|)) (|isDomain| *3 (|OpenMathDevice|))
       (|isDomain| *2 (|Void|))))
 ((*1 *2 *3 *1 *4)
  (AND (|ofCategory| *1 (|OpenMath|)) (|isDomain| *3 (|OpenMathDevice|))
       (|isDomain| *4 (|Boolean|)) (|isDomain| *2 (|Void|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Expression| *4))
       (|ofCategory| *4 (|Join| (|OpenMath|) (|OrderedSet|) (|Ring|)))
       (|isDomain| *2 (|String|)) (|isDomain| *1 (|ExpressionToOpenMath| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Expression| *5)) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *5 (|Join| (|OpenMath|) (|OrderedSet|) (|Ring|)))
       (|isDomain| *2 (|String|)) (|isDomain| *1 (|ExpressionToOpenMath| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|OpenMathDevice|)) (|isDomain| *4 (|Expression| *5))
       (|ofCategory| *5 (|Join| (|OpenMath|) (|OrderedSet|) (|Ring|)))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|ExpressionToOpenMath| *5))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|OpenMathDevice|)) (|isDomain| *4 (|Expression| *6))
       (|isDomain| *5 (|Boolean|))
       (|ofCategory| *6 (|Join| (|OpenMath|) (|OrderedSet|) (|Ring|)))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|ExpressionToOpenMath| *6))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OpenMathErrorKind|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OpenMathErrorKind|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OpenMathErrorKind|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OpenMathErrorKind|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|OpenMathErrorKind|))
       (|isDomain| *1 (|OpenMathError|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Symbol|))) (|isDomain| *1 (|OpenMathError|))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|OpenMathErrorKind|))
       (|isDomain| *3 (|List| (|Symbol|))) (|isDomain| *1 (|OpenMathError|))))) 
(((*1 *1) (|isDomain| *1 (|OpenMathEncoding|)))) 
(((*1 *1) (|isDomain| *1 (|OpenMathEncoding|)))) 
(((*1 *1) (|isDomain| *1 (|OpenMathEncoding|)))) 
(((*1 *1) (|isDomain| *1 (|OpenMathEncoding|)))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Record| (|:| |cd| (|String|)) (|:| |name| (|String|))))
       (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|DoubleFloat|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|OpenMathEncoding|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *3 (|OpenMathEncoding|))
       (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *1 *2 *2 *3)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *3 (|OpenMathEncoding|))
       (|isDomain| *1 (|OpenMathDevice|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|SingleInteger|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|OpenMathConnection|))))) 
(((*1 *2 *1 *3 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|SingleInteger|))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OpenMathConnection|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|OpenMathDevice|))
       (|isDomain| *1 (|OpenMathConnection|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|OpenMathDevice|))
       (|isDomain| *1 (|OpenMathConnection|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|OpenMathConnection|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|SingleInteger|))
       (|isDomain| *1 (|OpenMathConnection|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|OutputFormTools|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *4 (|Symbol|))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OutputFormTools|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *4 (|Symbol|))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OutputFormTools|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|List| (|OutputForm|)))
       (|isDomain| *1 (|OutputFormTools|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|BasicOperator|))
       (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|AlgebraicFunction| *3 *4))
       (|ofCategory| *4 (|FunctionSpace| *3))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|BasicOperator|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|BasicOperator|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|BasicOperator|))
       (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|CombinatorialFunction| *3 *4))
       (|ofCategory| *4 (|FunctionSpace| *3))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|BasicOperator|))
       (|isDomain| *1 (|CommonOperators|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|BasicOperator|))
       (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *4))
       (|ofCategory| *4 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|BasicOperator|))
       (|isDomain| *1 (|ExpressionSpace&| *3))
       (|ofCategory| *3 (|ExpressionSpace|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *1 (|ExpressionSpace|))
       (|isDomain| *2 (|BasicOperator|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|BasicOperator|)) (|ofCategory| *4 (|Comparable|))
       (|isDomain| *1 (|FunctionSpace&| *3 *4))
       (|ofCategory| *3 (|FunctionSpace| *4))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|BasicOperator|))
       (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *4))
       (|ofCategory| *4 (|FunctionSpace| *3))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|BasicOperator|)) (|isDomain| *1 (|Kernel| *3))
       (|ofCategory| *3 (|Comparable|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|BasicOperator|))
       (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|LiouvillianFunction| *3 *4))
       (|ofCategory| *4
                     (|Join| (|FunctionSpace| *3) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|OutputFormTools|))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|OrientedFacet|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|OrientedFacet|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Integer|))) (|isDomain| *1 (|OrientedFacet|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Integer|))) (|isDomain| *1 (|OrientedFacet|))))) 
(((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|List| (|OrientedFacet|)))
   (|isDomain| *1 (|OrientedFacet|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|OrientedFacet|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Integer|))) (|isDomain| *1 (|OrientedFacet|))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|List| (|CubicalFacet|)))
       (|isDomain| *1 (|CubicalFacet|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|List| (|CubicalFacet|)))
       (|isDomain| *1 (|CubicalFacet|))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|List| (|OrientedFacet|)))
       (|isDomain| *1 (|OrientedFacet|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|List| (|OrientedFacet|)))
       (|isDomain| *1 (|OrientedFacet|))))) 
(((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OrientedFacet|))))) 
(((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|CubicalFacet|))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|OrientedFacet|))))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|OrientedFacet|)))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Integer|)))
       (|isDomain| *1 (|CartesianTensor| *3 *4 *5)) (|ofType| *3 (|Integer|))
       (|ofType| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|CommutativeRing|))))
 ((*1 *1 *1) (|isDomain| *1 (|OrientedFacet|)))) 
(((*1 *2 *2 *3 *3)
  (AND (|isDomain| *2 (|List| (|List| (|Boolean|))))
       (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|OrientedFacet|))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|List| (|List| (|Boolean|))))
       (|isDomain| *1 (|OrientedFacet|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|OrientedFacet|))))) 
(((*1 *2 *3 *4 *5)
  (|partial| AND (|isDomain| *5 (|List| *4)) (|ofCategory| *4 (|Field|))
   (|isDomain| *2 (|Vector| *4)) (|isDomain| *1 (|ODETools| *4 *3))
   (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|Field|))
       (|isDomain| *2 (|Matrix| *4)) (|isDomain| *1 (|ODETools| *4 *5))
       (|ofCategory| *5 (|LinearOrdinaryDifferentialOperatorCategory| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|Field|)) (|isDomain| *2 (|Matrix| *5))
       (|isDomain| *1 (|ODETools| *5 *6))
       (|ofCategory| *6 (|LinearOrdinaryDifferentialOperatorCategory| *5))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Polynomial| *5)))
       (|isDomain| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2
                   (|List|
                    (|List| (|Equation| (|Fraction| (|Polynomial| *5))))))
       (|isDomain| *1 (|NonLinearSolvePackage| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Polynomial| *4)))
       (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2
                   (|List|
                    (|List| (|Equation| (|Fraction| (|Polynomial| *4))))))
       (|isDomain| *1 (|NonLinearSolvePackage| *4))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Matrix| *7)) (|isDomain| *4 (|Vector| *6))
       (|isDomain| *5
                   (|Mapping|
                    (|Record| (|:| |particular| (|Union| *6 "failed"))
                              (|:| |basis| (|List| *6)))
                    *7 *6))
       (|ofCategory| *6 (|Field|))
       (|ofCategory| *7 (|LinearOrdinaryDifferentialOperatorCategory| *6))
       (|isDomain| *2
                   (|Record|
                    (|:| |particular| (|Union| (|Vector| *6) "failed"))
                    (|:| |basis| (|List| (|Vector| *6)))))
       (|isDomain| *1 (|SystemODESolver| *6 *7))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Matrix| *7)) (|isDomain| *4 (|List| (|Vector| *6)))
       (|isDomain| *5
                   (|Mapping|
                    (|Record|
                     (|:| |particular|
                          (|List|
                           (|Record| (|:| |ratpart| *6)
                                     (|:| |coeffs| (|Vector| *6)))))
                     (|:| |basis| (|List| *6)))
                    *7 (|List| *6)))
       (|ofCategory| *6 (|Field|))
       (|ofCategory| *7 (|LinearOrdinaryDifferentialOperatorCategory| *6))
       (|isDomain| *2
                   (|Record|
                    (|:| |particular|
                         (|List|
                          (|Record| (|:| |ratpart| (|Vector| *6))
                                    (|:| |coeffs| (|Vector| *6)))))
                    (|:| |basis| (|List| (|Vector| *6)))))
       (|isDomain| *1 (|SystemODESolver| *6 *7))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *5)) (|isDomain| *4 (|Vector| *5))
       (|ofCategory| *5 (|Field|))
       (|isDomain| *2
                   (|Record| (|:| A (|Matrix| *5))
                             (|:| |eqs|
                                  (|List|
                                   (|Record| (|:| C (|Matrix| *5))
                                             (|:| |g| (|Vector| *5))
                                             (|:| |eq| *6) (|:| |rh| *5))))))
       (|isDomain| *1 (|SystemODESolver| *5 *6))
       (|ofCategory| *6 (|LinearOrdinaryDifferentialOperatorCategory| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *5)) (|isDomain| *4 (|List| (|Vector| *5)))
       (|ofCategory| *5 (|Field|))
       (|isDomain| *2
                   (|Record| (|:| A (|Matrix| *5))
                             (|:| |eqs|
                                  (|List|
                                   (|Record| (|:| C (|Matrix| *5))
                                             (|:| |lg| (|List| (|Vector| *5)))
                                             (|:| |eq| *6)
                                             (|:| |lrh| (|List| *5)))))))
       (|isDomain| *1 (|SystemODESolver| *5 *6))
       (|ofCategory| *6 (|LinearOrdinaryDifferentialOperatorCategory| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *6)) (|isDomain| *4 (|Vector| *5))
       (|ofCategory| *5 (|Field|))
       (|ofCategory| *6 (|LinearOrdinaryDifferentialOperatorCategory| *5))
       (|isDomain| *2
                   (|Record| (|:| |mat| (|Matrix| *6))
                             (|:| |vec| (|Vector| *5))))
       (|isDomain| *1 (|SystemODESolver| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *6)) (|isDomain| *4 (|List| (|Vector| *5)))
       (|ofCategory| *5 (|Field|))
       (|ofCategory| *6 (|LinearOrdinaryDifferentialOperatorCategory| *5))
       (|isDomain| *2
                   (|Record| (|:| |mat| (|Matrix| *6))
                             (|:| |vecs| (|List| (|Vector| *5)))))
       (|isDomain| *1 (|SystemODESolver| *5 *6))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|LinearOrdinaryDifferentialOperator1| (|Fraction| *6)))
       (|isDomain| *4 (|Mapping| (|List| *5) *6))
       (|ofCategory| *5
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|RetractableTo| (|Fraction| (|Integer|)))))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|isDomain| *2 (|List| (|Fraction| *6)))
       (|isDomain| *1 (|RationalRicDE| *5 *6))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|LinearOrdinaryDifferentialOperator1| (|Fraction| *7)))
       (|isDomain| *4 (|Mapping| (|List| *6) *7))
       (|isDomain| *5 (|Mapping| (|Factored| *7) *7))
       (|ofCategory| *6
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|RetractableTo| (|Fraction| (|Integer|)))))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| *6))
       (|isDomain| *2 (|List| (|Fraction| *7)))
       (|isDomain| *1 (|RationalRicDE| *6 *7))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3 (|LinearOrdinaryDifferentialOperator2| *6 (|Fraction| *6)))
   (|isDomain| *4 (|Mapping| (|List| *5) *6))
   (|ofCategory| *5
                 (|Join| (|Field|) (|CharacteristicZero|)
                         (|RetractableTo| (|Integer|))
                         (|RetractableTo| (|Fraction| (|Integer|)))))
   (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
   (|isDomain| *2 (|List| (|Fraction| *6)))
   (|isDomain| *1 (|RationalRicDE| *5 *6))))
 ((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3 (|LinearOrdinaryDifferentialOperator2| *7 (|Fraction| *7)))
   (|isDomain| *4 (|Mapping| (|List| *6) *7))
   (|isDomain| *5 (|Mapping| (|Factored| *7) *7))
   (|ofCategory| *6
                 (|Join| (|Field|) (|CharacteristicZero|)
                         (|RetractableTo| (|Integer|))
                         (|RetractableTo| (|Fraction| (|Integer|)))))
   (|ofCategory| *7 (|UnivariatePolynomialCategory| *6))
   (|isDomain| *2 (|List| (|Fraction| *7)))
   (|isDomain| *1 (|RationalRicDE| *6 *7))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|LinearOrdinaryDifferentialOperator1| (|Fraction| *5)))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *4 (|AlgebraicallyClosedField|))
       (|ofCategory| *4
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|RetractableTo| (|Fraction| (|Integer|)))))
       (|isDomain| *2 (|List| (|Fraction| *5)))
       (|isDomain| *1 (|RationalRicDE| *4 *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|LinearOrdinaryDifferentialOperator1| (|Fraction| *6)))
       (|isDomain| *4 (|Mapping| (|Factored| *6) *6))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *5 (|AlgebraicallyClosedField|))
       (|ofCategory| *5
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|RetractableTo| (|Fraction| (|Integer|)))))
       (|isDomain| *2 (|List| (|Fraction| *6)))
       (|isDomain| *1 (|RationalRicDE| *5 *6))))
 ((*1 *2 *3)
  (AND
   (|isDomain| *3 (|LinearOrdinaryDifferentialOperator2| *5 (|Fraction| *5)))
   (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
   (|ofCategory| *4 (|AlgebraicallyClosedField|))
   (|ofCategory| *4
                 (|Join| (|Field|) (|CharacteristicZero|)
                         (|RetractableTo| (|Integer|))
                         (|RetractableTo| (|Fraction| (|Integer|)))))
   (|isDomain| *2 (|List| (|Fraction| *5)))
   (|isDomain| *1 (|RationalRicDE| *4 *5))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3 (|LinearOrdinaryDifferentialOperator2| *6 (|Fraction| *6)))
   (|isDomain| *4 (|Mapping| (|Factored| *6) *6))
   (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
   (|ofCategory| *5 (|AlgebraicallyClosedField|))
   (|ofCategory| *5
                 (|Join| (|Field|) (|CharacteristicZero|)
                         (|RetractableTo| (|Integer|))
                         (|RetractableTo| (|Fraction| (|Integer|)))))
   (|isDomain| *2 (|List| (|Fraction| *6)))
   (|isDomain| *1 (|RationalRicDE| *5 *6))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Mapping| (|List| *5) *6))
       (|ofCategory| *5
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Fraction| (|Integer|)))))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|isDomain| *2 (|List| (|Record| (|:| |poly| *6) (|:| |eq| *3))))
       (|isDomain| *1 (|PrimitiveRatRicDE| *5 *6 *3 *7))
       (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *6))
       (|ofCategory| *7
                     (|LinearOrdinaryDifferentialOperatorCategory|
                      (|Fraction| *6)))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3 (|LinearOrdinaryDifferentialOperator2| *6 (|Fraction| *6)))
   (|isDomain| *4 (|Mapping| (|List| *5) *6))
   (|ofCategory| *5
                 (|Join| (|Field|) (|CharacteristicZero|)
                         (|RetractableTo| (|Integer|))
                         (|RetractableTo| (|Fraction| (|Integer|)))))
   (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
   (|isDomain| *2
               (|List|
                (|Record| (|:| |poly| *6)
                          (|:| |eq|
                               (|LinearOrdinaryDifferentialOperator2| *6
                                                                      (|Fraction|
                                                                       *6))))))
   (|isDomain| *1 (|RationalRicDE| *5 *6))))) 
(((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *4 (|Mapping| (|List| *7) *7 (|SparseUnivariatePolynomial| *7)))
   (|isDomain| *5 (|Mapping| (|Factored| *7) *7))
   (|ofCategory| *7 (|UnivariatePolynomialCategory| *6))
   (|ofCategory| *6
                 (|Join| (|Field|) (|CharacteristicZero|)
                         (|RetractableTo| (|Fraction| (|Integer|)))))
   (|isDomain| *2
               (|List| (|Record| (|:| |frac| (|Fraction| *7)) (|:| |eq| *3))))
   (|isDomain| *1 (|PrimitiveRatRicDE| *6 *7 *3 *8))
   (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *7))
   (|ofCategory| *8
                 (|LinearOrdinaryDifferentialOperatorCategory|
                  (|Fraction| *7)))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3 (|LinearOrdinaryDifferentialOperator2| *6 (|Fraction| *6)))
   (|isDomain| *4 (|Mapping| (|Factored| *6) *6))
   (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
   (|ofCategory| *5
                 (|Join| (|Field|) (|CharacteristicZero|)
                         (|RetractableTo| (|Integer|))
                         (|RetractableTo| (|Fraction| (|Integer|)))))
   (|isDomain| *2
               (|List|
                (|Record| (|:| |frac| (|Fraction| *6))
                          (|:| |eq|
                               (|LinearOrdinaryDifferentialOperator2| *6
                                                                      (|Fraction|
                                                                       *6))))))
   (|isDomain| *1 (|RationalRicDE| *5 *6))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|Field|))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *4 (|MonogenicAlgebra| *5 *7))
       (|isDomain| *2
                   (|Record| (|:| |mat| (|Matrix| *6))
                             (|:| |vec| (|Vector| *5))))
       (|isDomain| *1 (|ReduceLODE| *5 *6 *7 *4 *3))
       (|ofCategory| *6 (|LinearOrdinaryDifferentialOperatorCategory| *5))
       (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| *8)) (|ofCategory| *8 (|MonogenicAlgebra| *5 *7))
       (|ofCategory| *5 (|Field|))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| *5))
       (|isDomain| *2
                   (|Record| (|:| |mat| (|Matrix| *6))
                             (|:| |vecs| (|List| (|Vector| *5)))))
       (|isDomain| *1 (|ReduceLODE| *5 *6 *7 *8 *3))
       (|ofCategory| *6 (|LinearOrdinaryDifferentialOperatorCategory| *5))
       (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *8))))) 
(((*1 *2 *3 *4)
  (AND
   (|isDomain| *4
               (|Mapping|
                (|Record| (|:| |particular| (|Union| *5 "failed"))
                          (|:| |basis| (|List| *5)))
                *3 *5))
   (|ofCategory| *5
                 (|Join| (|Field|) (|CharacteristicZero|)
                         (|RetractableTo| (|Integer|))
                         (|RetractableTo| (|Fraction| (|Integer|)))))
   (|ofCategory| *3
                 (|Join| (|UnivariateSkewPolynomialCategory| *5)
                         (CATEGORY |domain| (SIGNATURE |adjoint| ($ $)))))
   (|isDomain| *2 (|Record| (|:| |ltilde| *3) (|:| |r| (|Union| *3 "failed"))))
   (|isDomain| *1 (|IntegrateSolutions| *5 *3))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|LinearOrdinaryDifferentialOperator1| (|Fraction| *5)))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *4
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|RetractableTo| (|Fraction| (|Integer|)))))
       (|isDomain| *2
                   (|Record|
                    (|:| |ltilde|
                         (|LinearOrdinaryDifferentialOperator1|
                          (|Fraction| *5)))
                    (|:| |r|
                         (|Union|
                          (|LinearOrdinaryDifferentialOperator1|
                           (|Fraction| *5))
                          "failed"))))
       (|isDomain| *1 (|RationalLODE| *4 *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|LinearOrdinaryDifferentialOperator1| (|Fraction| *2)))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *1 (|RationalLODE| *4 *2))
       (|ofCategory| *4
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|RetractableTo| (|Fraction| (|Integer|)))))))
 ((*1 *2 *3)
  (AND
   (|isDomain| *3 (|LinearOrdinaryDifferentialOperator2| *2 (|Fraction| *2)))
   (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))
   (|isDomain| *1 (|RationalLODE| *4 *2))
   (|ofCategory| *4
                 (|Join| (|Field|) (|CharacteristicZero|)
                         (|RetractableTo| (|Integer|))
                         (|RetractableTo| (|Fraction| (|Integer|)))))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|LinearOrdinaryDifferentialOperator1| (|Fraction| *6)))
       (|isDomain| *4 (|Fraction| *6))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *5
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|RetractableTo| (|Fraction| (|Integer|)))))
       (|isDomain| *2
                   (|Record|
                    (|:| |particular| (|Union| (|Fraction| *6) #1="failed"))
                    (|:| |basis| (|List| (|Fraction| *6)))))
       (|isDomain| *1 (|RationalLODE| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|LinearOrdinaryDifferentialOperator1| (|Fraction| *6)))
       (|isDomain| *4 (|List| (|Fraction| *6)))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *5
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|RetractableTo| (|Fraction| (|Integer|)))))
       (|isDomain| *2
                   (|Record| (|:| |basis| (|List| (|Fraction| *6)))
                             (|:| |mat| (|Matrix| *5))))
       (|isDomain| *1 (|RationalLODE| *5 *6))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3 (|LinearOrdinaryDifferentialOperator2| *6 (|Fraction| *6)))
   (|isDomain| *4 (|Fraction| *6))
   (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
   (|ofCategory| *5
                 (|Join| (|Field|) (|CharacteristicZero|)
                         (|RetractableTo| (|Integer|))
                         (|RetractableTo| (|Fraction| (|Integer|)))))
   (|isDomain| *2
               (|Record| (|:| |particular| (|Union| (|Fraction| *6) #1#))
                         (|:| |basis| (|List| (|Fraction| *6)))))
   (|isDomain| *1 (|RationalLODE| *5 *6))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3 (|LinearOrdinaryDifferentialOperator2| *6 (|Fraction| *6)))
   (|isDomain| *4 (|List| (|Fraction| *6)))
   (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
   (|ofCategory| *5
                 (|Join| (|Field|) (|CharacteristicZero|)
                         (|RetractableTo| (|Integer|))
                         (|RetractableTo| (|Fraction| (|Integer|)))))
   (|isDomain| *2
               (|Record| (|:| |basis| (|List| (|Fraction| *6)))
                         (|:| |mat| (|Matrix| *5))))
   (|isDomain| *1 (|RationalLODE| *5 *6))))) 
(((*1 *2 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|Field|) (|CharacteristicZero|)
                         (|RetractableTo| (|Fraction| (|Integer|)))))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
   (|isDomain| *1 (|PrimitiveRatRicDE| *4 *3 *2 *5))
   (|ofCategory| *2 (|LinearOrdinaryDifferentialOperatorCategory| *3))
   (|ofCategory| *5
                 (|LinearOrdinaryDifferentialOperatorCategory|
                  (|Fraction| *3)))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Fraction| *5))
       (|ofCategory| *4
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Fraction| (|Integer|)))))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *1 (|PrimitiveRatRicDE| *4 *5 *2 *6))
       (|ofCategory| *2 (|LinearOrdinaryDifferentialOperatorCategory| *5))
       (|ofCategory| *6 (|LinearOrdinaryDifferentialOperatorCategory| *3))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Mapping| (|List| *5) *6))
       (|ofCategory| *5
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Fraction| (|Integer|)))))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|isDomain| *2 (|List| (|Record| (|:| |constant| *5) (|:| |eq| *3))))
       (|isDomain| *1 (|PrimitiveRatRicDE| *5 *6 *3 *7))
       (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *6))
       (|ofCategory| *7
                     (|LinearOrdinaryDifferentialOperatorCategory|
                      (|Fraction| *6)))))) 
(((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|Field|) (|CharacteristicZero|)
                         (|RetractableTo| (|Fraction| (|Integer|)))))
   (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
   (|isDomain| *2
               (|List|
                (|Record| (|:| |deg| (|NonNegativeInteger|)) (|:| |eq| *5))))
   (|isDomain| *1 (|PrimitiveRatRicDE| *4 *5 *3 *6))
   (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *5))
   (|ofCategory| *6
                 (|LinearOrdinaryDifferentialOperatorCategory|
                  (|Fraction| *5)))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *1 (|PrimitiveRatRicDE| *4 *2 *3 *5))
       (|ofCategory| *4
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Fraction| (|Integer|)))))
       (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *2))
       (|ofCategory| *5
                     (|LinearOrdinaryDifferentialOperatorCategory|
                      (|Fraction| *2)))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *1 (|PrimitiveRatDE| *4 *2 *3 *5))
       (|ofCategory| *4
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Fraction| (|Integer|)))))
       (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *2))
       (|ofCategory| *5
                     (|LinearOrdinaryDifferentialOperatorCategory|
                      (|Fraction| *2)))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *1 (|PrimitiveRatDE| *4 *2 *5 *3))
       (|ofCategory| *4
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Fraction| (|Integer|)))))
       (|ofCategory| *5 (|LinearOrdinaryDifferentialOperatorCategory| *2))
       (|ofCategory| *3
                     (|LinearOrdinaryDifferentialOperatorCategory|
                      (|Fraction| *2)))))) 
(((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|Field|) (|CharacteristicZero|)
                         (|RetractableTo| (|Fraction| (|Integer|)))))
   (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
   (|isDomain| *2 (|List| (|Record| (|:| |center| *5) (|:| |equation| *5))))
   (|isDomain| *1 (|PrimitiveRatDE| *4 *5 *3 *6))
   (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *5))
   (|ofCategory| *6
                 (|LinearOrdinaryDifferentialOperatorCategory|
                  (|Fraction| *5)))))
 ((*1 *2 *3 *4)
  (AND
   (|ofCategory| *5
                 (|Join| (|Field|) (|CharacteristicZero|)
                         (|RetractableTo| (|Fraction| (|Integer|)))))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| *5))
   (|isDomain| *2 (|List| (|Record| (|:| |center| *4) (|:| |equation| *4))))
   (|isDomain| *1 (|PrimitiveRatDE| *5 *4 *3 *6))
   (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *4))
   (|ofCategory| *6
                 (|LinearOrdinaryDifferentialOperatorCategory|
                  (|Fraction| *4)))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|Field|) (|CharacteristicZero|)
                         (|RetractableTo| (|Fraction| (|Integer|)))))
   (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
   (|isDomain| *2 (|List| (|Record| (|:| |center| *5) (|:| |equation| *5))))
   (|isDomain| *1 (|PrimitiveRatDE| *4 *5 *6 *3))
   (|ofCategory| *6 (|LinearOrdinaryDifferentialOperatorCategory| *5))
   (|ofCategory| *3
                 (|LinearOrdinaryDifferentialOperatorCategory|
                  (|Fraction| *5)))))
 ((*1 *2 *3 *4)
  (AND
   (|ofCategory| *5
                 (|Join| (|Field|) (|CharacteristicZero|)
                         (|RetractableTo| (|Fraction| (|Integer|)))))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| *5))
   (|isDomain| *2 (|List| (|Record| (|:| |center| *4) (|:| |equation| *4))))
   (|isDomain| *1 (|PrimitiveRatDE| *5 *4 *6 *3))
   (|ofCategory| *6 (|LinearOrdinaryDifferentialOperatorCategory| *4))
   (|ofCategory| *3
                 (|LinearOrdinaryDifferentialOperatorCategory|
                  (|Fraction| *4)))))) 
(((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *4 (|Fraction| *2))
   (|ofCategory| *2 (|UnivariatePolynomialCategory| *5))
   (|isDomain| *1 (|PrimitiveRatDE| *5 *2 *3 *6))
   (|ofCategory| *5
                 (|Join| (|Field|) (|CharacteristicZero|)
                         (|RetractableTo| (|Fraction| (|Integer|)))))
   (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *2))
   (|ofCategory| *6 (|LinearOrdinaryDifferentialOperatorCategory| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| (|Fraction| *2)))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *5))
       (|isDomain| *1 (|PrimitiveRatDE| *5 *2 *3 *6))
       (|ofCategory| *5
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Fraction| (|Integer|)))))
       (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *2))
       (|ofCategory| *6
                     (|LinearOrdinaryDifferentialOperatorCategory|
                      (|Fraction| *2)))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|LinearOrdinaryDifferentialOperator1| *4))
       (|ofCategory| *4 (|FunctionFieldCategory| *5 *6 *7))
       (|ofCategory| *5
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|RetractableTo| (|Fraction| (|Integer|)))))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| (|Fraction| *6)))
       (|isDomain| *2
                   (|Record| (|:| |particular| (|Union| *4 "failed"))
                             (|:| |basis| (|List| *4))))
       (|isDomain| *1 (|PureAlgebraicLODE| *5 *6 *7 *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|LinearOrdinaryDifferentialOperator1| *8))
       (|isDomain| *4 (|List| *8))
       (|ofCategory| *8 (|FunctionFieldCategory| *5 *6 *7))
       (|ofCategory| *5
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|RetractableTo| (|Fraction| (|Integer|)))))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| (|Fraction| *6)))
       (|isDomain| *2
                   (|Record|
                    (|:| |particular|
                         (|List|
                          (|Record| (|:| |ratpart| *8)
                                    (|:| |coeffs| (|Vector| *5)))))
                    (|:| |basis| (|List| *8))))
       (|isDomain| *1 (|PureAlgebraicLODE| *5 *6 *7 *8))))) 
(((*1 *1 *2)
  (AND (|ofCategory| *2 (|JetBundleCategory|))
       (|isDomain| *1 (|JetVectorField| *2 *3))
       (|ofCategory| *3 (|JetBundleFunctionCategory| *2))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4
                     (|Join| (|Comparable|) (|PolynomialFactorizationExplicit|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|Mapping| *5 *5))
       (|isDomain| *1 (|ODEIntegration| *4 *5))
       (|ofCategory| *5
                     (|Join| (|AlgebraicallyClosedFunctionSpace| *4)
                             (|TranscendentalFunctionCategory|)
                             (|PrimitiveFunctionCategory|)))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4
                     (|Join| (|Comparable|) (|PolynomialFactorizationExplicit|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))
                             (|CharacteristicZero|)))
       (|isDomain| *1 (|ODEIntegration| *4 *2))
       (|ofCategory| *2
                     (|Join| (|AlgebraicallyClosedFunctionSpace| *4)
                             (|TranscendentalFunctionCategory|)
                             (|PrimitiveFunctionCategory|)))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *5 (|Symbol|))
       (|ofCategory| *6
                     (|Join| (|Comparable|) (|PolynomialFactorizationExplicit|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))
                             (|CharacteristicZero|)))
       (|ofCategory| *4
                     (|Join| (|AlgebraicallyClosedFunctionSpace| *6)
                             (|TranscendentalFunctionCategory|)
                             (|PrimitiveFunctionCategory|)))
       (|isDomain| *2
                   (|Record| (|:| |particular| *4) (|:| |basis| (|List| *4))))
       (|isDomain| *1 (|ConstantLODE| *6 *4 *3))
       (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *4))))) 
(((*1 *1 *2 *2 *2 *2 *2 *2 *2 *2)
  (AND (|ofCategory| *1 (|OctonionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|Quaternion| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|Octonion| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|OctonionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|OctonionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|OctonionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|OctonionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *1 *1) (|ofCategory| *1 (|DivisionRing|)))
 ((*1 *1 *1)
  (AND (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|EuclideanModularRing| *2 *3 *4 *5 *6 *7))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *4 (|AbelianMonoid|)) (|ofType| *5 (|Mapping| *3 *3 *4))
       (|ofType| *6 (|Mapping| (|Union| *4 "failed") *4 *4))
       (|ofType| *7 (|Mapping| (|Union| *3 "failed") *3 *3 *4))))
 ((*1 *1 *1)
  (OR
   (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|Field|))
        (|ofCategory| *2 (|Type|)))
   (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|Group|))
        (|ofCategory| *2 (|Type|)))))
 ((*1 *1 *1) (|ofCategory| *1 (|Group|)))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Vector| *3)) (|ofCategory| *3 (|FiniteFieldCategory|))
       (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *3))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|ModularRing| *2 *3 *4 *5 *6))
       (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *3 (|AbelianMonoid|)) (|ofType| *4 (|Mapping| *2 *2 *3))
       (|ofType| *5 (|Mapping| (|Union| *3 "failed") *3 *3))
       (|ofType| *6 (|Mapping| (|Union| *2 "failed") *2 *2 *3))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|OctonionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|)) (|ofCategory| *2 (|Field|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|IntervalCategory| *2))
       (|ofCategory| *2
                     (|Join| (|FloatingPointSystem|)
                             (|TranscendentalFunctionCategory|)))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|OrderedAbelianMonoidSup|)))) 
(((*1 *2 *3 *4 *4 *4 *4 *5 *5)
  (AND (|isDomain| *3 (|Mapping| *4 *4)) (|isDomain| *5 (|Integer|))
       (|ofCategory| *4 (|FloatingPointSystem|))
       (|isDomain| *2
                   (|Record| (|:| |value| *4) (|:| |error| *4)
                             (|:| |totalpts| (|Integer|))
                             (|:| |success| (|Boolean|))))
       (|isDomain| *1 (|NumericalQuadrature| *4))))) 
(((*1 *2 *3 *4 *4 *4 *4 *5 *5)
  (AND (|isDomain| *3 (|Mapping| *4 *4)) (|isDomain| *5 (|Integer|))
       (|ofCategory| *4 (|FloatingPointSystem|))
       (|isDomain| *2
                   (|Record| (|:| |value| *4) (|:| |error| *4)
                             (|:| |totalpts| (|Integer|))
                             (|:| |success| (|Boolean|))))
       (|isDomain| *1 (|NumericalQuadrature| *4))))) 
(((*1 *2 *3 *4 *4 *4 *4 *5 *5)
  (AND (|isDomain| *3 (|Mapping| *4 *4)) (|isDomain| *5 (|Integer|))
       (|ofCategory| *4 (|FloatingPointSystem|))
       (|isDomain| *2
                   (|Record| (|:| |value| *4) (|:| |error| *4)
                             (|:| |totalpts| (|Integer|))
                             (|:| |success| (|Boolean|))))
       (|isDomain| *1 (|NumericalQuadrature| *4))))) 
(((*1 *2 *3 *4 *4 *4 *4 *5 *5)
  (AND (|isDomain| *3 (|Mapping| *4 *4)) (|isDomain| *5 (|Integer|))
       (|ofCategory| *4 (|FloatingPointSystem|))
       (|isDomain| *2
                   (|Record| (|:| |value| *4) (|:| |error| *4)
                             (|:| |totalpts| (|Integer|))
                             (|:| |success| (|Boolean|))))
       (|isDomain| *1 (|NumericalQuadrature| *4))))) 
(((*1 *2 *3 *4 *4 *4 *4 *5 *5)
  (AND (|isDomain| *3 (|Mapping| *4 *4)) (|isDomain| *5 (|Integer|))
       (|ofCategory| *4 (|FloatingPointSystem|))
       (|isDomain| *2
                   (|Record| (|:| |value| *4) (|:| |error| *4)
                             (|:| |totalpts| (|Integer|))
                             (|:| |success| (|Boolean|))))
       (|isDomain| *1 (|NumericalQuadrature| *4))))) 
(((*1 *2 *3 *4 *4 *4 *4 *5 *5)
  (AND (|isDomain| *3 (|Mapping| *4 *4)) (|isDomain| *5 (|Integer|))
       (|ofCategory| *4 (|FloatingPointSystem|))
       (|isDomain| *2
                   (|Record| (|:| |value| *4) (|:| |error| *4)
                             (|:| |totalpts| (|Integer|))
                             (|:| |success| (|Boolean|))))
       (|isDomain| *1 (|NumericalQuadrature| *4))))) 
(((*1 *2 *3 *4 *4 *4 *4 *5 *5 *5)
  (AND (|isDomain| *3 (|Mapping| *4 *4)) (|isDomain| *5 (|Integer|))
       (|ofCategory| *4 (|FloatingPointSystem|))
       (|isDomain| *2
                   (|Record| (|:| |value| *4) (|:| |error| *4)
                             (|:| |totalpts| (|Integer|))
                             (|:| |success| (|Boolean|))))
       (|isDomain| *1 (|NumericalQuadrature| *4))))) 
(((*1 *2 *3 *4 *4 *4 *4 *5 *5 *5)
  (AND (|isDomain| *3 (|Mapping| *4 *4)) (|isDomain| *5 (|Integer|))
       (|ofCategory| *4 (|FloatingPointSystem|))
       (|isDomain| *2
                   (|Record| (|:| |value| *4) (|:| |error| *4)
                             (|:| |totalpts| (|Integer|))
                             (|:| |success| (|Boolean|))))
       (|isDomain| *1 (|NumericalQuadrature| *4))))) 
(((*1 *2 *3 *4 *4 *4 *4 *5 *5 *5)
  (AND (|isDomain| *3 (|Mapping| *4 *4)) (|isDomain| *5 (|Integer|))
       (|ofCategory| *4 (|FloatingPointSystem|))
       (|isDomain| *2
                   (|Record| (|:| |value| *4) (|:| |error| *4)
                             (|:| |totalpts| (|Integer|))
                             (|:| |success| (|Boolean|))))
       (|isDomain| *1 (|NumericalQuadrature| *4))))) 
(((*1 *2 *3 *4 *5 *5 *4 *6)
  (AND (|isDomain| *3 (|Vector| (|Float|))) (|isDomain| *4 (|Integer|))
       (|isDomain| *6
                   (|Mapping| (|Void|) (|Vector| (|Float|))
                              (|Vector| (|Float|)) (|Float|)))
       (|isDomain| *5 (|Float|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|NumericalOrdinaryDifferentialEquations|))))) 
(((*1 *2 *3 *4 *5 *6 *5 *3 *7)
  (AND (|isDomain| *3 (|Vector| (|Float|))) (|isDomain| *4 (|Integer|))
       (|isDomain| *6
                   (|Record| (|:| |to_try| (|Float|)) (|:| |did| (|Float|))
                             (|:| |next| (|Float|))))
       (|isDomain| *7
                   (|Mapping| (|Void|) (|Vector| (|Float|))
                              (|Vector| (|Float|)) (|Float|)))
       (|isDomain| *5 (|Float|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|NumericalOrdinaryDifferentialEquations|))))
 ((*1 *2 *3 *4 *5 *6 *5 *3 *7 *3 *3 *3 *3 *3 *3 *3)
  (AND (|isDomain| *3 (|Vector| (|Float|))) (|isDomain| *4 (|Integer|))
       (|isDomain| *6
                   (|Record| (|:| |to_try| (|Float|)) (|:| |did| (|Float|))
                             (|:| |next| (|Float|))))
       (|isDomain| *7
                   (|Mapping| (|Void|) (|Vector| (|Float|))
                              (|Vector| (|Float|)) (|Float|)))
       (|isDomain| *5 (|Float|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|NumericalOrdinaryDifferentialEquations|))))) 
(((*1 *2 *3 *4 *5 *5 *5 *5 *4 *6)
  (AND (|isDomain| *3 (|Vector| (|Float|))) (|isDomain| *4 (|Integer|))
       (|isDomain| *6
                   (|Mapping| (|Void|) (|Vector| (|Float|))
                              (|Vector| (|Float|)) (|Float|)))
       (|isDomain| *5 (|Float|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|NumericalOrdinaryDifferentialEquations|))))) 
(((*1 *2 *3 *4 *5 *5 *6)
  (AND (|isDomain| *3 (|Vector| (|Float|))) (|isDomain| *4 (|Integer|))
       (|isDomain| *6
                   (|Mapping| (|Void|) (|Vector| (|Float|))
                              (|Vector| (|Float|)) (|Float|)))
       (|isDomain| *5 (|Float|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|NumericalOrdinaryDifferentialEquations|))))
 ((*1 *2 *3 *4 *5 *5 *6 *3 *3 *3 *3)
  (AND (|isDomain| *3 (|Vector| (|Float|))) (|isDomain| *4 (|Integer|))
       (|isDomain| *6
                   (|Mapping| (|Void|) (|Vector| (|Float|))
                              (|Vector| (|Float|)) (|Float|)))
       (|isDomain| *5 (|Float|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|NumericalOrdinaryDifferentialEquations|))))) 
(((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Float|))
   (|isDomain| *1 (|NumberFormats|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Float|))
       (|isDomain| *1 (|NumberFormats|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|NumberFormats|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|String|))
       (|isDomain| *1 (|NumberFormats|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|NumberFormats|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|String|))
       (|isDomain| *1 (|NumberFormats|))))) 
(((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|Polynomial| (|Complex| *4)))
   (|ofCategory| *4 (|CommutativeRing|))
   (|ofCategory| *4 (|ConvertibleTo| (|Float|)))
   (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *4))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Polynomial| (|Complex| *5)))
   (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|CommutativeRing|))
   (|ofCategory| *5 (|ConvertibleTo| (|Float|)))
   (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *5))))
 ((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|Polynomial| *4)) (|ofCategory| *4 (|Ring|))
   (|ofCategory| *4 (|ConvertibleTo| (|Float|)))
   (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *4))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Polynomial| *5))
   (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|Ring|))
   (|ofCategory| *5 (|ConvertibleTo| (|Float|)))
   (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *5))))
 ((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|Fraction| (|Polynomial| *4)))
   (|ofCategory| *4 (|IntegralDomain|))
   (|ofCategory| *4 (|ConvertibleTo| (|Float|)))
   (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *4))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
   (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|IntegralDomain|))
   (|ofCategory| *5 (|ConvertibleTo| (|Float|)))
   (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *5))))
 ((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|Fraction| (|Polynomial| (|Complex| *4))))
   (|ofCategory| *4 (|IntegralDomain|))
   (|ofCategory| *4 (|ConvertibleTo| (|Float|)))
   (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *4))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Fraction| (|Polynomial| (|Complex| *5))))
   (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|IntegralDomain|))
   (|ofCategory| *5 (|ConvertibleTo| (|Float|)))
   (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *5))))
 ((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|Expression| *4))
   (|ofCategory| *4 (|IntegralDomain|)) (|ofCategory| *4 (|OrderedSet|))
   (|ofCategory| *4 (|ConvertibleTo| (|Float|)))
   (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *4))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Expression| *5))
   (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|IntegralDomain|))
   (|ofCategory| *5 (|OrderedSet|))
   (|ofCategory| *5 (|ConvertibleTo| (|Float|)))
   (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *5))))
 ((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|Expression| (|Complex| *4)))
   (|ofCategory| *4 (|IntegralDomain|)) (|ofCategory| *4 (|OrderedSet|))
   (|ofCategory| *4 (|ConvertibleTo| (|Float|)))
   (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *4))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Expression| (|Complex| *5)))
   (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|IntegralDomain|))
   (|ofCategory| *5 (|OrderedSet|))
   (|ofCategory| *5 (|ConvertibleTo| (|Float|)))
   (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *5))))) 
(((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|Polynomial| *4)) (|ofCategory| *4 (|Ring|))
   (|ofCategory| *4 (|ConvertibleTo| *2)) (|isDomain| *2 (|Float|))
   (|isDomain| *1 (|Numeric| *4))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Polynomial| *5))
   (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|Ring|))
   (|ofCategory| *5 (|ConvertibleTo| *2)) (|isDomain| *2 (|Float|))
   (|isDomain| *1 (|Numeric| *5))))
 ((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|Fraction| (|Polynomial| *4)))
   (|ofCategory| *4 (|IntegralDomain|)) (|ofCategory| *4 (|ConvertibleTo| *2))
   (|isDomain| *2 (|Float|)) (|isDomain| *1 (|Numeric| *4))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
   (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|IntegralDomain|))
   (|ofCategory| *5 (|ConvertibleTo| *2)) (|isDomain| *2 (|Float|))
   (|isDomain| *1 (|Numeric| *5))))
 ((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|Expression| *4))
   (|ofCategory| *4 (|IntegralDomain|)) (|ofCategory| *4 (|OrderedSet|))
   (|ofCategory| *4 (|ConvertibleTo| *2)) (|isDomain| *2 (|Float|))
   (|isDomain| *1 (|Numeric| *4))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Expression| *5))
   (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|IntegralDomain|))
   (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *5 (|ConvertibleTo| *2))
   (|isDomain| *2 (|Float|)) (|isDomain| *1 (|Numeric| *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *3))
       (|ofCategory| *3 (|ConvertibleTo| (|Float|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|PositiveInteger|))
       (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *3))
       (|ofCategory| *3 (|ConvertibleTo| (|Float|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Complex| *4)) (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *4 (|ConvertibleTo| (|Float|)))
       (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Complex| *5)) (|isDomain| *4 (|PositiveInteger|))
       (|ofCategory| *5 (|CommutativeRing|))
       (|ofCategory| *5 (|ConvertibleTo| (|Float|)))
       (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Polynomial| (|Complex| *4)))
       (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *4 (|ConvertibleTo| (|Float|)))
       (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Polynomial| (|Complex| *5)))
       (|isDomain| *4 (|PositiveInteger|))
       (|ofCategory| *5 (|CommutativeRing|))
       (|ofCategory| *5 (|ConvertibleTo| (|Float|)))
       (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Polynomial| *4)) (|ofCategory| *4 (|Ring|))
       (|ofCategory| *4 (|ConvertibleTo| (|Float|)))
       (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Polynomial| *5)) (|isDomain| *4 (|PositiveInteger|))
       (|ofCategory| *5 (|Ring|)) (|ofCategory| *5 (|ConvertibleTo| (|Float|)))
       (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *4)))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *4 (|ConvertibleTo| (|Float|)))
       (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
       (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *5 (|ConvertibleTo| (|Float|)))
       (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| (|Complex| *4))))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *4 (|ConvertibleTo| (|Float|)))
       (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| (|Complex| *5))))
       (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *5 (|ConvertibleTo| (|Float|)))
       (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Expression| *4)) (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *4 (|ConvertibleTo| (|Float|)))
       (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Expression| *5)) (|isDomain| *4 (|PositiveInteger|))
       (|ofCategory| *5 (|IntegralDomain|)) (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *5 (|ConvertibleTo| (|Float|)))
       (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Expression| (|Complex| *4)))
       (|ofCategory| *4 (|IntegralDomain|)) (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *4 (|ConvertibleTo| (|Float|)))
       (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Expression| (|Complex| *5)))
       (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *5 (|ConvertibleTo| (|Float|)))
       (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *1 (|Numeric| *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|Numeric| *3))
       (|ofCategory| *3 (|ConvertibleTo| *2))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|PositiveInteger|)) (|isDomain| *2 (|Float|))
       (|isDomain| *1 (|Numeric| *3)) (|ofCategory| *3 (|ConvertibleTo| *2))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Polynomial| *4)) (|ofCategory| *4 (|Ring|))
       (|ofCategory| *4 (|ConvertibleTo| *2)) (|isDomain| *2 (|Float|))
       (|isDomain| *1 (|Numeric| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Polynomial| *5)) (|isDomain| *4 (|PositiveInteger|))
       (|ofCategory| *5 (|Ring|)) (|ofCategory| *5 (|ConvertibleTo| *2))
       (|isDomain| *2 (|Float|)) (|isDomain| *1 (|Numeric| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *4)))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *4 (|ConvertibleTo| *2)) (|isDomain| *2 (|Float|))
       (|isDomain| *1 (|Numeric| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
       (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *5 (|ConvertibleTo| *2)) (|isDomain| *2 (|Float|))
       (|isDomain| *1 (|Numeric| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Expression| *4)) (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *4 (|ConvertibleTo| *2))
       (|isDomain| *2 (|Float|)) (|isDomain| *1 (|Numeric| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Expression| *5)) (|isDomain| *4 (|PositiveInteger|))
       (|ofCategory| *5 (|IntegralDomain|)) (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *5 (|ConvertibleTo| *2)) (|isDomain| *2 (|Float|))
       (|isDomain| *1 (|Numeric| *5))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|NumberTheoreticPolynomialFunctions| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|NumberTheoreticPolynomialFunctions| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|NewSparseUnivariatePolynomial| *2))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|NewSparseUnivariatePolynomial| *2))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|List| (|NewSparseUnivariatePolynomial| *3)))
       (|isDomain| *1 (|NewSparseUnivariatePolynomial| *3))
       (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *1 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |resultant| *3)
                         (|:| |coef1| (|NewSparseUnivariatePolynomial| *3))
                         (|:| |coef2| (|NewSparseUnivariatePolynomial| *3))))
   (|isDomain| *1 (|NewSparseUnivariatePolynomial| *3))
   (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *1 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |resultant| *3)
                         (|:| |coef1| (|NewSparseUnivariatePolynomial| *3))))
   (|isDomain| *1 (|NewSparseUnivariatePolynomial| *3))
   (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *1 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |resultant| *3)
                         (|:| |coef2| (|NewSparseUnivariatePolynomial| *3))))
   (|isDomain| *1 (|NewSparseUnivariatePolynomial| *3))
   (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| (|Fraction| (|Integer|))))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |outval| *4) (|:| |outmult| (|Integer|))
                              (|:| |outvect| (|List| (|Matrix| *4))))))
       (|isDomain| *1 (|NumericRealEigenPackage| *4))
       (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|List| *4))
       (|isDomain| *1 (|NumericRealEigenPackage| *4))
       (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|Matrix| *2)) (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|CharacteristicPolynomialPackage| *2))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *1
                   (|CharacteristicPolynomialInMonogenicalAlgebra| *4 *2 *3))
       (|ofCategory| *3 (|MonogenicAlgebra| *4 *2))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *4 (|Symbol|)) (|isDomain| *2 (|Polynomial| *5))
       (|isDomain| *1 (|EigenPackage| *5)) (|ofCategory| *5 (|GcdDomain|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| (|Fraction| (|Polynomial| *4))))
       (|isDomain| *2 (|Polynomial| *4)) (|isDomain| *1 (|EigenPackage| *4))
       (|ofCategory| *4 (|GcdDomain|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteRankAlgebra| *3 *2))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| *4)) (|ofCategory| *4 (|Field|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *4))
       (|isDomain| *1 (|InnerEigenPackage| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| (|Complex| (|Fraction| (|Integer|)))))
       (|isDomain| *2 (|Polynomial| (|Complex| (|Fraction| (|Integer|)))))
       (|isDomain| *1 (|NumericComplexEigenPackage| *4))
       (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| (|Complex| (|Fraction| (|Integer|)))))
       (|isDomain| *4 (|Symbol|))
       (|isDomain| *2 (|Polynomial| (|Complex| (|Fraction| (|Integer|)))))
       (|isDomain| *1 (|NumericComplexEigenPackage| *5))
       (|ofCategory| *5 (|Join| (|Field|) (|OrderedRing|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|Polynomial| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|NumericRealEigenPackage| *4))
       (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| (|Fraction| (|Integer|))))
       (|isDomain| *4 (|Symbol|))
       (|isDomain| *2 (|Polynomial| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|NumericRealEigenPackage| *5))
       (|ofCategory| *5 (|Join| (|Field|) (|OrderedRing|)))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *10))
       (|isDomain| *4 (|List| *6)) (|isDomain| *5 (|List| *10))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *9))
       (|ofCategory| *9 (|IntegralDomain|))
       (|ofCategory| *10 (|PolynomialCategory| *9 *7 *8))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *8 (|OrderedSet|))
       (|isDomain| *2
                   (|Record|
                    (|:| |deter| (|List| (|SparseUnivariatePolynomial| *10)))
                    (|:| |dterm|
                         (|List|
                          (|List|
                           (|Record| (|:| |expt| (|NonNegativeInteger|))
                                     (|:| |pcoef| *10)))))
                    (|:| |nfacts| (|List| *6)) (|:| |nlead| (|List| *10))))
       (|isDomain| *1 (|NPCoef| *6 *7 *8 *9 *10))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|FiniteFieldCategory|))
       (|ofCategory| *5 (|FiniteAlgebraicExtensionField| *4))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|NormRetractPackage| *4 *5 *6 *3 *7))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *6))
       (|ofType| *7 (|PositiveInteger|))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |val| (|Boolean|)) (|:| |tower| *4))))
       (|isDomain| *1 (|NormalizationPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *3 *3 *4 *5)
  (AND (|isDomain| *3 (|String|)) (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *8 (|OrderedSet|))
       (|ofCategory| *4 (|RecursivePolynomialCategory| *6 *7 *8))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|NormalizationPackage| *6 *7 *8 *4 *5))
       (|ofCategory| *5 (|RegularTriangularSetCategory| *6 *7 *8 *4))))) 
(((*1 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|IntegralDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *1 (|ElementaryFunctionStructurePackage| *3 *2))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *3)))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *4))
       (|ofCategory| *4
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *3)))
       (|ofCategory| *3
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *1 (|ElementaryFunctionStructurePackage| *3 *4))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *1 (|ElementaryFunctionStructurePackage| *4 *2))
       (|ofCategory| *2
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *4)))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|List| *5)) (|isDomain| *3 (|List| (|Symbol|)))
       (|ofCategory| *5
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *4)))
       (|ofCategory| *4
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *1 (|ElementaryFunctionStructurePackage| *4 *5))))
 ((*1 *1 *1) (|isDomain| *1 (|Float|)))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *3 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2 (|List| (|Record| (|:| |val| *3) (|:| |tower| *4))))
       (|isDomain| *1 (|NormalizationPackage| *5 *6 *7 *3 *4))
       (|ofCategory| *4 (|RegularTriangularSetCategory| *5 *6 *7 *3))))) 
(((*1 *2 *2 *3)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *2 (|RecursivePolynomialCategory| *4 *5 *6))
       (|isDomain| *1 (|NormalizationPackage| *4 *5 *6 *2 *3))
       (|ofCategory| *3 (|RegularTriangularSetCategory| *4 *5 *6 *2))))) 
(((*1 *1 *1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Float|))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|IntegerNumberSystem|)))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|MoebiusTransform| *2)) (|ofCategory| *2 (|Field|))))
 ((*1 *1 *2)
  (AND (|isDomain| *1 (|MoebiusTransform| *2)) (|ofCategory| *2 (|Field|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|NonNegativeInteger|))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|Record| (|:| |lcmfij| *5)
                         (|:| |totdeg| (|NonNegativeInteger|)) (|:| |poli| *2)
                         (|:| |polj| *2)))
   (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *2 (|PolynomialCategory| *4 *5 *6))
   (|isDomain| *1 (|GroebnerInternalPackage| *4 *5 *6 *2))
   (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *6 (|OrderedSet|))))
 ((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|Record| (|:| |lcmfij| *5)
                         (|:| |totdeg| (|NonNegativeInteger|)) (|:| |poli| *2)
                         (|:| |polj| *2)))
   (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *2 (|SolvableSkewPolynomialCategory| *4 *5 *6))
   (|isDomain| *1 (|NGroebnerPackage| *4 *5 *6 *2))
   (|ofCategory| *4 (|LeftOreRing|)) (|ofCategory| *6 (|OrderedSet|))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|GroebnerInternalPackage| *4 *5 *6 *3))
       (|ofCategory| *3 (|PolynomialCategory| *4 *5 *6))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|LeftOreRing|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|NGroebnerPackage| *4 *5 *6 *3))
       (|ofCategory| *3 (|SolvableSkewPolynomialCategory| *4 *5 *6))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|GroebnerInternalPackage| *3 *4 *5 *2))
       (|ofCategory| *2 (|PolynomialCategory| *3 *4 *5))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|LeftOreRing|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|NGroebnerPackage| *3 *4 *5 *2))
       (|ofCategory| *2 (|SolvableSkewPolynomialCategory| *3 *4 *5))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| *2))
       (|ofCategory| *2 (|PolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *1 (|GroebnerInternalPackage| *4 *5 *6 *2))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| *2))
       (|ofCategory| *2 (|SolvableSkewPolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|LeftOreRing|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *1 (|NGroebnerPackage| *4 *5 *6 *2))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| (|DistributedJetBundlePolynomial| *3 *4 *5 *6)))
       (|ofType| *5 (|List| *4))
       (|isDomain| *1 (|DistributedJetBundlePolynomial| *3 *4 *5 *6))
       (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|ofCategory| *6
                     (|DirectProductCategory| (|#| *5)
                                              (|NonNegativeInteger|)))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|List| (|Polynomial| *3)))
       (|ofCategory| *3 (|GcdDomain|))
       (|isDomain| *1 (|FGLMIfCanPackage| *3 *4))
       (|ofType| *4 (|List| (|Symbol|)))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|PolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|GroebnerPackage| *3 *4 *5 *6))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|List| *7)) (|isDomain| *3 (|String|))
       (|ofCategory| *7 (|PolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *1 (|GroebnerPackage| *4 *5 *6 *7))))
 ((*1 *2 *2 *3 *3)
  (AND (|isDomain| *2 (|List| *7)) (|isDomain| *3 (|String|))
       (|ofCategory| *7 (|PolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *1 (|GroebnerPackage| *4 *5 *6 *7))))
 ((*1 *1 *1)
  (AND (|ofCategory| *2 (|Field|))
       (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialIdeal| *2 *3 *4 *5))
       (|ofCategory| *5 (|PolynomialCategory| *2 *3 *4))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|List| (|JetBundlePolynomial| *3 *4)))
       (|isDomain| *1 (|JetBundlePolynomial| *3 *4))
       (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *4 (|JetBundleCategory|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6
                     (|Join| (|JetBundleFunctionCategory| *4)
                             (|PolynomialCategory| *3 (|IndexedExponents| *4)
                                                   *4)))
       (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *4 (|JetBundleCategory|))
       (|ofType| *5 (|List| *4)) (|isDomain| *1 (|JetGroebner| *3 *4 *5 *6 *7))
       (|ofCategory| *7
                     (|DirectProductCategory| (|#| *5)
                                              (|NonNegativeInteger|)))))
 ((*1 *2 *2)
  (AND
   (|isDomain| *2
               (|List|
                (|NewSparseMultivariatePolynomial| *3
                                                   (|OrderedVariableList|
                                                    *4))))
   (|ofCategory| *3 (|GcdDomain|)) (|ofType| *4 (|List| (|Symbol|)))
   (|isDomain| *1 (|LexTriangularPackage| *3 *4))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|SolvableSkewPolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|LeftOreRing|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|NGroebnerPackage| *3 *4 *5 *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *4))
       (|isDomain| *1 (|NewtonInterpolation| *4))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| (|Complex| (|Fraction| (|Integer|)))))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |outval| (|Complex| *4))
                              (|:| |outmult| (|Integer|))
                              (|:| |outvect|
                                   (|List| (|Matrix| (|Complex| *4)))))))
       (|isDomain| *1 (|NumericComplexEigenPackage| *4))
       (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| (|Complex| (|Fraction| (|Integer|)))))
       (|isDomain| *2 (|List| (|Complex| *4)))
       (|isDomain| *1 (|NumericComplexEigenPackage| *4))
       (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))))) 
(((*1 *2 *3 *4 *4 *5)
  (AND (|isDomain| *3 (|Vector| (|U32Vector|)))
       (|isDomain| *4 (|Vector| (|Integer|))) (|isDomain| *5 (|Integer|))
       (|isDomain| *2
                   (|Record|
                    (|:| |basis| (|TwoDimensionalArray| (|U32Vector|)))
                    (|:| |defects| (|Vector| (|Integer|)))
                    (|:| |cinds| (|Vector| (|Integer|)))))
       (|isDomain| *1 (|NaiveBeckermannLabahnModular|))))) 
(((*1 *2 *3 *4 *4 *5)
  (AND (|isDomain| *3 (|TwoDimensionalArray| (|U32Vector|)))
       (|isDomain| *4 (|Vector| (|Integer|))) (|isDomain| *5 (|Integer|))
       (|isDomain| *2
                   (|Record|
                    (|:| |basis| (|TwoDimensionalArray| (|U32Vector|)))
                    (|:| |defects| (|Vector| (|Integer|)))
                    (|:| |cinds| (|Vector| (|Integer|)))))
       (|isDomain| *1 (|NaiveBeckermannLabahnModular|))))) 
(((*1 *2 *3 *3 *4 *5 *6 *7 *8 *8)
  (AND (|isDomain| *3 (|Vector| (|U32Vector|)))
       (|isDomain| *4 (|Vector| (|Integer|)))
       (|isDomain| *5 (|NonNegativeInteger|))
       (|isDomain| *7 (|Mapping| (|Integer|) (|Integer|)))
       (|isDomain| *8
                   (|Mapping| (|Void|) (|U32Vector|) (|Integer|) (|Integer|)))
       (|isDomain| *6 (|Integer|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|NaiveBeckermannLabahnModular|))))) 
(((*1 *2 *3 *4 *5 *6 *7 *8 *8)
  (AND (|isDomain| *3 (|Vector| (|SparseUnivariatePolynomial| (|Integer|))))
       (|isDomain| *4 (|Vector| (|Integer|)))
       (|isDomain| *5 (|NonNegativeInteger|))
       (|isDomain| *7 (|Mapping| (|Integer|) (|Integer|)))
       (|isDomain| *8
                   (|Mapping| (|Void|) (|U32Vector|) (|Integer|) (|Integer|)))
       (|isDomain| *6 (|Integer|)) (|isDomain| *2 (|List| (|Any|)))
       (|isDomain| *1 (|NaiveBeckermannLabahnModular|))))
 ((*1 *2 *3 *4 *5 *6 *7 *8 *8)
  (AND (|isDomain| *3 (|Vector| (|U32Vector|)))
       (|isDomain| *4 (|Vector| (|Integer|)))
       (|isDomain| *5 (|NonNegativeInteger|))
       (|isDomain| *7 (|Mapping| (|Integer|) (|Integer|)))
       (|isDomain| *8
                   (|Mapping| (|Void|) (|U32Vector|) (|Integer|) (|Integer|)))
       (|isDomain| *6 (|Integer|)) (|isDomain| *2 (|List| (|Any|)))
       (|isDomain| *1 (|NaiveBeckermannLabahnModular|))))) 
(((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|Vector| (|U32Vector|)))
       (|isDomain| *4 (|Vector| (|Integer|))) (|isDomain| *5 (|U32Vector|))
       (|isDomain| *6 (|Integer|)) (|isDomain| *2 (|List| (|Any|)))
       (|isDomain| *1 (|NaiveBeckermannLabahnModular|))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|Vector| (|SparseUnivariatePolynomial| (|Integer|))))
       (|isDomain| *4 (|Vector| (|Integer|))) (|isDomain| *5 (|U32Vector|))
       (|isDomain| *6 (|Integer|)) (|isDomain| *2 (|List| (|Any|)))
       (|isDomain| *1 (|NaiveBeckermannLabahnModular|))))) 
(((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|Vector| (|U32Vector|)))
       (|isDomain| *4 (|Vector| (|Integer|)))
       (|isDomain| *5 (|NonNegativeInteger|)) (|isDomain| *6 (|Integer|))
       (|isDomain| *2 (|List| (|Any|)))
       (|isDomain| *1 (|NaiveBeckermannLabahnModular|))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|Vector| (|SparseUnivariatePolynomial| (|Integer|))))
       (|isDomain| *4 (|Vector| (|Integer|)))
       (|isDomain| *5 (|NonNegativeInteger|)) (|isDomain| *6 (|Integer|))
       (|isDomain| *2 (|List| (|Any|)))
       (|isDomain| *1 (|NaiveBeckermannLabahnModular|))))) 
(((*1 *1 *1 *1) (|ofCategory| *1 (|NonAssociativeSemiRng|)))) 
(((*1 *1 *1 *1 *1) (|ofCategory| *1 (|NonAssociativeRng|)))) 
(((*1 *1 *1 *1) (|ofCategory| *1 (|Group|)))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *2 (|JetBundleCategory|))
       (|isDomain| *1 (|JetVectorField| *2 *3))
       (|ofCategory| *3 (|JetBundleFunctionCategory| *2))))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|NonAssociativeRng|)))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|ofCategory| *1 (|NonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *6))
       (|isDomain| *3 (|Integer|)) (|ofCategory| *6 (|EuclideanDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|MultivariateSquareFree| *4 *5 *6 *7))
       (|ofCategory| *7 (|PolynomialCategory| *6 *4 *5))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *9))
       (|isDomain| *4 (|List| *7)) (|isDomain| *5 (|NonNegativeInteger|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *9 (|PolynomialCategory| *8 *6 *7))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *8 (|EuclideanDomain|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|MultivariateSquareFree| *6 *7 *8 *9))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *4 (|Factored| *2))
       (|ofCategory| *2 (|PolynomialCategory| *7 *5 *6))
       (|isDomain| *1 (|MultivariateSquareFree| *5 *6 *7 *2))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|ofCategory| *7 (|EuclideanDomain|))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *9))
       (|isDomain| *4 (|List| *7)) (|isDomain| *5 (|List| (|List| *8)))
       (|ofCategory| *7 (|OrderedSet|)) (|ofCategory| *8 (|EuclideanDomain|))
       (|ofCategory| *9 (|PolynomialCategory| *8 *6 *7))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2
                   (|Record| (|:| |upol| (|SparseUnivariatePolynomial| *8))
                             (|:| |Lval| (|List| *8))
                             (|:| |Lfact|
                                  (|List|
                                   (|Record|
                                    (|:| |factor|
                                         (|SparseUnivariatePolynomial| *8))
                                    (|:| |exponent| (|Integer|)))))
                             (|:| |ctpol| *8)))
       (|isDomain| *1 (|MultivariateSquareFree| *6 *7 *8 *9))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *9))
       (|isDomain| *4 (|List| *7)) (|isDomain| *5 (|List| (|List| *8)))
       (|ofCategory| *7 (|OrderedSet|)) (|ofCategory| *8 (|EuclideanDomain|))
       (|ofCategory| *9 (|PolynomialCategory| *8 *6 *7))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2
                   (|Record| (|:| |unitPart| *9)
                             (|:| |suPart|
                                  (|List|
                                   (|Record|
                                    (|:| |factor|
                                         (|SparseUnivariatePolynomial| *9))
                                    (|:| |exponent| (|Integer|)))))))
       (|isDomain| *1 (|MultivariateSquareFree| *6 *7 *8 *9))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *9))
       (|isDomain| *4 (|SparseUnivariatePolynomial| *8))
       (|isDomain| *5 (|Integer|)) (|ofCategory| *8 (|EuclideanDomain|))
       (|ofCategory| *9 (|PolynomialCategory| *8 *6 *7))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *2
                   (|Record| (|:| |pol| (|SparseUnivariatePolynomial| *9))
                             (|:| |polval| (|SparseUnivariatePolynomial| *8))))
       (|isDomain| *1 (|MultivariateSquareFree| *6 *7 *8 *9))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|)) (|ofCategory| *6 (|EuclideanDomain|))
       (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|MultivariateSquareFree| *5 *4 *6 *3))
       (|ofCategory| *3 (|PolynomialCategory| *6 *5 *4))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|List|
                (|Record| (|:| |factor| (|SparseUnivariatePolynomial| *6))
                          (|:| |exponent| (|Integer|)))))
   (|ofCategory| *6 (|EuclideanDomain|))
   (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Integer|))
   (|isDomain| *1 (|MultivariateSquareFree| *4 *5 *6 *7))
   (|ofCategory| *7 (|PolynomialCategory| *6 *4 *5))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|EuclideanDomain|))
       (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|MultivariateSquareFree| *4 *5 *6 *3))
       (|ofCategory| *3 (|PolynomialCategory| *6 *4 *5))))) 
(((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
   (|isDomain| *4 (|Fraction| (|Integer|)))
   (|isDomain| *2 (|Vector| (|Fraction| (|Integer|))))
   (|isDomain| *1 (|MultiplicativeDependence|))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *1 (|MergeThing| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|MoreSystemCommands|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|Multiset| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *1 (|Multiset| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1)
  (AND (|isDomain| *1 (|Multiset| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *2 *3 *4 *2)
  (AND (|isDomain| *3 (|List| (|Kernel| (|Expression| (|Integer|)))))
       (|isDomain| *4 (|List| (|Expression| (|Integer|))))
       (|isDomain| *2 (|Expression| (|Integer|)))
       (|isDomain| *1 (|MrvLimitPackage|))))) 
(((*1 *2 *3 *4 *5 *6 *7)
  (|partial| AND (|isDomain| *5 (|List| (|Expression| (|Integer|))))
   (|isDomain| *7
               (|Record| (|:| |tan_syms| (|List| (|Symbol|)))
                         (|:| |atan_syms| (|List| (|Symbol|)))
                         (|:| |tan_kers| (|List| (|Kernel| *3)))
                         (|:| |atan_kers| (|List| (|Kernel| *3)))))
   (|isDomain| *3 (|Expression| (|Integer|)))
   (|isDomain| *4 (|List| (|Kernel| *3))) (|isDomain| *6 (|Symbol|))
   (|isDomain| *2
               (|Record| (|:| |degree| (|OrderedExpression|))
                         (|:| |coeff| (|Expression| (|Integer|)))))
   (|isDomain| *1 (|MrvLimitPackage|))))) 
(((*1 *2 *3 *4 *5)
  (|partial| AND
   (|isDomain| *5
               (|Record| (|:| |tan_syms| (|List| (|Symbol|)))
                         (|:| |atan_syms| (|List| (|Symbol|)))
                         (|:| |tan_kers| (|List| (|Kernel| *3)))
                         (|:| |atan_kers| (|List| (|Kernel| *3)))))
   (|isDomain| *4 (|Kernel| (|Expression| (|Integer|))))
   (|isDomain| *3 (|Expression| (|Integer|)))
   (|isDomain| *2
               (|Record| (|:| |degree| (|OrderedExpression|))
                         (|:| |coeff| (|Expression| (|Integer|)))))
   (|isDomain| *1 (|MrvLimitPackage|))))) 
(((*1 *2 *3 *4 *5)
  (|partial| AND
   (|isDomain| *5
               (|Record| (|:| |tan_syms| (|List| (|Symbol|)))
                         (|:| |atan_syms| (|List| (|Symbol|)))
                         (|:| |tan_kers|
                              (|List| (|Kernel| (|Expression| (|Integer|)))))
                         (|:| |atan_kers|
                              (|List| (|Kernel| (|Expression| (|Integer|)))))))
   (|isDomain| *3 (|Expression| (|Integer|))) (|isDomain| *4 (|Symbol|))
   (|isDomain| *2
               (|Record|
                (|:| |lk| (|List| (|Kernel| (|Expression| (|Integer|)))))
                (|:| |lc| (|List| (|Expression| (|Integer|))))))
   (|isDomain| *1 (|MrvLimitPackage|))))) 
(((*1 *2 *3 *3 *4 *5)
  (|partial| AND
   (|isDomain| *5
               (|Record| (|:| |tan_syms| (|List| (|Symbol|)))
                         (|:| |atan_syms| (|List| (|Symbol|)))
                         (|:| |tan_kers|
                              (|List| (|Kernel| (|Expression| (|Integer|)))))
                         (|:| |atan_kers|
                              (|List| (|Kernel| (|Expression| (|Integer|)))))))
   (|isDomain| *3 (|Kernel| (|Expression| (|Integer|))))
   (|isDomain| *4 (|Symbol|))
   (|isDomain| *2
               (|Record| (|:| |sign| (|Integer|))
                         (|:| |coeff| (|Expression| (|Integer|)))))
   (|isDomain| *1 (|MrvLimitPackage|))))) 
(((*1 *2 *3 *4 *5)
  (|partial| AND
   (|isDomain| *5
               (|Record| (|:| |tan_syms| (|List| (|Symbol|)))
                         (|:| |atan_syms| (|List| (|Symbol|)))
                         (|:| |tan_kers| (|List| (|Kernel| (|Expression| *2))))
                         (|:| |atan_kers|
                              (|List| (|Kernel| (|Expression| *2))))))
   (|isDomain| *3 (|Expression| (|Integer|))) (|isDomain| *4 (|Symbol|))
   (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|MrvLimitPackage|))))) 
(((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Expression| (|Integer|)))
   (|isDomain| *4 (|Symbol|))
   (|isDomain| *2 (|OrderedCompletion| (|Expression| (|Integer|))))
   (|isDomain| *1 (|MrvLimitPackage|))))) 
(((*1 *2 *3 *4)
  (AND
   (|isDomain| *4
               (|Equation| (|OrderedCompletion| (|Expression| (|Integer|)))))
   (|isDomain| *3 (|Expression| (|Integer|)))
   (|isDomain| *2
               (|Union| (|OrderedCompletion| (|Expression| (|Integer|)))
                        (|Record|
                         (|:| |leftHandLimit|
                              (|Union|
                               (|OrderedCompletion| (|Expression| (|Integer|)))
                               #1="failed"))
                         (|:| |rightHandLimit|
                              (|Union|
                               (|OrderedCompletion| (|Expression| (|Integer|)))
                               #1#)))
                        #2="failed"))
   (|isDomain| *1 (|MrvLimitPackage|))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|Symbol|))
       (|isDomain| *5 (|OrderedCompletion| (|Expression| (|Integer|))))
       (|isDomain| *3 (|Expression| (|Integer|)))
       (|isDomain| *2
                   (|Union| (|OrderedCompletion| (|Expression| (|Integer|)))
                            (|Record|
                             (|:| |leftHandLimit|
                                  (|Union|
                                   (|OrderedCompletion|
                                    (|Expression| (|Integer|)))
                                   #1#))
                             (|:| |rightHandLimit|
                                  (|Union|
                                   (|OrderedCompletion|
                                    (|Expression| (|Integer|)))
                                   #1#)))
                            #2#))
       (|isDomain| *1 (|MrvLimitPackage|))))
 ((*1 *2 *3 *4 *5)
  (|partial| AND (|isDomain| *4 (|Equation| (|Expression| (|Integer|))))
   (|isDomain| *5 (|String|)) (|isDomain| *3 (|Expression| (|Integer|)))
   (|isDomain| *2 (|OrderedCompletion| (|Expression| (|Integer|))))
   (|isDomain| *1 (|MrvLimitPackage|))))
 ((*1 *2 *3 *4 *3 *5)
  (|partial| AND (|isDomain| *3 (|Expression| (|Integer|)))
   (|isDomain| *4 (|Symbol|)) (|isDomain| *5 (|String|))
   (|isDomain| *2 (|OrderedCompletion| (|Expression| (|Integer|))))
   (|isDomain| *1 (|MrvLimitPackage|))))
 ((*1 *2 *3 *4 *5)
  (|partial| AND
   (|isDomain| *5
               (|Record| (|:| |tan_syms| (|List| (|Symbol|)))
                         (|:| |atan_syms| (|List| (|Symbol|)))
                         (|:| |tan_kers|
                              (|List| (|Kernel| (|Expression| (|Integer|)))))
                         (|:| |atan_kers|
                              (|List| (|Kernel| (|Expression| (|Integer|)))))))
   (|isDomain| *3 (|Expression| (|Integer|))) (|isDomain| *4 (|Symbol|))
   (|isDomain| *2 (|OrderedCompletion| (|Expression| (|Integer|))))
   (|isDomain| *1 (|MrvLimitPackage|))))) 
(((*1 *2 *2 *3 *4)
  (AND
   (|isDomain| *4
               (|Record| (|:| |tan_syms| (|List| (|Symbol|)))
                         (|:| |atan_syms| (|List| (|Symbol|)))
                         (|:| |tan_kers|
                              (|List| (|Kernel| (|Expression| (|Integer|)))))
                         (|:| |atan_kers|
                              (|List| (|Kernel| (|Expression| (|Integer|)))))))
   (|isDomain| *2 (|Expression| (|Integer|))) (|isDomain| *3 (|Symbol|))
   (|isDomain| *1 (|MrvLimitPackage|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *4 (|Comparable|)) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|FreeModuleCategory| *3 *4))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|MaybeSkewPolynomialCategory| *3 *4 *5))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|Monoid|))
       (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|MonoidRingCategory| *3 *4))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteAbelianMonoidRing| *3 *4))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *4 (|OrderedAbelianMonoid|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|IndexedDirectProductCategory| *3 *4))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|Comparable|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|MonoidRingCategory| *3 *4))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|Monoid|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *6 (|IntegralDomain|))
       (|ofCategory| *2 (|PolynomialCategory| *3 *5 *4))
       (|isDomain| *1 (|MPolyCatRationalFunctionFactorizer| *5 *4 *6 *2))
       (|isDomain| *3 (|Fraction| (|Polynomial| *6)))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4
                     (|Join| (|OrderedSet|)
                             (CATEGORY |domain|
                              (SIGNATURE |convert| ((|Symbol|) $)))))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| (|Polynomial| *6)))
       (|ofCategory| *6 (|IntegralDomain|))
       (|ofCategory| *2
                     (|PolynomialCategory| (|Fraction| (|Polynomial| *6)) *5
                                           *4))
       (|isDomain| *1 (|MPolyCatRationalFunctionFactorizer| *5 *4 *6 *2))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4
                     (|Join| (|OrderedSet|)
                             (CATEGORY |domain|
                              (SIGNATURE |convert| ((|Symbol|) $)))))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *2))
       (|ofCategory| *2
                     (|PolynomialCategory| (|Fraction| (|Polynomial| *6)) *5
                                           *4))
       (|isDomain| *1 (|MPolyCatRationalFunctionFactorizer| *5 *4 *6 *2))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4
                     (|Join| (|OrderedSet|)
                             (CATEGORY |domain|
                              (SIGNATURE |convert| ((|Symbol|) $)))))
       (|ofCategory| *6 (|IntegralDomain|))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5
                     (|Join| (|OrderedSet|)
                             (CATEGORY |domain|
                              (SIGNATURE |convert| ((|Symbol|) $)))))
       (|ofCategory| *6 (|IntegralDomain|))
       (|isDomain| *2
                   (|Record| (|:| |sup| (|Polynomial| *6))
                             (|:| |inf| (|Polynomial| *6))))
       (|isDomain| *1 (|MPolyCatRationalFunctionFactorizer| *4 *5 *6 *3))
       (|ofCategory| *3
                     (|PolynomialCategory| (|Fraction| (|Polynomial| *6)) *4
                                           *5))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| *2)) (|isDomain| *4 (|Mapping| *2 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *5))
       (|isDomain| *1 (|MonomialExtensionTools| *5 *2))
       (|ofCategory| *5 (|Field|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Mapping| *3 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *5 (|Field|))
       (|isDomain| *2
                   (|Record| (|:| |normal| (|Factored| *3))
                             (|:| |special| (|Factored| *3))))
       (|isDomain| *1 (|MonomialExtensionTools| *5 *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|AntiSymm| *3 *4)) (|ofCategory| *3 (|Ring|))
       (|ofType| *4 (|List| (|Symbol|)))))
 ((*1 *1)
  (AND (|isDomain| *1 (|CyclicGroup| *2 *3)) (|ofType| *2 (|PositiveInteger|))
       (|ofType| *3 (|Symbol|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|DeRhamComplex| *3 *4))
       (|ofCategory| *3 (|Join| (|Ring|) (|Comparable|)))
       (|ofType| *4 (|List| (|Symbol|)))))
 ((*1 *1)
  (AND (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *2))
       (|ofCategory| *2 (|Finite|)) (|ofCategory| *2 (|Field|))))
 ((*1 *2 *1)
  (|partial| AND (|ofCategory| *1 (|FiniteDivisorCategory| *3 *4 *5 *2))
   (|ofCategory| *3 (|Field|))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
   (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
   (|ofCategory| *2 (|FunctionFieldCategory| *3 *4 *5))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FreeNilpotentLie| *3 *4 *5)) (|ofType| *3 *2)
       (|ofType| *4 *2) (|ofCategory| *5 (|CommutativeRing|))))
 ((*1 *1)
  (AND (|isDomain| *1 (|InfiniteCyclicGroup| *2)) (|ofType| *2 (|Symbol|))))
 ((*1 *1)
  (AND (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *1 (|MonogenicAlgebra| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Vector| *1)) (|isDomain| *4 (|Mapping| *5 *5))
       (|ofCategory| *5 (|Field|)) (|ofCategory| *1 (|MonogenicAlgebra| *5 *6))
       (|ofCategory| *5 (|CommutativeRing|))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|isDomain| *2 (|Matrix| *5))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Sequence| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|MomentPackage| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Sequence| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|MomentPackage| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Sequence| *4))
       (|ofCategory| *4 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2
                   (|Record| (|:| |puiseux| (|Fraction| (|Integer|)))
                             (|:| |laurent| (|Fraction| (|Integer|)))
                             (|:| |coef| (|Sequence| *4))))
       (|isDomain| *1 (|MomentPackage| *4))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|Stream| *4)) (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|Stream| (|SparseUnivariatePolynomial| *4)))
       (|isDomain| *1 (|MomentPackage| *4))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Sequence| *2)) (|isDomain| *4 (|NonNegativeInteger|))
       (|isDomain| *1 (|MomentPackage| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *2 *3 *4)
  (AND (|isDomain| *3 (|Sequence| *2)) (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|MomentPackage| *2))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Sequence| *4)) (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|Sequence| (|SparseUnivariatePolynomial| *4)))
       (|isDomain| *1 (|MomentPackage| *4))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Sequence| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|MomentPackage| *3))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Sequence| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|MomentPackage| *3))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Sequence| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|MomentPackage| *3))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Sequence| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|MomentPackage| *3))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Sequence| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|MomentPackage| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Sequence| *4)) (|ofCategory| *4 (|Field|))
       (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|Stream| (|Record| (|:| |an| *4) (|:| |bn| *4))))
       (|isDomain| *1 (|MomentPackage| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Sequence| *4)) (|ofCategory| *4 (|Field|))
       (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2
                   (|Record| (|:| |an| (|Stream| *4))
                             (|:| |bn| (|Stream| *4))))
       (|isDomain| *1 (|MomentPackage| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|Field|))
       (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|Record| (|:| |an| (|List| *4)) (|:| |bn| (|List| *4))))
       (|isDomain| *1 (|MomentPackage| *4))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Sequence| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|MomentPackage| *3))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Sequence| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|MomentPackage| *3))))) 
(((*1 *1 *1 *1)
  (|partial| AND (|ofCategory| *2 (|CommutativeRing|))
   (|isDomain| *1 (|EuclideanModularRing| *2 *3 *4 *5 *6 *7))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))
   (|ofCategory| *4 (|AbelianMonoid|)) (|ofType| *5 (|Mapping| *3 *3 *4))
   (|ofType| *6 (|Mapping| (|Union| *4 "failed") *4 *4))
   (|ofType| *7 (|Mapping| (|Union| *3 "failed") *3 *3 *4))))
 ((*1 *1 *1 *1)
  (|partial| AND (|isDomain| *1 (|ModularField| *2 *3 *4 *5 *6))
   (|ofCategory| *2 (|CommutativeRing|)) (|ofCategory| *3 (|AbelianMonoid|))
   (|ofType| *4 (|Mapping| *2 *2 *3))
   (|ofType| *5 (|Mapping| (|Union| *3 "failed") *3 *3))
   (|ofType| *6 (|Mapping| (|Union| *2 "failed") *2 *2 *3))))
 ((*1 *1 *1 *1)
  (|partial| AND (|isDomain| *1 (|ModularRing| *2 *3 *4 *5 *6))
   (|ofCategory| *2 (|CommutativeRing|)) (|ofCategory| *3 (|AbelianMonoid|))
   (|ofType| *4 (|Mapping| *2 *2 *3))
   (|ofType| *5 (|Mapping| (|Union| *3 "failed") *3 *3))
   (|ofType| *6 (|Mapping| (|Union| *2 "failed") *2 *2 *3))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|CyclicGroup| *3 *4))
       (|ofType| *3 (|PositiveInteger|)) (|ofType| *4 (|Symbol|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|UnivariatePuiseuxSeries| *3 *4 *5))
       (|isDomain| *1 (|ExponentialOfUnivariatePuiseuxSeries| *3 *4 *5))
       (|ofCategory| *3 (|Join| (|Field|) (|Comparable|)))
       (|ofType| *4 (|Symbol|)) (|ofType| *5 *3)))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FloatingPointSystem|)) (|isDomain| *2 (|Integer|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Factored| *3))
       (|ofCategory| *3 (|IntegralDomain|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|InfiniteCyclicGroup| *3))
       (|ofType| *3 (|Symbol|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|MachineFloat|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|SetCategory|))
       (|isDomain| *1 (|ModuleMonomial| *3 *2 *4))
       (|ofCategory| *3 (|OrderedSet|))
       (|ofType| *4
        (|Mapping| (|Boolean|) (|Record| (|:| |index| *3) (|:| |exponent| *2))
                   (|Record| (|:| |index| *3) (|:| |exponent| *2))))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|)) (|ofCategory| *1 (|Finite|))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|Vector| *4))
       (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|JetBundleCategory|))
       (|isDomain| *2 (|PositiveInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *2 (|OrderedSet|))
       (|isDomain| *1 (|ModuleMonomial| *2 *3 *4))
       (|ofCategory| *3 (|SetCategory|))
       (|ofType| *4
        (|Mapping| (|Boolean|) (|Record| (|:| |index| *2) (|:| |exponent| *3))
                   (|Record| (|:| |index| *2) (|:| |exponent| *3))))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Ring|)) (|isDomain| *1 (|ModMonic| *3 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|Ring|)) (|isDomain| *2 (|Vector| *3))
       (|isDomain| *1 (|ModMonic| *3 *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Vector| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|ModMonic| *3 *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|Ring|)) (|isDomain| *2 (|Vector| *3))
       (|isDomain| *1 (|ModMonic| *3 *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2)
  (AND (|ofCategory| *3 (|Ring|))
       (|isDomain| *2 (|PrimitiveArray| (|ModMonic| *3 *4)))
       (|isDomain| *1 (|ModMonic| *3 *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *2 (|FiniteFieldCategory|)) (|ofCategory| *2 (|Ring|))
       (|isDomain| *1 (|ModMonic| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|Vector| (|SparseUnivariatePolynomial| *8)))
       (|isDomain| *4 (|List| (|Symbol|))) (|isDomain| *5 (|List| (|Integer|)))
       (|isDomain| *6 (|Integer|)) (|ofCategory| *8 (|CommutativeRing|))
       (|isDomain| *2 (|Vector| (|U32Vector|)))
       (|isDomain| *1 (|ModularHermitePadeSolver| *7 *8))
       (|ofCategory| *7 (|CommutativeRing|))))) 
(((*1 *2 *3 *4 *5 *6 *4)
  (|partial| AND (|isDomain| *3 (|List| (|List| *7)))
   (|isDomain| *5 (|List| (|Symbol|))) (|isDomain| *6 (|List| (|Integer|)))
   (|ofCategory| *7 (|CommutativeRing|)) (|isDomain| *4 (|Integer|))
   (|isDomain| *2 (|List| (|U32Vector|)))
   (|isDomain| *1 (|ModularHermitePadeSolver| *7 *8))
   (|ofCategory| *8 (|CommutativeRing|))))) 
(((*1 *2 *2 *3 *4 *4 *5 *6)
  (AND
   (|isDomain| *2
               (|Mapping| (|Union| "good" "reject" "no_solution")
                          (|List| (|SparseUnivariatePolynomial| *8))))
   (|isDomain| *3 (|List| (|List| *7))) (|isDomain| *4 (|Symbol|))
   (|isDomain| *5 (|NonNegativeInteger|))
   (|isDomain| *6
               (|Mapping| (|Vector| (|U32Vector|)) (|List| (|U32Vector|))
                          (|Integer|) (|Integer|)))
   (|ofCategory| *7 (|CommutativeRing|)) (|ofCategory| *8 (|CommutativeRing|))
   (|isDomain| *1 (|ModularHermitePadeSolver| *7 *8))))) 
(((*1 *2 *3 *4 *5 *5 *6 *7 *8)
  (AND (|isDomain| *3 (|List| (|List| *9)))
       (|isDomain| *4 (|List| (|Integer|))) (|isDomain| *5 (|Symbol|))
       (|isDomain| *6 (|NonNegativeInteger|))
       (|isDomain| *7
                   (|Mapping| (|Vector| (|U32Vector|)) (|List| (|U32Vector|))
                              (|Integer|) (|Integer|)))
       (|isDomain| *8
                   (|Mapping| (|Union| "good" "reject" "no_solution")
                              (|List| (|SparseUnivariatePolynomial| *10))))
       (|ofCategory| *9 (|CommutativeRing|))
       (|ofCategory| *10 (|CommutativeRing|))
       (|isDomain| *2
                   (|Union| (|Matrix| (|SparseUnivariatePolynomial| *10))
                            (|Boolean|)))
       (|isDomain| *1 (|ModularHermitePadeSolver| *9 *10))))) 
(((*1 *2 *3 *4 *5 *6 *6)
  (AND (|isDomain| *3 (|List| (|Symbol|)))
       (|isDomain| *4 (|SortedExponentVector|))
       (|isDomain| *5 (|PrimitiveArray| (|Integer|)))
       (|isDomain| *6 (|Integer|))
       (|isDomain| *2
                   (|SparseUnivariatePolynomial| (|Polynomial| (|Integer|))))
       (|isDomain| *1 (|ModularHermitePade|))))) 
(((*1 *2 *3 *4 *4)
  (AND
   (|isDomain| *3 (|List| (|List| (|Fraction| (|Polynomial| (|Integer|))))))
   (|isDomain| *4 (|Symbol|)) (|isDomain| *2 (|List| (|Symbol|)))
   (|isDomain| *1 (|ModularHermitePade|))))) 
(((*1 *2 *3 *4 *5 *6 *4)
  (|partial| AND
   (|isDomain| *3 (|List| (|List| (|Fraction| (|Polynomial| (|Integer|))))))
   (|isDomain| *5 (|List| (|Symbol|))) (|isDomain| *6 (|List| (|Integer|)))
   (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|List| (|U32Vector|)))
   (|isDomain| *1 (|ModularHermitePade|))))) 
(((*1 *2 *3 *4 *4)
  (|partial| AND (|isDomain| *3 (|List| (|List| (|Fraction| (|Integer|)))))
   (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|List| (|U32Vector|)))
   (|isDomain| *1 (|ModularHermitePade|))))) 
(((*1 *2 *3 *4 *5 *6)
  (AND
   (|isDomain| *3
               (|Vector|
                (|SparseUnivariatePolynomial| (|Polynomial| (|Integer|)))))
   (|isDomain| *4 (|List| (|Symbol|))) (|isDomain| *5 (|List| (|Integer|)))
   (|isDomain| *6 (|Integer|)) (|isDomain| *2 (|Vector| (|U32Vector|)))
   (|isDomain| *1 (|ModularHermitePade|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Vector| (|SparseUnivariatePolynomial| (|Integer|))))
       (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|Vector| (|U32Vector|)))
       (|isDomain| *1 (|ModularHermitePade|))))) 
(((*1 *2 *3 *4 *5 *6 *6 *6)
  (AND
   (|isDomain| *5
               (|Mapping| (|Vector| *2) (|List| *2) (|Integer|) (|Integer|)))
   (|isDomain| *6 (|Integer|)) (|isDomain| *3 (|Vector| (|U32Vector|)))
   (|isDomain| *4 (|List| (|U32Vector|))) (|isDomain| *2 (|U32Vector|))
   (|isDomain| *1 (|ModularHermitePade|))))) 
(((*1 *2 *3 *4 *5 *6 *7 *8 *9)
  (AND (|isDomain| *3 (|List| (|List| (|Integer|))))
       (|isDomain| *4 (|List| (|Integer|))) (|isDomain| *5 (|Symbol|))
       (|isDomain| *7 (|NonNegativeInteger|))
       (|isDomain| *8
                   (|Mapping| (|Vector| (|U32Vector|)) (|List| (|U32Vector|))
                              (|Integer|) (|Integer|)))
       (|isDomain| *9
                   (|Mapping| (|Union| "good" "reject" "no_solution")
                              (|List|
                               (|SparseUnivariatePolynomial| (|Integer|)))))
       (|isDomain| *6 (|Integer|))
       (|isDomain| *2
                   (|Union|
                    (|Matrix| (|SparseUnivariatePolynomial| (|Integer|)))
                    (|Boolean|)))
       (|isDomain| *1 (|ModularHermitePade|))))) 
(((*1 *2 *3 *4 *5 *5 *6 *7 *8)
  (AND
   (|isDomain| *3
               (|List|
                (|List| (|Fraction| (|Polynomial| (|AlgebraicNumber|))))))
   (|isDomain| *4 (|List| (|Integer|))) (|isDomain| *5 (|Symbol|))
   (|isDomain| *6 (|NonNegativeInteger|))
   (|isDomain| *7
               (|Mapping| (|Vector| (|U32Vector|)) (|List| (|U32Vector|))
                          (|Integer|) (|Integer|)))
   (|isDomain| *8
               (|Mapping| (|Union| "good" "reject" "no_solution")
                          (|List|
                           (|SparseUnivariatePolynomial|
                            (|Polynomial| (|AlgebraicNumber|))))))
   (|isDomain| *2
               (|Union|
                (|Matrix|
                 (|SparseUnivariatePolynomial|
                  (|Polynomial| (|AlgebraicNumber|))))
                (|Boolean|)))
   (|isDomain| *1 (|ModularHermitePade|))))) 
(((*1 *2 *3 *4 *5 *5 *6 *7 *8)
  (AND
   (|isDomain| *3 (|List| (|List| (|Fraction| (|Polynomial| (|Integer|))))))
   (|isDomain| *4 (|List| (|Integer|))) (|isDomain| *5 (|Symbol|))
   (|isDomain| *6 (|NonNegativeInteger|))
   (|isDomain| *7
               (|Mapping| (|Vector| (|U32Vector|)) (|List| (|U32Vector|))
                          (|Integer|) (|Integer|)))
   (|isDomain| *8
               (|Mapping| (|Union| "good" "reject" "no_solution")
                          (|List|
                           (|SparseUnivariatePolynomial|
                            (|Polynomial| (|Integer|))))))
   (|isDomain| *2
               (|Union|
                (|Matrix|
                 (|SparseUnivariatePolynomial| (|Polynomial| (|Integer|))))
                (|Boolean|)))
   (|isDomain| *1 (|ModularHermitePade|))))) 
(((*1 *2 *3 *4 *5 *6 *7 *8)
  (AND (|isDomain| *3 (|List| (|List| (|AlgebraicNumber|))))
       (|isDomain| *4 (|List| (|Integer|))) (|isDomain| *5 (|Symbol|))
       (|isDomain| *6 (|NonNegativeInteger|))
       (|isDomain| *7
                   (|Mapping| (|Vector| (|U32Vector|)) (|List| (|U32Vector|))
                              (|Integer|) (|Integer|)))
       (|isDomain| *8
                   (|Mapping| (|Union| "good" "reject" "no_solution")
                              (|List|
                               (|SparseUnivariatePolynomial|
                                (|AlgebraicNumber|)))))
       (|isDomain| *2
                   (|Union|
                    (|Matrix|
                     (|SparseUnivariatePolynomial| (|AlgebraicNumber|)))
                    (|Boolean|)))
       (|isDomain| *1 (|ModularHermitePade|))))) 
(((*1 *2 *3 *4 *5 *6 *7 *8)
  (AND (|isDomain| *3 (|List| (|List| (|Fraction| (|Integer|)))))
       (|isDomain| *4 (|List| (|Integer|))) (|isDomain| *5 (|Symbol|))
       (|isDomain| *6 (|NonNegativeInteger|))
       (|isDomain| *7
                   (|Mapping| (|Vector| (|U32Vector|)) (|List| (|U32Vector|))
                              (|Integer|) (|Integer|)))
       (|isDomain| *8
                   (|Mapping| (|Union| "good" "reject" "no_solution")
                              (|List|
                               (|SparseUnivariatePolynomial| (|Integer|)))))
       (|isDomain| *2
                   (|Union|
                    (|Matrix| (|SparseUnivariatePolynomial| (|Integer|)))
                    (|Boolean|)))
       (|isDomain| *1 (|ModularHermitePade|))))) 
(((*1 *2 *3 *4)
  (AND
   (|isDomain| *4
               (|List|
                (|Record| (|:| |ind| (|NonNegativeInteger|))
                          (|:| |poly| (|U32Vector|)))))
   (|isDomain| *3 (|U32Vector|)) (|isDomain| *2 (|Void|))
   (|isDomain| *1 (|ModularFactorization|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |ind| (|NonNegativeInteger|))
                              (|:| |poly| (|U32Vector|)))))
       (|isDomain| *1 (|ModularFactorization|))))) 
(((*1 *2 *2 *3 *2 *4 *4 *5)
  (AND (|isDomain| *3 (|U32Matrix|))
       (|isDomain| *5
                   (|List|
                    (|Record| (|:| |ind| (|NonNegativeInteger|))
                              (|:| |poly| (|U32Vector|)))))
       (|isDomain| *2 (|U32Vector|)) (|isDomain| *4 (|NonNegativeInteger|))
       (|isDomain| *1 (|ModularFactorization|))))) 
(((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *5
               (|List|
                (|Record| (|:| |ind| (|NonNegativeInteger|))
                          (|:| |poly| (|U32Vector|)))))
   (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|NonNegativeInteger|))
   (|isDomain| *2
               (|Record| (|:| |matr| (|U32Matrix|))
                         (|:| |poly| (|U32Vector|))))
   (|isDomain| *1 (|ModularFactorization|))))) 
(((*1 *2 *2 *3 *4)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *4
                   (|List|
                    (|Record| (|:| |ind| (|NonNegativeInteger|))
                              (|:| |poly| (|U32Vector|)))))
       (|isDomain| *2 (|U32Vector|)) (|isDomain| *1 (|ModularFactorization|))))) 
(((*1 *2 *2 *2 *3)
  (AND (|isDomain| *2 (|U32Matrix|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *1 (|ModularFactorization|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |poly| (|U32Vector|))
                              (|:| |degree| (|NonNegativeInteger|))
                              (|:| |separate_factors|
                                   (|Mapping| (|List| (|U32Vector|)))))))
       (|isDomain| *1 (|ModularFactorization|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|U32Vector|)) (|isDomain| *4 (|Integer|))
       (|isDomain| *2 (|List| (|U32Vector|)))
       (|isDomain| *1 (|ModularFactorization|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|String|))
       (|isDomain| *1 (|HTMLFormat|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|String|))
       (|isDomain| *1 (|MathMLFormat|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|String|))
       (|isDomain| *1 (|HTMLFormat|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|String|))
       (|isDomain| *1 (|MathMLFormat|))))) 
(((*1 *2 *3 *4 *5 *6 *7 *8 *9)
  (|partial| AND (|isDomain| *3 (|SparseUnivariatePolynomial| *13))
   (|isDomain| *4 (|List| *11)) (|isDomain| *6 (|List| *12))
   (|isDomain| *7 (|List| *13)) (|isDomain| *8 (|List| (|NonNegativeInteger|)))
   (|isDomain| *9
               (|Mapping|
                (|Mapping|
                 (|Union| (|List| (|SparseUnivariatePolynomial| *12)) "failed")
                 (|SparseUnivariatePolynomial| *12))
                (|List| (|SparseUnivariatePolynomial| *12))))
   (|ofCategory| *11 (|OrderedSet|)) (|ofCategory| *12 (|IntegralDomain|))
   (|ofCategory| *13 (|PolynomialCategory| *12 *10 *11))
   (|isDomain| *5 (|List| (|SparseUnivariatePolynomial| *12)))
   (|ofCategory| *10 (|OrderedAbelianMonoidSup|))
   (|isDomain| *2 (|List| (|SparseUnivariatePolynomial| *13)))
   (|isDomain| *1 (|MultivariateLifting| *10 *11 *12 *13))))
 ((*1 *2 *3 *4 *5 *6 *7 *8 *9)
  (|partial| AND (|isDomain| *3 (|SparseUnivariatePolynomial| *12))
   (|isDomain| *4 (|List| *11))
   (|isDomain| *5 (|List| (|SparseUnivariatePolynomial| *9)))
   (|isDomain| *6 (|List| *9)) (|isDomain| *7 (|List| *12))
   (|isDomain| *8 (|List| (|NonNegativeInteger|)))
   (|ofCategory| *9 (|EuclideanDomain|)) (|ofCategory| *11 (|OrderedSet|))
   (|ofCategory| *9 (|IntegralDomain|))
   (|ofCategory| *12 (|PolynomialCategory| *9 *10 *11))
   (|ofCategory| *10 (|OrderedAbelianMonoidSup|))
   (|isDomain| *2 (|List| (|SparseUnivariatePolynomial| *12)))
   (|isDomain| *1 (|MultivariateLifting| *10 *11 *9 *12))))) 
(((*1 *2 *3 *4 *5 *6 *2 *7)
  (|partial| AND (|isDomain| *2 (|List| (|SparseUnivariatePolynomial| *11)))
   (|isDomain| *3 (|SparseUnivariatePolynomial| *11))
   (|isDomain| *4 (|List| *9)) (|isDomain| *5 (|List| *10))
   (|isDomain| *6 (|List| (|NonNegativeInteger|)))
   (|isDomain| *7
               (|Mapping|
                (|Union| (|List| (|SparseUnivariatePolynomial| *10)) "failed")
                (|SparseUnivariatePolynomial| *10)))
   (|ofCategory| *9 (|OrderedSet|)) (|ofCategory| *10 (|IntegralDomain|))
   (|ofCategory| *11 (|PolynomialCategory| *10 *8 *9))
   (|ofCategory| *8 (|OrderedAbelianMonoidSup|))
   (|isDomain| *1 (|MultivariateLifting| *8 *9 *10 *11))))) 
(((*1 *2 *3 *4 *4)
  (AND (|isDomain| *4 (|Symbol|)) (|isDomain| *2 (|Mapping| *7 *5 *6))
       (|isDomain| *1 (|MakeBinaryCompiledFunction| *3 *5 *6 *7))
       (|ofCategory| *3 (|ConvertibleTo| (|InputForm|)))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *6 (|Type|))
       (|ofCategory| *7 (|Type|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Symbol|)) (|isDomain| *2 (|Mapping| *6 *5))
       (|isDomain| *1 (|MakeUnaryCompiledFunction| *3 *5 *6))
       (|ofCategory| *3 (|ConvertibleTo| (|InputForm|)))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *6 (|Type|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Mapping| *6 *5))
       (|isDomain| *1 (|MakeUnaryCompiledFunction| *4 *5 *6))
       (|ofCategory| *4 (|ConvertibleTo| (|InputForm|)))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *6 (|Type|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *2 (|Record| (|:| |part1| *3) (|:| |part2| *4)))
       (|isDomain| *1 (|MakeRecord| *3 *4)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|Type|))))) 
(((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|Symbol|))) (|isDomain| *3 (|Symbol|))
       (|isDomain| *1 (|InputForm|))))
 ((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|List| (|JetBundleExpression| *5)))
       (|isDomain| *4 (|NonNegativeInteger|))
       (|isDomain| *1 (|JetBundleExpression| *5))
       (|ofCategory| *5 (|JetBundleCategory|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|List| (|JetBundleXExpression| *4)))
       (|isDomain| *1 (|JetBundleXExpression| *4))
       (|ofCategory| *4 (|JetBundleCategory|))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MakeFunction| *3))
       (|ofCategory| *3 (|ConvertibleTo| (|InputForm|)))))
 ((*1 *2 *3 *2 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MakeFunction| *3))
       (|ofCategory| *3 (|ConvertibleTo| (|InputForm|)))))
 ((*1 *2 *3 *2 *2 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|MakeFunction| *3))
       (|ofCategory| *3 (|ConvertibleTo| (|InputForm|)))))
 ((*1 *2 *3 *2 *4)
  (AND (|isDomain| *4 (|List| (|Symbol|))) (|isDomain| *2 (|Symbol|))
       (|isDomain| *1 (|MakeFunction| *3))
       (|ofCategory| *3 (|ConvertibleTo| (|InputForm|)))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Symbol|))
       (|isDomain| *2 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *1 (|MakeFloatCompiledFunction| *3))
       (|ofCategory| *3 (|ConvertibleTo| (|InputForm|)))))
 ((*1 *2 *3 *4 *4)
  (AND (|isDomain| *4 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *1 (|MakeFloatCompiledFunction| *3))
       (|ofCategory| *3 (|ConvertibleTo| (|InputForm|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Mapping| *7 *5 *6))
       (|isDomain| *1 (|MakeBinaryCompiledFunction| *4 *5 *6 *7))
       (|ofCategory| *4 (|ConvertibleTo| (|InputForm|)))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *6 (|Type|))
       (|ofCategory| *7 (|Type|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|MachineInteger|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|MachineInteger|))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *3 (|EuclideanDomain|))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|isDomain| *2 (|Record| (|:| |quotient| *3) (|:| |remainder| *3)))
       (|isDomain| *1 (|MatrixLinearAlgebraFunctions| *3 *4 *5 *6))
       (|ofCategory| *6 (|MatrixCategory| *3 *4 *5))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *2 (|Record| (|:| |quotient| *3) (|:| |remainder| *3)))
       (|isDomain| *1 (|ModularHermitianRowReduction| *3))
       (|ofCategory| *3 (|EuclideanDomain|))))) 
(((*1 *2 *2 *3 *3)
  (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|EuclideanDomain|))
       (|isDomain| *1 (|ModularHermitianRowReduction| *3))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|EuclideanDomain|))
       (|isDomain| *1 (|ModularHermitianRowReduction| *3))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|EuclideanDomain|))
       (|isDomain| *1 (|ModularHermitianRowReduction| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FloatingPointSystem|)) (|isDomain| *2 (|Integer|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|MachineFloat|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|ofCategory| *1 (|arbitraryPrecision|))
       (|ofCategory| *1 (|FloatingPointSystem|))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FloatingPointSystem|))
       (|isDomain| *2 (|PositiveInteger|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|MachineFloat|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|MachineFloat|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|MachineFloat|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|MachineFloat|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|MachineFloat|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|MachineFloat|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Permutation| *3)))
       (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|MultifunctionGraph| *3))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4))
       (|isDomain| *3 (|List| (|List| (|NonNegativeInteger|))))
       (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|MultifunctionGraph| *4))))
 ((*1 *1 *2 *3)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |value| *4) (|:| |posX| (|NonNegativeInteger|))
                          (|:| |posY| (|NonNegativeInteger|)))))
   (|isDomain| *3
               (|List|
                (|Record| (|:| |name| (|String|))
                          (|:| |arrType| (|NonNegativeInteger|))
                          (|:| |fromOb| (|NonNegativeInteger|))
                          (|:| |toOb| (|NonNegativeInteger|))
                          (|:| |xOffset| (|Integer|))
                          (|:| |yOffset| (|Integer|))
                          (|:| |map| (|List| (|NonNegativeInteger|))))))
   (|ofCategory| *4 (|SetCategory|))
   (|isDomain| *1 (|MultifunctionGraph| *4))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |value| *3) (|:| |posX| (|NonNegativeInteger|))
                          (|:| |posY| (|NonNegativeInteger|))
                          (|:| |next| (|List| (|NonNegativeInteger|)))
                          (|:| |map|
                               (|List| (|List| (|NonNegativeInteger|)))))))
   (|ofCategory| *3 (|SetCategory|))
   (|isDomain| *1 (|MultifunctionGraph| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|MultifunctionGraph| *3))))) 
(((*1 *2 *1 *2)
  (|partial| AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
   (|isDomain| *1 (|FunctionGraph| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1 *2)
  (|partial| AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
   (|isDomain| *1 (|MultifunctionGraph| *3))
   (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1 *2)
  (|partial| AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
   (|isDomain| *1 (|FunctionGraph| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1 *2)
  (|partial| AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
   (|isDomain| *1 (|MultifunctionGraph| *3))
   (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Loop|))
       (|isDomain| *1 (|FunctionGraph| *4)) (|ofCategory| *4 (|SetCategory|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Equation| (|OrderedCompletion| *3)))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *5)))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Union| (|OrderedCompletion| *3)
                            (|Record|
                             (|:| |leftHandLimit|
                                  (|Union| (|OrderedCompletion| *3)
                                           #1="failed"))
                             (|:| |rightHandLimit|
                                  (|Union| (|OrderedCompletion| *3) #1#)))
                            "failed"))
       (|isDomain| *1 (|PowerSeriesLimitPackage| *5 *3))))
 ((*1 *2 *3 *4 *5)
  (|partial| AND (|isDomain| *4 (|Equation| *3)) (|isDomain| *5 (|String|))
   (|ofCategory| *3
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *6)))
   (|ofCategory| *6
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *2 (|OrderedCompletion| *3))
   (|isDomain| *1 (|PowerSeriesLimitPackage| *6 *3))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
       (|isDomain| *4 (|Equation| (|OrderedCompletion| (|Polynomial| *5))))
       (|ofCategory| *5 (|GcdDomain|))
       (|isDomain| *2
                   (|Union|
                    (|OrderedCompletion| (|Fraction| (|Polynomial| *5)))
                    (|Record|
                     (|:| |leftHandLimit|
                          (|Union|
                           (|OrderedCompletion| (|Fraction| (|Polynomial| *5)))
                           #2="failed"))
                     (|:| |rightHandLimit|
                          (|Union|
                           (|OrderedCompletion| (|Fraction| (|Polynomial| *5)))
                           #2#)))
                    #3="failed"))
       (|isDomain| *1 (|RationalFunctionLimitPackage| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Equation| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
       (|ofCategory| *5 (|GcdDomain|))
       (|isDomain| *2
                   (|Union|
                    (|OrderedCompletion| (|Fraction| (|Polynomial| *5)))
                    (|Record|
                     (|:| |leftHandLimit|
                          (|Union|
                           (|OrderedCompletion| (|Fraction| (|Polynomial| *5)))
                           #2#))
                     (|:| |rightHandLimit|
                          (|Union|
                           (|OrderedCompletion| (|Fraction| (|Polynomial| *5)))
                           #2#)))
                    #3#))
       (|isDomain| *1 (|RationalFunctionLimitPackage| *5))))
 ((*1 *2 *3 *4 *5)
  (|partial| AND (|isDomain| *4 (|Equation| (|Fraction| (|Polynomial| *6))))
   (|isDomain| *5 (|String|)) (|isDomain| *3 (|Fraction| (|Polynomial| *6)))
   (|ofCategory| *6 (|GcdDomain|))
   (|isDomain| *2 (|OrderedCompletion| (|Fraction| (|Polynomial| *6))))
   (|isDomain| *1 (|RationalFunctionLimitPackage| *6))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Loop|))
       (|isDomain| *1 (|MultifunctionGraph| *4))
       (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|PermutationGroup| *4))
       (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|MultifunctionGraph| (|String|)))
       (|isDomain| *1 (|MultifunctionGraph| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Permutation| *5))) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *5 (|SetCategory|))
       (|isDomain| *2 (|MultifunctionGraph| (|String|)))
       (|isDomain| *1 (|MultifunctionGraph| *5))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|PermutationGroup| (|NonNegativeInteger|)))
       (|isDomain| *1 (|MultifunctionGraph| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *3 *4 *5 *6 *7)
  (AND (|isDomain| *4 (|Polynomial| (|Integer|))) (|isDomain| *5 (|List| *3))
       (|isDomain| *7 (|List| (|Symbol|)))
       (|ofCategory| *1 (|ModularEvaluationCategory| *8 *3))
       (|ofCategory| *8 (|Type|)) (|ofCategory| *3 (|Type|))
       (|isDomain| *6 (|Symbol|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *4 *4)
  (AND (|isDomain| *4 (|List| (|Symbol|)))
       (|ofCategory| *1 (|ModularEvaluationCategory| *3 *2))
       (|ofCategory| *3 (|Type|)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Symbol|))
       (|ofCategory| *1 (|ModularEvaluationCategory| *3 *5))
       (|ofCategory| *3 (|Type|)) (|ofCategory| *5 (|Type|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *3 *3 *3 *4)
  (AND
   (|isDomain| *3 (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)))
   (|isDomain| *4
               (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)
                          (|DoubleFloat|)))
   (|isDomain| *2
               (|Mapping| (|Point| (|DoubleFloat|)) (|DoubleFloat|)
                          (|DoubleFloat|)))
   (|isDomain| *1 (|MeshCreationRoutinesForThreeDimensions|))))) 
(((*1 *2 *3 *3 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|Expression| (|Integer|)))
       (|isDomain| *4 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *5 (|Segment| (|DoubleFloat|)))
       (|isDomain| *6 (|List| (|DrawOption|)))
       (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
       (|isDomain| *1 (|MeshCreationRoutinesForThreeDimensions|))))) 
(((*1 *2 *3 *4 *5 *5 *6)
  (AND
   (|isDomain| *3 (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)))
   (|isDomain| *4
               (|Union|
                (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)
                           (|DoubleFloat|))
                "undefined"))
   (|isDomain| *5 (|Segment| (|DoubleFloat|)))
   (|isDomain| *6 (|List| (|DrawOption|)))
   (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
   (|isDomain| *1 (|MeshCreationRoutinesForThreeDimensions|))))) 
(((*1 *2 *3 *3 *3 *4 *5 *5 *6)
  (AND
   (|isDomain| *3 (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)))
   (|isDomain| *4
               (|Union|
                (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)
                           (|DoubleFloat|))
                "undefined"))
   (|isDomain| *5 (|Segment| (|DoubleFloat|)))
   (|isDomain| *6 (|List| (|DrawOption|)))
   (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
   (|isDomain| *1 (|MeshCreationRoutinesForThreeDimensions|))))
 ((*1 *2 *3 *4 *4 *5)
  (AND
   (|isDomain| *3
               (|Mapping| (|Point| (|DoubleFloat|)) (|DoubleFloat|)
                          (|DoubleFloat|)))
   (|isDomain| *4 (|Segment| (|DoubleFloat|)))
   (|isDomain| *5 (|List| (|DrawOption|)))
   (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
   (|isDomain| *1 (|MeshCreationRoutinesForThreeDimensions|))))
 ((*1 *2 *2 *3 *4 *4 *5)
  (AND (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
       (|isDomain| *3
                   (|Mapping| (|Point| (|DoubleFloat|)) (|DoubleFloat|)
                              (|DoubleFloat|)))
       (|isDomain| *4 (|Segment| (|DoubleFloat|)))
       (|isDomain| *5 (|List| (|DrawOption|)))
       (|isDomain| *1 (|MeshCreationRoutinesForThreeDimensions|))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|List|
                (|Record| (|:| |deg| (|NonNegativeInteger|)) (|:| |prod| *5))))
   (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
   (|ofCategory| *4 (|FiniteFieldCategory|)) (|isDomain| *2 (|List| *5))
   (|isDomain| *1 (|DistinctDegreeFactorize| *4 *5))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|List|
                (|Record| (|:| |factor| *5) (|:| |degree| (|Integer|)))))
   (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
   (|isDomain| *4 (|Integer|)) (|isDomain| *2 (|List| *5))
   (|isDomain| *1 (|ModularDistinctDegreeFactorizer| *5))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Integer|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |factor| *3) (|:| |degree| (|Integer|)))))
       (|isDomain| *1 (|ModularDistinctDegreeFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|ExtensibleLinearAggregate| *2))
       (|ofCategory| *2 (|Type|)) (|ofCategory| *2 (|BasicType|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|MultiDictionary| *2))
       (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|MultiDictionary| *3))
       (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |entry| *3)
                              (|:| |count| (|NonNegativeInteger|)))))))) 
(((*1 *2 *3 *4 *5 *5)
  (AND (|isDomain| *5 (|NonNegativeInteger|)) (|ofCategory| *6 (|SetCategory|))
       (|ofCategory| *7 (|PartialDifferentialRing| *6))
       (|isDomain| *2 (|Matrix| *7))
       (|isDomain| *1 (|MultiVariableCalculusFunctions| *6 *7 *3 *4))
       (|ofCategory| *3 (|FiniteLinearAggregate| *7))
       (|ofCategory| *4 (|FiniteLinearAggregate| *6))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *6 (|PartialDifferentialRing| *5))
       (|isDomain| *2 (|Matrix| *6))
       (|isDomain| *1 (|MultiVariableCalculusFunctions| *5 *6 *3 *4))
       (|ofCategory| *3 (|FiniteLinearAggregate| *6))
       (|ofCategory| *4 (|FiniteLinearAggregate| *5))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *5 (|NonNegativeInteger|)) (|ofCategory| *6 (|SetCategory|))
       (|ofCategory| *3 (|PartialDifferentialRing| *6))
       (|isDomain| *2 (|Matrix| *3))
       (|isDomain| *1 (|MultiVariableCalculusFunctions| *6 *3 *7 *4))
       (|ofCategory| *7 (|FiniteLinearAggregate| *3))
       (|ofCategory| *4 (|FiniteLinearAggregate| *6))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *3 (|PartialDifferentialRing| *5))
       (|isDomain| *2 (|Matrix| *3))
       (|isDomain| *1 (|MultiVariableCalculusFunctions| *5 *3 *6 *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *3))
       (|ofCategory| *4 (|FiniteLinearAggregate| *5))))) 
(((*1 *2 *2 *3)
  (AND (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *2 (|PartialDifferentialRing| *4))
       (|isDomain| *1 (|MultiVariableCalculusFunctions| *4 *2 *5 *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *2))
       (|ofCategory| *3 (|FiniteLinearAggregate| *4))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *2 (|PartialDifferentialRing| *5))
       (|isDomain| *1 (|MultiVariableCalculusFunctions| *5 *2 *3 *4))
       (|ofCategory| *3 (|FiniteLinearAggregate| *2))
       (|ofCategory| *4 (|FiniteLinearAggregate| *5))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *3 (|PartialDifferentialRing| *5))
       (|isDomain| *2 (|Vector| *3))
       (|isDomain| *1 (|MultiVariableCalculusFunctions| *5 *3 *6 *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *3))
       (|ofCategory| *4 (|FiniteLinearAggregate| *5))))) 
(((*1 *2 *2 *2 *2 *2 *3)
  (AND (|isDomain| *2 (|Matrix| *4)) (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|StorageEfficientMatrixOperations| *4))))) 
(((*1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StorageEfficientMatrixOperations| *3))))) 
(((*1 *2 *2 *2 *3)
  (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StorageEfficientMatrixOperations| *3))))) 
(((*1 *2 *2 *3 *2)
  (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StorageEfficientMatrixOperations| *3))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StorageEfficientMatrixOperations| *3))))
 ((*1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StorageEfficientMatrixOperations| *3))))) 
(((*1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StorageEfficientMatrixOperations| *3))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Matrix| *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|StorageEfficientMatrixOperations| *3))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *3 (|IntegralDomain|))
   (|ofCategory| *3 (|CommutativeRing|))
   (|ofCategory| *4 (|FiniteLinearAggregate| *3))
   (|ofCategory| *5 (|FiniteLinearAggregate| *3))
   (|isDomain| *1 (|MatrixLinearAlgebraFunctions| *3 *4 *5 *2))
   (|ofCategory| *2 (|MatrixCategory| *3 *4 *5))))
 ((*1 *1 *1)
  (|partial| AND (|isDomain| *1 (|Matrix| *2))
   (|ofCategory| *2 (|IntegralDomain|)) (|ofCategory| *2 (|AbelianMonoid|))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|isDomain| *1 (|MatrixLinearAlgebraFunctions| *3 *4 *5 *2))
       (|ofCategory| *2 (|MatrixCategory| *3 *4 *5))))) 
(((*1 *2 *2 *3 *4 *4)
  (AND (|isDomain| *4 (|Integer|)) (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|ofCategory| *6 (|FiniteLinearAggregate| *3))
       (|isDomain| *1 (|MatrixLinearAlgebraFunctions| *3 *5 *6 *2))
       (|ofCategory| *2 (|MatrixCategory| *3 *5 *6))))) 
(((*1 *2 *2 *3 *4 *4)
  (AND (|isDomain| *4 (|Integer|)) (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|ofCategory| *6 (|FiniteLinearAggregate| *3))
       (|isDomain| *1 (|MatrixLinearAlgebraFunctions| *3 *5 *6 *2))
       (|ofCategory| *2 (|MatrixCategory| *3 *5 *6))))) 
(((*1 *2 *2 *3 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *1 (|MatrixLinearAlgebraFunctions| *4 *5 *6 *2))
       (|ofCategory| *2 (|MatrixCategory| *4 *5 *6))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *1)) (|ofCategory| *3 (|SemiRng|))
       (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *1 (|MatrixCategory| *3 *4 *5))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *2 *3 *4))
       (|ofCategory| *2 (|AbelianMonoid|))
       (|ofCategory| *3 (|FiniteLinearAggregate| *2))
       (|ofCategory| *4 (|FiniteLinearAggregate| *2))
       (|ofCategory| *2 (|SemiRng|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *1)) (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *1 (|MatrixCategory| *3 *4 *5))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|MatrixCategory| *2 *3 *4))
       (|ofCategory| *2 (|AbelianMonoid|))
       (|ofCategory| *3 (|FiniteLinearAggregate| *2))
       (|ofCategory| *4 (|FiniteLinearAggregate| *2))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|ofCategory| *1 (|MatrixCategory| *3 *4 *5))
       (|ofCategory| *3 (|AbelianMonoid|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|ofCategory| *3 (|SemiRng|))))) 
(((*1 *2 *1 *3 *4 *5 *6 *6 *7)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *4 (|List| (|List| (|NonNegativeInteger|))))
       (|isDomain| *5 (|List| *1)) (|isDomain| *6 (|NonNegativeInteger|))
       (|isDomain| *7 (|Union| *8 "one"))
       (|ofCategory| *1 (|MatrixCategory| *8 *9 *10))
       (|ofCategory| *8 (|AbelianMonoid|))
       (|ofCategory| *9 (|FiniteLinearAggregate| *8))
       (|ofCategory| *10 (|FiniteLinearAggregate| *8))
       (|isDomain| *2 (|Void|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Mapping| *6 *4 *5)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *2 (|Mapping| *6 *5 *4))
       (|isDomain| *1 (|MappingPackage3| *4 *5 *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *6 (|SetCategory|)) (|isDomain| *2 (|Mapping| *6 *4 *5))
       (|isDomain| *1 (|MappingPackage3| *4 *5 *6))
       (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Mapping| *6 *4)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *6 (|SetCategory|)) (|isDomain| *2 (|Mapping| *6 *4 *5))
       (|isDomain| *1 (|MappingPackage3| *4 *5 *6))
       (|ofCategory| *5 (|SetCategory|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *4 *5)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *2 (|Mapping| *6 *5))
       (|isDomain| *1 (|MappingPackage3| *4 *5 *6))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5 *4)) (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|isDomain| *2 (|Mapping| *6 *5))
       (|isDomain| *1 (|MappingPackage3| *5 *4 *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Mapping| *5 *4 *4)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|isDomain| *2 (|Mapping| *5 *4))
       (|isDomain| *1 (|MappingPackage2| *4 *5))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *5 *4)) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5 (|SetCategory|)) (|isDomain| *2 (|Mapping| *5))
       (|isDomain| *1 (|MappingPackage2| *4 *5))))) 
(((*1 *2 *1)
  (AND (|ofType| *4 (|List| *3)) (|ofCategory| *2 (|Ring|))
       (|isDomain| *1 (|DistributedJetBundlePolynomial| *2 *3 *4 *5))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|ofCategory| *5
                     (|DirectProductCategory| (|#| *4)
                                              (|NonNegativeInteger|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| *3 *4))
       (|isDomain| *1 (|MappingPackage2| *4 *3))
       (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *3 *4 *2)
  (AND (|isDomain| *3 (|Mapping| *2 (|NonNegativeInteger|) *2))
       (|isDomain| *4 (|NonNegativeInteger|)) (|ofCategory| *2 (|SetCategory|))
       (|isDomain| *1 (|MappingPackageInternalHacks1| *2))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Mapping| *3 (|NonNegativeInteger|) *3))
       (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|MappingPackage1| *3))))) 
(((*1 *2 *2)
  (AND (|isDomain| *1 (|MappingPackage1| *2))
       (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| *3)) (|isDomain| *1 (|MappingPackage1| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| *2 *6)) (|isDomain| *4 (|Mapping| *6 *5))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|SetCategory|))
       (|ofCategory| *2 (|SetCategory|))
       (|isDomain| *1 (|MappingPackageInternalHacks3| *5 *6 *2))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *1 (|MappingPackageInternalHacks2| *3 *2))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *1 (|MappingPackageInternalHacks2| *2 *3))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *3 *4 *2)
  (AND (|isDomain| *3 (|Mapping| *2 *2)) (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *2 (|SetCategory|))
       (|isDomain| *1 (|MappingPackageInternalHacks1| *2))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *4))
       (|ofCategory| *6 (|IndexedAggregate| (|Integer|) *4))
       (|isDomain| *2 (|List| (|List| *1)))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *4))
       (|ofCategory| *6 (|IndexedAggregate| (|Integer|) *4))
       (|isDomain| *2 (|List| (|List| *1)))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|List| (|NonNegativeInteger|)))
       (|isDomain| *5 (|PositiveInteger|)) (|ofCategory| *6 (|Type|))
       (|ofCategory| *7 (|FiniteLinearAggregate| *6))
       (|ofCategory| *8 (|FiniteLinearAggregate| *6))
       (|isDomain| *2 (|List| (|List| *3)))
       (|isDomain| *1 (|MatrixManipulation| *6 *7 *8 *3))
       (|ofCategory| *3 (|TwoDimensionalArrayCategory| *6 *7 *8))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|PositiveInteger|))
       (|isDomain| *5 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *6 (|Type|))
       (|ofCategory| *7 (|FiniteLinearAggregate| *6))
       (|ofCategory| *8 (|FiniteLinearAggregate| *6))
       (|isDomain| *2 (|List| (|List| *3)))
       (|isDomain| *1 (|MatrixManipulation| *6 *7 *8 *3))
       (|ofCategory| *3 (|TwoDimensionalArrayCategory| *6 *7 *8))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|))) (|ofCategory| *4 (|AbelianMonoid|))
       (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *1 (|MatrixManipulation| *4 *5 *6 *2))
       (|ofCategory| *2 (|TwoDimensionalArrayCategory| *4 *5 *6))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Segment| (|Integer|)))
       (|ofCategory| *4 (|AbelianMonoid|)) (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *1 (|MatrixManipulation| *4 *5 *6 *2))
       (|ofCategory| *2 (|TwoDimensionalArrayCategory| *4 *5 *6))))) 
(((*1 *1 *1 *2 *2 *2 *2)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|)) (|ofCategory| *4 (|IndexedAggregate| *2 *3))
       (|ofCategory| *5 (|IndexedAggregate| *2 *3))
       (|isDomain| *2 (|Integer|))))
 ((*1 *2 *2 *3 *3)
  (AND (|isDomain| *3 (|List| (|Integer|))) (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *1 (|MatrixManipulation| *4 *5 *6 *2))
       (|ofCategory| *2 (|TwoDimensionalArrayCategory| *4 *5 *6))))
 ((*1 *2 *2 *3 *3)
  (AND (|isDomain| *3 (|Segment| (|Integer|))) (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *1 (|MatrixManipulation| *4 *5 *6 *2))
       (|ofCategory| *2 (|TwoDimensionalArrayCategory| *4 *5 *6))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|))) (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *1 (|MatrixManipulation| *4 *5 *6 *2))
       (|ofCategory| *2 (|TwoDimensionalArrayCategory| *4 *5 *6))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Segment| (|Integer|))) (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *1 (|MatrixManipulation| *4 *5 *6 *2))
       (|ofCategory| *2 (|TwoDimensionalArrayCategory| *4 *5 *6))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *1 (|MatrixManipulation| *4 *5 *6 *2))
       (|ofCategory| *2 (|TwoDimensionalArrayCategory| *4 *5 *6))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|))) (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *1 (|MatrixManipulation| *4 *5 *6 *2))
       (|ofCategory| *2 (|TwoDimensionalArrayCategory| *4 *5 *6))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Segment| (|Integer|))) (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *1 (|MatrixManipulation| *4 *5 *6 *2))
       (|ofCategory| *2 (|TwoDimensionalArrayCategory| *4 *5 *6))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *1 (|MatrixManipulation| *4 *5 *6 *2))
       (|ofCategory| *2 (|TwoDimensionalArrayCategory| *4 *5 *6))))) 
(((*1 *2 *2 *3 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|isDomain| *1 (|MatrixManipulation| *4 *5 *6 *2))
       (|ofCategory| *2 (|TwoDimensionalArrayCategory| *4 *5 *6))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PolynomialIdeal| *3 *4 *5 *6))
       (|ofCategory| *6 (|PolynomialCategory| *3 *4 *5))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|JetBundleCategory|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|MagmaWithUnit|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|Magma|)) (|isDomain| *2 (|PositiveInteger|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|MagmaWithUnit|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|Magma|)) (|isDomain| *2 (|PositiveInteger|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|MagmaWithUnit|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *1 *1)
  (|partial| AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *2))
   (|ofCategory| *2 (|CommutativeRing|)) (|ofCategory| *2 (|IntegralDomain|))))
 ((*1 *1 *1) (|partial| |ofCategory| *1 (|MagmaWithUnit|)))) 
(((*1 *1 *1)
  (|partial| AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *2))
   (|ofCategory| *2 (|CommutativeRing|)) (|ofCategory| *2 (|IntegralDomain|))))
 ((*1 *1 *1) (|partial| |ofCategory| *1 (|MagmaWithUnit|)))) 
(((*1 *2 *2 *3 *4 *5)
  (|partial| AND (|isDomain| *3 (|List| (|Polynomial| (|Integer|))))
   (|isDomain| *4 (|List| (|Symbol|))) (|isDomain| *5 (|Integer|))
   (|isDomain| *2 (|Polynomial| (|Integer|)))
   (|isDomain| *1 (|ModularAlgebraicGcdTools3|))))) 
(((*1 *2 *3 *4 *5 *5)
  (AND (|isDomain| *3 (|SortedExponentVector|))
       (|isDomain| *4 (|List| (|Integer|))) (|isDomain| *5 (|Integer|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|ModularAlgebraicGcdTools3|))))) 
(((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *4 (|U32Vector|)) (|isDomain| *5 (|Integer|))
       (|ofCategory| *1 (|ModularAlgebraicGcdOperations| *7 *3 *6))
       (|ofCategory| *7 (|Type|)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *6 (|Type|)) (|isDomain| *2 (|Void|))))) 
(((*1 *2 *3 *3 *4)
  (AND (|isDomain| *3 (|Integer|))
       (|ofCategory| *1 (|ModularAlgebraicGcdOperations| *5 *6 *4))
       (|ofCategory| *5 (|Type|)) (|ofCategory| *6 (|Type|))
       (|ofCategory| *4 (|Type|)) (|isDomain| *2 (|SortedExponentVector|))))) 
(((*1 *2 *3 *4 *5 *6)
  (|partial| AND (|isDomain| *5 (|List| (|Symbol|)))
   (|ofCategory| *1 (|ModularAlgebraicGcdOperations| *3 *2 *6))
   (|ofCategory| *3 (|Type|)) (|ofCategory| *6 (|Type|))
   (|isDomain| *4 (|Symbol|)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *3 *4 *5)
  (|partial| AND (|isDomain| *3 (|List| *6))
   (|isDomain| *4 (|List| (|Symbol|))) (|isDomain| *5 (|Integer|))
   (|ofCategory| *1 (|ModularAlgebraicGcdOperations| *6 *7 *2))
   (|ofCategory| *6 (|Type|)) (|ofCategory| *7 (|Type|))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2 *3)
  (|partial| AND (|ofCategory| *1 (|ModularAlgebraicGcdOperations| *4 *2 *3))
   (|ofCategory| *4 (|Type|)) (|ofCategory| *2 (|Type|))
   (|ofCategory| *3 (|Type|))))) 
(((*1 *2 *2 *2 *3)
  (AND (|ofCategory| *1 (|ModularAlgebraicGcdOperations| *4 *2 *3))
       (|ofCategory| *4 (|Type|)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *3 (|Type|))))) 
(((*1 *2 *2 *2 *3 *4 *5 *4)
  (AND (|isDomain| *3 (|List| (|Polynomial| (|Integer|))))
       (|isDomain| *4 (|List| (|Symbol|))) (|isDomain| *5 (|Symbol|))
       (|isDomain| *2 (|Polynomial| (|Integer|))) (|ofCategory| *6 (|Type|))
       (|ofCategory| *7 (|Type|))
       (|isDomain| *1 (|ModularAlgebraicGcd| *6 *7 *8))
       (|ofCategory| *8 (|ModularAlgebraicGcdOperations| *2 *6 *7))))
 ((*1 *2 *3 *3 *4 *5 *6 *5)
  (AND (|isDomain| *4 (|List| *3)) (|isDomain| *5 (|List| (|Symbol|)))
       (|isDomain| *6 (|Symbol|)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *7 (|Type|)) (|ofCategory| *8 (|Type|))
       (|ofCategory| *9 (|Type|)) (|isDomain| *2 (|Polynomial| (|Integer|)))
       (|isDomain| *1 (|ModularAlgebraicGcd2| *3 *7 *8 *9 *10 *11))
       (|ofCategory| *10 (|ModularEvaluationCategory| *3 *7))
       (|ofCategory| *11 (|ModularAlgebraicGcdOperations| *7 *8 *9))))) 
(((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *4 (|Polynomial| (|Integer|)))
       (|isDomain| *2 (|FortranCode|))
       (|isDomain| *1 (|FortranCodePackage1|))))
 ((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *4 (|SegmentBinding| (|Polynomial| (|Integer|))))
       (|isDomain| *2 (|FortranCode|))
       (|isDomain| *1 (|FortranCodePackage1|))))
 ((*1 *1 *2 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|ThreeDimensionalMatrix| *3)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|ThreeDimensionalMatrix| *3)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|ListMonoidOps| *2 *3 *4))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|AbelianMonoid|))
       (|ofType| *4 *3)))
 ((*1 *1 *2 *3 *1)
  (AND (|isDomain| *1 (|ListMonoidOps| *2 *3 *4))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|AbelianMonoid|))
       (|ofType| *4 *3)))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|ThreeDimensionalMatrix| *2)) (|ofCategory| *2 (|Ring|))
       (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *1 *2 *1 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|ThreeDimensionalMatrix| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Vector| (|NonNegativeInteger|)))
       (|isDomain| *1 (|ThreeDimensionalMatrix| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|LazyStreamAggregate| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|LazyStreamAggregate| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|LazyStreamAggregate| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|LazyStreamAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|LazyStreamAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|LazyStreamAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|LazyStreamAggregate| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FreeMagma| *3))
       (|ofCategory| *3 (|OrderedSet|))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FreeMonoid| *3))
       (|ofCategory| *3 (|OrderedSet|)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|LyndonWord| *3))
       (|ofCategory| *3 (|OrderedSet|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|FreeMonoid| *4)) (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|LyndonWord| *4))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|FreeMonoid| *3)) (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *1 (|LyndonWord| *3))))) 
(((*1 *1 *2)
  (|partial| AND (|isDomain| *2 (|FreeMonoid| *3))
   (|ofCategory| *3 (|OrderedSet|)) (|isDomain| *1 (|LyndonWord| *3))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|PositiveInteger|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *2 (|OneDimensionalArray| (|List| (|LyndonWord| *5))))
       (|isDomain| *1 (|LyndonWord| *5))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|PositiveInteger|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *2 (|List| (|LyndonWord| *5)))
       (|isDomain| *1 (|LyndonWord| *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| *4)) (|ofCategory| *4 (|Field|))
       (|isDomain| *2
                   (|Record| (|:| |Inv| (|Matrix| *4))
                             (|:| |Pivots| (|List| *4))))
       (|isDomain| *1 (|LUDecomposition| *4))))) 
(((*1 *2 *3 *4 *2)
  (AND (|isDomain| *2 (|Vector| *5)) (|isDomain| *3 (|Matrix| *5))
       (|isDomain| *4 (|Vector| (|Integer|))) (|ofCategory| *5 (|Field|))
       (|isDomain| *1 (|LUDecomposition| *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| *4)) (|ofCategory| *4 (|Field|))
       (|isDomain| *2
                   (|Record| (|:| LU (|Matrix| *4))
                             (|:| |Perm| (|Vector| (|Integer|)))
                             (|:| |Pivots| (|List| *4))))
       (|isDomain| *1 (|LUDecomposition| *4))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|List| *7))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *8 (|PolynomialCategory| *5 *6 *7))
       (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2
                   (|Record| (|:| |mat| (|Matrix| (|Fraction| *8)))
                             (|:| |vec| (|Vector| (|Fraction| *8)))))
       (|isDomain| *1 (|LinearSystemPolynomialPackage| *5 *6 *7 *8))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|List| *7))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *8 (|PolynomialCategory| *5 *6 *7))
       (|ofCategory| *5 (|IntegralDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2
                   (|Record|
                    (|:| |particular|
                         (|Union| (|Vector| (|Fraction| *8)) "failed"))
                    (|:| |basis| (|List| (|Vector| (|Fraction| *8))))))
       (|isDomain| *1 (|LinearSystemPolynomialPackage| *5 *6 *7 *8))))) 
(((*1 *2 *3 *4)
  (AND (|ofCategory| *5 (|Field|))
       (|ofCategory| *6
                     (|Join| (|FiniteLinearAggregate| *5)
                             (|shallowlyMutable|)))
       (|ofCategory| *4
                     (|Join| (|FiniteLinearAggregate| *5)
                             (|shallowlyMutable|)))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|LinearSystemMatrixPackage| *5 *6 *4 *3))
       (|ofCategory| *3 (|MatrixCategory| *5 *6 *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *5)) (|isDomain| *4 (|Vector| *5))
       (|ofCategory| *5 (|Field|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|LinearSystemMatrixPackage1| *5))))) 
(((*1 *1 *2)
  (AND (|ofCategory| *1 (|ListAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2 *3)
  (|partial| AND (|isDomain| *2 (|List| (|SparseUnivariatePolynomial| *4)))
   (|isDomain| *3 (|SparseUnivariatePolynomial| *4))
   (|ofCategory| *4 (|PolynomialFactorizationExplicit|))
   (|isDomain| *1 (|LinearPolynomialEquationByFractions| *4))))) 
(((*1 *2 *1 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |llcm_res| *1) (|:| |coeff1| *1)
                         (|:| |coeff2| *1)))
   (|ofCategory| *1 (|LeftOreRing|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|Loop|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|IndexedAggregate| *3 *4)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|Type|)) (|isDomain| *2 (|List| *4))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|Loop|))))) 
(((*1 *1) (|ofCategory| *1 (|Logic|)))) 
(((*1 *1) (|ofCategory| *1 (|Logic|)))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|LinearOrdinaryDifferentialOperatorCategory| *2))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|Field|))))
 ((*1 *2 *2 *2 *3)
  (AND (|isDomain| *3 (|Mapping| *4 *4)) (|ofCategory| *4 (|Field|))
       (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorsOps| *4 *2))
       (|ofCategory| *2 (|LinearOrdinaryDifferentialOperatorCategory| *4))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|LinearOrdinaryDifferentialOperatorCategory| *3))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *3 (|Field|))))
 ((*1 *2 *2 *3 *4)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *4 (|Mapping| *5 *5))
       (|ofCategory| *5 (|Field|))
       (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorsOps| *5 *2))
       (|ofCategory| *2 (|LinearOrdinaryDifferentialOperatorCategory| *5))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|LinearOrdinaryDifferentialOperatorCategory| *2))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|Field|))))
 ((*1 *2 *2 *2 *3)
  (AND (|isDomain| *3 (|Mapping| *4 *4)) (|ofCategory| *4 (|Field|))
       (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorsOps| *4 *2))
       (|ofCategory| *2 (|LinearOrdinaryDifferentialOperatorCategory| *4))))) 
(((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|LinearOrdinaryDifferentialOperator1|
                (|Fraction|
                 (|UnivariatePolynomial| *6 (|Expression| (|Integer|))))))
   (|isDomain| *4
               (|Mapping|
                (|Factored|
                 (|SparseUnivariatePolynomial| (|Expression| (|Integer|))))
                (|SparseUnivariatePolynomial| (|Expression| (|Integer|)))))
   (|isDomain| *5 (|String|)) (|ofType| *6 (|Symbol|))
   (|isDomain| *2
               (|List|
                (|Record|
                 (|:| |singularity|
                      (|Record|
                       (|:| |point|
                            (|Union| (|Expression| (|Integer|)) "infinity"))
                       (|:| |lpf|
                            (|LinearOrdinaryDifferentialOperator3|
                             (|Expression| (|Integer|))
                             (|UnivariateTaylorSeries|
                              (|Expression| (|Integer|)) *6 *7)
                             (|UnivariateLaurentSeries|
                              (|Expression| (|Integer|)) *6 *7)))
                       (|:| |dxt| (|PositiveInteger|))))
                 (|:| |fos|
                      (|List|
                       (|Record|
                        (|:| |op|
                             (|LinearOrdinaryDifferentialOperator3|
                              (|Expression| (|Integer|))
                              (|UnivariateTaylorSeries|
                               (|Expression| (|Integer|)) *6 *7)
                              (|UnivariateLaurentSeries|
                               (|Expression| (|Integer|)) *6 *7)))
                        (|:| |ram|
                             (|UnivariatePolynomial| *6
                                                     (|Expression|
                                                      (|Integer|))))
                        (|:| |expart|
                             (|UnivariateLaurentSeries|
                              (|Expression| (|Integer|)) *6 *7)))))
                 (|:| |mge|
                      (|List|
                       (|UnivariateLaurentSeries| (|Expression| (|Integer|)) *6
                                                  *7))))))
   (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *6 *7))
   (|ofType| *7 (|Expression| (|Integer|)))))) 
(((*1 *2 *3 *4 *5 *6)
  (AND
   (|isDomain| *3
               (|LinearOrdinaryDifferentialOperator1|
                (|Fraction|
                 (|UnivariatePolynomial| *7 (|Expression| (|Integer|))))))
   (|isDomain| *4 (|Union| (|Expression| (|Integer|)) "infinity"))
   (|isDomain| *5
               (|Mapping|
                (|Factored|
                 (|SparseUnivariatePolynomial| (|Expression| (|Integer|))))
                (|SparseUnivariatePolynomial| (|Expression| (|Integer|)))
                (|List| (|Expression| (|Integer|)))))
   (|isDomain| *6 (|List| (|Expression| (|Integer|)))) (|ofType| *7 (|Symbol|))
   (|isDomain| *2
               (|List|
                (|Record|
                 (|:| |ecs|
                      (|List|
                       (|UnivariateLaurentSeries| (|Expression| (|Integer|)) *7
                                                  *8)))
                 (|:| |ecr|
                      (|UnivariatePolynomial| *7 (|Expression| (|Integer|))))
                 (|:| |ect|
                      (|Fraction|
                       (|UnivariatePolynomial| *7
                                               (|Expression| (|Integer|))))))))
   (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *7 *8))
   (|ofType| *8 (|Expression| (|Integer|)))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Kernel| (|Expression| (|Integer|)))) (|ofType| *5 *2)
       (|isDomain| *2 (|Expression| (|Integer|)))
       (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *4 *5))
       (|ofType| *4 (|Symbol|))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|LinearOrdinaryDifferentialOperator1|
                (|Fraction|
                 (|UnivariatePolynomial| *4 (|Expression| (|Integer|))))))
   (|ofType| *4 (|Symbol|)) (|isDomain| *2 (|Boolean|))
   (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *4 *5))
   (|ofType| *5 (|Expression| (|Integer|)))))) 
(((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|LinearOrdinaryDifferentialOperator1|
                (|Fraction|
                 (|UnivariatePolynomial| *5 (|Expression| (|Integer|))))))
   (|isDomain| *4 (|Union| (|Expression| (|Integer|)) "infinity"))
   (|ofType| *5 (|Symbol|))
   (|isDomain| *2
               (|LinearOrdinaryDifferentialOperator3|
                (|Expression| (|Integer|))
                (|UnivariateTaylorSeries| (|Expression| (|Integer|)) *5 *6)
                (|UnivariateLaurentSeries| (|Expression| (|Integer|)) *5 *6)))
   (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *5 *6))
   (|ofType| *6 (|Expression| (|Integer|)))))) 
(((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|LinearOrdinaryDifferentialOperator1|
                (|Fraction|
                 (|UnivariatePolynomial| *5 (|Expression| (|Integer|))))))
   (|isDomain| *4
               (|Mapping|
                (|Factored|
                 (|SparseUnivariatePolynomial| (|Expression| (|Integer|))))
                (|SparseUnivariatePolynomial| (|Expression| (|Integer|)))))
   (|ofType| *5 (|Symbol|))
   (|isDomain| *2
               (|List|
                (|LinearOrdinaryDifferentialOperator1|
                 (|Fraction|
                  (|UnivariatePolynomial| *5 (|Expression| (|Integer|)))))))
   (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *5 *6))
   (|ofType| *6 (|Expression| (|Integer|)))))) 
(((*1 *2 *3 *3 *4)
  (AND
   (|isDomain| *3
               (|LinearOrdinaryDifferentialOperator3|
                (|Expression| (|Integer|))
                (|UnivariatePolynomial| *5 (|Expression| (|Integer|)))
                (|Fraction|
                 (|UnivariatePolynomial| *5 (|Expression| (|Integer|))))))
   (|isDomain| *4
               (|Mapping|
                (|Factored|
                 (|SparseUnivariatePolynomial| (|Expression| (|Integer|))))
                (|SparseUnivariatePolynomial| (|Expression| (|Integer|)))))
   (|ofType| *5 (|Symbol|)) (|isDomain| *2 (|Boolean|))
   (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *5 *6))
   (|ofType| *6 (|Expression| (|Integer|)))))) 
(((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|LinearOrdinaryDifferentialOperator3|
                (|Expression| (|Integer|))
                (|UnivariatePolynomial| *6 (|Expression| (|Integer|)))
                (|Fraction|
                 (|UnivariatePolynomial| *6 (|Expression| (|Integer|))))))
   (|isDomain| *4
               (|Mapping|
                (|Factored|
                 (|SparseUnivariatePolynomial| (|Expression| (|Integer|))))
                (|SparseUnivariatePolynomial| (|Expression| (|Integer|)))))
   (|isDomain| *5 (|String|)) (|ofType| *6 (|Symbol|))
   (|isDomain| *2
               (|Union|
                (|List|
                 (|Record|
                  (|:| |op|
                       (|LinearOrdinaryDifferentialOperator3|
                        (|Expression| (|Integer|))
                        (|UnivariateTaylorSeries| (|Expression| (|Integer|)) *6
                                                  *7)
                        (|UnivariateLaurentSeries| (|Expression| (|Integer|))
                                                   *6 *7)))
                  (|:| |ram|
                       (|UnivariatePolynomial| *6 (|Expression| (|Integer|))))
                  (|:| |expart|
                       (|UnivariateLaurentSeries| (|Expression| (|Integer|)) *6
                                                  *7))))
                (|List|
                 (|Union|
                  (|LinearOrdinaryDifferentialOperator3|
                   (|Expression| (|Integer|))
                   (|UnivariateTaylorSeries| (|Expression| (|Integer|)) *6 *7)
                   (|UnivariateLaurentSeries| (|Expression| (|Integer|)) *6
                                              *7))
                  (|Record|
                   (|:| |ope|
                        (|LinearOrdinaryDifferentialOperator3|
                         (|Expression| (|Integer|))
                         (|UnivariateTaylorSeries| (|Expression| (|Integer|))
                                                   *6 *7)
                         (|UnivariateLaurentSeries| (|Expression| (|Integer|))
                                                    *6 *7)))
                   (|:| |dext| (|PositiveInteger|))
                   (|:| |alpha| (|Expression| (|Integer|)))
                   (|:| |rami|
                        (|UnivariatePolynomial| *6
                                                (|Expression|
                                                 (|Integer|)))))))))
   (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *6 *7))
   (|ofType| *7 (|Expression| (|Integer|)))))) 
(((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|LinearOrdinaryDifferentialOperator3|
                (|Expression| (|Integer|))
                (|UnivariatePolynomial| *6 (|Expression| (|Integer|)))
                (|Fraction|
                 (|UnivariatePolynomial| *6 (|Expression| (|Integer|))))))
   (|isDomain| *4 (|Expression| (|Integer|)))
   (|isDomain| *5 (|PositiveInteger|)) (|ofType| *6 (|Symbol|))
   (|isDomain| *2
               (|LinearOrdinaryDifferentialOperator3|
                (|Expression| (|Integer|))
                (|UnivariateTaylorSeries| (|Expression| (|Integer|)) *6 *7)
                (|UnivariateLaurentSeries| (|Expression| (|Integer|)) *6 *7)))
   (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *6 *7))
   (|ofType| *7 *4)))) 
(((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|Union| (|UnivariatePolynomial| *5 (|Expression| (|Integer|)))
                        (|UnivariateLaurentSeries| (|Expression| (|Integer|))
                                                   *5 *6)))
   (|isDomain| *4
               (|LinearOrdinaryDifferentialOperator3|
                (|Expression| (|Integer|))
                (|UnivariatePolynomial| *5 (|Expression| (|Integer|)))
                (|Fraction|
                 (|UnivariatePolynomial| *5 (|Expression| (|Integer|))))))
   (|ofType| *5 (|Symbol|)) (|ofType| *6 (|Expression| (|Integer|)))
   (|isDomain| *2
               (|LinearOrdinaryDifferentialOperator3|
                (|Expression| (|Integer|))
                (|UnivariateTaylorSeries| (|Expression| (|Integer|)) *5 *6)
                (|UnivariateLaurentSeries| (|Expression| (|Integer|)) *5 *6)))
   (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *5 *6))))) 
(((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|LinearOrdinaryDifferentialOperator3|
                (|Expression| (|Integer|))
                (|UnivariatePolynomial| *6 (|Expression| (|Integer|)))
                (|Fraction|
                 (|UnivariatePolynomial| *6 (|Expression| (|Integer|))))))
   (|isDomain| *4
               (|Mapping|
                (|Factored|
                 (|SparseUnivariatePolynomial| (|Expression| (|Integer|))))
                (|SparseUnivariatePolynomial| (|Expression| (|Integer|)))))
   (|isDomain| *5 (|String|)) (|ofType| *6 (|Symbol|))
   (|isDomain| *2
               (|Union|
                (|List|
                 (|Record|
                  (|:| |op|
                       (|LinearOrdinaryDifferentialOperator3|
                        (|Expression| (|Integer|))
                        (|UnivariateTaylorSeries| (|Expression| (|Integer|)) *6
                                                  *7)
                        (|UnivariateLaurentSeries| (|Expression| (|Integer|))
                                                   *6 *7)))
                  (|:| |ram|
                       (|UnivariatePolynomial| *6 (|Expression| (|Integer|))))
                  (|:| |expart|
                       (|UnivariateLaurentSeries| (|Expression| (|Integer|)) *6
                                                  *7))))
                (|List|
                 (|Union|
                  (|LinearOrdinaryDifferentialOperator3|
                   (|Expression| (|Integer|))
                   (|UnivariateTaylorSeries| (|Expression| (|Integer|)) *6 *7)
                   (|UnivariateLaurentSeries| (|Expression| (|Integer|)) *6
                                              *7))
                  (|Record|
                   (|:| |ope|
                        (|LinearOrdinaryDifferentialOperator3|
                         (|Expression| (|Integer|))
                         (|UnivariateTaylorSeries| (|Expression| (|Integer|))
                                                   *6 *7)
                         (|UnivariateLaurentSeries| (|Expression| (|Integer|))
                                                    *6 *7)))
                   (|:| |dext| (|PositiveInteger|))
                   (|:| |alpha| (|Expression| (|Integer|)))
                   (|:| |rami|
                        (|UnivariatePolynomial| *6
                                                (|Expression|
                                                 (|Integer|)))))))))
   (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *6 *7))
   (|ofType| *7 (|Expression| (|Integer|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|UnivariatePolynomial| *4 (|Expression| (|Integer|))))
       (|ofType| *4 (|Symbol|))
       (|isDomain| *2
                   (|LinearOrdinaryDifferentialOperator3|
                    (|Expression| (|Integer|))
                    (|UnivariateTaylorSeries| (|Expression| (|Integer|)) *4 *5)
                    (|UnivariateLaurentSeries| (|Expression| (|Integer|)) *4
                                               *5)))
       (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *4 *5))
       (|ofType| *5 (|Expression| (|Integer|)))))) 
(((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|LinearOrdinaryDifferentialOperator3|
                (|Expression| (|Integer|))
                (|UnivariatePolynomial| *5 (|Expression| (|Integer|)))
                (|Fraction|
                 (|UnivariatePolynomial| *5 (|Expression| (|Integer|))))))
   (|isDomain| *4 (|Fraction| (|Integer|)))
   (|isDomain| *2 (|UnivariatePolynomial| *5 (|Expression| (|Integer|))))
   (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *5 *6))
   (|ofType| *5 (|Symbol|)) (|ofType| *6 (|Expression| (|Integer|)))))) 
(((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|LinearOrdinaryDifferentialOperator3|
                (|Expression| (|Integer|))
                (|UnivariatePolynomial| *6 (|Expression| (|Integer|)))
                (|Fraction|
                 (|UnivariatePolynomial| *6 (|Expression| (|Integer|))))))
   (|isDomain| *4 (|Fraction| (|Integer|))) (|isDomain| *5 (|Integer|))
   (|ofType| *6 (|Symbol|)) (|isDomain| *2 (|Boolean|))
   (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *6 *7))
   (|ofType| *7 (|Expression| *5))))) 
(((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|LinearOrdinaryDifferentialOperator3|
                (|Expression| (|Integer|))
                (|UnivariatePolynomial| *6 (|Expression| (|Integer|)))
                (|Fraction|
                 (|UnivariatePolynomial| *6 (|Expression| (|Integer|))))))
   (|isDomain| *4 (|Fraction| (|Integer|))) (|isDomain| *5 (|Integer|))
   (|ofType| *6 (|Symbol|))
   (|isDomain| *2
               (|LinearOrdinaryDifferentialOperator3|
                (|Expression| (|Integer|))
                (|UnivariateTaylorSeries| (|Expression| (|Integer|)) *6 *7)
                (|UnivariateLaurentSeries| (|Expression| (|Integer|)) *6 *7)))
   (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *6 *7))
   (|ofType| *7 (|Expression| *5))))) 
(((*1 *2 *3 *4 *5 *5 *3 *6)
  (AND (|isDomain| *3 (|Fraction| (|Integer|)))
       (|isDomain| *4
                   (|LinearOrdinaryDifferentialOperator3|
                    (|Expression| (|Integer|))
                    (|UnivariatePolynomial| *7 (|Expression| (|Integer|)))
                    (|Fraction|
                     (|UnivariatePolynomial| *7 (|Expression| (|Integer|))))))
       (|isDomain| *5 (|UnivariatePolynomial| *7 (|Expression| (|Integer|))))
       (|isDomain| *6 (|Integer|)) (|ofType| *7 (|Symbol|))
       (|isDomain| *2
                   (|Stream|
                    (|Record|
                     (|:| |Qt|
                          (|LinearOrdinaryDifferentialOperator3|
                           (|Expression| (|Integer|))
                           (|UnivariateTaylorSeries| (|Expression| (|Integer|))
                                                     *7 *8)
                           (|UnivariateLaurentSeries|
                            (|Expression| (|Integer|)) *7 *8)))
                     (|:| |Rt|
                          (|LinearOrdinaryDifferentialOperator3|
                           (|Expression| (|Integer|))
                           (|UnivariateTaylorSeries| (|Expression| (|Integer|))
                                                     *7 *8)
                           (|UnivariateLaurentSeries|
                            (|Expression| (|Integer|)) *7 *8))))))
       (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *7 *8))
       (|ofType| *8 (|Expression| *6))))) 
(((*1 *2 *3 *4 *5 *5 *3 *6)
  (AND (|isDomain| *3 (|Fraction| (|Integer|)))
       (|isDomain| *4
                   (|LinearOrdinaryDifferentialOperator3|
                    (|Expression| (|Integer|))
                    (|UnivariatePolynomial| *7 (|Expression| (|Integer|)))
                    (|Fraction|
                     (|UnivariatePolynomial| *7 (|Expression| (|Integer|))))))
       (|isDomain| *5 (|UnivariatePolynomial| *7 (|Expression| (|Integer|))))
       (|isDomain| *6 (|Integer|)) (|ofType| *7 (|Symbol|))
       (|isDomain| *2
                   (|Record|
                    (|:| |main|
                         (|Record|
                          (|:| |Qt|
                               (|LinearOrdinaryDifferentialOperator3|
                                (|Expression| (|Integer|))
                                (|UnivariateTaylorSeries|
                                 (|Expression| (|Integer|)) *7 *8)
                                (|UnivariateLaurentSeries|
                                 (|Expression| (|Integer|)) *7 *8)))
                          (|:| |Rt|
                               (|LinearOrdinaryDifferentialOperator3|
                                (|Expression| (|Integer|))
                                (|UnivariateTaylorSeries|
                                 (|Expression| (|Integer|)) *7 *8)
                                (|UnivariateLaurentSeries|
                                 (|Expression| (|Integer|)) *7 *8)))))
                    (|:| |nf|
                         (|Record|
                          (|:| |Qt|
                               (|LinearOrdinaryDifferentialOperator3|
                                (|Expression| (|Integer|))
                                (|UnivariateTaylorSeries|
                                 (|Expression| (|Integer|)) *7 *8)
                                (|UnivariateLaurentSeries|
                                 (|Expression| (|Integer|)) *7 *8)))
                          (|:| |Rt|
                               (|LinearOrdinaryDifferentialOperator3|
                                (|Expression| (|Integer|))
                                (|UnivariateTaylorSeries|
                                 (|Expression| (|Integer|)) *7 *8)
                                (|UnivariateLaurentSeries|
                                 (|Expression| (|Integer|)) *7 *8)))))
                    (|:| |error|
                         (|LinearOrdinaryDifferentialOperator3|
                          (|Expression| (|Integer|))
                          (|UnivariateTaylorSeries| (|Expression| (|Integer|))
                                                    *7 *8)
                          (|UnivariateLaurentSeries| (|Expression| (|Integer|))
                                                     *7 *8)))))
       (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *7 *8))
       (|ofType| *8 (|Expression| *6))))) 
(((*1 *2 *3 *4 *5 *5 *3 *6)
  (AND (|isDomain| *3 (|Fraction| (|Integer|)))
       (|isDomain| *4
                   (|LinearOrdinaryDifferentialOperator3|
                    (|Expression| (|Integer|))
                    (|UnivariatePolynomial| *7 (|Expression| (|Integer|)))
                    (|Fraction|
                     (|UnivariatePolynomial| *7 (|Expression| (|Integer|))))))
       (|isDomain| *5 (|UnivariatePolynomial| *7 (|Expression| (|Integer|))))
       (|isDomain| *6 (|Integer|)) (|ofType| *7 (|Symbol|))
       (|isDomain| *2
                   (|Record|
                    (|:| |llc|
                         (|List|
                          (|Stream|
                           (|Record| (|:| |k| (|Integer|))
                                     (|:| |c| (|Expression| (|Integer|)))))))
                    (|:| |rlc|
                         (|List|
                          (|Stream|
                           (|Record| (|:| |k| (|Integer|))
                                     (|:| |c| (|Expression| (|Integer|)))))))))
       (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *7 *8))
       (|ofType| *8 (|Expression| *6))))) 
(((*1 *2 *3 *4 *5 *5 *3 *6)
  (AND (|isDomain| *3 (|Fraction| (|Integer|)))
       (|isDomain| *4
                   (|LinearOrdinaryDifferentialOperator3|
                    (|Expression| (|Integer|))
                    (|UnivariatePolynomial| *7 (|Expression| (|Integer|)))
                    (|Fraction|
                     (|UnivariatePolynomial| *7 (|Expression| (|Integer|))))))
       (|isDomain| *5 (|UnivariatePolynomial| *7 (|Expression| (|Integer|))))
       (|isDomain| *6 (|Integer|)) (|ofType| *7 (|Symbol|))
       (|isDomain| *2
                   (|Record|
                    (|:| |laurl|
                         (|List|
                          (|UnivariateLaurentSeries| (|Expression| (|Integer|))
                                                     *7 *8)))
                    (|:| |laurr|
                         (|List|
                          (|UnivariateLaurentSeries| (|Expression| (|Integer|))
                                                     *7 *8)))))
       (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *7 *8))
       (|ofType| *8 (|Expression| *6))))) 
(((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|LinearOrdinaryDifferentialOperator3|
                (|Expression| (|Integer|))
                (|UnivariatePolynomial| *6 (|Expression| (|Integer|)))
                (|Fraction|
                 (|UnivariatePolynomial| *6 (|Expression| (|Integer|))))))
   (|isDomain| *4 (|UnivariatePolynomial| *6 (|Expression| (|Integer|))))
   (|isDomain| *5 (|Fraction| (|Integer|))) (|ofType| *6 (|Symbol|))
   (|isDomain| *2
               (|Record|
                (|:| |Qt|
                     (|LinearOrdinaryDifferentialOperator3|
                      (|Expression| (|Integer|))
                      (|UnivariateTaylorSeries| (|Expression| (|Integer|)) *6
                                                *7)
                      (|UnivariateLaurentSeries| (|Expression| (|Integer|)) *6
                                                 *7)))
                (|:| |Rt|
                     (|LinearOrdinaryDifferentialOperator3|
                      (|Expression| (|Integer|))
                      (|UnivariateTaylorSeries| (|Expression| (|Integer|)) *6
                                                *7)
                      (|UnivariateLaurentSeries| (|Expression| (|Integer|)) *6
                                                 *7)))))
   (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *6 *7))
   (|ofType| *7 (|Expression| (|Integer|)))))) 
(((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|LinearOrdinaryDifferentialOperator3|
                (|Expression| (|Integer|))
                (|UnivariatePolynomial| *6 (|Expression| (|Integer|)))
                (|Fraction|
                 (|UnivariatePolynomial| *6 (|Expression| (|Integer|))))))
   (|isDomain| *4
               (|Mapping|
                (|Factored|
                 (|SparseUnivariatePolynomial| (|Expression| (|Integer|))))
                (|SparseUnivariatePolynomial| (|Expression| (|Integer|)))))
   (|isDomain| *5 (|String|)) (|ofType| *6 (|Symbol|))
   (|isDomain| *2
               (|List|
                (|LinearOrdinaryDifferentialOperator3|
                 (|Expression| (|Integer|))
                 (|UnivariateTaylorSeries| (|Expression| (|Integer|)) *6 *7)
                 (|UnivariateLaurentSeries| (|Expression| (|Integer|)) *6
                                            *7))))
   (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *6 *7))
   (|ofType| *7 (|Expression| (|Integer|)))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|LinearOrdinaryDifferentialOperator3|
                (|Expression| (|Integer|))
                (|UnivariatePolynomial| *4 (|Expression| (|Integer|)))
                (|Fraction|
                 (|UnivariatePolynomial| *4 (|Expression| (|Integer|))))))
   (|ofType| *4 (|Symbol|))
   (|isDomain| *2
               (|List|
                (|Record|
                 (|:| |point|
                      (|Record| (|:| |x| (|Integer|)) (|:| |y| (|Integer|))))
                 (|:| |slope| (|Fraction| (|Integer|)))
                 (|:| |npoly|
                      (|UnivariatePolynomial| *4
                                              (|Expression| (|Integer|)))))))
   (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer2| *4 *5))
   (|ofType| *5 (|Expression| (|Integer|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|LinearOrdinaryDifferentialOperator1| (|Fraction| *5)))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *4 (|AlgebraicallyClosedField|))
       (|ofCategory| *4
                     (|Join| (|Field|) (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|RetractableTo| (|Fraction| (|Integer|)))))
       (|isDomain| *2
                   (|List|
                    (|LinearOrdinaryDifferentialOperator1| (|Fraction| *5))))
       (|isDomain| *1 (|LinearOrdinaryDifferentialOperatorFactorizer| *4 *5))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|LinearOrdinaryDifferentialOperatorCategory| *2))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|Field|))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Ring|))
       (|ofCategory| *4 (|AbelianMonoidRing| *3 (|NonNegativeInteger|)))
       (|isDomain| *1 (|LinearOrdinaryDifferentialOperator3Aux| *3 *4 *2))
       (|ofCategory| *2 (|Join| (|DifferentialRing|) (|LeftModule| *4)))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|UniversalSegment| (|Integer|)))
       (|ofCategory| *1 (|LinearAggregate| *3)) (|ofCategory| *3 (|Type|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|LinearAggregate| *3))
       (|ofCategory| *3 (|Type|))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|List| *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|JetDifferentialEquation| *3 *4))))
 ((*1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|LinearAggregate| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *1 (|LinearAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|CliffordAlgebra| *2 *3 *4))
       (|ofType| *2 (|PositiveInteger|)) (|ofCategory| *3 (|Field|))
       (|ofType| *4 (|SquareMatrix| *2 *3))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|GaloisGroupPolynomialUtilities| *3 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|ListMonoidOps| *2 *3 *4))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|AbelianMonoid|))
       (|ofType| *4 *3)))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|LinearAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|LinearAggregate| *3)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *3 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *4 *4))
       (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|LinearAggregate| *4)) (|ofCategory| *4 (|Type|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|LinearAggregate| *3)) (|ofCategory| *3 (|Type|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|DequeueAggregate| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|ListMonoidOps| *2 *3 *4))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|AbelianMonoid|))
       (|ofType| *4 *3)))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|LinearAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|LinearAggregate| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3 *3))
       (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|LinearAggregate| *3)) (|ofCategory| *3 (|Type|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Record| (|:| |gen| *3) (|:| |exp| *4))))
       (|isDomain| *1 (|ListMonoidOps| *3 *4 *5))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|AbelianMonoid|))
       (|ofType| *5 *4)))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *1 (|ListMonoidOps| *2 *3 *4))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|AbelianMonoid|))
       (|ofType| *4 *3)))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Record| (|:| |gen| *3) (|:| |exp| *4))))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|AbelianMonoid|))
       (|ofType| *5 *4) (|isDomain| *1 (|ListMonoidOps| *3 *4 *5))))) 
(((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|FreeGroup| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FreeMonoid| *4)) (|ofCategory| *4 (|SetCategory|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *2 (|AbelianMonoid|))
       (|isDomain| *1 (|ListMonoidOps| *4 *2 *5))
       (|ofCategory| *4 (|SetCategory|)) (|ofType| *5 *2)))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|ofCategory| *1 (|FreeAbelianMonoidCategory| *2 *4))
       (|ofCategory| *4 (|CancellationAbelianMonoid|))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *1 (|FreeGroup| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *1 (|FreeMonoid| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *1 (|Factored| *2))
       (|ofCategory| *2 (|IntegralDomain|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *2 (|SetCategory|))
       (|isDomain| *1 (|ListMonoidOps| *2 *4 *5))
       (|ofCategory| *4 (|AbelianMonoid|)) (|ofType| *5 *4)))) 
(((*1 *1)
  (AND (|isDomain| *1 (|ListMonoidOps| *2 *3 *4))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|AbelianMonoid|))
       (|ofType| *4 *3)))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|ListMonoidOps| *2 *3 *4))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|AbelianMonoid|))
       (|ofType| *4 *3)))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *1 (|ListMonoidOps| *2 *3 *4))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|AbelianMonoid|))
       (|ofType| *4 *3)))) 
(((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|ListMonoidOps| *3 *4 *5))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|AbelianMonoid|))
       (|ofType| *5 *4)))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| (|Integer|) (|Integer|)))
       (|isDomain| *1 (|FreeGroup| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *2 *1)
  (AND
   (|isDomain| *2 (|Mapping| (|NonNegativeInteger|) (|NonNegativeInteger|)))
   (|isDomain| *1 (|FreeMonoid| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *4 *4)) (|ofCategory| *4 (|AbelianMonoid|))
       (|ofType| *5 *4) (|isDomain| *1 (|ListMonoidOps| *3 *4 *5))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 *3))
       (|ofCategory| *1 (|FreeAbelianMonoidCategory| *3 *4))
       (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *4 (|CancellationAbelianMonoid|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|FreeGroup| *3))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|FreeMonoid| *3))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|ListMonoidOps| *3 *4 *5))
       (|ofCategory| *4 (|AbelianMonoid|)) (|ofType| *5 *4)))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|ListMultiDictionary| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *2 *2 *1)
  (AND (|isDomain| *1 (|ListMultiDictionary| *2))
       (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *3 (|BasicType|)) (|isDomain| *1 (|ListPackage| *3))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|BasicType|)) (|isDomain| *2 (|List| (|List| *5)))
       (|isDomain| *1 (|ListPackage| *5))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|List| *4))
       (|isDomain| *3 (|Mapping| (|Boolean|) *4 *4))
       (|ofCategory| *4 (|BasicType|)) (|isDomain| *1 (|ListPackage| *4))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|List| *4))
       (|isDomain| *3 (|List| (|List| (|Boolean|))))
       (|ofCategory| *4 (|BasicType|)) (|isDomain| *1 (|ListPackage| *4))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|List| *4))
       (|isDomain| *3 (|Mapping| (|Boolean|) *4 *4))
       (|ofCategory| *4 (|BasicType|)) (|isDomain| *1 (|ListPackage| *4))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *5)) (|isDomain| *4 (|List| *5))
       (|ofCategory| *5 (|BasicType|))
       (|isDomain| *2
                   (|Record| (|:| |yes| (|List| *5)) (|:| |no| (|List| *5))))
       (|isDomain| *1 (|ListPackage| *5))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| *6))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *6 (|Type|))
       (|isDomain| *2 (|Mapping| *6 *5)) (|isDomain| *1 (|ListToMap| *5 *6))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| *2))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *2 (|Type|))
       (|isDomain| *1 (|ListToMap| *5 *2))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|List| *6)) (|isDomain| *4 (|List| *5))
       (|ofCategory| *6 (|SetCategory|)) (|ofCategory| *5 (|Type|))
       (|isDomain| *2 (|Mapping| *5 *6)) (|isDomain| *1 (|ListToMap| *6 *5))))
 ((*1 *2 *3 *4 *5 *2)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| *2))
       (|ofCategory| *5 (|SetCategory|)) (|ofCategory| *2 (|Type|))
       (|isDomain| *1 (|ListToMap| *5 *2))))
 ((*1 *2 *3 *4 *2)
  (AND (|isDomain| *2 (|Mapping| *6 *5)) (|isDomain| *3 (|List| *5))
       (|isDomain| *4 (|List| *6)) (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *6 (|Type|)) (|isDomain| *1 (|ListToMap| *5 *6))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| *2))
       (|isDomain| *6 (|Mapping| *2 *5)) (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *2 (|Type|)) (|isDomain| *1 (|ListToMap| *5 *2))))) 
(((*1 *1) (AND (|isDomain| *1 (|List| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|List| *3))
       (|ofCategory| *3 (|Type|))))) 
(((*1 *1 *1 *1) (AND (|isDomain| *1 (|List| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|List| *3))) (|isDomain| *1 (|List| *3))
       (|ofCategory| *3 (|Type|))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|List| *2)) (|ofCategory| *2 (|BasicType|))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|List| *2)) (|ofCategory| *2 (|BasicType|))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|List| *2)) (|ofCategory| *2 (|BasicType|))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Matrix| *7)) (|isDomain| *4 (|Vector| *7))
       (|isDomain| *5 (|List| (|Mapping| *7 *7)))
       (|ofCategory| *7 (|FunctionSpace| *6))
       (|ofCategory| *6 (|Join| (|IntegralDomain|) (|Comparable|)))
       (|isDomain| *2
                   (|Record| (|:| |mat| (|Matrix| *7))
                             (|:| |vec| (|Vector| *7))))
       (|isDomain| *1 (|ConstantLinearDependence| *6 *7))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Matrix| *5)) (|isDomain| *3 (|List| (|Mapping| *5 *5)))
       (|ofCategory| *5 (|FunctionSpace| *4))
       (|ofCategory| *4 (|Join| (|IntegralDomain|) (|Comparable|)))
       (|isDomain| *1 (|ConstantLinearDependence| *4 *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *1)) (|isDomain| *4 (|Vector| *1))
       (|ofCategory| *1 (|LinearlyExplicitOver| *5)) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2
                   (|Record| (|:| |mat| (|Matrix| *5))
                             (|:| |vec| (|Vector| *5))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| *1))
       (|ofCategory| *1 (|LinearlyExplicitOver| *4)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|Matrix| *4))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Vector| *4))
       (|ofCategory| *4 (|LinearlyExplicitOver| *5))
       (|ofCategory| *5 (|Field|)) (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2
                   (|Record|
                    (|:| |particular| (|Union| (|Vector| *5) #1="failed"))
                    (|:| |basis| (|List| (|Vector| *5)))))
       (|isDomain| *1 (|LinearDependence| *5 *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *6)) (|isDomain| *4 (|Vector| *6))
       (|ofCategory| *6 (|LinearlyExplicitOver| *5))
       (|ofCategory| *5 (|Field|)) (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2
                   (|Record| (|:| |particular| (|Union| (|Vector| *5) #1#))
                             (|:| |basis| (|List| (|Vector| *5)))))
       (|isDomain| *1 (|LinearDependence| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Vector| *4))
       (|ofCategory| *4 (|LinearlyExplicitOver| *5))
       (|not| (|ofCategory| *5 (|Field|))) (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2
                   (|Record|
                    (|:| |particular|
                         (|Union| (|Vector| (|Fraction| *5)) #2="failed"))
                    (|:| |basis| (|List| (|Vector| (|Fraction| *5))))))
       (|isDomain| *1 (|LinearDependence| *5 *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *6)) (|isDomain| *4 (|Vector| *6))
       (|ofCategory| *6 (|LinearlyExplicitOver| *5))
       (|not| (|ofCategory| *5 (|Field|))) (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2
                   (|Record|
                    (|:| |particular| (|Union| (|Vector| (|Fraction| *5)) #2#))
                    (|:| |basis| (|List| (|Vector| (|Fraction| *5))))))
       (|isDomain| *1 (|LinearDependence| *5 *6))))) 
(((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|Vector| *5))
   (|ofCategory| *5 (|LinearlyExplicitOver| *4))
   (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|Vector| *4))
   (|isDomain| *1 (|LinearDependence| *4 *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| *5))
       (|ofCategory| *5 (|LinearlyExplicitOver| *4))
       (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|LinearDependence| *4 *5))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Vector| *2)) (|isDomain| *4 (|List| *2))
       (|ofCategory| *2 (|Field|))
       (|isDomain| *1 (|LinearCombinationUtilities| *2 *5))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *2))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Vector| (|Fraction| (|Integer|))))
       (|isDomain| *4 (|List| *2)) (|ofCategory| *2 (|Field|))
       (|isDomain| *1 (|LinearCombinationUtilities| *2 *5))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *2))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| (|Vector| *4))) (|isDomain| *2 (|Vector| *4))
       (|ofCategory| *4 (|Field|))
       (|isDomain| *1 (|LinearCombinationUtilities| *4 *5))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Vector| *5)) (|isDomain| *4 (|List| (|Fraction| *6)))
       (|ofCategory| *5 (|Field|)) (|isDomain| *2 (|Fraction| *6))
       (|isDomain| *1 (|LinearCombinationUtilities| *5 *6))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Vector| (|Fraction| (|Integer|))))
       (|isDomain| *4 (|List| (|Fraction| *6))) (|ofCategory| *5 (|Field|))
       (|isDomain| *2 (|Fraction| *6))
       (|isDomain| *1 (|LinearCombinationUtilities| *5 *6))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Vector| *5))
       (|isDomain| *4 (|List| (|LaurentPolynomial| *5 *6)))
       (|ofCategory| *5 (|Field|)) (|isDomain| *2 (|LaurentPolynomial| *5 *6))
       (|isDomain| *1 (|LinearCombinationUtilities| *5 *6))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Vector| *5)) (|isDomain| *4 (|List| *2))
       (|ofCategory| *5 (|Field|))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *5))
       (|isDomain| *1 (|LinearCombinationUtilities| *5 *2))))) 
(((*1 *2 *2 *2 *3)
  (AND (|isDomain| *3 (|List| (|Vector| *4))) (|isDomain| *2 (|Vector| *4))
       (|ofCategory| *4 (|Field|))
       (|isDomain| *1 (|LinearCombinationUtilities| *4 *5))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|List|
                (|Record| (|:| |ratpart| *4) (|:| |coeffs| (|Vector| *4)))))
   (|ofCategory| *4 (|Field|))
   (|isDomain| *2
               (|Record|
                (|:| |particular|
                     (|Union|
                      (|Record| (|:| |ratpart| *4)
                                (|:| |coeffs| (|Vector| *4)))
                      "failed"))
                (|:| |basis|
                     (|List|
                      (|Record| (|:| |ratpart| *4)
                                (|:| |coeffs| (|Vector| *4)))))))
   (|isDomain| *1 (|LinearCombinationUtilities| *4 *5))
   (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *4 (|Equation| (|OnePointCompletion| *3)))
   (|ofCategory| *5
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *2 (|OnePointCompletion| *3))
   (|isDomain| *1 (|PowerSeriesLimitPackage| *5 *3))
   (|ofCategory| *3
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *5)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
       (|isDomain| *4 (|Equation| (|OnePointCompletion| (|Polynomial| *5))))
       (|ofCategory| *5 (|GcdDomain|))
       (|isDomain| *2 (|OnePointCompletion| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *1 (|RationalFunctionLimitPackage| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Equation| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
       (|ofCategory| *5 (|GcdDomain|))
       (|isDomain| *2 (|OnePointCompletion| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *1 (|RationalFunctionLimitPackage| *5))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|FileName|)) (|isDomain| *1 (|Library|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|KeyedAccessFile| *2))
       (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *1) (|isDomain| *1 (|Library|)))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|FileCategory| *2 *3))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *1) (|isDomain| *1 (|Library|)))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| (|DistributedMultivariatePolynomial| *4 *5)))
       (|isDomain| *2 (|DistributedMultivariatePolynomial| *4 *5))
       (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|GcdDomain|))
       (|isDomain| *1 (|LinGroebnerPackage| *4 *5))))) 
(((*1 *2 *3 *2 *2)
  (AND
   (|isDomain| *2
               (|List| (|HomogeneousDistributedMultivariatePolynomial| *4 *5)))
   (|isDomain| *3 (|OrderedVariableList| *4)) (|ofType| *4 (|List| (|Symbol|)))
   (|ofCategory| *5 (|GcdDomain|))
   (|isDomain| *1 (|LinGroebnerPackage| *4 *5))))) 
(((*1 *2 *3 *2 *4)
  (AND (|isDomain| *3 (|List| *6))
       (|isDomain| *4 (|List| (|DistributedMultivariatePolynomial| *5 *6)))
       (|ofCategory| *6 (|GcdDomain|))
       (|isDomain| *2 (|DistributedMultivariatePolynomial| *5 *6))
       (|ofType| *5 (|List| (|Symbol|)))
       (|isDomain| *1 (|LinGroebnerPackage| *5 *6))))) 
(((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|Mapping| (|Point| (|DoubleFloat|)) (|Point| (|DoubleFloat|))))
   (|isDomain| *1 (|DrawOption|))))
 ((*1 *2 *3 *2)
  (AND
   (|isDomain| *2
               (|Mapping| (|Point| (|DoubleFloat|)) (|Point| (|DoubleFloat|))))
   (|isDomain| *3 (|List| (|DrawOption|)))
   (|isDomain| *1 (|DrawOptionFunctions0|))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *4
               (|List| (|HomogeneousDistributedMultivariatePolynomial| *5 *6)))
   (|isDomain| *3 (|HomogeneousDistributedMultivariatePolynomial| *5 *6))
   (|ofType| *5 (|List| (|Symbol|))) (|ofCategory| *6 (|GcdDomain|))
   (|isDomain| *2 (|Vector| *6)) (|isDomain| *1 (|LinGroebnerPackage| *5 *6))))) 
(((*1 *2 *2)
  (AND
   (|isDomain| *2
               (|List| (|HomogeneousDistributedMultivariatePolynomial| *3 *4)))
   (|ofType| *3 (|List| (|Symbol|))) (|ofCategory| *4 (|GcdDomain|))
   (|isDomain| *1 (|LinGroebnerPackage| *3 *4))))) 
(((*1 *2 *3 *3 *4)
  (AND
   (|isDomain| *3
               (|List| (|HomogeneousDistributedMultivariatePolynomial| *5 *6)))
   (|isDomain| *4 (|OrderedVariableList| *5)) (|ofType| *5 (|List| (|Symbol|)))
   (|isDomain| *2 (|HomogeneousDistributedMultivariatePolynomial| *5 *6))
   (|isDomain| *1 (|LinGroebnerPackage| *5 *6))
   (|ofCategory| *6 (|GcdDomain|))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|List| (|HomogeneousDistributedMultivariatePolynomial| *5 *6)))
   (|isDomain| *4 (|OrderedVariableList| *5)) (|ofType| *5 (|List| (|Symbol|)))
   (|isDomain| *2 (|HomogeneousDistributedMultivariatePolynomial| *5 *6))
   (|isDomain| *1 (|LinGroebnerPackage| *5 *6))
   (|ofCategory| *6 (|GcdDomain|))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|List| (|HomogeneousDistributedMultivariatePolynomial| *4 *5)))
   (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|GcdDomain|))
   (|isDomain| *2 (|List| (|DistributedMultivariatePolynomial| *4 *5)))
   (|isDomain| *1 (|LinGroebnerPackage| *4 *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|DistributedMultivariatePolynomial| *4 *5)))
       (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|GcdDomain|))
       (|isDomain| *2
                   (|Record|
                    (|:| |glbase|
                         (|List| (|DistributedMultivariatePolynomial| *4 *5)))
                    (|:| |glval| (|List| (|Integer|)))))
       (|isDomain| *1 (|LinGroebnerPackage| *4 *5))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|List| (|HomogeneousDistributedMultivariatePolynomial| *4 *5)))
   (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|GcdDomain|))
   (|isDomain| *2
               (|Record|
                (|:| |gblist|
                     (|List| (|DistributedMultivariatePolynomial| *4 *5)))
                (|:| |gvlist| (|List| (|Integer|)))))
   (|isDomain| *1 (|LinGroebnerPackage| *4 *5))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions2|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatLiouvilianFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatLiouvilianFunctions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|LiouvillianFunction| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))))
 ((*1 *1 *1) (|ofCategory| *1 (|LiouvillianFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions2|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatLiouvilianFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatLiouvilianFunctions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|LiouvillianFunction| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))))
 ((*1 *1 *1) (|ofCategory| *1 (|LiouvillianFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions2|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatLiouvilianFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatLiouvilianFunctions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|LiouvillianFunction| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))))
 ((*1 *1 *1) (|ofCategory| *1 (|LiouvillianFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions2|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatLiouvilianFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatLiouvilianFunctions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|LiouvillianFunction| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))))
 ((*1 *1 *1) (|ofCategory| *1 (|LiouvillianFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions2|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatLiouvilianFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatLiouvilianFunctions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|LiouvillianFunction| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))))
 ((*1 *1 *1) (|ofCategory| *1 (|LiouvillianFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions2|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatLiouvilianFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatLiouvilianFunctions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|LiouvillianFunction| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))))
 ((*1 *1 *1) (|ofCategory| *1 (|LiouvillianFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|LiouvillianFunction| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))))
 ((*1 *1 *1) (|ofCategory| *1 (|LiouvillianFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions2|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatLiouvilianFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatLiouvilianFunctions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|LiouvillianFunction| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))))
 ((*1 *1 *1) (|ofCategory| *1 (|LiouvillianFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions2|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatLiouvilianFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatLiouvilianFunctions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|LiouvillianFunction| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))))
 ((*1 *1 *1) (|ofCategory| *1 (|LiouvillianFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions2|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatLiouvilianFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatLiouvilianFunctions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|LiouvillianFunction| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))))
 ((*1 *1 *1) (|ofCategory| *1 (|LiouvillianFunctionCategory|)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions2|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatLiouvilianFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatLiouvilianFunctions|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|LiouvillianFunction| *3 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *3) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))))
 ((*1 *1 *1) (|ofCategory| *1 (|LiouvillianFunctionCategory|)))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|BasicOperator|))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|AlgebraicFunction| *4 *5))
       (|ofCategory| *5 (|FunctionSpace| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|BasicOperator|))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|CombinatorialFunction| *4 *5))
       (|ofCategory| *5 (|FunctionSpace| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|BasicOperator|))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|ElementaryFunction| *4 *5))
       (|ofCategory| *5 (|Join| (|FunctionSpace| *4) (|RadicalCategory|)))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|BasicOperator|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|ExpressionSpace&| *4))
       (|ofCategory| *4 (|ExpressionSpace|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *1 (|ExpressionSpace|)) (|isDomain| *3 (|BasicOperator|))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|BasicOperator|)) (|ofCategory| *5 (|Comparable|))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FunctionSpace&| *4 *5))
       (|ofCategory| *4 (|FunctionSpace| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|BasicOperator|))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FunctionalSpecialFunction| *4 *5))
       (|ofCategory| *5 (|FunctionSpace| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|BasicOperator|))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|LiouvillianFunction| *4 *5))
       (|ofCategory| *5
                     (|Join| (|FunctionSpace| *4) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|List|
                (|NewSparseMultivariatePolynomial| *5
                                                   (|OrderedVariableList|
                                                    *6))))
   (|isDomain| *4 (|Boolean|)) (|ofCategory| *5 (|GcdDomain|))
   (|ofType| *6 (|List| (|Symbol|)))
   (|isDomain| *2
               (|List|
                (|SquareFreeRegularTriangularSet| *5
                                                  (|IndexedExponents|
                                                   (|OrderedVariableList| *6))
                                                  (|OrderedVariableList| *6)
                                                  (|NewSparseMultivariatePolynomial|
                                                   *5
                                                   (|OrderedVariableList|
                                                    *6)))))
   (|isDomain| *1 (|LexTriangularPackage| *5 *6))))) 
(((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|List|
                (|NewSparseMultivariatePolynomial| *5
                                                   (|OrderedVariableList|
                                                    *6))))
   (|isDomain| *4 (|Boolean|)) (|ofCategory| *5 (|GcdDomain|))
   (|ofType| *6 (|List| (|Symbol|)))
   (|isDomain| *2 (|List| (|RegularChain| *5 *6)))
   (|isDomain| *1 (|LexTriangularPackage| *5 *6))))) 
(((*1 *2 *2)
  (|partial| AND (|isDomain| *2 (|List| (|Polynomial| *3)))
   (|ofCategory| *3 (|GcdDomain|)) (|isDomain| *1 (|FGLMIfCanPackage| *3 *4))
   (|ofType| *4 (|List| (|Symbol|)))))
 ((*1 *2 *2)
  (|partial| AND
   (|isDomain| *2
               (|List|
                (|NewSparseMultivariatePolynomial| *3
                                                   (|OrderedVariableList|
                                                    *4))))
   (|ofCategory| *3 (|GcdDomain|)) (|ofType| *4 (|List| (|Symbol|)))
   (|isDomain| *1 (|LexTriangularPackage| *3 *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Polynomial| *4)))
       (|ofCategory| *4 (|GcdDomain|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FGLMIfCanPackage| *4 *5))
       (|ofType| *5 (|List| (|Symbol|)))))
 ((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|List|
                (|NewSparseMultivariatePolynomial| *4
                                                   (|OrderedVariableList|
                                                    *5))))
   (|ofCategory| *4 (|GcdDomain|)) (|ofType| *5 (|List| (|Symbol|)))
   (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|LexTriangularPackage| *4 *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *2 (|List| (|LiePolynomial| *4 *5)))
       (|isDomain| *1 (|LieExponentials| *4 *5 *6))
       (|ofCategory| *5
                     (|Join| (|CommutativeRing|)
                             (|Module| (|Fraction| (|Integer|)))))
       (|ofType| *6 (|PositiveInteger|))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2 (|List| (|Record| (|:| |k| (|LyndonWord| *3)) (|:| |c| *4))))
   (|isDomain| *1 (|LieExponentials| *3 *4 *5))
   (|ofCategory| *3 (|OrderedSet|))
   (|ofCategory| *4
                 (|Join| (|CommutativeRing|)
                         (|Module| (|Fraction| (|Integer|)))))
   (|ofType| *5 (|PositiveInteger|))))) 
(((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|List| (|Equation| *4)))
       (|isDomain| *1 (|LieExponentials| *3 *4 *5))
       (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *4
                     (|Join| (|CommutativeRing|)
                             (|Module| (|Fraction| (|Integer|)))))
       (|ofType| *5 (|PositiveInteger|))))) 
(((*1 *2 *3 *4 *5 *6 *7 *6)
  (|partial| AND (|isDomain| *4 (|List| (|SparseUnivariatePolynomial| *3)))
   (|isDomain| *5
               (|Record| (|:| |contp| *3)
                         (|:| |factors|
                              (|List|
                               (|Record| (|:| |irr| *10)
                                         (|:| |pow| (|Integer|)))))))
   (|isDomain| *6 (|List| *3)) (|isDomain| *7 (|List| *8))
   (|ofCategory| *8 (|OrderedSet|)) (|ofCategory| *3 (|GcdDomain|))
   (|ofCategory| *10 (|PolynomialCategory| *3 *9 *8))
   (|ofCategory| *9 (|OrderedAbelianMonoidSup|))
   (|isDomain| *2
               (|Record| (|:| |polfac| (|List| *10)) (|:| |correct| *3)
                         (|:| |corrfact|
                              (|List| (|SparseUnivariatePolynomial| *3)))))
   (|isDomain| *1 (|LeadingCoefDetermination| *8 *9 *3 *10))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *5 (|List| *3))
       (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|LeadingCoefDetermination| *6 *7 *3 *8))
       (|ofCategory| *8 (|PolynomialCategory| *3 *7 *6))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *6 (|RecursivePolynomialCategory| *3 *4 *5))
       (|isDomain| *1 (|LazardSetSolvingPackage| *3 *4 *5 *6 *7 *2))
       (|ofCategory| *7 (|RegularTriangularSetCategory| *3 *4 *5 *6))
       (|ofCategory| *2
                     (|SquareFreeRegularTriangularSetCategory| *3 *4 *5 *6))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *2 (|IntegralDomain|))
       (|isDomain| *1 (|LaurentPolynomial| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *1) (|isDomain| *1 (|ILogic|)))
 ((*1 *1) (|isDomain| *1 (|LatticeJoinOfMeets|)))
 ((*1 *1) (|isDomain| *1 (|LatticeMeetOfJoins|)))) 
(((*1 *1) (|isDomain| *1 (|ILogic|)))
 ((*1 *1) (|isDomain| *1 (|LatticeJoinOfMeets|)))
 ((*1 *1) (|isDomain| *1 (|LatticeMeetOfJoins|)))) 
(((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|Union| (|:| |const| (|Record| (|:| |val| (|Symbol|))))
                        (|:| |var| (|Record| (|:| |str| (|String|))))))
   (|isDomain| *1 (|LatticeMeetOfJoins|))))) 
(((*1 *1) (|isDomain| *1 (|LatticeJoinOfMeets|)))
 ((*1 *1) (|isDomain| *1 (|LatticeMeetOfJoins|)))) 
(((*1 *2 *1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|ofCategory| *1 (|CoDcpo| *3))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|LatticeJoinOfMeets|)))
       (|isDomain| *1 (|LatticeJoinOfMeets|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|LatticeMeetOfJoins|)))
       (|isDomain| *1 (|LatticeMeetOfJoins|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| (|ILogic|))) (|isDomain| *1 (|ILogic|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|List| (|LatticeJoinOfMeets|)))
       (|isDomain| *1 (|LatticeJoinOfMeets|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|List| (|LatticeMeetOfJoins|)))
       (|isDomain| *1 (|LatticeMeetOfJoins|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|ILogic|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|LatticeJoinOfMeets|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|LatticeMeetOfJoins|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|ILogic|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|LatticeJoinOfMeets|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|LatticeMeetOfJoins|))))) 
(((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|Union| (|:| |const| (|Record| (|:| |val| (|Symbol|))))
                        (|:| |var| (|Record| (|:| |str| (|String|))))))
   (|isDomain| *1 (|LatticeJoinOfMeets|))))) 
(((*1 *2 *2 *3 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4
                     (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *1 (|LaplaceTransform| *4 *2))
       (|ofCategory| *2
                     (|Join| (|TranscendentalFunctionCategory|)
                             (|PrimitiveFunctionCategory|)
                             (|AlgebraicallyClosedFunctionSpace| *4)))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Symbol|))) (|isDomain| *1 (|InputForm|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|Lambda| *2)) (|ofCategory| *2 (|VarCat|))))
 ((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|Lambda| *2)) (|ofCategory| *2 (|VarCat|))))
 ((*1 *1 *2) (AND (|isDomain| *1 (|Lambda| *2)) (|ofCategory| *2 (|VarCat|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|Lambda| *3))
       (|ofCategory| *3 (|VarCat|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|Lambda| *3))
       (|ofCategory| *3 (|VarCat|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Lambda| *3))
       (|ofCategory| *3 (|VarCat|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Lambda| *3))
       (|ofCategory| *3 (|VarCat|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Lambda| *3))
       (|ofCategory| *3 (|VarCat|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Lambda| *3))
       (|ofCategory| *3 (|VarCat|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|Lambda| *3))
       (|ofCategory| *3 (|VarCat|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Lambda| *3))
       (|ofCategory| *3 (|VarCat|))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|ExpressionSpace|))
       (|ofCategory| *2 (|Type|))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|Kernel| *1))) (|isDomain| *3 (|List| *1))
       (|ofCategory| *1 (|ExpressionSpace|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Equation| *1)))
       (|ofCategory| *1 (|ExpressionSpace|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Equation| *1)) (|ofCategory| *1 (|ExpressionSpace|))))
 ((*1 *1 *1 *2 *1)
  (AND (|ofCategory| *1 (|JetBundleFunctionCategory| *2))
       (|ofCategory| *2 (|JetBundleCategory|))))
 ((*1 *1 *1 *1 *1)
  (AND (|isDomain| *1 (|Lambda| *2)) (|ofCategory| *2 (|VarCat|))))) 
(((*1 *1 *1) (AND (|isDomain| *1 (|Lambda| *2)) (|ofCategory| *2 (|VarCat|))))) 
(((*1 *1 *1) (AND (|isDomain| *1 (|Lambda| *2)) (|ofCategory| *2 (|VarCat|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| (|String|))) (|isDomain| *2 (|String|))
       (|isDomain| *1 (|Lambda| *4)) (|ofCategory| *4 (|VarCat|))))) 
(((*1 *2 *3 *3 *3)
  (|partial| AND (|isDomain| *3 (|Fraction| *5))
   (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
   (|ofCategory| *4
                 (|Join| (|CharacteristicZero|) (|AlgebraicallyClosedField|)
                         (|RetractableTo| (|Integer|))
                         (|RetractableTo| (|Fraction| (|Integer|)))))
   (|isDomain| *2 (|SparseUnivariatePolynomial| (|Fraction| *5)))
   (|isDomain| *1 (|Kovacic| *4 *5))))
 ((*1 *2 *3 *3 *3 *4)
  (|partial| AND (|isDomain| *3 (|Fraction| *6))
   (|isDomain| *4 (|Mapping| (|Factored| *6) *6))
   (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
   (|ofCategory| *5
                 (|Join| (|CharacteristicZero|) (|AlgebraicallyClosedField|)
                         (|RetractableTo| (|Integer|))
                         (|RetractableTo| (|Fraction| (|Integer|)))))
   (|isDomain| *2 (|SparseUnivariatePolynomial| (|Fraction| *6)))
   (|isDomain| *1 (|Kovacic| *5 *6))))) 
(((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|Kernel| *4)) (|ofCategory| *4 (|Comparable|))
   (|ofCategory| *2 (|Comparable|))
   (|isDomain| *1 (|KernelFunctions2| *2 *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Kernel| *4)) (|isDomain| *1 (|KernelFunctions2| *3 *4))
       (|ofCategory| *3 (|Comparable|)) (|ofCategory| *4 (|Comparable|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ComplexCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *2 (|TranscendentalFunctionCategory|))))
 ((*1 *2 *1)
  (AND (|isDomain| *1 (|FourierComponent| *2))
       (|ofCategory| *2 (|OrderedSet|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|Kernel| *3))
       (|ofCategory| *3 (|Comparable|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ExpressionSpace|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|Ring|))
       (|ofCategory| *2
                     (|Join| (|FloatingPointSystem|) (|RetractableTo| *4)
                             (|Field|) (|TranscendentalFunctionCategory|)
                             (|ElementaryFunctionCategory|)))
       (|isDomain| *1 (|GaloisGroupFactorizationUtilities| *4 *3 *2))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|Kernel| *3))
       (|ofCategory| *3 (|Comparable|))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|BasicOperator|)) (|isDomain| *3 (|List| *1))
       (|ofCategory| *1 (|ExpressionSpace|))))
 ((*1 *1 *2 *1)
  (AND (|ofCategory| *1 (|ExpressionSpace|))
       (|isDomain| *2 (|BasicOperator|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|Kernel| *3))
       (|ofCategory| *3 (|Comparable|))))
 ((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|BasicOperator|)) (|isDomain| *3 (|List| *5))
       (|isDomain| *4 (|NonNegativeInteger|)) (|ofCategory| *5 (|Comparable|))
       (|isDomain| *1 (|Kernel| *5))))) 
(((*1 *2 *1)
  (|partial| AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|Kernel| *3))
   (|ofCategory| *3 (|Comparable|))))) 
(((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|KeyedDictionary| *3 *4)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|Type|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|KeyedDictionary| *3 *4)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|Type|)) (|isDomain| *2 (|List| *3))))) 
(((*1 *2 *3 *1)
  (|partial| AND (|ofCategory| *1 (|KeyedDictionary| *3 *2))
   (|ofCategory| *3 (|Type|)) (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|JetVectorField| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|JetVectorField| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *1 (|JetVectorField| *4 *5))
       (|ofCategory| *5 (|JetBundleFunctionCategory| *4))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|JetBundleCategory|)) (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|JetVectorField| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|JetVectorField| *3 *4))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))
       (|isDomain| *1 (|JetDifferential| *3 *4))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *2 (|JetBundleCategory|))
       (|isDomain| *1 (|JetVectorField| *2 *3))
       (|ofCategory| *3 (|JetBundleFunctionCategory| *2))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *2
                   (|Record| (|:| |SDe| (|JetDifferentialEquation| *3 *4))
                             (|:| IC (|List| *4))))
       (|isDomain| *1 (|JetDifferentialEquation| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *2
                   (|Record| (|:| |SDe| (|JetDifferentialEquation| *4 *5))
                             (|:| IC (|List| *5))))
       (|isDomain| *1 (|JetDifferentialEquation| *4 *5))
       (|ofCategory| *5 (|JetBundleFunctionCategory| *4))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|JetVectorField| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteAbelianMonoidRing| *3 *4))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *4 (|OrderedAbelianMonoid|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FunctionSpace| *3)) (|ofCategory| *3 (|Comparable|))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|JetBundleCategory|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|JetBundleLinearFunction| *3 *4))
       (|ofCategory| *4 (|JetBundleBaseFunctionCategory| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|JetBundleCategory|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|JetLazyFunction| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *3 (|JetBundleCategory|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|JetLazyFunction| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))) 
(((*1 *1 *2)
  (AND (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|JetDifferential| *3 *2))
       (|ofCategory| *2 (|JetBundleFunctionCategory| *3))))
 ((*1 *1 *2)
  (AND (|ofCategory| *2 (|JetBundleCategory|))
       (|isDomain| *1 (|JetDifferential| *2 *3))
       (|ofCategory| *3 (|JetBundleFunctionCategory| *2))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|JetDifferential| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|JetDifferential| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *1 (|JetDifferential| *4 *5))
       (|ofCategory| *5 (|JetBundleFunctionCategory| *4))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|JetBundleCategory|)) (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|JetDifferential| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))) 
(((*1 *1 *1 *2 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|CartesianTensor| *3 *4 *5))
       (|ofType| *3 *2) (|ofType| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|CommutativeRing|))))
 ((*1 *1 *1 *2 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|CartesianTensor| *3 *4 *5))
       (|ofType| *3 *2) (|ofType| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|CommutativeRing|))))
 ((*1 *2 *2 *3)
  (AND
   (|isDomain| *2
               (|PolynomialIdeal| (|Fraction| (|Integer|))
                                  (|DirectProduct| (|#| *4)
                                                   (|NonNegativeInteger|))
                                  (|OrderedVariableList| *4)
                                  (|DistributedMultivariatePolynomial| *4
                                                                       (|Fraction|
                                                                        (|Integer|)))))
   (|isDomain| *3 (|List| (|OrderedVariableList| *4)))
   (|ofType| *4 (|List| (|Symbol|)))
   (|isDomain| *1 (|IdealDecompositionPackage| *4))))
 ((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|JetVectorField| *4 *2))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|ofCategory| *2 (|JetBundleFunctionCategory| *4))
       (|isDomain| *1 (|JetDifferential| *4 *2))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|JetDifferentialEquation| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))) 
(((*1 *2 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |Rank| (|NonNegativeInteger|))
                         (|:| |NumMultVar| (|NonNegativeInteger|))
                         (|:| |Betas| (|List| (|NonNegativeInteger|)))))
   (|ofCategory| *3 (|JetBundleCategory|))
   (|isDomain| *1 (|JetDifferentialEquation| *3 *4))
   (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|SparseEchelonMatrix| *3 *4))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))
       (|isDomain| *1 (|JetDifferentialEquation| *3 *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseEchelonMatrix| *4 *5))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|ofCategory| *5 (|JetBundleFunctionCategory| *4))
       (|isDomain| *2
                   (|Record| (|:| |Rank| (|NonNegativeInteger|))
                             (|:| |NumMultVar| (|NonNegativeInteger|))
                             (|:| |Betas| (|List| (|NonNegativeInteger|)))))
       (|isDomain| *1 (|JetDifferentialEquation| *4 *5))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|SparseEchelonMatrix| *3 *1))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Boolean|)) (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *2 (|SparseEchelonMatrix| *4 *5))
       (|isDomain| *1 (|JetDifferentialEquation| *4 *5))
       (|ofCategory| *5 (|JetBundleFunctionCategory| *4))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|CartanKuranishi| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|JetDifferentialEquation| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|JetDifferentialEquation| *3 *4))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *1)) (|isDomain| *4 (|List| (|List| *5)))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *5))
       (|ofCategory| *5 (|JetBundleCategory|))
       (|isDomain| *2 (|SparseEchelonMatrix| *5 *1))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *1))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *4))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *2 (|SparseEchelonMatrix| *4 *1))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *2 (|List| (|SparseEchelonMatrix| *3 *4)))
       (|isDomain| *1 (|JetDifferentialEquation| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *5))
       (|ofCategory| *5 (|JetBundleFunctionCategory| *4))
       (|ofCategory| *4 (|JetBundleCategory|)) (|isDomain| *2 (|OutputForm|))
       (|isDomain| *1 (|JetDifferentialEquation| *4 *5))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |numer| (|Polynomial| (|Integer|)))
                         (|:| |denom| (|Polynomial| (|Integer|)))))
   (|isDomain| *1 (|FakePolynomial|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteAbelianMonoidRing| *2 *3))
       (|ofCategory| *3 (|OrderedAbelianMonoid|))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FunctionSpace| *2))
       (|ofCategory| *2 (|Comparable|))))
 ((*1 *1 *1)
  (AND (|ofCategory| *2 (|JetBundleCategory|))
       (|isDomain| *1 (|JetBundleLinearFunction| *2 *3))
       (|ofCategory| *3 (|JetBundleBaseFunctionCategory| *2))))) 
(((*1 *1) (|ofCategory| *1 (|JetBundleCategory|)))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|ofCategory| *1 (|JetBundleCategory|))))
 ((*1 *1)
  (AND (|ofCategory| *1 (|JetBundleFunctionCategory| *2))
       (|ofCategory| *2 (|JetBundleCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|))))) 
(((*1 *1) (|ofCategory| *1 (|JetBundleCategory|)))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|ofCategory| *1 (|JetBundleCategory|))))
 ((*1 *1)
  (AND (|ofCategory| *1 (|JetBundleFunctionCategory| *2))
       (|ofCategory| *2 (|JetBundleCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|JetBundleCategory|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|JetBundleCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *1 (|JetBundleCategory|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *1 (|JetBundleCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *4))
       (|ofCategory| *4 (|JetBundleCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *4))
       (|ofCategory| *4 (|JetBundleCategory|))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *1 (|JetBundleCategory|)) (|isDomain| *2 (|Symbol|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|ofCategory| *5 (|JetBundleCategory|))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|JetBundleFunctionCategory&| *4 *5))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *4))
       (|ofCategory| *4 (|JetBundleCategory|)) (|isDomain| *2 (|Void|))))) 
(((*1 *2)
  (AND (|ofCategory| *1 (|JetBundleCategory|)) (|isDomain| *2 (|Symbol|))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|JetBundleCategory|)) (|isDomain| *2 (|Symbol|))
       (|isDomain| *1 (|JetBundleFunctionCategory&| *3 *4))
       (|ofCategory| *3 (|JetBundleFunctionCategory| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|)) (|isDomain| *2 (|Symbol|))))) 
(((*1 *2)
  (AND (|ofCategory| *1 (|JetBundleCategory|))
       (|isDomain| *2 (|PositiveInteger|))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|JetBundleFunctionCategory&| *3 *4))
       (|ofCategory| *3 (|JetBundleFunctionCategory| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *2 (|PositiveInteger|))))) 
(((*1 *2)
  (AND (|ofCategory| *1 (|JetBundleCategory|))
       (|isDomain| *2 (|PositiveInteger|))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|JetBundleFunctionCategory&| *3 *4))
       (|ofCategory| *3 (|JetBundleFunctionCategory| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *2 (|PositiveInteger|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|)) (|isDomain| *2 (|List| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|JetBundleCategory&| *4))
       (|ofCategory| *4 (|JetBundleCategory|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|JetBundleCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *1 (|JetBundleCategory|))
       (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|List| *1)) (|isDomain| *3 (|PositiveInteger|))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *4))
       (|ofCategory| *4 (|JetBundleCategory|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|List| *1)) (|isDomain| *4 (|PositiveInteger|))
       (|isDomain| *5 (|SparseEchelonMatrix| *6 *1))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *6))
       (|ofCategory| *6 (|JetBundleCategory|))
       (|isDomain| *2
                   (|Record| (|:| |DSys| (|List| *1))
                             (|:| |JVars| (|List| (|List| *6)))))))
 ((*1 *2 *1 *3 *4)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *4 (|SparseEchelonMatrix| *5 *1))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *5))
       (|ofCategory| *5 (|JetBundleCategory|))
       (|isDomain| *2 (|Record| (|:| |DPhi| *1) (|:| |JVars| (|List| *5))))))) 
(((*1 *2 *3 *4 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *3 (|List| *1))
       (|isDomain| *4 (|SparseEchelonMatrix| *5 *1))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *5))
       (|ofCategory| *5 (|JetBundleCategory|))))) 
(((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|ExpressionSpace|)) (|isDomain| *3 (|Symbol|))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|ExpressionSpace|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|JetBundleFunctionCategory| *2))
       (|ofCategory| *2 (|JetBundleCategory|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|))))) 
(((*1 *1 *1 *2)
  (|partial| AND (|ofCategory| *1 (|JetBundleFunctionCategory| *2))
   (|ofCategory| *2 (|JetBundleCategory|))))) 
(((*1 *1 *1 *2 *1)
  (AND (|ofCategory| *1 (|JetBundleFunctionCategory| *2))
       (|ofCategory| *2 (|JetBundleCategory|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|JetBundleFunctionCategory| *2))
       (|ofCategory| *2 (|JetBundleCategory|))))) 
(((*1 *2 *3 *4 *3)
  (AND (|isDomain| *3 (|List| *1))
       (|isDomain| *4 (|SparseEchelonMatrix| *5 *1))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *5))
       (|ofCategory| *5 (|JetBundleCategory|))
       (|isDomain| *2
                   (|Record| (|:| |Sys| (|List| *1))
                             (|:| JM (|SparseEchelonMatrix| *5 *1))
                             (|:| |Depend|
                                  (|Union| "failed"
                                           (|List|
                                            (|List|
                                             (|NonNegativeInteger|)))))))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|JetBundleFunctionCategory| *3))
       (|ofCategory| *3 (|JetBundleCategory|))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|SparseMultivariatePolynomial| (|Expression| (|Integer|)) *3))
   (|isDomain| *1 (|JetBundleExpression| *3))
   (|ofCategory| *3 (|JetBundleCategory|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|JetBundleCategory|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|JetBundleCategory|))
       (|isDomain| *2 (|List| (|PositiveInteger|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|PositiveInteger|)))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|JetBundleCategory&| *4))
       (|ofCategory| *4 (|JetBundleCategory|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *1 (|JetBundleCategory|))
       (|isDomain| *3 (|List| (|PositiveInteger|)))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|isDomain| *2 (|List| (|PositiveInteger|)))
       (|isDomain| *1 (|JetBundleCategory&| *4))
       (|ofCategory| *4 (|JetBundleCategory|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *1 (|JetBundleCategory|))
       (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|isDomain| *2 (|List| (|PositiveInteger|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|isDomain| *2 (|List| (|List| (|PositiveInteger|))))
       (|isDomain| *1 (|JetBundleCategory&| *4))
       (|ofCategory| *4 (|JetBundleCategory|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *1 (|JetBundleCategory|))
       (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|isDomain| *2 (|List| (|List| (|PositiveInteger|))))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|JetBundleCategory|)) (|isDomain| *2 (|Symbol|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|BasicOperator|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|BasicOperator|))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|DifferentialPolynomialCategory| *4 *3 *5 *6))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *5 (|DifferentialVariableCategory| *3))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|DifferentialPolynomialCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|DifferentialVariableCategory| *4))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|DifferentialVariableCategory| *3))
       (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|JetBundleCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|JetBundleCategory|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))))) 
(((*1 *1 *1 *2)
  (|partial| AND (|ofCategory| *1 (|JetBundleCategory|))
   (|isDomain| *2 (|PositiveInteger|))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *1 (|JetBundleCategory|))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|List| (|PositiveInteger|)))
       (|isDomain| *2 (|PositiveInteger|))
       (|ofCategory| *1 (|JetBundleCategory|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|JetBundleCategory&| *3))
       (|ofCategory| *3 (|JetBundleCategory|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *1 (|JetBundleCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|JetBundleCategory&| *3))
       (|ofCategory| *3 (|JetBundleCategory|))))
 ((*1 *2 *2)
  (AND (|ofCategory| *1 (|JetBundleCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|IndexedAggregate| *3 *4)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|Type|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|OneDimensionalArray| *4))
       (|isDomain| *1 (|IncidenceAlgebra| *3 *4)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *4 (|SetCategory|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|IndexedAggregate| *3 *4)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|Type|)) (|isDomain| *2 (|List| *3))))) 
(((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|IndexedAggregate| *4 *3)) (|ofCategory| *4 (|Type|))
       (|ofCategory| *3 (|Type|)) (|ofCategory| *3 (|BasicType|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *2 *3 *4))
       (|ofCategory| *2 (|Type|))
       (|ofCategory| *3 (|IndexedAggregate| (|Integer|) *2))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *2))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|IndexedAggregate| *3 *2)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1 *3 *3)
  (AND (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|IndexedAggregate| *3 *4)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|Type|)) (|isDomain| *2 (|Void|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|BasicOperator|))
       (|isDomain| *4 (|List| (|Complex| *6)))
       (|ofCategory| *5 (|Join| (|IntegralDomain|) (|Comparable|)))
       (|isDomain| *2 (|Complex| *6))
       (|isDomain| *1 (|InnerTrigonometricManipulations| *5 *6 *7))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| *5) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *7
                     (|Join| (|FunctionSpace| (|Complex| *5))
                             (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| (|Kernel| *2)))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| (|Complex| *4))
                             (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *4 (|Join| (|IntegralDomain|) (|Comparable|)))
       (|isDomain| *1 (|InnerTrigonometricManipulations| *4 *5 *2))
       (|ofCategory| *5
                     (|Join| (|FunctionSpace| *4) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|Join| (|IntegralDomain|) (|Comparable|)))
       (|isDomain| *2 (|Complex| *5))
       (|isDomain| *1 (|InnerTrigonometricManipulations| *4 *5 *3))
       (|ofCategory| *5
                     (|Join| (|FunctionSpace| *4) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *3
                     (|Join| (|FunctionSpace| (|Complex| *4))
                             (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|Join| (|IntegralDomain|) (|Comparable|)))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| (|Complex| *4))
                             (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))
       (|isDomain| *1 (|InnerTrigonometricManipulations| *4 *3 *2))
       (|ofCategory| *3
                     (|Join| (|FunctionSpace| *4) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|Join| (|IntegralDomain|) (|Comparable|)))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *4) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))
       (|isDomain| *1 (|InnerTrigonometricManipulations| *4 *2 *3))
       (|ofCategory| *3
                     (|Join| (|FunctionSpace| (|Complex| *4))
                             (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Complex| *5))
       (|ofCategory| *5
                     (|Join| (|FunctionSpace| *4) (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *4 (|Join| (|IntegralDomain|) (|Comparable|)))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| (|Complex| *4))
                             (|RadicalCategory|)
                             (|TranscendentalFunctionCategory|)))
       (|isDomain| *1 (|InnerTrigonometricManipulations| *4 *5 *2))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Reference| (|OrderedCompletion| (|Integer|))))
       (|isDomain| *3 (|Stream| (|Record| (|:| |k| (|Integer|)) (|:| |c| *4))))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *4))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Reference| (|OrderedCompletion| (|Integer|))))
       (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *3))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Stream| (|Record| (|:| |k| (|Integer|)) (|:| |c| *3))))
       (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *3))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1 *1 *2)
  (|partial| AND (|isDomain| *2 (|Boolean|))
   (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *3))
   (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *3 *4 *5 *6 *7)
  (AND (|isDomain| *3 (|Stream| (|Record| (|:| |k| (|Integer|)) (|:| |c| *6))))
       (|isDomain| *4 (|Reference| (|OrderedCompletion| (|Integer|))))
       (|isDomain| *5 (|Symbol|)) (|isDomain| *7 (|Fraction| (|Integer|)))
       (|ofCategory| *6 (|Ring|)) (|isDomain| *2 (|OutputForm|))
       (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *6))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *3))
       (|ofCategory| *3 (|Algebra| *2)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|InnerSparseUnivariatePowerSeries| *2))
       (|ofCategory| *2 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| *3))
       (|ofCategory| *3 (|SquareFreeRegularTriangularSetCategory| *5 *6 *7 *8))
       (|ofCategory| *5
                     (|Join| (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|ofCategory| *8 (|RecursivePolynomialCategory| *5 *6 *7))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1
                   (|InternalRationalUnivariateRepresentationPackage| *5 *6 *7
                                                                      *8 *3))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *4 (|Permutation| (|Integer|)))
       (|isDomain| *2 (|Matrix| (|Integer|)))
       (|isDomain| *1 (|IrrRepSymNatPackage|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|List| (|Matrix| (|Integer|))))
       (|isDomain| *1 (|IrrRepSymNatPackage|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *4 (|List| (|Permutation| (|Integer|))))
       (|isDomain| *2 (|List| (|Matrix| (|Integer|))))
       (|isDomain| *1 (|IrrRepSymNatPackage|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|IrrRepSymNatPackage|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|PolynomialFactorizationExplicit|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *1 (|FunctionSpaceComplexIntegration| *4 *2))
       (|ofCategory| *2
                     (|Join| (|TranscendentalFunctionCategory|)
                             (|AlgebraicallyClosedFunctionSpace| *4)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
       (|isDomain| *4 (|Symbol|)) (|ofCategory| *5 (|CharacteristicZero|))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                             (|Comparable|)
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Expression| *5))
       (|isDomain| *1 (|IntegrationResultRFToFunction| *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|IntegrationResult| *2))
       (|ofCategory| *2
                     (|Join| (|AlgebraicallyClosedFunctionSpace| *4)
                             (|TranscendentalFunctionCategory|)))
       (|isDomain| *1 (|IntegrationResultToFunction| *4 *2))
       (|ofCategory| *4
                     (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                             (|Comparable|)
                             (|LinearlyExplicitOver| (|Integer|))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|IntegrationResult| (|Fraction| (|Polynomial| *4))))
       (|ofCategory| *4
                     (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                             (|Comparable|)
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Expression| *4))
       (|isDomain| *1 (|IntegrationResultRFToFunction| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *4))
       (|isDomain| *1 (|IrredPolyOverFiniteField| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *1 (|IntegerRoots| *2))
       (|ofCategory| *2 (|IntegerNumberSystem|))))) 
(((*1 *2 *2)
  (|partial| AND (|isDomain| *1 (|IntegerRoots| *2))
   (|ofCategory| *2 (|IntegerNumberSystem|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|IntegerRoots| *3))
       (|ofCategory| *3 (|IntegerNumberSystem|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|IntegerRoots| *2))
       (|ofCategory| *2 (|IntegerNumberSystem|))))) 
(((*1 *2 *2 *3)
  (|partial| AND (|isDomain| *3 (|NonNegativeInteger|))
   (|isDomain| *1 (|IntegerRoots| *2))
   (|ofCategory| *2 (|IntegerNumberSystem|))))
 ((*1 *2 *3)
  (AND
   (|isDomain| *2
               (|Record| (|:| |base| *3)
                         (|:| |exponent| (|NonNegativeInteger|))))
   (|isDomain| *1 (|IntegerRoots| *3))
   (|ofCategory| *3 (|IntegerNumberSystem|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|IntegerRoots| *3))
       (|ofCategory| *3 (|IntegerNumberSystem|))))) 
(((*1 *1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|List|
                (|Record| (|:| |scalar| (|Fraction| (|Integer|)))
                          (|:| |coeff| (|SparseUnivariatePolynomial| *2))
                          (|:| |logand| (|SparseUnivariatePolynomial| *2)))))
   (|isDomain| *4 (|List| (|Record| (|:| |integrand| *2) (|:| |intvar| *2))))
   (|ofCategory| *2 (|Field|)) (|isDomain| *1 (|IntegrationResult| *2))))) 
(((*1 *2 *1)
  (AND (|isDomain| *1 (|IntegrationResult| *2)) (|ofCategory| *2 (|Field|))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |scalar| (|Fraction| (|Integer|)))
                          (|:| |coeff| (|SparseUnivariatePolynomial| *3))
                          (|:| |logand| (|SparseUnivariatePolynomial| *3)))))
   (|isDomain| *1 (|IntegrationResult| *3)) (|ofCategory| *3 (|Field|))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2 (|List| (|Record| (|:| |integrand| *3) (|:| |intvar| *3))))
   (|isDomain| *1 (|IntegrationResult| *3)) (|ofCategory| *3 (|Field|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|IntegrationResult| *3))
       (|ofCategory| *3 (|Field|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|InternalPrintPackage|))))) 
(((*1 *2 *2 *3 *3)
  (|partial| AND (|isDomain| *3 (|Symbol|))
   (|ofCategory| *4
                 (|Join| (|EuclideanDomain|) (|Comparable|)
                         (|CharacteristicZero|) (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *1 (|InverseLaplaceTransform| *4 *2))
   (|ofCategory| *2
                 (|Join| (|TranscendentalFunctionCategory|)
                         (|PrimitiveFunctionCategory|)
                         (|SpecialFunctionCategory|)
                         (|AlgebraicallyClosedFunctionSpace| *4)))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Mapping| *3 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *5 (|Field|))
       (|isDomain| *2 (|Record| (|:| |answer| *3) (|:| |polypart| *3)))
       (|isDomain| *1 (|TranscendentalIntegration| *5 *3))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| *6)) (|isDomain| *4 (|Mapping| *6 *6))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *5 (|Field|))
       (|isDomain| *2
                   (|Record| (|:| |ir| (|IntegrationResult| (|Fraction| *6)))
                             (|:| |specpart| (|Fraction| *6))
                             (|:| |polypart| *6)))
       (|isDomain| *1 (|TranscendentalIntegration| *5 *6))))) 
(((*1 *2 *3 *4 *5 *6 *7 *8)
  (AND (|isDomain| *3 (|Fraction| *9)) (|isDomain| *5 (|Mapping| *4 *4))
       (|isDomain| *6 (|Mapping| *9 *9))
       (|isDomain| *7
                   (|Mapping|
                    (|Union| (|Record| (|:| |ratpart| *4) (|:| |coeff| *4))
                             "failed")
                    *4))
       (|isDomain| *8 (|Mapping| (|IntegrationResult| *4) *4))
       (|ofCategory| *4 (|Field|))
       (|ofCategory| *9 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *2
                   (|Record|
                    (|:| |answer| (|IntegrationResult| (|Fraction| *9)))
                    (|:| |a0| (|IntegrationResult| *4))))
       (|isDomain| *1 (|TranscendentalIntegration| *4 *9))))) 
(((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *4 (|Mapping| *8 *8))
       (|isDomain| *5
                   (|Mapping|
                    (|Record| (|:| |answer| (|Fraction| *8))
                              (|:| |logpart| (|Fraction| *8))
                              (|:| |ir| (|IntegrationResult| (|Fraction| *8))))
                    (|Fraction| *8)))
       (|isDomain| *6
                   (|Mapping|
                    (|Record| (|:| |ans| *7) (|:| |right| *7)
                              (|:| |primpart| *7) (|:| |sol?| (|Boolean|)))
                    (|Integer|) *7))
       (|ofCategory| *7 (|Field|))
       (|ofCategory| *8 (|UnivariatePolynomialCategory| *7))
       (|isDomain| *3 (|Fraction| *8))
       (|isDomain| *2
                   (|Record|
                    (|:| |answer| (|IntegrationResult| (|Fraction| *8)))
                    (|:| |a0| *7)))
       (|isDomain| *1 (|TranscendentalIntegration| *7 *8))))) 
(((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *4 (|Mapping| *8 *8))
       (|isDomain| *5
                   (|Mapping|
                    (|Record| (|:| |answer| (|Fraction| *8))
                              (|:| |logpart| (|Fraction| *8))
                              (|:| |ir| (|IntegrationResult| (|Fraction| *8))))
                    (|Fraction| *8)))
       (|isDomain| *6
                   (|Mapping|
                    (|Union| (|Record| (|:| |ratpart| *7) (|:| |coeff| *7))
                             "failed")
                    *7))
       (|ofCategory| *7 (|Field|))
       (|ofCategory| *8 (|UnivariatePolynomialCategory| *7))
       (|isDomain| *3 (|Fraction| *8))
       (|isDomain| *2
                   (|Record|
                    (|:| |answer| (|IntegrationResult| (|Fraction| *8)))
                    (|:| |a0| *7)))
       (|isDomain| *1 (|TranscendentalIntegration| *7 *8))))) 
(((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *5 (|Mapping| (|IntegrationResult| *3) *3 (|Symbol|)))
       (|isDomain| *6
                   (|Mapping|
                    (|Union| (|Record| (|:| |special| *3) (|:| |integrand| *3))
                             "failed")
                    *3 (|Symbol|)))
       (|ofCategory| *3 (|ElementaryFunctionCategory|))
       (|ofCategory| *3 (|LiouvillianFunctionCategory|))
       (|ofCategory| *3 (|RetractableTo| *4))
       (|ofCategory| *3 (|FunctionSpace| *7)) (|isDomain| *4 (|Symbol|))
       (|ofCategory| *7 (|ConvertibleTo| (|Pattern| (|Integer|))))
       (|ofCategory| *7 (|GcdDomain|))
       (|ofCategory| *7 (|PatternMatchable| (|Integer|)))
       (|ofCategory| *7 (|Comparable|))
       (|isDomain| *2 (|IntegrationResult| *3))
       (|isDomain| *1 (|IntegrationTools| *7 *3))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *4 (|Comparable|))
       (|isDomain| *1 (|IntegrationTools| *4 *2))
       (|ofCategory| *2 (|ElementaryFunctionCategory|))
       (|ofCategory| *2 (|FunctionSpace| *4))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *4 (|Comparable|))
       (|isDomain| *1 (|IntegrationTools| *4 *2))
       (|ofCategory| *2 (|FunctionSpace| *4))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *6)) (|isDomain| *4 (|Symbol|))
       (|ofCategory| *6 (|FunctionSpace| *5)) (|ofCategory| *5 (|Comparable|))
       (|isDomain| *2 (|List| (|Kernel| *6)))
       (|isDomain| *1 (|IntegrationTools| *5 *6))))) 
(((*1 *2 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Kernel| *6))) (|isDomain| *4 (|Symbol|))
       (|isDomain| *2 (|Kernel| *6)) (|ofCategory| *6 (|FunctionSpace| *5))
       (|ofCategory| *5 (|Comparable|))
       (|isDomain| *1 (|IntegrationTools| *5 *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Kernel| *5))) (|ofCategory| *4 (|Comparable|))
       (|isDomain| *2 (|Kernel| *5)) (|isDomain| *1 (|IntegrationTools| *4 *5))
       (|ofCategory| *5 (|FunctionSpace| *4))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|List| (|Kernel| *5))) (|isDomain| *3 (|Symbol|))
       (|ofCategory| *5 (|FunctionSpace| *4)) (|ofCategory| *4 (|Comparable|))
       (|isDomain| *1 (|IntegrationTools| *4 *5))))) 
(((*1 *2 *2 *3)
  (|partial| AND (|isDomain| *2 (|Fraction| (|Polynomial| *4)))
   (|isDomain| *3 (|Symbol|))
   (|ofCategory| *4
                 (|Join| (|IntegralDomain|) (|RetractableTo| (|Integer|))
                         (|CharacteristicZero|)))
   (|isDomain| *1 (|RationalFunctionIntegration| *4))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|PolynomialFactorizationExplicit|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|IntegrationResult| *3))
       (|isDomain| *1 (|FunctionSpaceComplexIntegration| *5 *3))
       (|ofCategory| *3
                     (|Join| (|TranscendentalFunctionCategory|)
                             (|AlgebraicallyClosedFunctionSpace| *5)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *5)))
       (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5
                     (|Join| (|IntegralDomain|) (|RetractableTo| (|Integer|))
                             (|CharacteristicZero|)))
       (|isDomain| *2 (|IntegrationResult| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *1 (|RationalFunctionIntegration| *5))))) 
(((*1 *2 *3)
  (|partial| AND (|isDomain| *2 (|Integer|))
   (|isDomain| *1 (|IntegerRetractions| *3))
   (|ofCategory| *3 (|RetractableTo| *2))))) 
(((*1 *2 *2)
  (|partial| AND (|isDomain| *2 (|Fraction| *4))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
   (|ofCategory| *3
                 (|Join| (|Field|) (|CharacteristicZero|)
                         (|RetractableTo| (|Integer|))))
   (|isDomain| *1 (|RationalIntegration| *3 *4))))) 
(((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *4 (|Symbol|))
   (|ofCategory| *5 (|ConvertibleTo| (|Pattern| (|Integer|))))
   (|ofCategory| *5 (|PatternMatchable| (|Integer|)))
   (|ofCategory| *5
                 (|Join| (|Comparable|) (|RetractableTo| (|Integer|))
                         (|GcdDomain|) (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *2 (|Record| (|:| |special| *3) (|:| |integrand| *3)))
   (|isDomain| *1 (|PatternMatchIntegration| *5 *3))
   (|ofCategory| *3 (|LiouvillianFunctionCategory|))
   (|ofCategory| *3
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *5)))))
 ((*1 *2 *2 *3 *4 *4)
  (|partial| AND (|isDomain| *3 (|Symbol|))
   (|isDomain| *4 (|OrderedCompletion| *2))
   (|ofCategory| *2 (|SpecialFunctionCategory|))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *5)))
   (|ofCategory| *5 (|ConvertibleTo| (|Pattern| (|Integer|))))
   (|ofCategory| *5 (|PatternMatchable| (|Integer|)))
   (|ofCategory| *5
                 (|Join| (|Comparable|) (|RetractableTo| (|Integer|))
                         (|GcdDomain|) (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *1 (|PatternMatchIntegration| *5 *2))))) 
(((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *4 (|Symbol|))
   (|ofCategory| *5 (|ConvertibleTo| (|Pattern| (|Integer|))))
   (|ofCategory| *5 (|PatternMatchable| (|Integer|)))
   (|ofCategory| *5
                 (|Join| (|Comparable|) (|RetractableTo| (|Integer|))
                         (|GcdDomain|) (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *2 (|Record| (|:| |special| *3) (|:| |integrand| *3)))
   (|isDomain| *1 (|PatternMatchIntegration| *5 *3))
   (|ofCategory| *3 (|LiouvillianFunctionCategory|))
   (|ofCategory| *3
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *5)))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5
                     (|Join| (|Comparable|) (|RetractableTo| (|Integer|))
                             (|GcdDomain|)
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Record| (|:| |const| *3) (|:| |nconst| *3)))
       (|isDomain| *1 (|PatternMatchIntegration| *5 *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *5)))))) 
(((*1 *2 *3 *4 *5 *6 *7)
  (AND (|isDomain| *3 (|Mapping| *9 *9))
       (|isDomain| *4 (|Mapping| (|Factored| *9) *9))
       (|isDomain| *5
                   (|Mapping| (|List| (|Vector| (|Fraction| (|Integer|))))
                              (|Matrix| *8)))
       (|isDomain| *6
                   (|Mapping|
                    (|Record| (|:| |logands| (|List| (|Fraction| *9)))
                              (|:| |basis|
                                   (|List|
                                    (|Vector| (|Fraction| (|Integer|))))))
                    (|List| *9)))
       (|isDomain| *7 (|List| (|Fraction| *9))) (|ofCategory| *8 (|Field|))
       (|ofCategory| *9 (|UnivariatePolynomialCategory| *8))
       (|isDomain| *2
                   (|Record| (|:| |logands| (|List| (|Fraction| *9)))
                             (|:| |basis|
                                  (|List|
                                   (|Vector| (|Fraction| (|Integer|)))))))
       (|isDomain| *1 (|ParametricTranscendentalIntegration| *8 *9))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *4 (|List| (|Kernel| *7)))
       (|isDomain| *5 (|List| *7))
       (|ofCategory| *7
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *6)))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Record| (|:| |logands| (|List| *7))
                             (|:| |basis|
                                  (|List|
                                   (|Vector| (|Fraction| (|Integer|)))))))
       (|isDomain| *1 (|ParametricIntegration| *6 *7))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *4 (|List| (|Kernel| *7)))
       (|isDomain| *5 (|List| *7))
       (|ofCategory| *7
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *6)))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |ratpart| *7)
                              (|:| |coeffs| (|Vector| *7)))))
       (|isDomain| *1 (|ParametricIntegration| *6 *7))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *4 (|Symbol|)) (|isDomain| *5 (|List| (|Kernel| *3)))
       (|isDomain| *6 (|List| *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *7)))
       (|ofCategory| *7
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Record|
                    (|:| |particular|
                         (|Union|
                          (|Record| (|:| |ratpart| *3)
                                    (|:| |coeffs| (|Vector| *3)))
                          #1="failed"))
                    (|:| |basis|
                         (|List|
                          (|Record| (|:| |ratpart| *3)
                                    (|:| |coeffs| (|Vector| *3)))))))
       (|isDomain| *1 (|ParametricIntegration| *7 *3))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|Symbol|)) (|isDomain| *5 (|List| *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *6)))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Record|
                    (|:| |particular|
                         (|Union|
                          (|Record| (|:| |ratpart| *3)
                                    (|:| |coeffs| (|Vector| *3)))
                          #1#))
                    (|:| |basis|
                         (|List|
                          (|Record| (|:| |ratpart| *3)
                                    (|:| |coeffs| (|Vector| *3)))))))
       (|isDomain| *1 (|ParametricIntegration| *6 *3))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|List| *7))
       (|isDomain| *4
                   (|Mapping| (|List| (|Vector| (|Fraction| (|Integer|))))
                              (|Matrix| *6)))
       (|isDomain| *5
                   (|Mapping|
                    (|Record| (|:| |logands| (|List| *6))
                              (|:| |basis|
                                   (|List|
                                    (|Vector| (|Fraction| (|Integer|))))))
                    (|List| *6)))
       (|ofCategory| *6 (|Field|))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| *6))
       (|isDomain| *2
                   (|Record| (|:| |logands| (|List| (|Fraction| *7)))
                             (|:| |basis|
                                  (|List|
                                   (|Vector| (|Fraction| (|Integer|)))))))
       (|isDomain| *1 (|ParametricTranscendentalIntegration| *6 *7))))) 
(((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|Mapping|
                (|List|
                 (|Record| (|:| |ratpart| *6) (|:| |coeffs| (|Vector| *6))))
                (|List| *6)))
   (|isDomain| *4 (|Mapping| (|List| (|Vector| *6)) (|Matrix| *6)))
   (|isDomain| *5 (|List| (|Fraction| *7))) (|ofCategory| *6 (|Field|))
   (|ofCategory| *7 (|UnivariatePolynomialCategory| *6))
   (|isDomain| *2
               (|List|
                (|Record| (|:| |ratpart| *6) (|:| |coeffs| (|Vector| *6)))))
   (|isDomain| *1 (|ParametricTranscendentalIntegration| *6 *7))))) 
(((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|Mapping|
                (|List|
                 (|Record| (|:| |ratpart| *6) (|:| |coeffs| (|Vector| *6))))
                (|List| *7)))
   (|isDomain| *4 (|Mapping| (|List| (|Vector| *6)) (|Matrix| *6)))
   (|isDomain| *5 (|List| (|Fraction| *7))) (|ofCategory| *6 (|Field|))
   (|ofCategory| *7 (|UnivariatePolynomialCategory| *6))
   (|isDomain| *2
               (|List|
                (|Record| (|:| |ratpart| *6) (|:| |coeffs| (|Vector| *6)))))
   (|isDomain| *1 (|ParametricTranscendentalIntegration| *6 *7))))) 
(((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|Mapping| *8 *8))
       (|isDomain| *4
                   (|Mapping|
                    (|List|
                     (|Record| (|:| |ratpart| *7)
                               (|:| |coeffs| (|Vector| *7))))
                    (|Integer|) (|List| *7)))
       (|isDomain| *5 (|Mapping| (|List| (|Vector| *7)) (|Matrix| *7)))
       (|isDomain| *6 (|List| (|Fraction| *8))) (|ofCategory| *7 (|Field|))
       (|ofCategory| *8 (|UnivariatePolynomialCategory| *7))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |ratpart| (|Fraction| *8))
                              (|:| |coeffs| (|Vector| *7)))))
       (|isDomain| *1 (|ParametricTranscendentalIntegration| *7 *8))))) 
(((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|Mapping| *8 *8))
       (|isDomain| *4
                   (|Mapping|
                    (|List|
                     (|Record| (|:| |ratpart| *7)
                               (|:| |coeffs| (|Vector| *7))))
                    (|List| *7)))
       (|isDomain| *5 (|Mapping| (|List| (|Vector| *7)) (|Matrix| *7)))
       (|isDomain| *6 (|List| (|Fraction| *8))) (|ofCategory| *7 (|Field|))
       (|ofCategory| *8 (|UnivariatePolynomialCategory| *7))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |ratpart| (|Fraction| *8))
                              (|:| |coeffs| (|Vector| *7)))))
       (|isDomain| *1 (|ParametricTranscendentalIntegration| *7 *8))))) 
(((*1 *2 *3 *4 *5 *5 *6)
  (AND (|isDomain| *5 (|Kernel| *4)) (|isDomain| *6 (|Symbol|))
       (|ofCategory| *4
                     (|Join| (|FunctionSpace| *7) (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *7
                     (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                             (|Comparable|) (|CharacteristicZero|)
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Record| (|:| |particular| (|Union| *4 "failed"))
                             (|:| |basis| (|List| *4))))
       (|isDomain| *1 (|PureAlgebraicIntegration| *7 *4 *3))
       (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *4))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *3 *3 *4 *4)
  (AND (|isDomain| *3 (|List| *6)) (|isDomain| *4 (|Kernel| *6))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| *5) (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                             (|Comparable|) (|CharacteristicZero|)
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Record|
                    (|:| |particular|
                         (|List|
                          (|Record| (|:| |ratpart| *6)
                                    (|:| |coeffs| (|Vector| *6)))))
                    (|:| |basis| (|List| *6))))
       (|isDomain| *1 (|PureAlgebraicIntegration| *5 *6 *7))
       (|ofCategory| *7 (|SetCategory|))))) 
(((*1 *2 *3 *4 *5 *5)
  (AND (|isDomain| *4 (|List| *3)) (|isDomain| *5 (|Kernel| *3))
       (|ofCategory| *3
                     (|Join| (|FunctionSpace| *6) (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                             (|Comparable|) (|CharacteristicZero|)
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Record|
                    (|:| |particular|
                         (|List|
                          (|Record| (|:| |ratpart| *3)
                                    (|:| |coeffs| (|Vector| *3)))))
                    (|:| |basis| (|List| *3))))
       (|isDomain| *1 (|PureAlgebraicIntegration| *6 *3 *7))
       (|ofCategory| *7 (|SetCategory|))))) 
(((*1 *2 *2 *2 *2 *3 *3 *4)
  (|partial| AND (|isDomain| *3 (|Kernel| *2))
   (|isDomain| *4 (|Mapping| (|Union| *2 "failed") *2 *2 (|Symbol|)))
   (|ofCategory| *2
                 (|Join| (|FunctionSpace| *5) (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)))
   (|ofCategory| *5
                 (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                         (|Comparable|) (|CharacteristicZero|)
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *1 (|PureAlgebraicIntegration| *5 *2 *6))
   (|ofCategory| *6 (|SetCategory|))))) 
(((*1 *2 *3 *4 *4)
  (AND (|isDomain| *4 (|Kernel| *3))
       (|ofCategory| *3
                     (|Join| (|FunctionSpace| *5) (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                             (|Comparable|) (|CharacteristicZero|)
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|IntegrationResult| *3))
       (|isDomain| *1 (|PureAlgebraicIntegration| *5 *3 *6))
       (|ofCategory| *6 (|SetCategory|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Mapping| *6 *6))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *5 (|Field|))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| (|Fraction| *6)))
       (|isDomain| *2 (|Record| (|:| |answer| *3) (|:| |logpart| *3)))
       (|isDomain| *1 (|AlgebraicHermiteIntegration| *5 *6 *7 *3))
       (|ofCategory| *3 (|FunctionFieldCategory| *5 *6 *7))))
 ((*1 *2 *3 *4 *3)
  (AND (|isDomain| *4 (|Mapping| *6 *6))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *5 (|Field|))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| (|Fraction| *6)))
       (|isDomain| *2 (|Record| (|:| |answer| *3) (|:| |logpart| *3)))
       (|isDomain| *1 (|AlgebraicHermiteIntegration| *5 *6 *7 *3))
       (|ofCategory| *3 (|FunctionFieldCategory| *5 *6 *7))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| *6)) (|isDomain| *4 (|Mapping| *6 *6))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *5 (|Field|))
       (|isDomain| *2
                   (|Record| (|:| |answer| (|Fraction| *6))
                             (|:| |logpart| (|Fraction| *6))
                             (|:| |specpart| (|Fraction| *6))
                             (|:| |polypart| *6)))
       (|isDomain| *1 (|TranscendentalHermiteIntegration| *5 *6))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Fraction| *5)) (|isDomain| *4 (|Mapping| *5 *5))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *6))
       (|ofCategory| *6 (|Field|))
       (|isDomain| *2
                   (|Record| (|:| |answer| (|Fraction| *5))
                             (|:| |logpart| (|Fraction| *5))
                             (|:| |specpart| (|Fraction| *5))
                             (|:| |polypart| *5)))
       (|isDomain| *1 (|TranscendentalHermiteIntegration| *6 *5))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *1 (|IntegerNumberTheoryFunctions|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|IntegerNumberTheoryFunctions|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|IntegerNumberTheoryFunctions|))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|FiniteMoebiusFunction| *3))
       (|ofCategory| *3 (|Join| (|PartialOrder|) (|SetCategory|)))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|IntegerNumberTheoryFunctions|))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|IntegerNumberTheoryFunctions|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|IntegerNumberTheoryFunctions|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|IntegerNumberTheoryFunctions|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|IntegerNumberTheoryFunctions|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|List| (|Integer|)))
       (|isDomain| *1 (|IntegerNumberTheoryFunctions|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| *2)) (|isDomain| *1 (|CRApackage| *2))
       (|ofCategory| *2 (|EuclideanDomain|))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|List| (|List| *4))) (|isDomain| *2 (|List| *4))
       (|ofCategory| *4 (|EuclideanDomain|))
       (|isDomain| *1 (|CRApackage| *4))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|List| *8))
       (|isDomain| *4
                   (|List|
                    (|Record| (|:| |basis| (|Matrix| *7)) (|:| |basisDen| *7)
                              (|:| |basisInv| (|Matrix| *7)))))
       (|isDomain| *5 (|NonNegativeInteger|))
       (|ofCategory| *8 (|UnivariatePolynomialCategory| *7))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| *6))
       (|ofCategory| *6 (|FiniteFieldCategory|))
       (|isDomain| *2
                   (|Record| (|:| |basis| (|Matrix| *7)) (|:| |basisDen| *7)
                             (|:| |basisInv| (|Matrix| *7))))
       (|isDomain| *1 (|ChineseRemainderToolsForIntegralBases| *6 *7 *8))))
 ((*1 *2 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|IntegerNumberTheoryFunctions|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|IntegerNumberTheoryFunctions|))))) 
(((*1 *2 *3 *4 *5 *5 *4 *6)
  (AND (|isDomain| *5 (|Kernel| *4))
       (|isDomain| *6 (|SparseUnivariatePolynomial| *4))
       (|ofCategory| *4
                     (|Join| (|FunctionSpace| *7) (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *7
                     (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                             (|Comparable|) (|CharacteristicZero|)
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Record| (|:| |particular| (|Union| *4 #1="failed"))
                             (|:| |basis| (|List| *4))))
       (|isDomain| *1 (|GenusZeroIntegration| *7 *4 *3))
       (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *4))
       (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *3 *4 *5 *5 *5 *4 *6 *4)
  (AND (|isDomain| *5 (|Kernel| *4))
       (|isDomain| *6 (|Fraction| (|SparseUnivariatePolynomial| *4)))
       (|ofCategory| *4
                     (|Join| (|FunctionSpace| *7) (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *7
                     (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                             (|Comparable|) (|CharacteristicZero|)
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Record| (|:| |particular| (|Union| *4 #1#))
                             (|:| |basis| (|List| *4))))
       (|isDomain| *1 (|GenusZeroIntegration| *7 *4 *3))
       (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *4))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|IntegrationResult| *5)) (|isDomain| *3 (|Kernel| *5))
       (|ofCategory| *5
                     (|Join| (|FunctionSpace| *4) (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *4
                     (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                             (|Comparable|) (|CharacteristicZero|)
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *1 (|GenusZeroIntegration| *4 *5 *6))
       (|ofCategory| *6 (|SetCategory|))))) 
(((*1 *2 *2 *2 *3 *3 *4 *2 *5)
  (|partial| AND (|isDomain| *3 (|Kernel| *2))
   (|isDomain| *4 (|Mapping| (|Union| *2 #1="failed") *2 *2 (|Symbol|)))
   (|isDomain| *5 (|SparseUnivariatePolynomial| *2))
   (|ofCategory| *2
                 (|Join| (|FunctionSpace| *6) (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)))
   (|ofCategory| *6
                 (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                         (|Comparable|) (|CharacteristicZero|)
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *1 (|GenusZeroIntegration| *6 *2 *7))
   (|ofCategory| *7 (|SetCategory|))))
 ((*1 *2 *2 *2 *3 *3 *4 *3 *2 *5 *2)
  (|partial| AND (|isDomain| *3 (|Kernel| *2))
   (|isDomain| *4 (|Mapping| (|Union| *2 #1#) *2 *2 (|Symbol|)))
   (|isDomain| *5 (|Fraction| (|SparseUnivariatePolynomial| *2)))
   (|ofCategory| *2
                 (|Join| (|FunctionSpace| *6) (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)))
   (|ofCategory| *6
                 (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                         (|Comparable|) (|CharacteristicZero|)
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *1 (|GenusZeroIntegration| *6 *2 *7))
   (|ofCategory| *7 (|SetCategory|))))) 
(((*1 *2 *3 *4 *4 *3 *5)
  (AND (|isDomain| *4 (|Kernel| *3))
       (|isDomain| *5 (|SparseUnivariatePolynomial| *3))
       (|ofCategory| *3
                     (|Join| (|FunctionSpace| *6) (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                             (|Comparable|) (|CharacteristicZero|)
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|IntegrationResult| *3))
       (|isDomain| *1 (|GenusZeroIntegration| *6 *3 *7))
       (|ofCategory| *7 (|SetCategory|))))
 ((*1 *2 *3 *4 *4 *4 *3 *5 *3)
  (AND (|isDomain| *4 (|Kernel| *3))
       (|isDomain| *5 (|Fraction| (|SparseUnivariatePolynomial| *3)))
       (|ofCategory| *3
                     (|Join| (|FunctionSpace| *6) (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|RetractableTo| (|Integer|))
                             (|Comparable|) (|CharacteristicZero|)
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|IntegrationResult| *3))
       (|isDomain| *1 (|GenusZeroIntegration| *6 *3 *7))
       (|ofCategory| *7 (|SetCategory|))))) 
(((*1 *2 *2)
  (|partial| AND (|isDomain| *1 (|IntegerFactorizationPackage| *2))
   (|ofCategory| *2 (|IntegerNumberSystem|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|IntegerFactorizationPackage| *3))
       (|ofCategory| *3 (|IntegerNumberSystem|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|PolynomialFactorizationExplicit|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|IntegrationResult| *3))
       (|isDomain| *1 (|ElementaryIntegration| *5 *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *5)))))) 
(((*1 *2 *3 *4 *3)
  (|partial| AND (|isDomain| *4 (|Symbol|))
   (|ofCategory| *5
                 (|Join| (|GcdDomain|) (|Comparable|) (|CharacteristicZero|)
                         (|PolynomialFactorizationExplicit|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *2 (|Record| (|:| |ratpart| *3) (|:| |coeff| *3)))
   (|isDomain| *1 (|ElementaryIntegration| *5 *3))
   (|ofCategory| *3
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *5)))))) 
(((*1 *2 *3 *3 *4)
  (|partial| AND (|isDomain| *4 (|Symbol|))
   (|ofCategory| *5
                 (|Join| (|GcdDomain|) (|Comparable|) (|CharacteristicZero|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *2 (|List| (|List| *3)))
   (|isDomain| *1 (|DenominatorIntegration| *5 *3))
   (|ofCategory| *3
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|LiouvillianFunctionCategory|)
                         (|SpecialFunctionCategory|) (|FunctionSpace| *5)))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Fraction| (|SparseUnivariatePolynomial| *7)))
       (|isDomain| *4 (|Kernel| *7)) (|isDomain| *5 (|Symbol|))
       (|ofCategory| *7
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|LiouvillianFunctionCategory|)
                             (|SpecialFunctionCategory|) (|FunctionSpace| *6)))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Record|
                    (|:| |answer|
                         (|Fraction| (|SparseUnivariatePolynomial| *7)))
                    (|:| |logpart|
                         (|Fraction| (|SparseUnivariatePolynomial| *7)))
                    (|:| |ir|
                         (|IntegrationResult|
                          (|Fraction| (|SparseUnivariatePolynomial| *7))))))
       (|isDomain| *1 (|DenominatorIntegration| *6 *7))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Fraction| (|SparseUnivariatePolynomial| *7)))
       (|isDomain| *4 (|Kernel| *7)) (|isDomain| *5 (|Symbol|))
       (|ofCategory| *7
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|LiouvillianFunctionCategory|)
                             (|SpecialFunctionCategory|) (|FunctionSpace| *6)))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Record|
                    (|:| |answer|
                         (|Fraction| (|SparseUnivariatePolynomial| *7)))
                    (|:| |logpart|
                         (|Fraction| (|SparseUnivariatePolynomial| *7)))
                    (|:| |ir|
                         (|IntegrationResult|
                          (|Fraction| (|SparseUnivariatePolynomial| *7))))))
       (|isDomain| *1 (|DenominatorIntegration| *6 *7))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|ofCategory| *1 (|IntervalCategory| *3))
       (|ofCategory| *3
                     (|Join| (|FloatingPointSystem|)
                             (|TranscendentalFunctionCategory|)))))
 ((*1 *1 *2)
  (AND (|ofCategory| *1 (|IntervalCategory| *2))
       (|ofCategory| *2
                     (|Join| (|FloatingPointSystem|)
                             (|TranscendentalFunctionCategory|)))))
 ((*1 *1 *2 *2)
  (AND (|ofCategory| *1 (|IntervalCategory| *2))
       (|ofCategory| *2
                     (|Join| (|FloatingPointSystem|)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *1 *2 *2)
  (AND (|ofCategory| *1 (|IntervalCategory| *2))
       (|ofCategory| *2
                     (|Join| (|FloatingPointSystem|)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|IntervalCategory| *2))
       (|ofCategory| *2
                     (|Join| (|FloatingPointSystem|)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|IntervalCategory| *2))
       (|ofCategory| *2
                     (|Join| (|FloatingPointSystem|)
                             (|TranscendentalFunctionCategory|)))))) 
(((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|IntervalCategory| *3))
       (|ofCategory| *3
                     (|Join| (|FloatingPointSystem|)
                             (|TranscendentalFunctionCategory|)))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|IntegerBits|))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|IntegerBits|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|IntegerBits|))))) 
(((*1 *2 *3 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|Kernel| *8))
       (|isDomain| *4
                   (|Mapping| (|SparseUnivariatePolynomial| *8)
                              (|SparseUnivariatePolynomial| *8)))
       (|isDomain| *5 (|Mapping| (|List| (|Vector| *8)) (|Matrix| *8)))
       (|isDomain| *6 (|List| *8))
       (|ofCategory| *8
                     (|Join| (|AlgebraicallyClosedField|)
                             (|FunctionSpace| *7)))
       (|ofCategory| *7 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |ratpart| *8)
                              (|:| |coeffs| (|Vector| *8)))))
       (|isDomain| *1 (|AlgebraicIntegration| *7 *8))))
 ((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|Mapping| (|SparseUnivariatePolynomial| *7)
                          (|SparseUnivariatePolynomial| *7)))
   (|isDomain| *4 (|Mapping| (|List| (|Vector| *7)) (|Matrix| *7)))
   (|isDomain| *5 (|List| *8))
   (|ofCategory| *7 (|Join| (|AlgebraicallyClosedField|) (|FunctionSpace| *6)))
   (|ofCategory| *8
                 (|FunctionFieldCategory| *7 (|SparseUnivariatePolynomial| *7)
                                          (|SparseUnivariatePolynomial|
                                           (|Fraction|
                                            (|SparseUnivariatePolynomial|
                                             *7)))))
   (|ofCategory| *6
                 (|Join| (|Comparable|) (|IntegralDomain|)
                         (|RetractableTo| (|Integer|))))
   (|isDomain| *2
               (|List|
                (|Record| (|:| |ratpart| *8) (|:| |coeffs| (|Vector| *7)))))
   (|isDomain| *1 (|AlgebraicIntegrate2| *6 *7 *8))))) 
(((*1 *2 *3 *3 *4 *5 *6 *7 *8)
  (AND (|isDomain| *3 (|Kernel| *10))
       (|isDomain| *4
                   (|Mapping| (|SparseUnivariatePolynomial| *10)
                              (|SparseUnivariatePolynomial| *10)))
       (|isDomain| *5
                   (|Mapping|
                    (|List|
                     (|Record|
                      (|:| |ratpart|
                           (|Fraction| (|SparseUnivariatePolynomial| *10)))
                      (|:| |coeffs| (|Vector| *10))))
                    (|List| (|Fraction| (|SparseUnivariatePolynomial| *10)))))
       (|isDomain| *6
                   (|Mapping|
                    (|List|
                     (|Record|
                      (|:| |ratpart|
                           (|Fraction| (|SparseUnivariatePolynomial| *10)))
                      (|:| |coeffs| (|Vector| *10))))
                    (|Fraction| (|SparseUnivariatePolynomial| *10))
                    (|List| (|Fraction| (|SparseUnivariatePolynomial| *10)))))
       (|isDomain| *7 (|Mapping| (|List| (|Vector| *10)) (|Matrix| *10)))
       (|isDomain| *8 (|List| *10))
       (|ofCategory| *10
                     (|Join| (|AlgebraicallyClosedField|)
                             (|FunctionSpace| *9)))
       (|ofCategory| *9 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |ratpart| *10)
                              (|:| |coeffs| (|Vector| *10)))))
       (|isDomain| *1 (|AlgebraicIntegration| *9 *10))))
 ((*1 *2 *3 *4 *5 *6 *7)
  (AND
   (|isDomain| *3
               (|Mapping| (|SparseUnivariatePolynomial| *9)
                          (|SparseUnivariatePolynomial| *9)))
   (|isDomain| *4
               (|Mapping|
                (|List|
                 (|Record|
                  (|:| |ratpart|
                       (|Fraction| (|SparseUnivariatePolynomial| *9)))
                  (|:| |coeffs| (|Vector| *9))))
                (|List| (|Fraction| (|SparseUnivariatePolynomial| *9)))))
   (|isDomain| *5
               (|Mapping|
                (|List|
                 (|Record|
                  (|:| |ratpart|
                       (|Fraction| (|SparseUnivariatePolynomial| *9)))
                  (|:| |coeffs| (|Vector| *9))))
                (|Fraction| (|SparseUnivariatePolynomial| *9))
                (|List| (|Fraction| (|SparseUnivariatePolynomial| *9)))))
   (|isDomain| *6 (|Mapping| (|List| (|Vector| *9)) (|Matrix| *9)))
   (|isDomain| *7 (|List| *10))
   (|ofCategory| *9 (|Join| (|AlgebraicallyClosedField|) (|FunctionSpace| *8)))
   (|ofCategory| *10
                 (|FunctionFieldCategory| *9 (|SparseUnivariatePolynomial| *9)
                                          (|SparseUnivariatePolynomial|
                                           (|Fraction|
                                            (|SparseUnivariatePolynomial|
                                             *9)))))
   (|ofCategory| *8
                 (|Join| (|Comparable|) (|IntegralDomain|)
                         (|RetractableTo| (|Integer|))))
   (|isDomain| *2
               (|List|
                (|Record| (|:| |ratpart| *10) (|:| |coeffs| (|Vector| *9)))))
   (|isDomain| *1 (|AlgebraicIntegrate2| *8 *9 *10))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Mapping| *7 *7))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| *6))
       (|ofCategory| *6
                     (|Join| (|AlgebraicallyClosedField|)
                             (|FunctionSpace| *5)))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))))
       (|ofCategory| *8 (|UnivariatePolynomialCategory| (|Fraction| *7)))
       (|isDomain| *2 (|IntegrationResult| *3))
       (|isDomain| *1 (|AlgebraicIntegrate| *5 *6 *7 *8 *3))
       (|ofCategory| *3 (|FunctionFieldCategory| *6 *7 *8))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Mapping| *7 *7))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| *6))
       (|ofCategory| *6
                     (|Join| (|AlgebraicallyClosedField|)
                             (|FunctionSpace| *5)))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))))
       (|ofCategory| *8 (|UnivariatePolynomialCategory| (|Fraction| *7)))
       (|isDomain| *2 (|IntegrationResult| *3))
       (|isDomain| *1 (|AlgebraicIntegrate| *5 *6 *7 *8 *3))
       (|ofCategory| *3 (|FunctionFieldCategory| *6 *7 *8))))) 
(((*1 *2 *3 *4 *4 *5)
  (AND (|isDomain| *4 (|Kernel| *3))
       (|isDomain| *5
                   (|Mapping| (|SparseUnivariatePolynomial| *3)
                              (|SparseUnivariatePolynomial| *3)))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|FunctionSpace| *6)))
       (|ofCategory| *6 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *2 (|IntegrationResult| *3))
       (|isDomain| *1 (|AlgebraicIntegration| *6 *3))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|IntegerNumberSystem|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *1 *1) (|ofCategory| *1 (|IntegerNumberSystem|)))) 
(((*1 *1 *1 *1) (|ofCategory| *1 (|IntegerNumberSystem|)))) 
(((*1 *1 *1) (|ofCategory| *1 (|IntegerNumberSystem|)))) 
(((*1 *1 *1) (|ofCategory| *1 (|IntegerNumberSystem|)))) 
(((*1 *1 *1) (|ofCategory| *1 (|IntegerNumberSystem|)))) 
(((*1 *1 *1 *1 *1) (|ofCategory| *1 (|IntegerNumberSystem|)))) 
(((*1 *1 *1 *1 *1) (|ofCategory| *1 (|IntegerNumberSystem|)))) 
(((*1 *1 *1 *1 *1) (|ofCategory| *1 (|IntegerNumberSystem|)))) 
(((*1 *1 *1 *1 *1) (|ofCategory| *1 (|IntegerNumberSystem|)))) 
(((*1 *1 *1 *1) (|ofCategory| *1 (|IntegerNumberSystem|)))) 
(((*1 *2 *3 *2 *4)
  (|partial| AND
   (|isDomain| *4 (|Mapping| (|Union| (|Integer|) #1="failed") *5))
   (|ofCategory| *5 (|Ring|)) (|isDomain| *2 (|Integer|))
   (|isDomain| *1 (|InnerPolySign| *5 *3))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))))
 ((*1 *2 *3 *4 *2 *5)
  (|partial| AND (|isDomain| *5 (|Mapping| (|Union| (|Integer|) #1#) *4))
   (|ofCategory| *4 (|Ring|)) (|isDomain| *2 (|Integer|))
   (|isDomain| *1 (|InnerPolySign| *4 *3))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))
 ((*1 *2 *3 *4 *5)
  (|partial| AND (|isDomain| *5 (|Mapping| (|Union| (|Integer|) #1#) *4))
   (|ofCategory| *4 (|Ring|)) (|isDomain| *2 (|Integer|))
   (|isDomain| *1 (|InnerPolySign| *4 *3))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *2 *3)
  (AND (|ofCategory| *3 (|EuclideanDomain|))
       (|isDomain| *1 (|GenExEuclid| *3 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))
 ((*1 *2 *2 *3)
  (AND (|ofCategory| *3 (|EuclideanDomain|))
       (|isDomain| *1 (|GeneralHenselPackage| *3 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))
 ((*1 *2 *2 *3)
  (AND (|ofCategory| *3 (|EuclideanDomain|)) (|ofType| *4 *3)
       (|ofType| *5 (|Mapping| *3 *3 (|NonNegativeInteger|)))
       (|isDomain| *1 (|InnerModularGcd| *3 *2 *4 *5))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *1 (|InnerModularGcd| *4 *2 *5 *6))
       (|ofCategory| *4 (|EuclideanDomain|)) (|ofType| *5 *4)
       (|ofType| *6 (|Mapping| *4 *4 (|NonNegativeInteger|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *1 (|InnerModularGcd| *4 *2 *5 *6))
       (|ofCategory| *4 (|EuclideanDomain|)) (|ofType| *5 *4)
       (|ofType| *6 (|Mapping| *4 *4 (|NonNegativeInteger|)))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *6)) (|isDomain| *4 (|List| (|Symbol|)))
       (|ofCategory| *6 (|Field|))
       (|isDomain| *2 (|List| (|Equation| (|Polynomial| *6))))
       (|isDomain| *1 (|InnerNumericFloatSolvePackage| *5 *6 *7))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *7 (|Join| (|Field|) (|OrderedRing|)))))) 
(((*1 *2 *3 *3 *4 *5)
  (AND (|isDomain| *3 (|List| (|Polynomial| *6)))
       (|isDomain| *4 (|List| (|Symbol|))) (|ofCategory| *6 (|GcdDomain|))
       (|isDomain| *2 (|List| (|List| *7)))
       (|isDomain| *1 (|InnerNumericFloatSolvePackage| *6 *7 *5))
       (|ofCategory| *7 (|Field|))
       (|ofCategory| *5 (|Join| (|Field|) (|OrderedRing|)))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *5))
       (|ofCategory| *5 (|GcdDomain|)) (|isDomain| *2 (|List| *6))
       (|isDomain| *1 (|InnerNumericFloatSolvePackage| *5 *6 *4))
       (|ofCategory| *6 (|Field|))
       (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Polynomial| *5)) (|ofCategory| *5 (|GcdDomain|))
       (|isDomain| *2 (|List| *6))
       (|isDomain| *1 (|InnerNumericFloatSolvePackage| *5 *6 *4))
       (|ofCategory| *6 (|Field|))
       (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))))) 
(((*1 *2 *2 *3 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *1 (|InfiniteLambertProduct| *4 *2))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *4))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|InfiniteLambertProduct| *3 *2))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|InfiniteLambertProduct| *3 *2))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|InfiniteLambertProduct| *3 *2))
       (|ofCategory| *2 (|UnivariateTaylorSeriesCategory| *3))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Any|)) (|isDomain| *1 (|InputForm|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|InputForm|)) (|isDomain| *1 (|InputFormFunctions1| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|InputForm|)) (|isDomain| *1 (|InputFormFunctions1| *3))
       (|ofCategory| *3 (|Type|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|InputForm|)) (|isDomain| *1 (|InputFormFunctions1| *3))
       (|ofCategory| *3 (|Type|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|InputForm|)) (|isDomain| *1 (|InputFormFunctions1| *3))
       (|ofCategory| *3 (|Type|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|InputForm|))
       (|isDomain| *1 (|InputFormFunctions1| *4)) (|ofCategory| *4 (|Type|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *4 (|List| (|InputForm|)))
       (|isDomain| *2 (|InputForm|)) (|isDomain| *1 (|InputFormFunctions1| *5))
       (|ofCategory| *5 (|Type|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|BinaryExpansion|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|InputForm|))) (|isDomain| *1 (|InputForm|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|DirectedGraph| *1))
       (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *1 *1) (|isDomain| *1 (|InputForm|)))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|InputForm|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|InputForm|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|InputForm|))) (|isDomain| *2 (|Symbol|))
       (|isDomain| *1 (|InputForm|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|List| (|InputForm|)))
       (|isDomain| *1 (|InputForm|))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Matrix| *6))
       (|isDomain| *5
                   (|Mapping| (|Factored| (|SparseUnivariatePolynomial| *6))
                              (|SparseUnivariatePolynomial| *6)))
       (|ofCategory| *6 (|Field|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |outval| *7) (|:| |outmult| (|Integer|))
                              (|:| |outvect| (|List| (|Matrix| *7))))))
       (|isDomain| *1 (|InnerNumericEigenPackage| *6 *7 *4))
       (|ofCategory| *7 (|Field|))
       (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *5))
       (|ofCategory| *5 (|Field|)) (|isDomain| *2 (|List| *6))
       (|isDomain| *1 (|InnerNumericEigenPackage| *5 *6 *4))
       (|ofCategory| *6 (|Field|))
       (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| *4)) (|ofCategory| *4 (|Field|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *4))
       (|isDomain| *1 (|InnerNumericEigenPackage| *4 *5 *6))
       (|ofCategory| *5 (|Field|))
       (|ofCategory| *6 (|Join| (|Field|) (|OrderedRing|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| *3 *3))
       (|isDomain| *1 (|IncrementingMaps| *3))
       (|ofCategory| *3 (|Join| (|Monoid|) (|AbelianSemiGroup|)))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Mapping| *3 *3))
       (|isDomain| *1 (|IncrementingMaps| *3))
       (|ofCategory| *3 (|Join| (|Monoid|) (|AbelianSemiGroup|)))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Matrix| *4)) (|isDomain| *3 (|OneDimensionalArray| *5))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|SetCategory|))
       (|isDomain| *1 (|IncidenceAlgebra| *4 *5))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Matrix| *4)) (|isDomain| *3 (|List| *5))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *5 (|SetCategory|))
       (|isDomain| *1 (|IncidenceAlgebra| *4 *5))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Finite|))
       (|ofCategory| *4 (|Field|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *1))
       (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *4))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *3))
       (|ofCategory| *3 (|Field|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteRankAlgebra| *3 *2))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofCategory| *3 (|Field|))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| *4)) (|ofCategory| *4 (|FiniteFieldCategory|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *4))
       (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *4))))) 
(((*1 *1)
  (AND (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *2))
       (|ofCategory| *2 (|Finite|)) (|ofCategory| *2 (|Field|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|Vector| *4))
       (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *3))
       (|ofCategory| *3 (|Field|)) (|ofCategory| *3 (|Finite|))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FiniteFieldPolynomialPackage| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| *4)) (|ofCategory| *4 (|FiniteFieldCategory|))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *4))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|Finite|)) (|isDomain| *2 (|PositiveInteger|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| *4)) (|ofCategory| *4 (|FiniteFieldCategory|))
       (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *4))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Vector| *4)) (|isDomain| *3 (|Integer|))
       (|ofCategory| *4 (|FiniteFieldCategory|))
       (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *4))))) 
(((*1 *2 *2 *3 *3)
  (AND (|isDomain| *2 (|Vector| *4)) (|isDomain| *3 (|SingleInteger|))
       (|ofCategory| *4 (|FiniteFieldCategory|))
       (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *4))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Vector| *4)) (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|FiniteFieldCategory|))
       (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *4))))) 
(((*1 *2 *2 *3 *4)
  (AND (|isDomain| *2 (|Vector| *5)) (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *4 (|SingleInteger|))
       (|ofCategory| *5 (|FiniteFieldCategory|))
       (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *4))
       (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| *4)) (|ofCategory| *4 (|FiniteFieldCategory|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *4))
       (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *4))))) 
(((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|Vector|
                (|List|
                 (|Record| (|:| |value| *4) (|:| |index| (|SingleInteger|))))))
   (|ofCategory| *4 (|FiniteFieldCategory|)) (|isDomain| *2 (|Void|))
   (|isDomain| *1 (|InnerNormalBasisFieldFunctions| *4))))) 
(((*1 *2 *3 *4 *4 *5 *6 *5 *6)
  (AND (|isDomain| *4 (|List| (|Integer|)))
       (|isDomain| *5 (|Vector| (|Integer|)))
       (|isDomain| *6 (|SortedExponentVector|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *2
                   (|Record| (|:| |offsetdata| (|Vector| (|Integer|)))
                             (|:| |expdata| (|SortedExponentVector|))))
       (|isDomain| *1 (|InnerModularHermitePade|))))) 
(((*1 *2 *3 *4 *5 *4 *5)
  (AND (|isDomain| *4 (|Vector| (|Integer|)))
       (|isDomain| *5 (|SortedExponentVector|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|List| (|List| (|Integer|))))
       (|isDomain| *1 (|InnerModularHermitePade|))))) 
(((*1 *2 *3 *4 *5 *6 *7 *8 *8 *9)
  (AND (|isDomain| *3 (|List| (|Symbol|)))
       (|isDomain| *4
                   (|List|
                    (|PrimitiveArray|
                     (|Fraction| (|Polynomial| (|Integer|))))))
       (|isDomain| *5 (|Vector| (|Integer|)))
       (|isDomain| *6 (|NonNegativeInteger|)) (|isDomain| *8 (|Symbol|))
       (|isDomain| *9
                   (|Mapping| (|Vector| (|U32Vector|)) (|List| (|U32Vector|))
                              (|Integer|) (|Integer|)))
       (|isDomain| *7 (|U32Vector|))
       (|isDomain| *2
                   (|Union|
                    (|Record| (|:| |defects| (|Vector| (|Integer|)))
                              (|:| |cinds| (|Vector| (|Integer|)))
                              (|:| |rowlen| (|Integer|))
                              (|:| |offsetdata| (|Vector| (|Integer|)))
                              (|:| |expdata| (|SortedExponentVector|))
                              (|:| |coeffdata| (|PrimitiveArray| (|Integer|))))
                    "no_solution"))
       (|isDomain| *1 (|InnerModularHermitePade|))))) 
(((*1 *2 *3 *4 *5 *6 *7 *8)
  (AND (|isDomain| *3 (|Vector| (|U32Vector|)))
       (|isDomain| *4 (|Vector| (|Integer|)))
       (|isDomain| *5 (|NonNegativeInteger|)) (|isDomain| *6 (|U32Vector|))
       (|isDomain| *7 (|Integer|)) (|isDomain| *8 (|Symbol|))
       (|isDomain| *2
                   (|Union|
                    (|Record|
                     (|:| |basis| (|TwoDimensionalArray| (|U32Vector|)))
                     (|:| |defects| (|Vector| (|Integer|)))
                     (|:| |cinds| (|Vector| (|Integer|))))
                    "no_solution"))
       (|isDomain| *1 (|InnerModularHermitePade|))))) 
(((*1 *2 *3 *4 *4 *4 *4 *5 *4)
  (AND (|isDomain| *4 (|Integer|)) (|ofCategory| *5 (|Field|))
       (|ofCategory| *6 (|FiniteLinearAggregate| *5))
       (|ofCategory| *7 (|FiniteLinearAggregate| *5)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|InnerMatrixLinearAlgebraFunctions| *5 *6 *7 *3))
       (|ofCategory| *3 (|MatrixCategory| *5 *6 *7))))) 
(((*1 *2 *3 *4 *4 *4 *4 *5)
  (AND (|isDomain| *4 (|Integer|)) (|ofCategory| *5 (|Field|))
       (|ofCategory| *6 (|FiniteLinearAggregate| *5))
       (|ofCategory| *7 (|FiniteLinearAggregate| *5)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|InnerMatrixLinearAlgebraFunctions| *5 *6 *7 *3))
       (|ofCategory| *3 (|MatrixCategory| *5 *6 *7))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|FiniteLinearAggregate| *3))
       (|ofCategory| *5 (|FiniteLinearAggregate| *3))
       (|isDomain| *1 (|InnerMatrixLinearAlgebraFunctions| *3 *4 *5 *2))
       (|ofCategory| *2 (|MatrixCategory| *3 *4 *5))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|ILogic|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|ILogic|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|NonNegativeInteger|))
       (|isDomain| *2
                   (|Record| (|:| |rft| (|ILogic|))
                             (|:| |pout| (|NonNegativeInteger|))))
       (|isDomain| *1 (|ILogic|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|NonNegativeInteger|))
       (|isDomain| *2
                   (|Record| (|:| |rft| (|ILogic|))
                             (|:| |pout| (|NonNegativeInteger|))))
       (|isDomain| *1 (|ILogic|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|FlexibleArray| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|IndexedFlexibleArray| *3 *4))
       (|ofType| *4 (|Integer|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FlexibleArray| *3)) (|ofCategory| *3 (|Type|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|IndexedFlexibleArray| *3 *4))
       (|ofCategory| *3 (|Type|)) (|ofType| *4 (|Integer|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|FlexibleArray| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|IndexedFlexibleArray| *3 *4))
       (|ofCategory| *3 (|Type|)) (|ofType| *4 *2)))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FlexibleArray| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|IndexedFlexibleArray| *3 *4))
       (|ofCategory| *3 (|Type|)) (|ofType| *4 (|Integer|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|FlexibleArray| *2)) (|ofCategory| *2 (|Type|))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|IndexedFlexibleArray| *2 *3))
       (|ofCategory| *2 (|Type|)) (|ofType| *3 (|Integer|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| (|Fraction| (|Polynomial| *4))))
       (|ofCategory| *4 (|GcdDomain|))
       (|isDomain| *2
                   (|List|
                    (|Record|
                     (|:| |eigval|
                          (|Union| (|Fraction| (|Polynomial| *4))
                                   (|SuchThat| (|Symbol|) (|Polynomial| *4))))
                     (|:| |geneigvec|
                          (|List|
                           (|Matrix| (|Fraction| (|Polynomial| *4))))))))
       (|isDomain| *1 (|EigenPackage| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *5))
       (|isDomain| *4
                   (|Mapping| (|Factored| (|SparseUnivariatePolynomial| *5))
                              (|SparseUnivariatePolynomial| *5)))
       (|ofCategory| *5 (|Field|))
       (|isDomain| *2
                   (|List|
                    (|Record|
                     (|:| |eigval|
                          (|Union| *5 (|SparseUnivariatePolynomial| *5)))
                     (|:| |geneigvec|
                          (|List|
                           (|Vector| (|SparseUnivariatePolynomial| *5)))))))
       (|isDomain| *1 (|InnerEigenPackage| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| *4))
       (|ofCategory| *4 (|PolynomialFactorizationExplicit|))
       (|ofCategory| *4 (|Field|))
       (|isDomain| *2
                   (|List|
                    (|Record|
                     (|:| |eigval|
                          (|Union| *4 (|SparseUnivariatePolynomial| *4)))
                     (|:| |geneigvec|
                          (|List|
                           (|Vector| (|SparseUnivariatePolynomial| *4)))))))
       (|isDomain| *1 (|InnerEigenPackage| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| (|Fraction| (|Polynomial| *4))))
       (|ofCategory| *4 (|GcdDomain|))
       (|isDomain| *2
                   (|List|
                    (|Record|
                     (|:| |eigval|
                          (|Union| (|Fraction| (|Polynomial| *4))
                                   (|SuchThat| (|Symbol|) (|Polynomial| *4))))
                     (|:| |eigmult| (|NonNegativeInteger|))
                     (|:| |eigvec|
                          (|List|
                           (|Matrix| (|Fraction| (|Polynomial| *4))))))))
       (|isDomain| *1 (|EigenPackage| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *5))
       (|isDomain| *4
                   (|Mapping| (|Factored| (|SparseUnivariatePolynomial| *5))
                              (|SparseUnivariatePolynomial| *5)))
       (|ofCategory| *5 (|Field|))
       (|isDomain| *2
                   (|List|
                    (|Record|
                     (|:| |eigval|
                          (|Union| *5 (|SparseUnivariatePolynomial| *5)))
                     (|:| |eigmult| (|NonNegativeInteger|))
                     (|:| |eigvec|
                          (|List|
                           (|Vector| (|SparseUnivariatePolynomial| *5)))))))
       (|isDomain| *1 (|InnerEigenPackage| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| *4))
       (|ofCategory| *4 (|PolynomialFactorizationExplicit|))
       (|ofCategory| *4 (|Field|))
       (|isDomain| *2
                   (|List|
                    (|Record|
                     (|:| |eigval|
                          (|Union| *4 (|SparseUnivariatePolynomial| *4)))
                     (|:| |eigmult| (|NonNegativeInteger|))
                     (|:| |eigvec|
                          (|List|
                           (|Vector| (|SparseUnivariatePolynomial| *4)))))))
       (|isDomain| *1 (|InnerEigenPackage| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| (|Fraction| (|Polynomial| *4))))
       (|ofCategory| *4 (|GcdDomain|))
       (|isDomain| *2
                   (|List|
                    (|Union| (|Fraction| (|Polynomial| *4))
                             (|SuchThat| (|Symbol|) (|Polynomial| *4)))))
       (|isDomain| *1 (|EigenPackage| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *5))
       (|isDomain| *4
                   (|Mapping| (|Factored| (|SparseUnivariatePolynomial| *5))
                              (|SparseUnivariatePolynomial| *5)))
       (|ofCategory| *5 (|Field|))
       (|isDomain| *2 (|List| (|Union| *5 (|SparseUnivariatePolynomial| *5))))
       (|isDomain| *1 (|InnerEigenPackage| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| *4))
       (|ofCategory| *4 (|PolynomialFactorizationExplicit|))
       (|ofCategory| *4 (|Field|))
       (|isDomain| *2 (|List| (|Union| *4 (|SparseUnivariatePolynomial| *4))))
       (|isDomain| *1 (|InnerEigenPackage| *4))))) 
(((*1 *2 *3 *4 *5 *5)
  (AND
   (|isDomain| *3
               (|Union| (|Fraction| (|Polynomial| *6))
                        (|SuchThat| (|Symbol|) (|Polynomial| *6))))
   (|isDomain| *4 (|Matrix| (|Fraction| (|Polynomial| *6))))
   (|isDomain| *5 (|NonNegativeInteger|)) (|ofCategory| *6 (|GcdDomain|))
   (|isDomain| *2 (|List| (|Matrix| (|Fraction| (|Polynomial| *6)))))
   (|isDomain| *1 (|EigenPackage| *6))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|Record|
                (|:| |eigval|
                     (|Union| (|Fraction| (|Polynomial| *5))
                              (|SuchThat| (|Symbol|) (|Polynomial| *5))))
                (|:| |eigmult| (|NonNegativeInteger|))
                (|:| |eigvec|
                     (|List| (|Matrix| (|Fraction| (|Polynomial| *5)))))))
   (|isDomain| *4 (|Matrix| (|Fraction| (|Polynomial| *5))))
   (|ofCategory| *5 (|GcdDomain|))
   (|isDomain| *2 (|List| (|Matrix| (|Fraction| (|Polynomial| *5)))))
   (|isDomain| *1 (|EigenPackage| *5))))
 ((*1 *2 *3 *4 *5 *5)
  (AND (|isDomain| *3 (|Union| *6 (|SparseUnivariatePolynomial| *6)))
       (|isDomain| *4 (|Matrix| *6)) (|isDomain| *5 (|NonNegativeInteger|))
       (|ofCategory| *6 (|Field|))
       (|isDomain| *2 (|List| (|Vector| (|SparseUnivariatePolynomial| *6))))
       (|isDomain| *1 (|InnerEigenPackage| *6))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|Record|
                (|:| |eigval| (|Union| *5 (|SparseUnivariatePolynomial| *5)))
                (|:| |eigmult| (|NonNegativeInteger|))
                (|:| |eigvec|
                     (|List| (|Vector| (|SparseUnivariatePolynomial| *5))))))
   (|isDomain| *4 (|Matrix| *5)) (|ofCategory| *5 (|Field|))
   (|isDomain| *2 (|List| (|Vector| (|SparseUnivariatePolynomial| *5))))
   (|isDomain| *1 (|InnerEigenPackage| *5))))) 
(((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|Union| (|Fraction| (|Polynomial| *5))
                        (|SuchThat| (|Symbol|) (|Polynomial| *5))))
   (|isDomain| *4 (|Matrix| (|Fraction| (|Polynomial| *5))))
   (|ofCategory| *5 (|GcdDomain|))
   (|isDomain| *2 (|List| (|Matrix| (|Fraction| (|Polynomial| *5)))))
   (|isDomain| *1 (|EigenPackage| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Union| *5 (|SparseUnivariatePolynomial| *5)))
       (|isDomain| *4 (|Matrix| *5)) (|ofCategory| *5 (|Field|))
       (|isDomain| *2 (|List| (|Vector| (|SparseUnivariatePolynomial| *5))))
       (|isDomain| *1 (|InnerEigenPackage| *5))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|IndexedDirectProductCategory| *3 *2))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *2 (|Comparable|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Record| (|:| |k| *4) (|:| |c| *3))))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|Comparable|))
       (|ofCategory| *1 (|IndexedDirectProductCategory| *3 *4))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|IndexedDirectProductCategory| *3 *4))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|Comparable|))
       (|isDomain| *2 (|Record| (|:| |k| *4) (|:| |c| *3)))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|PolynomialIdeal| (|Fraction| (|Integer|))
                                  (|DirectProduct| (|#| *4)
                                                   (|NonNegativeInteger|))
                                  (|OrderedVariableList| *4)
                                  (|DistributedMultivariatePolynomial| *4
                                                                       (|Fraction|
                                                                        (|Integer|)))))
   (|ofType| *4 (|List| (|Symbol|)))
   (|isDomain| *2
               (|List|
                (|PolynomialIdeal| (|Fraction| (|Integer|))
                                   (|DirectProduct| (|#| *4)
                                                    (|NonNegativeInteger|))
                                   (|OrderedVariableList| *4)
                                   (|DistributedMultivariatePolynomial| *4
                                                                        (|Fraction|
                                                                         (|Integer|))))))
   (|isDomain| *1 (|IdealDecompositionPackage| *4))))) 
(((*1 *2 *2)
  (AND
   (|isDomain| *2
               (|PolynomialIdeal| (|Fraction| (|Integer|))
                                  (|DirectProduct| (|#| *3)
                                                   (|NonNegativeInteger|))
                                  (|OrderedVariableList| *3)
                                  (|DistributedMultivariatePolynomial| *3
                                                                       (|Fraction|
                                                                        (|Integer|)))))
   (|ofType| *3 (|List| (|Symbol|)))
   (|isDomain| *1 (|IdealDecompositionPackage| *3))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|PolynomialIdeal| (|Fraction| (|Integer|))
                                  (|DirectProduct| (|#| *4)
                                                   (|NonNegativeInteger|))
                                  (|OrderedVariableList| *4)
                                  (|DistributedMultivariatePolynomial| *4
                                                                       (|Fraction|
                                                                        (|Integer|)))))
   (|ofType| *4 (|List| (|Symbol|))) (|isDomain| *2 (|Boolean|))
   (|isDomain| *1 (|IdealDecompositionPackage| *4))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|PolynomialIdeal| (|Fraction| (|Integer|))
                                  (|DirectProduct| (|#| *4)
                                                   (|NonNegativeInteger|))
                                  (|OrderedVariableList| *4)
                                  (|DistributedMultivariatePolynomial| *4
                                                                       (|Fraction|
                                                                        (|Integer|)))))
   (|ofType| *4 (|List| (|Symbol|))) (|isDomain| *2 (|Boolean|))
   (|isDomain| *1 (|IdealDecompositionPackage| *4))))) 
(((*1 *2 *3 *1)
  (AND (|ofCategory| *4 (|Field|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PolynomialIdeal| *4 *5 *6 *3))
       (|ofCategory| *3 (|PolynomialCategory| *4 *5 *6))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PolynomialIdeal| *3 *4 *5 *6))
       (|ofCategory| *6 (|PolynomialCategory| *3 *4 *5))))) 
(((*1 *2 *3 *1)
  (AND (|ofCategory| *4 (|Field|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PolynomialIdeal| *4 *5 *6 *3))
       (|ofCategory| *3 (|PolynomialCategory| *4 *5 *6))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PolynomialIdeal| *3 *4 *5 *6))
       (|ofCategory| *6 (|PolynomialCategory| *3 *4 *5))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| *6)) (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *4 (|Field|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PolynomialIdeal| *4 *5 *6 *7))
       (|ofCategory| *7 (|PolynomialCategory| *4 *5 *6))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| (|Integer|))))
       (|isDomain| *1 (|GroupPresentation|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|GroupPresentation|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialIdeal| *3 *4 *5 *2))
       (|ofCategory| *2 (|PolynomialCategory| *3 *4 *5))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *2 (|Field|))
       (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialIdeal| *2 *3 *4 *5))
       (|ofCategory| *5 (|PolynomialCategory| *2 *3 *4))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| *6)) (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *4 (|Field|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2
                   (|Record| (|:| |mval| (|Matrix| *4))
                             (|:| |invmval| (|Matrix| *4))
                             (|:| |genIdeal| (|PolynomialIdeal| *4 *5 *6 *7))))
       (|isDomain| *1 (|PolynomialIdeal| *4 *5 *6 *7))
       (|ofCategory| *7 (|PolynomialCategory| *4 *5 *6))))) 
(((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |mval| (|Matrix| *3))
                         (|:| |invmval| (|Matrix| *3))
                         (|:| |genIdeal| (|PolynomialIdeal| *3 *4 *5 *6))))
   (|ofCategory| *3 (|Field|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *5 (|OrderedSet|))
   (|isDomain| *1 (|PolynomialIdeal| *3 *4 *5 *6))
   (|ofCategory| *6 (|PolynomialCategory| *3 *4 *5))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *2 (|Field|))
       (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialIdeal| *2 *3 *4 *5))
       (|ofCategory| *5 (|PolynomialCategory| *2 *3 *4))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteDivisorCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|ofCategory| *6 (|FunctionFieldCategory| *3 *4 *5))
       (|isDomain| *2 (|FractionalIdeal| *4 (|Fraction| *4) *5 *6))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Vector| *6))
       (|ofCategory| *6 (|Join| (|FramedAlgebra| *4 *5) (|RetractableTo| *4)))
       (|ofCategory| *4 (|QuotientFieldCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *3 (|EuclideanDomain|))
       (|isDomain| *1 (|FractionalIdeal| *3 *4 *5 *6))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|PolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialIdeal| *3 *4 *5 *6))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|PolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialIdeal| *3 *4 *5 *6))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|PolynomialIdeal| *3 *4 *5 *6))
       (|ofCategory| *6 (|PolynomialCategory| *3 *4 *5))))) 
(((*1 *1 *1 *2 *3)
  (AND (|isDomain| *3 (|List| *6)) (|ofCategory| *6 (|OrderedSet|))
       (|ofCategory| *4 (|Field|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|isDomain| *1 (|PolynomialIdeal| *4 *5 *6 *2))
       (|ofCategory| *2 (|PolynomialCategory| *4 *5 *6))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|PolynomialIdeal| *3 *4 *5 *2))
       (|ofCategory| *2 (|PolynomialCategory| *3 *4 *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|PolynomialCategory| *4 *5 *6))
       (|ofCategory| *6 (|ConvertibleTo| (|Symbol|)))
       (|ofCategory| *4 (|Field|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *2
                   (|SuchThat| (|List| (|Polynomial| *4))
                               (|List| (|Equation| (|Polynomial| *4)))))
       (|isDomain| *1 (|PolynomialIdeal| *4 *5 *6 *7))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Database| *4))
       (|ofCategory| *4
                     (|Join| (|OrderedSet|)
                             (CATEGORY |domain|
                              (SIGNATURE |elt| ((|String|) $ (|Symbol|)))
                              (SIGNATURE |display| (*2 $))
                              (SIGNATURE |fullDisplay| (*2 $)))))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|Database| *3))
       (|ofCategory| *3
                     (|Join| (|OrderedSet|)
                             (CATEGORY |domain|
                              (SIGNATURE |elt| ((|String|) $ (|Symbol|)))
                              (SIGNATURE |display| (*2 $))
                              (SIGNATURE |fullDisplay| (*2 $)))))))
 ((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|IndexCard|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *7 *5)) (|ofCategory| *5 (|Ring|))
       (|ofCategory| *7 (|Ring|))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|isDomain| *2
                   (|SparseUnivariatePolynomial|
                    (|SparseUnivariatePolynomial| *7)))
       (|isDomain| *1 (|IntegralBasisPolynomialTools| *5 *6 *4 *7))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *6))))) 
(((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Mapping| (|Union| *5 "failed") *8))
   (|isDomain| *4 (|Matrix| (|SparseUnivariatePolynomial| *8)))
   (|ofCategory| *5 (|Ring|)) (|ofCategory| *8 (|Ring|))
   (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
   (|isDomain| *2 (|Matrix| *6))
   (|isDomain| *1 (|IntegralBasisPolynomialTools| *5 *6 *7 *8))
   (|ofCategory| *7 (|UnivariatePolynomialCategory| *6))))) 
(((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|Mapping| (|Union| *5 "failed") *7))
   (|isDomain| *4 (|SparseUnivariatePolynomial| *7)) (|ofCategory| *5 (|Ring|))
   (|ofCategory| *7 (|Ring|))
   (|ofCategory| *2 (|UnivariatePolynomialCategory| *5))
   (|isDomain| *1 (|IntegralBasisPolynomialTools| *5 *2 *6 *7))
   (|ofCategory| *6 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *5 *7))
       (|isDomain| *4 (|SparseUnivariatePolynomial| *7))
       (|ofCategory| *5 (|Ring|)) (|ofCategory| *7 (|Ring|))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *5))
       (|isDomain| *1 (|IntegralBasisPolynomialTools| *5 *2 *6 *7))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *2))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *7 *5)) (|ofCategory| *5 (|Ring|))
       (|ofCategory| *7 (|Ring|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *5))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *7))
       (|isDomain| *1 (|IntegralBasisPolynomialTools| *5 *4 *6 *7))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *2 *2)
  (AND
   (|isDomain| *2
               (|Record| (|:| |basis| (|Matrix| *3)) (|:| |basisDen| *3)
                         (|:| |basisInv| (|Matrix| *3))))
   (|ofCategory| *3
                 (|Join| (|EuclideanDomain|)
                         (CATEGORY |domain|
                          (SIGNATURE |squareFree| ((|Factored| $) $)))))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
   (|isDomain| *1 (|IntegralBasisTools| *3 *4 *5))
   (|ofCategory| *5 (|FramedAlgebra| *3 *4))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Matrix| *3))
       (|ofCategory| *3
                     (|Join| (|EuclideanDomain|)
                             (CATEGORY |domain|
                              (SIGNATURE |squareFree| ((|Factored| $) $)))))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|isDomain| *1 (|IntegralBasisTools| *3 *4 *5))
       (|ofCategory| *5 (|FramedAlgebra| *3 *4))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Matrix| *3))
       (|ofCategory| *3
                     (|Join| (|EuclideanDomain|)
                             (CATEGORY |domain|
                              (SIGNATURE |squareFree| ((|Factored| $) $)))))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|isDomain| *1 (|IntegralBasisTools| *3 *4 *5))
       (|ofCategory| *5 (|FramedAlgebra| *3 *4))))
 ((*1 *2 *2 *2 *3)
  (AND (|isDomain| *2 (|Matrix| *3))
       (|ofCategory| *3
                     (|Join| (|EuclideanDomain|)
                             (CATEGORY |domain|
                              (SIGNATURE |squareFree| ((|Factored| $) $)))))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|isDomain| *1 (|IntegralBasisTools| *3 *4 *5))
       (|ofCategory| *5 (|FramedAlgebra| *3 *4))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *3
                     (|Join| (|EuclideanDomain|)
                             (CATEGORY |domain|
                              (SIGNATURE |squareFree| ((|Factored| $) $)))))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|isDomain| *1 (|IntegralBasisTools| *3 *4 *5))
       (|ofCategory| *5 (|FramedAlgebra| *3 *4))))) 
(((*1 *2 *3 *3 *2 *4)
  (AND (|isDomain| *3 (|Matrix| *2)) (|isDomain| *4 (|Integer|))
       (|ofCategory| *2
                     (|Join| (|EuclideanDomain|)
                             (CATEGORY |domain|
                              (SIGNATURE |squareFree| ((|Factored| $) $)))))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *2))
       (|isDomain| *1 (|IntegralBasisTools| *2 *5 *6))
       (|ofCategory| *6 (|FramedAlgebra| *2 *5))))) 
(((*1 *2 *3 *2 *4)
  (AND (|isDomain| *3 (|Matrix| *2)) (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *2
                     (|Join| (|EuclideanDomain|)
                             (CATEGORY |domain|
                              (SIGNATURE |squareFree| ((|Factored| $) $)))))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *2))
       (|isDomain| *1 (|IntegralBasisTools| *2 *5 *6))
       (|ofCategory| *6 (|FramedAlgebra| *2 *5))))) 
(((*1 *2 *3 *4 *4)
  (AND
   (|isDomain| *3
               (|Record| (|:| |basis| (|Matrix| *6)) (|:| |basisDen| *6)
                         (|:| |basisInv| (|Matrix| *6))))
   (|isDomain| *4 (|NonNegativeInteger|))
   (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
   (|ofCategory| *5 (|FiniteFieldCategory|))
   (|isDomain| *2
               (|List|
                (|Record| (|:| |basis| (|Matrix| *6)) (|:| |basisDen| *6)
                          (|:| |basisInv| (|Matrix| *6)))))
   (|isDomain| *1 (|ChineseRemainderToolsForIntegralBases| *5 *6 *7))
   (|ofCategory| *7 (|UnivariatePolynomialCategory| *6))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |flg| (|Union| "nil" "sqfr" "irred" "prime"))
                          (|:| |fctr| *3) (|:| |xpnt| (|Integer|)))))
   (|isDomain| *1 (|Factored| *3)) (|ofCategory| *3 (|IntegralDomain|))))
 ((*1 *2 *3 *4 *4 *4)
  (AND (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *3 (|FiniteFieldCategory|))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *3))
       (|isDomain| *2 (|List| (|SparseUnivariatePolynomial| *3)))
       (|isDomain| *1 (|ChineseRemainderToolsForIntegralBases| *3 *5 *6))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))))) 
(((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|InnerAlgebraicNumber|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|HopfAlgebra| *2 *3))
       (|ofCategory| *2 (|CommutativeRing|)) (|ofCategory| *3 (|Module| *2))))) 
(((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|Matrix| (|Integer|))) (|isDomain| *1 (|Homology|))))) 
(((*1 *1) (|isDomain| *1 (|Homology|)))) 
(((*1 *1) (|isDomain| *1 (|Homology|)))) 
(((*1 *1) (|isDomain| *1 (|Homology|)))) 
(((*1 *1) (|isDomain| *1 (|Homology|)))) 
(((*1 *1) (|isDomain| *1 (|Homology|)))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|Homology|))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 *3))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|HomogeneousAggregate| *3))
       (|ofCategory| *3 (|Type|))))) 
(((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *4))
       (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|HomogeneousAggregate| *4)) (|ofCategory| *4 (|Type|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *4))
       (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|HomogeneousAggregate| *4)) (|ofCategory| *4 (|Type|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *1)
  (AND (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|HomogeneousAggregate| *3)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *3 (|BasicType|)) (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *3 *1)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *4))
       (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|HomogeneousAggregate| *4)) (|ofCategory| *4 (|Type|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))
       (|isDomain| *2 (|List| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|HomogeneousAggregate| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *2 (|List| *3))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| *3)) (|isDomain| *1 (|FiniteMoebiusFunction| *3))
       (|ofCategory| *3 (|Join| (|PartialOrder|) (|SetCategory|)))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|GeneralizedFiniteMoebiusFunction| *3 *4))
       (|ofCategory| *3 (|Join| (|PartialOrder|) (|SetCategory|)))
       (|ofCategory| *4 (|Field|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|HomogeneousAggregate| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *2 (|List| *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|HexadecimalExpansion|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|))) (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|HeuGcd| *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))
       (|isDomain| *1 (|HeuGcd| *3))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))
       (|isDomain| *1 (|HeuGcd| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *2)) (|isDomain| *1 (|HeuGcd| *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *1 (|Heap| *3))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Integer|)))
       (|isDomain| *1 (|DistributedMultivariatePolynomial| *3 *4))
       (|ofType| *3 (|List| (|Symbol|))) (|ofCategory| *4 (|Ring|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Integer|))) (|ofType| *3 (|List| (|Symbol|)))
       (|isDomain| *1 (|GeneralDistributedMultivariatePolynomial| *3 *4 *5))
       (|ofCategory| *4 (|Ring|))
       (|ofCategory| *5
                     (|DirectProductCategory| (|#| *3)
                                              (|NonNegativeInteger|)))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Integer|)))
       (|isDomain| *1 (|HomogeneousDistributedMultivariatePolynomial| *3 *4))
       (|ofType| *3 (|List| (|Symbol|))) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *3 *3 *3 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|HallBasis|))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|HallBasis|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|SingleInteger|)) (|isDomain| *1 (|HashState|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|Matrix| *4)) (|isDomain| *1 (|HankelPackage| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|Field|))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))
       (|isDomain| *2 (|List| *6)) (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5 (|Field|)) (|ofType| *8 (|Mapping| *5 *7))
       (|ofType| *9 (|Mapping| *7 *5)) (|isDomain| *2 (|List| *7))
       (|isDomain| *1 (|Guess| *5 *6 *7 *8 *9)) (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| *6) (|List| *4)
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *4 (|RetractableTo| *3))
       (|ofCategory| *5 (|RetractableTo| *3)) (|ofCategory| *4 (|Field|))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| *3) (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| *3)
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|ofCategory| (|AlgebraicNumber|) (|RetractableTo| *3))
       (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|AlgebraicNumber|))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|))) (|List| *4)
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessFinite| *4))
       (|ofCategory| *4 (|RetractableTo| *3))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|ofCategory| (|Fraction| (|Integer|)) (|RetractableTo| *3))
       (|ofCategory| (|Integer|) (|RetractableTo| *3))
       (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|Fraction| (|Integer|)))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *4))))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *4 (|List| (|GuessOption|))) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|Fraction| (|Polynomial| *4)))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessPolynomial| *4))
       (|ofCategory| (|Fraction| (|Polynomial| *4)) (|RetractableTo| *3))
       (|ofCategory| (|Polynomial| *4) (|RetractableTo| *3))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| (|Fraction| (|Polynomial| (|Integer|))) (|RetractableTo| *3))
   (|ofCategory| (|Polynomial| (|Integer|)) (|RetractableTo| *3))
   (|isDomain| *3 (|Symbol|))
   (|isDomain| *2
               (|Mapping| (|List| (|Expression| (|Integer|)))
                          (|List| (|Fraction| (|Polynomial| (|Integer|))))
                          (|List| (|GuessOption|))))
   (|isDomain| *1 (|GuessPolynomialInteger|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|Field|))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))
       (|isDomain| *2 (|List| *6)) (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5 (|Field|)) (|ofType| *8 (|Mapping| *5 *7))
       (|ofType| *9 (|Mapping| *7 *5)) (|isDomain| *2 (|List| *7))
       (|isDomain| *1 (|Guess| *5 *6 *7 *8 *9)) (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| *6) (|List| *4)
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *4 (|RetractableTo| *3))
       (|ofCategory| *5 (|RetractableTo| *3)) (|ofCategory| *4 (|Field|))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| *3) (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| *3)
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|ofCategory| (|AlgebraicNumber|) (|RetractableTo| *3))
       (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|AlgebraicNumber|))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|))) (|List| *4)
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessFinite| *4))
       (|ofCategory| *4 (|RetractableTo| *3))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|ofCategory| (|Fraction| (|Integer|)) (|RetractableTo| *3))
       (|ofCategory| (|Integer|) (|RetractableTo| *3))
       (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|Fraction| (|Integer|)))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *4))))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *4 (|List| (|GuessOption|))) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|Fraction| (|Polynomial| *4)))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessPolynomial| *4))
       (|ofCategory| (|Fraction| (|Polynomial| *4)) (|RetractableTo| *3))
       (|ofCategory| (|Polynomial| *4) (|RetractableTo| *3))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| (|Fraction| (|Polynomial| (|Integer|))) (|RetractableTo| *3))
   (|ofCategory| (|Polynomial| (|Integer|)) (|RetractableTo| *3))
   (|isDomain| *3 (|Symbol|))
   (|isDomain| *2
               (|Mapping| (|List| (|Expression| (|Integer|)))
                          (|List| (|Fraction| (|Polynomial| (|Integer|))))
                          (|List| (|GuessOption|))))
   (|isDomain| *1 (|GuessPolynomialInteger|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5 (|Field|)) (|ofType| *8 (|Mapping| *5 *7))
       (|ofType| *9 (|Mapping| *7 *5)) (|isDomain| *2 (|List| *7))
       (|isDomain| *1 (|Guess| *5 *6 *7 *8 *9)) (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|Field|))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))
       (|isDomain| *2 (|List| *6)) (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| *6) (|List| *4)
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *4 (|RetractableTo| *3))
       (|ofCategory| *5 (|RetractableTo| *3)) (|ofCategory| *4 (|Field|))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| *3) (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| *3)
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|ofCategory| (|AlgebraicNumber|) (|RetractableTo| *3))
       (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|AlgebraicNumber|))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|))) (|List| *4)
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessFinite| *4))
       (|ofCategory| *4 (|RetractableTo| *3))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|ofCategory| (|Fraction| (|Integer|)) (|RetractableTo| *3))
       (|ofCategory| (|Integer|) (|RetractableTo| *3))
       (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|Fraction| (|Integer|)))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *4 (|List| (|GuessOption|))) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *4))))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|Fraction| (|Polynomial| *4)))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessPolynomial| *4))
       (|ofCategory| (|Fraction| (|Polynomial| *4)) (|RetractableTo| *3))
       (|ofCategory| (|Polynomial| *4) (|RetractableTo| *3))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| (|Fraction| (|Polynomial| (|Integer|))) (|RetractableTo| *3))
   (|ofCategory| (|Polynomial| (|Integer|)) (|RetractableTo| *3))
   (|isDomain| *3 (|Symbol|))
   (|isDomain| *2
               (|Mapping| (|List| (|Expression| (|Integer|)))
                          (|List| (|Fraction| (|Polynomial| (|Integer|))))
                          (|List| (|GuessOption|))))
   (|isDomain| *1 (|GuessPolynomialInteger|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5 (|Field|)) (|ofType| *8 (|Mapping| *5 *7))
       (|ofType| *9 (|Mapping| *7 *5)) (|isDomain| *2 (|List| *7))
       (|isDomain| *1 (|Guess| *5 *6 *7 *8 *9)) (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|Field|))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))
       (|isDomain| *2 (|List| *6)) (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| *6) (|List| *4)
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *4 (|RetractableTo| *3))
       (|ofCategory| *5 (|RetractableTo| *3)) (|ofCategory| *4 (|Field|))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| *3) (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| *3)
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|ofCategory| (|AlgebraicNumber|) (|RetractableTo| *3))
       (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|AlgebraicNumber|))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|))) (|List| *4)
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessFinite| *4))
       (|ofCategory| *4 (|RetractableTo| *3))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|ofCategory| (|Fraction| (|Integer|)) (|RetractableTo| *3))
       (|ofCategory| (|Integer|) (|RetractableTo| *3))
       (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|Fraction| (|Integer|)))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *4 (|List| (|GuessOption|))) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *4))))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|Fraction| (|Polynomial| *4)))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessPolynomial| *4))
       (|ofCategory| (|Fraction| (|Polynomial| *4)) (|RetractableTo| *3))
       (|ofCategory| (|Polynomial| *4) (|RetractableTo| *3))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| (|Fraction| (|Polynomial| (|Integer|))) (|RetractableTo| *3))
   (|ofCategory| (|Polynomial| (|Integer|)) (|RetractableTo| *3))
   (|isDomain| *3 (|Symbol|))
   (|isDomain| *2
               (|Mapping| (|List| (|Expression| (|Integer|)))
                          (|List| (|Fraction| (|Polynomial| (|Integer|))))
                          (|List| (|GuessOption|))))
   (|isDomain| *1 (|GuessPolynomialInteger|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|Field|))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))
       (|isDomain| *2 (|List| *6)) (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5 (|Field|)) (|ofType| *8 (|Mapping| *5 *7))
       (|ofType| *9 (|Mapping| *7 *5)) (|isDomain| *2 (|List| *7))
       (|isDomain| *1 (|Guess| *5 *6 *7 *8 *9)) (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| *6) (|List| *4)
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *4 (|RetractableTo| *3))
       (|ofCategory| *5 (|RetractableTo| *3)) (|ofCategory| *4 (|Field|))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| *3) (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| *3)
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|ofCategory| (|AlgebraicNumber|) (|RetractableTo| *3))
       (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|AlgebraicNumber|))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|))) (|List| *4)
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessFinite| *4))
       (|ofCategory| *4 (|RetractableTo| *3))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|ofCategory| (|Fraction| (|Integer|)) (|RetractableTo| *3))
       (|ofCategory| (|Integer|) (|RetractableTo| *3))
       (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|Fraction| (|Integer|)))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *4))))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *4 (|List| (|GuessOption|))) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|Fraction| (|Polynomial| *4)))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessPolynomial| *4))
       (|ofCategory| (|Fraction| (|Polynomial| *4)) (|RetractableTo| *3))
       (|ofCategory| (|Polynomial| *4) (|RetractableTo| *3))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| (|Fraction| (|Polynomial| (|Integer|))) (|RetractableTo| *3))
   (|ofCategory| (|Polynomial| (|Integer|)) (|RetractableTo| *3))
   (|isDomain| *3 (|Symbol|))
   (|isDomain| *2
               (|Mapping| (|List| (|Expression| (|Integer|)))
                          (|List| (|Fraction| (|Polynomial| (|Integer|))))
                          (|List| (|GuessOption|))))
   (|isDomain| *1 (|GuessPolynomialInteger|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream| (|UnivariateFormalPowerSeries| *4))
                          (|UnivariateFormalPowerSeries| *4)))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial| *4
                                                             (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial| *4
                                                            (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream| (|Mapping| (|Stream| *6) *6 (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| *5 (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial| *5)))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial| *4
                                                          (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial| *4
                                                           (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| *6 (|NonNegativeInteger|) (|Symbol|) *6))
                    (|:| C (|Mapping| (|List| *5) (|NonNegativeInteger|)))))
       (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8)) (|ofCategory| *4 (|Field|))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping|
                    (|Record|
                     (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                     (|:| |guessStream|
                          (|Mapping|
                           (|Stream| (|UnivariateFormalPowerSeries| *4))
                           (|UnivariateFormalPowerSeries| *4)))
                     (|:| |guessModGen|
                          (|Mapping|
                           (|Mapping| (|Vector| (|U32Vector|))
                                      (|List| (|U32Vector|)) (|Integer|)
                                      (|Integer|))
                           (|NonNegativeInteger|)))
                     (|:| |testGen|
                          (|Mapping|
                           (|Mapping|
                            (|Vector|
                             (|UnivariateFormalPowerSeries|
                              (|SparseMultivariatePolynomial| *4
                                                              (|NonNegativeInteger|))))
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial| *4
                                                             (|NonNegativeInteger|))))
                           (|List| (|PositiveInteger|))))
                     (|:| |exprStream| (|Mapping| (|Stream| *6) *6 (|Symbol|)))
                     (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                     (|:| A
                          (|Mapping| *5 (|NonNegativeInteger|)
                                     (|NonNegativeInteger|)
                                     (|SparseUnivariatePolynomial| *5)))
                     (|:| AF
                          (|Mapping|
                           (|SparseMultivariatePolynomial| *4
                                                           (|NonNegativeInteger|))
                           (|NonNegativeInteger|) (|NonNegativeInteger|)
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial| *4
                                                            (|NonNegativeInteger|)))))
                     (|:| AX
                          (|Mapping| *6 (|NonNegativeInteger|) (|Symbol|) *6))
                     (|:| C (|Mapping| (|List| *5) (|NonNegativeInteger|))))
                    (|List| (|GuessOption|))))
       (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *4 (|RetractableTo| *3))
       (|ofCategory| *5 (|RetractableTo| *3)) (|ofCategory| *4 (|Field|))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| *3) (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| *3)
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream|
                           (|UnivariateFormalPowerSeries| (|AlgebraicNumber|)))
                          (|UnivariateFormalPowerSeries| (|AlgebraicNumber|))))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|AlgebraicNumber|) (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial| (|AlgebraicNumber|)
                                                            (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream|
                         (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                    (|Expression| (|Integer|)) (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| (|AlgebraicNumber|) (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial|
                                     (|AlgebraicNumber|))))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial| (|AlgebraicNumber|)
                                                          (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial| (|AlgebraicNumber|)
                                                           (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| (|Expression| (|Integer|))
                                    (|NonNegativeInteger|) (|Symbol|)
                                    (|Expression| (|Integer|))))
                    (|:| C
                         (|Mapping| (|List| (|AlgebraicNumber|))
                                    (|NonNegativeInteger|)))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|ofCategory| (|AlgebraicNumber|) (|RetractableTo| *3))
       (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping|
                    (|Record|
                     (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                     (|:| |guessStream|
                          (|Mapping|
                           (|Stream|
                            (|UnivariateFormalPowerSeries|
                             (|AlgebraicNumber|)))
                           (|UnivariateFormalPowerSeries|
                            (|AlgebraicNumber|))))
                     (|:| |guessModGen|
                          (|Mapping|
                           (|Mapping| (|Vector| (|U32Vector|))
                                      (|List| (|U32Vector|)) (|Integer|)
                                      (|Integer|))
                           (|NonNegativeInteger|)))
                     (|:| |testGen|
                          (|Mapping|
                           (|Mapping|
                            (|Vector|
                             (|UnivariateFormalPowerSeries|
                              (|SparseMultivariatePolynomial|
                               (|AlgebraicNumber|) (|NonNegativeInteger|))))
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|AlgebraicNumber|) (|NonNegativeInteger|))))
                           (|List| (|PositiveInteger|))))
                     (|:| |exprStream|
                          (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                     (|Expression| (|Integer|)) (|Symbol|)))
                     (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                     (|:| A
                          (|Mapping| (|AlgebraicNumber|) (|NonNegativeInteger|)
                                     (|NonNegativeInteger|)
                                     (|SparseUnivariatePolynomial|
                                      (|AlgebraicNumber|))))
                     (|:| AF
                          (|Mapping|
                           (|SparseMultivariatePolynomial| (|AlgebraicNumber|)
                                                           (|NonNegativeInteger|))
                           (|NonNegativeInteger|) (|NonNegativeInteger|)
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial| (|AlgebraicNumber|)
                                                            (|NonNegativeInteger|)))))
                     (|:| AX
                          (|Mapping| (|Expression| (|Integer|))
                                     (|NonNegativeInteger|) (|Symbol|)
                                     (|Expression| (|Integer|))))
                     (|:| C
                          (|Mapping| (|List| (|AlgebraicNumber|))
                                     (|NonNegativeInteger|))))
                    (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream| (|UnivariateFormalPowerSeries| *4))
                          (|UnivariateFormalPowerSeries| *4)))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial| *4
                                                             (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial| *4
                                                            (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream|
                         (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                    (|Expression| (|Integer|)) (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| *4 (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial| *4)))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial| *4
                                                          (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial| *4
                                                           (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| (|Expression| (|Integer|))
                                    (|NonNegativeInteger|) (|Symbol|)
                                    (|Expression| (|Integer|))))
                    (|:| C (|Mapping| (|List| *4) (|NonNegativeInteger|)))))
       (|isDomain| *1 (|GuessFinite| *4))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping|
                    (|Record|
                     (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                     (|:| |guessStream|
                          (|Mapping|
                           (|Stream| (|UnivariateFormalPowerSeries| *4))
                           (|UnivariateFormalPowerSeries| *4)))
                     (|:| |guessModGen|
                          (|Mapping|
                           (|Mapping| (|Vector| (|U32Vector|))
                                      (|List| (|U32Vector|)) (|Integer|)
                                      (|Integer|))
                           (|NonNegativeInteger|)))
                     (|:| |testGen|
                          (|Mapping|
                           (|Mapping|
                            (|Vector|
                             (|UnivariateFormalPowerSeries|
                              (|SparseMultivariatePolynomial| *4
                                                              (|NonNegativeInteger|))))
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial| *4
                                                             (|NonNegativeInteger|))))
                           (|List| (|PositiveInteger|))))
                     (|:| |exprStream|
                          (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                     (|Expression| (|Integer|)) (|Symbol|)))
                     (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                     (|:| A
                          (|Mapping| *4 (|NonNegativeInteger|)
                                     (|NonNegativeInteger|)
                                     (|SparseUnivariatePolynomial| *4)))
                     (|:| AF
                          (|Mapping|
                           (|SparseMultivariatePolynomial| *4
                                                           (|NonNegativeInteger|))
                           (|NonNegativeInteger|) (|NonNegativeInteger|)
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial| *4
                                                            (|NonNegativeInteger|)))))
                     (|:| AX
                          (|Mapping| (|Expression| (|Integer|))
                                     (|NonNegativeInteger|) (|Symbol|)
                                     (|Expression| (|Integer|))))
                     (|:| C (|Mapping| (|List| *4) (|NonNegativeInteger|))))
                    (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessFinite| *4))
       (|ofCategory| *4 (|RetractableTo| *3))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream|
                           (|UnivariateFormalPowerSeries|
                            (|Fraction| (|Integer|))))
                          (|UnivariateFormalPowerSeries|
                           (|Fraction| (|Integer|)))))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|Fraction| (|Integer|))
                              (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial|
                             (|Fraction| (|Integer|)) (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream|
                         (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                    (|Expression| (|Integer|)) (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| (|Integer|) (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial|
                                     (|Integer|))))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial|
                           (|Fraction| (|Integer|)) (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial|
                            (|Fraction| (|Integer|)) (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| (|Expression| (|Integer|))
                                    (|NonNegativeInteger|) (|Symbol|)
                                    (|Expression| (|Integer|))))
                    (|:| C
                         (|Mapping| (|List| (|Integer|))
                                    (|NonNegativeInteger|)))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|ofCategory| (|Fraction| (|Integer|)) (|RetractableTo| *3))
       (|ofCategory| (|Integer|) (|RetractableTo| *3))
       (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping|
                    (|Record|
                     (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                     (|:| |guessStream|
                          (|Mapping|
                           (|Stream|
                            (|UnivariateFormalPowerSeries|
                             (|Fraction| (|Integer|))))
                           (|UnivariateFormalPowerSeries|
                            (|Fraction| (|Integer|)))))
                     (|:| |guessModGen|
                          (|Mapping|
                           (|Mapping| (|Vector| (|U32Vector|))
                                      (|List| (|U32Vector|)) (|Integer|)
                                      (|Integer|))
                           (|NonNegativeInteger|)))
                     (|:| |testGen|
                          (|Mapping|
                           (|Mapping|
                            (|Vector|
                             (|UnivariateFormalPowerSeries|
                              (|SparseMultivariatePolynomial|
                               (|Fraction| (|Integer|))
                               (|NonNegativeInteger|))))
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|Fraction| (|Integer|))
                              (|NonNegativeInteger|))))
                           (|List| (|PositiveInteger|))))
                     (|:| |exprStream|
                          (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                     (|Expression| (|Integer|)) (|Symbol|)))
                     (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                     (|:| A
                          (|Mapping| (|Integer|) (|NonNegativeInteger|)
                                     (|NonNegativeInteger|)
                                     (|SparseUnivariatePolynomial|
                                      (|Integer|))))
                     (|:| AF
                          (|Mapping|
                           (|SparseMultivariatePolynomial|
                            (|Fraction| (|Integer|)) (|NonNegativeInteger|))
                           (|NonNegativeInteger|) (|NonNegativeInteger|)
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial|
                             (|Fraction| (|Integer|))
                             (|NonNegativeInteger|)))))
                     (|:| AX
                          (|Mapping| (|Expression| (|Integer|))
                                     (|NonNegativeInteger|) (|Symbol|)
                                     (|Expression| (|Integer|))))
                     (|:| C
                          (|Mapping| (|List| (|Integer|))
                                     (|NonNegativeInteger|))))
                    (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream|
                           (|UnivariateFormalPowerSeries|
                            (|Fraction| (|Polynomial| *4))))
                          (|UnivariateFormalPowerSeries|
                           (|Fraction| (|Polynomial| *4)))))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|Fraction| (|Polynomial| *4))
                              (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial|
                             (|Fraction| (|Polynomial| *4))
                             (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream|
                         (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                    (|Expression| (|Integer|)) (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| (|Polynomial| *4) (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial|
                                     (|Polynomial| *4))))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial|
                           (|Fraction| (|Polynomial| *4))
                           (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial|
                            (|Fraction| (|Polynomial| *4))
                            (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| (|Expression| (|Integer|))
                                    (|NonNegativeInteger|) (|Symbol|)
                                    (|Expression| (|Integer|))))
                    (|:| C
                         (|Mapping| (|List| (|Polynomial| *4))
                                    (|NonNegativeInteger|)))))
       (|isDomain| *1 (|GuessPolynomial| *4)) (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping|
                    (|Record|
                     (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                     (|:| |guessStream|
                          (|Mapping|
                           (|Stream|
                            (|UnivariateFormalPowerSeries|
                             (|Fraction| (|Polynomial| *4))))
                           (|UnivariateFormalPowerSeries|
                            (|Fraction| (|Polynomial| *4)))))
                     (|:| |guessModGen|
                          (|Mapping|
                           (|Mapping| (|Vector| (|U32Vector|))
                                      (|List| (|U32Vector|)) (|Integer|)
                                      (|Integer|))
                           (|NonNegativeInteger|)))
                     (|:| |testGen|
                          (|Mapping|
                           (|Mapping|
                            (|Vector|
                             (|UnivariateFormalPowerSeries|
                              (|SparseMultivariatePolynomial|
                               (|Fraction| (|Polynomial| *4))
                               (|NonNegativeInteger|))))
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|Fraction| (|Polynomial| *4))
                              (|NonNegativeInteger|))))
                           (|List| (|PositiveInteger|))))
                     (|:| |exprStream|
                          (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                     (|Expression| (|Integer|)) (|Symbol|)))
                     (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                     (|:| A
                          (|Mapping| (|Polynomial| *4) (|NonNegativeInteger|)
                                     (|NonNegativeInteger|)
                                     (|SparseUnivariatePolynomial|
                                      (|Polynomial| *4))))
                     (|:| AF
                          (|Mapping|
                           (|SparseMultivariatePolynomial|
                            (|Fraction| (|Polynomial| *4))
                            (|NonNegativeInteger|))
                           (|NonNegativeInteger|) (|NonNegativeInteger|)
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial|
                             (|Fraction| (|Polynomial| *4))
                             (|NonNegativeInteger|)))))
                     (|:| AX
                          (|Mapping| (|Expression| (|Integer|))
                                     (|NonNegativeInteger|) (|Symbol|)
                                     (|Expression| (|Integer|))))
                     (|:| C
                          (|Mapping| (|List| (|Polynomial| *4))
                                     (|NonNegativeInteger|))))
                    (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessPolynomial| *4))
       (|ofCategory| (|Fraction| (|Polynomial| *4)) (|RetractableTo| *3))
       (|ofCategory| (|Polynomial| *4) (|RetractableTo| *3))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream|
                           (|UnivariateFormalPowerSeries|
                            (|Fraction| (|Polynomial| (|Integer|)))))
                          (|UnivariateFormalPowerSeries|
                           (|Fraction| (|Polynomial| (|Integer|))))))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|Fraction| (|Polynomial| (|Integer|)))
                              (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial|
                             (|Fraction| (|Polynomial| (|Integer|)))
                             (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream|
                         (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                    (|Expression| (|Integer|)) (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| (|Polynomial| (|Integer|))
                                    (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial|
                                     (|Polynomial| (|Integer|)))))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial|
                           (|Fraction| (|Polynomial| (|Integer|)))
                           (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial|
                            (|Fraction| (|Polynomial| (|Integer|)))
                            (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| (|Expression| (|Integer|))
                                    (|NonNegativeInteger|) (|Symbol|)
                                    (|Expression| (|Integer|))))
                    (|:| C
                         (|Mapping| (|List| (|Polynomial| (|Integer|)))
                                    (|NonNegativeInteger|)))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| (|Fraction| (|Polynomial| (|Integer|))) (|RetractableTo| *3))
   (|ofCategory| (|Polynomial| (|Integer|)) (|RetractableTo| *3))
   (|isDomain| *3 (|Symbol|))
   (|isDomain| *2
               (|Mapping|
                (|Record|
                 (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                 (|:| |guessStream|
                      (|Mapping|
                       (|Stream|
                        (|UnivariateFormalPowerSeries|
                         (|Fraction| (|Polynomial| (|Integer|)))))
                       (|UnivariateFormalPowerSeries|
                        (|Fraction| (|Polynomial| (|Integer|))))))
                 (|:| |guessModGen|
                      (|Mapping|
                       (|Mapping| (|Vector| (|U32Vector|))
                                  (|List| (|U32Vector|)) (|Integer|)
                                  (|Integer|))
                       (|NonNegativeInteger|)))
                 (|:| |testGen|
                      (|Mapping|
                       (|Mapping|
                        (|Vector|
                         (|UnivariateFormalPowerSeries|
                          (|SparseMultivariatePolynomial|
                           (|Fraction| (|Polynomial| (|Integer|)))
                           (|NonNegativeInteger|))))
                        (|UnivariateFormalPowerSeries|
                         (|SparseMultivariatePolynomial|
                          (|Fraction| (|Polynomial| (|Integer|)))
                          (|NonNegativeInteger|))))
                       (|List| (|PositiveInteger|))))
                 (|:| |exprStream|
                      (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                 (|Expression| (|Integer|)) (|Symbol|)))
                 (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                 (|:| A
                      (|Mapping| (|Polynomial| (|Integer|))
                                 (|NonNegativeInteger|) (|NonNegativeInteger|)
                                 (|SparseUnivariatePolynomial|
                                  (|Polynomial| (|Integer|)))))
                 (|:| AF
                      (|Mapping|
                       (|SparseMultivariatePolynomial|
                        (|Fraction| (|Polynomial| (|Integer|)))
                        (|NonNegativeInteger|))
                       (|NonNegativeInteger|) (|NonNegativeInteger|)
                       (|UnivariateFormalPowerSeries|
                        (|SparseMultivariatePolynomial|
                         (|Fraction| (|Polynomial| (|Integer|)))
                         (|NonNegativeInteger|)))))
                 (|:| AX
                      (|Mapping| (|Expression| (|Integer|))
                                 (|NonNegativeInteger|) (|Symbol|)
                                 (|Expression| (|Integer|))))
                 (|:| C
                      (|Mapping| (|List| (|Polynomial| (|Integer|)))
                                 (|NonNegativeInteger|))))
                (|List| (|GuessOption|))))
   (|isDomain| *1 (|GuessPolynomialInteger|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream| (|UnivariateFormalPowerSeries| *4))
                          (|UnivariateFormalPowerSeries| *4)))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial| *4
                                                             (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial| *4
                                                            (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream| (|Mapping| (|Stream| *6) *6 (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| *5 (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial| *5)))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial| *4
                                                          (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial| *4
                                                           (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| *6 (|NonNegativeInteger|) (|Symbol|) *6))
                    (|:| C (|Mapping| (|List| *5) (|NonNegativeInteger|)))))
       (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8)) (|ofCategory| *4 (|Field|))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping|
                    (|Record|
                     (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                     (|:| |guessStream|
                          (|Mapping|
                           (|Stream| (|UnivariateFormalPowerSeries| *4))
                           (|UnivariateFormalPowerSeries| *4)))
                     (|:| |guessModGen|
                          (|Mapping|
                           (|Mapping| (|Vector| (|U32Vector|))
                                      (|List| (|U32Vector|)) (|Integer|)
                                      (|Integer|))
                           (|NonNegativeInteger|)))
                     (|:| |testGen|
                          (|Mapping|
                           (|Mapping|
                            (|Vector|
                             (|UnivariateFormalPowerSeries|
                              (|SparseMultivariatePolynomial| *4
                                                              (|NonNegativeInteger|))))
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial| *4
                                                             (|NonNegativeInteger|))))
                           (|List| (|PositiveInteger|))))
                     (|:| |exprStream| (|Mapping| (|Stream| *6) *6 (|Symbol|)))
                     (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                     (|:| A
                          (|Mapping| *5 (|NonNegativeInteger|)
                                     (|NonNegativeInteger|)
                                     (|SparseUnivariatePolynomial| *5)))
                     (|:| AF
                          (|Mapping|
                           (|SparseMultivariatePolynomial| *4
                                                           (|NonNegativeInteger|))
                           (|NonNegativeInteger|) (|NonNegativeInteger|)
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial| *4
                                                            (|NonNegativeInteger|)))))
                     (|:| AX
                          (|Mapping| *6 (|NonNegativeInteger|) (|Symbol|) *6))
                     (|:| C (|Mapping| (|List| *5) (|NonNegativeInteger|))))
                    (|List| (|GuessOption|))))
       (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *4 (|RetractableTo| *3))
       (|ofCategory| *5 (|RetractableTo| *3)) (|ofCategory| *4 (|Field|))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| *3) (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| *3)
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream|
                           (|UnivariateFormalPowerSeries| (|AlgebraicNumber|)))
                          (|UnivariateFormalPowerSeries| (|AlgebraicNumber|))))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|AlgebraicNumber|) (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial| (|AlgebraicNumber|)
                                                            (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream|
                         (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                    (|Expression| (|Integer|)) (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| (|AlgebraicNumber|) (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial|
                                     (|AlgebraicNumber|))))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial| (|AlgebraicNumber|)
                                                          (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial| (|AlgebraicNumber|)
                                                           (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| (|Expression| (|Integer|))
                                    (|NonNegativeInteger|) (|Symbol|)
                                    (|Expression| (|Integer|))))
                    (|:| C
                         (|Mapping| (|List| (|AlgebraicNumber|))
                                    (|NonNegativeInteger|)))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|ofCategory| (|AlgebraicNumber|) (|RetractableTo| *3))
       (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping|
                    (|Record|
                     (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                     (|:| |guessStream|
                          (|Mapping|
                           (|Stream|
                            (|UnivariateFormalPowerSeries|
                             (|AlgebraicNumber|)))
                           (|UnivariateFormalPowerSeries|
                            (|AlgebraicNumber|))))
                     (|:| |guessModGen|
                          (|Mapping|
                           (|Mapping| (|Vector| (|U32Vector|))
                                      (|List| (|U32Vector|)) (|Integer|)
                                      (|Integer|))
                           (|NonNegativeInteger|)))
                     (|:| |testGen|
                          (|Mapping|
                           (|Mapping|
                            (|Vector|
                             (|UnivariateFormalPowerSeries|
                              (|SparseMultivariatePolynomial|
                               (|AlgebraicNumber|) (|NonNegativeInteger|))))
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|AlgebraicNumber|) (|NonNegativeInteger|))))
                           (|List| (|PositiveInteger|))))
                     (|:| |exprStream|
                          (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                     (|Expression| (|Integer|)) (|Symbol|)))
                     (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                     (|:| A
                          (|Mapping| (|AlgebraicNumber|) (|NonNegativeInteger|)
                                     (|NonNegativeInteger|)
                                     (|SparseUnivariatePolynomial|
                                      (|AlgebraicNumber|))))
                     (|:| AF
                          (|Mapping|
                           (|SparseMultivariatePolynomial| (|AlgebraicNumber|)
                                                           (|NonNegativeInteger|))
                           (|NonNegativeInteger|) (|NonNegativeInteger|)
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial| (|AlgebraicNumber|)
                                                            (|NonNegativeInteger|)))))
                     (|:| AX
                          (|Mapping| (|Expression| (|Integer|))
                                     (|NonNegativeInteger|) (|Symbol|)
                                     (|Expression| (|Integer|))))
                     (|:| C
                          (|Mapping| (|List| (|AlgebraicNumber|))
                                     (|NonNegativeInteger|))))
                    (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream| (|UnivariateFormalPowerSeries| *4))
                          (|UnivariateFormalPowerSeries| *4)))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial| *4
                                                             (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial| *4
                                                            (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream|
                         (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                    (|Expression| (|Integer|)) (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| *4 (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial| *4)))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial| *4
                                                          (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial| *4
                                                           (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| (|Expression| (|Integer|))
                                    (|NonNegativeInteger|) (|Symbol|)
                                    (|Expression| (|Integer|))))
                    (|:| C (|Mapping| (|List| *4) (|NonNegativeInteger|)))))
       (|isDomain| *1 (|GuessFinite| *4))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping|
                    (|Record|
                     (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                     (|:| |guessStream|
                          (|Mapping|
                           (|Stream| (|UnivariateFormalPowerSeries| *4))
                           (|UnivariateFormalPowerSeries| *4)))
                     (|:| |guessModGen|
                          (|Mapping|
                           (|Mapping| (|Vector| (|U32Vector|))
                                      (|List| (|U32Vector|)) (|Integer|)
                                      (|Integer|))
                           (|NonNegativeInteger|)))
                     (|:| |testGen|
                          (|Mapping|
                           (|Mapping|
                            (|Vector|
                             (|UnivariateFormalPowerSeries|
                              (|SparseMultivariatePolynomial| *4
                                                              (|NonNegativeInteger|))))
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial| *4
                                                             (|NonNegativeInteger|))))
                           (|List| (|PositiveInteger|))))
                     (|:| |exprStream|
                          (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                     (|Expression| (|Integer|)) (|Symbol|)))
                     (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                     (|:| A
                          (|Mapping| *4 (|NonNegativeInteger|)
                                     (|NonNegativeInteger|)
                                     (|SparseUnivariatePolynomial| *4)))
                     (|:| AF
                          (|Mapping|
                           (|SparseMultivariatePolynomial| *4
                                                           (|NonNegativeInteger|))
                           (|NonNegativeInteger|) (|NonNegativeInteger|)
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial| *4
                                                            (|NonNegativeInteger|)))))
                     (|:| AX
                          (|Mapping| (|Expression| (|Integer|))
                                     (|NonNegativeInteger|) (|Symbol|)
                                     (|Expression| (|Integer|))))
                     (|:| C (|Mapping| (|List| *4) (|NonNegativeInteger|))))
                    (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessFinite| *4))
       (|ofCategory| *4 (|RetractableTo| *3))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream|
                           (|UnivariateFormalPowerSeries|
                            (|Fraction| (|Integer|))))
                          (|UnivariateFormalPowerSeries|
                           (|Fraction| (|Integer|)))))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|Fraction| (|Integer|))
                              (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial|
                             (|Fraction| (|Integer|)) (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream|
                         (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                    (|Expression| (|Integer|)) (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| (|Integer|) (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial|
                                     (|Integer|))))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial|
                           (|Fraction| (|Integer|)) (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial|
                            (|Fraction| (|Integer|)) (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| (|Expression| (|Integer|))
                                    (|NonNegativeInteger|) (|Symbol|)
                                    (|Expression| (|Integer|))))
                    (|:| C
                         (|Mapping| (|List| (|Integer|))
                                    (|NonNegativeInteger|)))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|ofCategory| (|Fraction| (|Integer|)) (|RetractableTo| *3))
       (|ofCategory| (|Integer|) (|RetractableTo| *3))
       (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping|
                    (|Record|
                     (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                     (|:| |guessStream|
                          (|Mapping|
                           (|Stream|
                            (|UnivariateFormalPowerSeries|
                             (|Fraction| (|Integer|))))
                           (|UnivariateFormalPowerSeries|
                            (|Fraction| (|Integer|)))))
                     (|:| |guessModGen|
                          (|Mapping|
                           (|Mapping| (|Vector| (|U32Vector|))
                                      (|List| (|U32Vector|)) (|Integer|)
                                      (|Integer|))
                           (|NonNegativeInteger|)))
                     (|:| |testGen|
                          (|Mapping|
                           (|Mapping|
                            (|Vector|
                             (|UnivariateFormalPowerSeries|
                              (|SparseMultivariatePolynomial|
                               (|Fraction| (|Integer|))
                               (|NonNegativeInteger|))))
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|Fraction| (|Integer|))
                              (|NonNegativeInteger|))))
                           (|List| (|PositiveInteger|))))
                     (|:| |exprStream|
                          (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                     (|Expression| (|Integer|)) (|Symbol|)))
                     (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                     (|:| A
                          (|Mapping| (|Integer|) (|NonNegativeInteger|)
                                     (|NonNegativeInteger|)
                                     (|SparseUnivariatePolynomial|
                                      (|Integer|))))
                     (|:| AF
                          (|Mapping|
                           (|SparseMultivariatePolynomial|
                            (|Fraction| (|Integer|)) (|NonNegativeInteger|))
                           (|NonNegativeInteger|) (|NonNegativeInteger|)
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial|
                             (|Fraction| (|Integer|))
                             (|NonNegativeInteger|)))))
                     (|:| AX
                          (|Mapping| (|Expression| (|Integer|))
                                     (|NonNegativeInteger|) (|Symbol|)
                                     (|Expression| (|Integer|))))
                     (|:| C
                          (|Mapping| (|List| (|Integer|))
                                     (|NonNegativeInteger|))))
                    (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream|
                           (|UnivariateFormalPowerSeries|
                            (|Fraction| (|Polynomial| *4))))
                          (|UnivariateFormalPowerSeries|
                           (|Fraction| (|Polynomial| *4)))))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|Fraction| (|Polynomial| *4))
                              (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial|
                             (|Fraction| (|Polynomial| *4))
                             (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream|
                         (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                    (|Expression| (|Integer|)) (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| (|Polynomial| *4) (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial|
                                     (|Polynomial| *4))))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial|
                           (|Fraction| (|Polynomial| *4))
                           (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial|
                            (|Fraction| (|Polynomial| *4))
                            (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| (|Expression| (|Integer|))
                                    (|NonNegativeInteger|) (|Symbol|)
                                    (|Expression| (|Integer|))))
                    (|:| C
                         (|Mapping| (|List| (|Polynomial| *4))
                                    (|NonNegativeInteger|)))))
       (|isDomain| *1 (|GuessPolynomial| *4)) (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping|
                    (|Record|
                     (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                     (|:| |guessStream|
                          (|Mapping|
                           (|Stream|
                            (|UnivariateFormalPowerSeries|
                             (|Fraction| (|Polynomial| *4))))
                           (|UnivariateFormalPowerSeries|
                            (|Fraction| (|Polynomial| *4)))))
                     (|:| |guessModGen|
                          (|Mapping|
                           (|Mapping| (|Vector| (|U32Vector|))
                                      (|List| (|U32Vector|)) (|Integer|)
                                      (|Integer|))
                           (|NonNegativeInteger|)))
                     (|:| |testGen|
                          (|Mapping|
                           (|Mapping|
                            (|Vector|
                             (|UnivariateFormalPowerSeries|
                              (|SparseMultivariatePolynomial|
                               (|Fraction| (|Polynomial| *4))
                               (|NonNegativeInteger|))))
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|Fraction| (|Polynomial| *4))
                              (|NonNegativeInteger|))))
                           (|List| (|PositiveInteger|))))
                     (|:| |exprStream|
                          (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                     (|Expression| (|Integer|)) (|Symbol|)))
                     (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                     (|:| A
                          (|Mapping| (|Polynomial| *4) (|NonNegativeInteger|)
                                     (|NonNegativeInteger|)
                                     (|SparseUnivariatePolynomial|
                                      (|Polynomial| *4))))
                     (|:| AF
                          (|Mapping|
                           (|SparseMultivariatePolynomial|
                            (|Fraction| (|Polynomial| *4))
                            (|NonNegativeInteger|))
                           (|NonNegativeInteger|) (|NonNegativeInteger|)
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial|
                             (|Fraction| (|Polynomial| *4))
                             (|NonNegativeInteger|)))))
                     (|:| AX
                          (|Mapping| (|Expression| (|Integer|))
                                     (|NonNegativeInteger|) (|Symbol|)
                                     (|Expression| (|Integer|))))
                     (|:| C
                          (|Mapping| (|List| (|Polynomial| *4))
                                     (|NonNegativeInteger|))))
                    (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessPolynomial| *4))
       (|ofCategory| (|Fraction| (|Polynomial| *4)) (|RetractableTo| *3))
       (|ofCategory| (|Polynomial| *4) (|RetractableTo| *3))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream|
                           (|UnivariateFormalPowerSeries|
                            (|Fraction| (|Polynomial| (|Integer|)))))
                          (|UnivariateFormalPowerSeries|
                           (|Fraction| (|Polynomial| (|Integer|))))))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|Fraction| (|Polynomial| (|Integer|)))
                              (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial|
                             (|Fraction| (|Polynomial| (|Integer|)))
                             (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream|
                         (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                    (|Expression| (|Integer|)) (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| (|Polynomial| (|Integer|))
                                    (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial|
                                     (|Polynomial| (|Integer|)))))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial|
                           (|Fraction| (|Polynomial| (|Integer|)))
                           (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial|
                            (|Fraction| (|Polynomial| (|Integer|)))
                            (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| (|Expression| (|Integer|))
                                    (|NonNegativeInteger|) (|Symbol|)
                                    (|Expression| (|Integer|))))
                    (|:| C
                         (|Mapping| (|List| (|Polynomial| (|Integer|)))
                                    (|NonNegativeInteger|)))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| (|Fraction| (|Polynomial| (|Integer|))) (|RetractableTo| *3))
   (|ofCategory| (|Polynomial| (|Integer|)) (|RetractableTo| *3))
   (|isDomain| *3 (|Symbol|))
   (|isDomain| *2
               (|Mapping|
                (|Record|
                 (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                 (|:| |guessStream|
                      (|Mapping|
                       (|Stream|
                        (|UnivariateFormalPowerSeries|
                         (|Fraction| (|Polynomial| (|Integer|)))))
                       (|UnivariateFormalPowerSeries|
                        (|Fraction| (|Polynomial| (|Integer|))))))
                 (|:| |guessModGen|
                      (|Mapping|
                       (|Mapping| (|Vector| (|U32Vector|))
                                  (|List| (|U32Vector|)) (|Integer|)
                                  (|Integer|))
                       (|NonNegativeInteger|)))
                 (|:| |testGen|
                      (|Mapping|
                       (|Mapping|
                        (|Vector|
                         (|UnivariateFormalPowerSeries|
                          (|SparseMultivariatePolynomial|
                           (|Fraction| (|Polynomial| (|Integer|)))
                           (|NonNegativeInteger|))))
                        (|UnivariateFormalPowerSeries|
                         (|SparseMultivariatePolynomial|
                          (|Fraction| (|Polynomial| (|Integer|)))
                          (|NonNegativeInteger|))))
                       (|List| (|PositiveInteger|))))
                 (|:| |exprStream|
                      (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                 (|Expression| (|Integer|)) (|Symbol|)))
                 (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                 (|:| A
                      (|Mapping| (|Polynomial| (|Integer|))
                                 (|NonNegativeInteger|) (|NonNegativeInteger|)
                                 (|SparseUnivariatePolynomial|
                                  (|Polynomial| (|Integer|)))))
                 (|:| AF
                      (|Mapping|
                       (|SparseMultivariatePolynomial|
                        (|Fraction| (|Polynomial| (|Integer|)))
                        (|NonNegativeInteger|))
                       (|NonNegativeInteger|) (|NonNegativeInteger|)
                       (|UnivariateFormalPowerSeries|
                        (|SparseMultivariatePolynomial|
                         (|Fraction| (|Polynomial| (|Integer|)))
                         (|NonNegativeInteger|)))))
                 (|:| AX
                      (|Mapping| (|Expression| (|Integer|))
                                 (|NonNegativeInteger|) (|Symbol|)
                                 (|Expression| (|Integer|))))
                 (|:| C
                      (|Mapping| (|List| (|Polynomial| (|Integer|)))
                                 (|NonNegativeInteger|))))
                (|List| (|GuessOption|))))
   (|isDomain| *1 (|GuessPolynomialInteger|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream| (|UnivariateFormalPowerSeries| *4))
                          (|UnivariateFormalPowerSeries| *4)))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial| *4
                                                             (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial| *4
                                                            (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream| (|Mapping| (|Stream| *6) *6 (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| *5 (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial| *5)))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial| *4
                                                          (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial| *4
                                                           (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| *6 (|NonNegativeInteger|) (|Symbol|) *6))
                    (|:| C (|Mapping| (|List| *5) (|NonNegativeInteger|)))))
       (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8)) (|ofCategory| *4 (|Field|))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream|
                           (|UnivariateFormalPowerSeries| (|AlgebraicNumber|)))
                          (|UnivariateFormalPowerSeries| (|AlgebraicNumber|))))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|AlgebraicNumber|) (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial| (|AlgebraicNumber|)
                                                            (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream|
                         (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                    (|Expression| (|Integer|)) (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| (|AlgebraicNumber|) (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial|
                                     (|AlgebraicNumber|))))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial| (|AlgebraicNumber|)
                                                          (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial| (|AlgebraicNumber|)
                                                           (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| (|Expression| (|Integer|))
                                    (|NonNegativeInteger|) (|Symbol|)
                                    (|Expression| (|Integer|))))
                    (|:| C
                         (|Mapping| (|List| (|AlgebraicNumber|))
                                    (|NonNegativeInteger|)))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream| (|UnivariateFormalPowerSeries| *4))
                          (|UnivariateFormalPowerSeries| *4)))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial| *4
                                                             (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial| *4
                                                            (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream|
                         (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                    (|Expression| (|Integer|)) (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| *4 (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial| *4)))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial| *4
                                                          (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial| *4
                                                           (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| (|Expression| (|Integer|))
                                    (|NonNegativeInteger|) (|Symbol|)
                                    (|Expression| (|Integer|))))
                    (|:| C (|Mapping| (|List| *4) (|NonNegativeInteger|)))))
       (|isDomain| *1 (|GuessFinite| *4))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream|
                           (|UnivariateFormalPowerSeries|
                            (|Fraction| (|Integer|))))
                          (|UnivariateFormalPowerSeries|
                           (|Fraction| (|Integer|)))))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|Fraction| (|Integer|))
                              (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial|
                             (|Fraction| (|Integer|)) (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream|
                         (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                    (|Expression| (|Integer|)) (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| (|Integer|) (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial|
                                     (|Integer|))))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial|
                           (|Fraction| (|Integer|)) (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial|
                            (|Fraction| (|Integer|)) (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| (|Expression| (|Integer|))
                                    (|NonNegativeInteger|) (|Symbol|)
                                    (|Expression| (|Integer|))))
                    (|:| C
                         (|Mapping| (|List| (|Integer|))
                                    (|NonNegativeInteger|)))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream|
                           (|UnivariateFormalPowerSeries|
                            (|Fraction| (|Polynomial| *4))))
                          (|UnivariateFormalPowerSeries|
                           (|Fraction| (|Polynomial| *4)))))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|Fraction| (|Polynomial| *4))
                              (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial|
                             (|Fraction| (|Polynomial| *4))
                             (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream|
                         (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                    (|Expression| (|Integer|)) (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| (|Polynomial| *4) (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial|
                                     (|Polynomial| *4))))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial|
                           (|Fraction| (|Polynomial| *4))
                           (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial|
                            (|Fraction| (|Polynomial| *4))
                            (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| (|Expression| (|Integer|))
                                    (|NonNegativeInteger|) (|Symbol|)
                                    (|Expression| (|Integer|))))
                    (|:| C
                         (|Mapping| (|List| (|Polynomial| *4))
                                    (|NonNegativeInteger|)))))
       (|isDomain| *1 (|GuessPolynomial| *4)) (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream|
                           (|UnivariateFormalPowerSeries|
                            (|Fraction| (|Polynomial| (|Integer|)))))
                          (|UnivariateFormalPowerSeries|
                           (|Fraction| (|Polynomial| (|Integer|))))))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|Fraction| (|Polynomial| (|Integer|)))
                              (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial|
                             (|Fraction| (|Polynomial| (|Integer|)))
                             (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream|
                         (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                    (|Expression| (|Integer|)) (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| (|Polynomial| (|Integer|))
                                    (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial|
                                     (|Polynomial| (|Integer|)))))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial|
                           (|Fraction| (|Polynomial| (|Integer|)))
                           (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial|
                            (|Fraction| (|Polynomial| (|Integer|)))
                            (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| (|Expression| (|Integer|))
                                    (|NonNegativeInteger|) (|Symbol|)
                                    (|Expression| (|Integer|))))
                    (|:| C
                         (|Mapping| (|List| (|Polynomial| (|Integer|)))
                                    (|NonNegativeInteger|)))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|List| *5)))
       (|isDomain| *4 (|List| (|GuessOption|))) (|ofCategory| *5 (|Field|))
       (|ofType| *8 (|Mapping| *5 *7)) (|ofType| *9 (|Mapping| *7 *5))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream| (|UnivariateFormalPowerSeries| *5))
                          (|UnivariateFormalPowerSeries| *5)))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial| *5
                                                             (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial| *5
                                                            (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream| (|Mapping| (|Stream| *7) *7 (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| *6 (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial| *6)))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial| *5
                                                          (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial| *5
                                                           (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| *7 (|NonNegativeInteger|) (|Symbol|) *7))
                    (|:| C (|Mapping| (|List| *6) (|NonNegativeInteger|)))))
       (|isDomain| *1 (|Guess| *5 *6 *7 *8 *9)) (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|List| (|AlgebraicNumber|))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream|
                           (|UnivariateFormalPowerSeries| (|AlgebraicNumber|)))
                          (|UnivariateFormalPowerSeries| (|AlgebraicNumber|))))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|AlgebraicNumber|) (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial| (|AlgebraicNumber|)
                                                            (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream|
                         (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                    (|Expression| (|Integer|)) (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| (|AlgebraicNumber|) (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial|
                                     (|AlgebraicNumber|))))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial| (|AlgebraicNumber|)
                                                          (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial| (|AlgebraicNumber|)
                                                           (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| (|Expression| (|Integer|))
                                    (|NonNegativeInteger|) (|Symbol|)
                                    (|Expression| (|Integer|))))
                    (|:| C
                         (|Mapping| (|List| (|AlgebraicNumber|))
                                    (|NonNegativeInteger|)))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|List| *5)))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream| (|UnivariateFormalPowerSeries| *5))
                          (|UnivariateFormalPowerSeries| *5)))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial| *5
                                                             (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial| *5
                                                            (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream|
                         (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                    (|Expression| (|Integer|)) (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| *5 (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial| *5)))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial| *5
                                                          (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial| *5
                                                           (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| (|Expression| (|Integer|))
                                    (|NonNegativeInteger|) (|Symbol|)
                                    (|Expression| (|Integer|))))
                    (|:| C (|Mapping| (|List| *5) (|NonNegativeInteger|)))))
       (|isDomain| *1 (|GuessFinite| *5))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|List| (|Fraction| (|Integer|)))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream|
                           (|UnivariateFormalPowerSeries|
                            (|Fraction| (|Integer|))))
                          (|UnivariateFormalPowerSeries|
                           (|Fraction| (|Integer|)))))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|Fraction| (|Integer|))
                              (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial|
                             (|Fraction| (|Integer|)) (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream|
                         (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                    (|Expression| (|Integer|)) (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| (|Integer|) (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial|
                                     (|Integer|))))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial|
                           (|Fraction| (|Integer|)) (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial|
                            (|Fraction| (|Integer|)) (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| (|Expression| (|Integer|))
                                    (|NonNegativeInteger|) (|Symbol|)
                                    (|Expression| (|Integer|))))
                    (|:| C
                         (|Mapping| (|List| (|Integer|))
                                    (|NonNegativeInteger|)))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|List| (|Fraction| (|Polynomial| *5)))))
       (|isDomain| *4 (|List| (|GuessOption|))) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2
                   (|Record|
                    (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                    (|:| |guessStream|
                         (|Mapping|
                          (|Stream|
                           (|UnivariateFormalPowerSeries|
                            (|Fraction| (|Polynomial| *5))))
                          (|UnivariateFormalPowerSeries|
                           (|Fraction| (|Polynomial| *5)))))
                    (|:| |guessModGen|
                         (|Mapping|
                          (|Mapping| (|Vector| (|U32Vector|))
                                     (|List| (|U32Vector|)) (|Integer|)
                                     (|Integer|))
                          (|NonNegativeInteger|)))
                    (|:| |testGen|
                         (|Mapping|
                          (|Mapping|
                           (|Vector|
                            (|UnivariateFormalPowerSeries|
                             (|SparseMultivariatePolynomial|
                              (|Fraction| (|Polynomial| *5))
                              (|NonNegativeInteger|))))
                           (|UnivariateFormalPowerSeries|
                            (|SparseMultivariatePolynomial|
                             (|Fraction| (|Polynomial| *5))
                             (|NonNegativeInteger|))))
                          (|List| (|PositiveInteger|))))
                    (|:| |exprStream|
                         (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                    (|Expression| (|Integer|)) (|Symbol|)))
                    (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                    (|:| A
                         (|Mapping| (|Polynomial| *5) (|NonNegativeInteger|)
                                    (|NonNegativeInteger|)
                                    (|SparseUnivariatePolynomial|
                                     (|Polynomial| *5))))
                    (|:| AF
                         (|Mapping|
                          (|SparseMultivariatePolynomial|
                           (|Fraction| (|Polynomial| *5))
                           (|NonNegativeInteger|))
                          (|NonNegativeInteger|) (|NonNegativeInteger|)
                          (|UnivariateFormalPowerSeries|
                           (|SparseMultivariatePolynomial|
                            (|Fraction| (|Polynomial| *5))
                            (|NonNegativeInteger|)))))
                    (|:| AX
                         (|Mapping| (|Expression| (|Integer|))
                                    (|NonNegativeInteger|) (|Symbol|)
                                    (|Expression| (|Integer|))))
                    (|:| C
                         (|Mapping| (|List| (|Polynomial| *5))
                                    (|NonNegativeInteger|)))))
       (|isDomain| *1 (|GuessPolynomial| *5))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3 (|List| (|List| (|Fraction| (|Polynomial| (|Integer|))))))
   (|isDomain| *4 (|List| (|GuessOption|)))
   (|isDomain| *2
               (|Record| (|:| |degreeStream| (|Stream| (|NonNegativeInteger|)))
                         (|:| |guessStream|
                              (|Mapping|
                               (|Stream|
                                (|UnivariateFormalPowerSeries|
                                 (|Fraction| (|Polynomial| (|Integer|)))))
                               (|UnivariateFormalPowerSeries|
                                (|Fraction| (|Polynomial| (|Integer|))))))
                         (|:| |guessModGen|
                              (|Mapping|
                               (|Mapping| (|Vector| (|U32Vector|))
                                          (|List| (|U32Vector|)) (|Integer|)
                                          (|Integer|))
                               (|NonNegativeInteger|)))
                         (|:| |testGen|
                              (|Mapping|
                               (|Mapping|
                                (|Vector|
                                 (|UnivariateFormalPowerSeries|
                                  (|SparseMultivariatePolynomial|
                                   (|Fraction| (|Polynomial| (|Integer|)))
                                   (|NonNegativeInteger|))))
                                (|UnivariateFormalPowerSeries|
                                 (|SparseMultivariatePolynomial|
                                  (|Fraction| (|Polynomial| (|Integer|)))
                                  (|NonNegativeInteger|))))
                               (|List| (|PositiveInteger|))))
                         (|:| |exprStream|
                              (|Mapping| (|Stream| (|Expression| (|Integer|)))
                                         (|Expression| (|Integer|))
                                         (|Symbol|)))
                         (|:| |kind| (|Symbol|)) (|:| |qvar| (|Symbol|))
                         (|:| A
                              (|Mapping| (|Polynomial| (|Integer|))
                                         (|NonNegativeInteger|)
                                         (|NonNegativeInteger|)
                                         (|SparseUnivariatePolynomial|
                                          (|Polynomial| (|Integer|)))))
                         (|:| AF
                              (|Mapping|
                               (|SparseMultivariatePolynomial|
                                (|Fraction| (|Polynomial| (|Integer|)))
                                (|NonNegativeInteger|))
                               (|NonNegativeInteger|) (|NonNegativeInteger|)
                               (|UnivariateFormalPowerSeries|
                                (|SparseMultivariatePolynomial|
                                 (|Fraction| (|Polynomial| (|Integer|)))
                                 (|NonNegativeInteger|)))))
                         (|:| AX
                              (|Mapping| (|Expression| (|Integer|))
                                         (|NonNegativeInteger|) (|Symbol|)
                                         (|Expression| (|Integer|))))
                         (|:| C
                              (|Mapping| (|List| (|Polynomial| (|Integer|)))
                                         (|NonNegativeInteger|)))))
   (|isDomain| *1 (|GuessPolynomialInteger|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5 (|Field|)) (|ofType| *8 (|Mapping| *5 *7))
       (|ofType| *9 (|Mapping| *7 *5)) (|isDomain| *2 (|List| *7))
       (|isDomain| *1 (|Guess| *5 *6 *7 *8 *9)) (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|Field|))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))
       (|isDomain| *2 (|List| *6)) (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *4 (|List| (|GuessOption|))) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *4))))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|Field|))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))
       (|isDomain| *2 (|List| *6)) (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5 (|Field|)) (|ofType| *8 (|Mapping| *5 *7))
       (|ofType| *9 (|Mapping| *7 *5)) (|isDomain| *2 (|List| *7))
       (|isDomain| *1 (|Guess| *5 *6 *7 *8 *9)) (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *4))))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *4 (|List| (|GuessOption|))) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|Field|))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))
       (|isDomain| *2 (|List| *6)) (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5 (|Field|)) (|ofType| *8 (|Mapping| *5 *7))
       (|ofType| *9 (|Mapping| *7 *5)) (|isDomain| *2 (|List| *7))
       (|isDomain| *1 (|Guess| *5 *6 *7 *8 *9)) (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *4))))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *4 (|List| (|GuessOption|))) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|List| *4))) (|ofCategory| *4 (|Field|))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))
       (|isDomain| *2 (|List| *6)) (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|List| *5)))
       (|isDomain| *4 (|List| (|GuessOption|))) (|ofCategory| *5 (|Field|))
       (|ofType| *8 (|Mapping| *5 *7)) (|ofType| *9 (|Mapping| *7 *5))
       (|isDomain| *2 (|List| *7)) (|isDomain| *1 (|Guess| *5 *6 *7 *8 *9))
       (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|List| (|AlgebraicNumber|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|List| (|AlgebraicNumber|))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|List| *4)))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|List| *5)))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|List| (|Fraction| (|Integer|)))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|List| (|Fraction| (|Integer|)))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|List| (|Fraction| (|Polynomial| *4)))))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|List| (|Fraction| (|Polynomial| *5)))))
       (|isDomain| *4 (|List| (|GuessOption|))) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *5))))
 ((*1 *2 *3)
  (AND
   (|isDomain| *3 (|List| (|List| (|Fraction| (|Polynomial| (|Integer|))))))
   (|isDomain| *2 (|List| (|Expression| (|Integer|))))
   (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3 (|List| (|List| (|Fraction| (|Polynomial| (|Integer|))))))
   (|isDomain| *4 (|List| (|GuessOption|)))
   (|isDomain| *2 (|List| (|Expression| (|Integer|))))
   (|isDomain| *1 (|GuessPolynomialInteger|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|Field|))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))
       (|isDomain| *2 (|List| *6)) (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5 (|Field|)) (|ofType| *8 (|Mapping| *5 *7))
       (|ofType| *9 (|Mapping| *7 *5)) (|isDomain| *2 (|List| *7))
       (|isDomain| *1 (|Guess| *5 *6 *7 *8 *9)) (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| *6) (|List| *4)
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *4 (|RetractableTo| *3))
       (|ofCategory| *5 (|RetractableTo| *3)) (|ofCategory| *4 (|Field|))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| *3) (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| *3)
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|ofCategory| (|AlgebraicNumber|) (|RetractableTo| *3))
       (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|AlgebraicNumber|))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5 (|Field|)) (|ofType| *8 (|Mapping| *5 *7))
       (|ofType| *9 (|Mapping| *7 *5)) (|isDomain| *2 (|List| *7))
       (|isDomain| *1 (|GuessExpBin| *5 *6 *7 *8 *9))
       (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| *6) (|List| *4)
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessExpBin| *4 *5 *6 *7 *8))
       (|ofCategory| *4 (|RetractableTo| *3))
       (|ofCategory| *5 (|RetractableTo| *3)) (|ofCategory| *4 (|Field|))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| *3) (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| *3)
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|))) (|List| *4)
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessFinite| *4))
       (|ofCategory| *4 (|RetractableTo| *3))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|ofCategory| (|Fraction| (|Integer|)) (|RetractableTo| *3))
       (|ofCategory| (|Integer|) (|RetractableTo| *3))
       (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|Fraction| (|Integer|)))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *4))))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *4 (|List| (|GuessOption|))) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|Fraction| (|Polynomial| *4)))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessPolynomial| *4))
       (|ofCategory| (|Fraction| (|Polynomial| *4)) (|RetractableTo| *3))
       (|ofCategory| (|Polynomial| *4) (|RetractableTo| *3))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| (|Fraction| (|Polynomial| (|Integer|))) (|RetractableTo| *3))
   (|ofCategory| (|Polynomial| (|Integer|)) (|RetractableTo| *3))
   (|isDomain| *3 (|Symbol|))
   (|isDomain| *2
               (|Mapping| (|List| (|Expression| (|Integer|)))
                          (|List| (|Fraction| (|Polynomial| (|Integer|))))
                          (|List| (|GuessOption|))))
   (|isDomain| *1 (|GuessPolynomialInteger|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|Field|))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))
       (|isDomain| *2 (|List| *6)) (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5 (|Field|)) (|ofType| *8 (|Mapping| *5 *7))
       (|ofType| *9 (|Mapping| *7 *5)) (|isDomain| *2 (|List| *7))
       (|isDomain| *1 (|Guess| *5 *6 *7 *8 *9)) (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| *6) (|List| *4)
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *4 (|RetractableTo| *3))
       (|ofCategory| *5 (|RetractableTo| *3)) (|ofCategory| *4 (|Field|))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| *3) (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| *3)
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|ofCategory| (|AlgebraicNumber|) (|RetractableTo| *3))
       (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|AlgebraicNumber|))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5 (|Field|)) (|ofType| *8 (|Mapping| *5 *7))
       (|ofType| *9 (|Mapping| *7 *5)) (|isDomain| *2 (|List| *7))
       (|isDomain| *1 (|GuessExpBin| *5 *6 *7 *8 *9))
       (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| *6) (|List| *4)
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessExpBin| *4 *5 *6 *7 *8))
       (|ofCategory| *4 (|RetractableTo| *3))
       (|ofCategory| *5 (|RetractableTo| *3)) (|ofCategory| *4 (|Field|))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| *3) (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| *3)
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|))) (|List| *4)
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessFinite| *4))
       (|ofCategory| *4 (|RetractableTo| *3))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|ofCategory| (|Fraction| (|Integer|)) (|RetractableTo| *3))
       (|ofCategory| (|Integer|) (|RetractableTo| *3))
       (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|Fraction| (|Integer|)))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *4))))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *4 (|List| (|GuessOption|))) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|isDomain| *2
                   (|Mapping| (|List| (|Expression| (|Integer|)))
                              (|List| (|Fraction| (|Polynomial| *4)))
                              (|List| (|GuessOption|))))
       (|isDomain| *1 (|GuessPolynomial| *4))
       (|ofCategory| (|Fraction| (|Polynomial| *4)) (|RetractableTo| *3))
       (|ofCategory| (|Polynomial| *4) (|RetractableTo| *3))
       (|ofCategory| *4 (|Ring|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3)
  (AND
   (|ofCategory| (|Fraction| (|Polynomial| (|Integer|))) (|RetractableTo| *3))
   (|ofCategory| (|Polynomial| (|Integer|)) (|RetractableTo| *3))
   (|isDomain| *3 (|Symbol|))
   (|isDomain| *2
               (|Mapping| (|List| (|Expression| (|Integer|)))
                          (|List| (|Fraction| (|Polynomial| (|Integer|))))
                          (|List| (|GuessOption|))))
   (|isDomain| *1 (|GuessPolynomialInteger|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4)) (|ofCategory| *4 (|Field|))
       (|ofType| *7 (|Mapping| *4 *6)) (|ofType| *8 (|Mapping| *6 *4))
       (|isDomain| *2 (|List| *6)) (|isDomain| *1 (|Guess| *4 *5 *6 *7 *8))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5 (|Field|)) (|ofType| *8 (|Mapping| *5 *7))
       (|ofType| *9 (|Mapping| *7 *5)) (|isDomain| *2 (|List| *7))
       (|isDomain| *1 (|Guess| *5 *6 *7 *8 *9)) (|ofCategory| *6 (|GcdDomain|))
       (|ofCategory| *7
                     (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                             (|RetractableTo| (|Symbol|))
                             (|RetractableTo| (|Integer|))
                             (|CombinatorialOpsCategory|)
                             (|PartialDifferentialRing| (|Symbol|))
                             (CATEGORY |domain| (SIGNATURE * ($ $ $))
                              (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                              (SIGNATURE |numerator| ($ $))
                              (SIGNATURE |denominator| ($ $))
                              (SIGNATURE |ground?| ((|Boolean|) $)))))))
 ((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *4
               (|List|
                (|Mapping| (|List| *8) (|List| *6) (|List| (|GuessOption|)))))
   (|isDomain| *5 (|List| (|Symbol|))) (|isDomain| *3 (|List| *6))
   (|ofCategory| *6 (|Field|)) (|ofType| *9 (|Mapping| *6 *8))
   (|ofType| *10 (|Mapping| *8 *6)) (|isDomain| *2 (|List| *8))
   (|isDomain| *1 (|Guess| *6 *7 *8 *9 *10)) (|ofCategory| *7 (|GcdDomain|))
   (|ofCategory| *8
                 (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                         (|RetractableTo| (|Symbol|))
                         (|RetractableTo| (|Integer|))
                         (|CombinatorialOpsCategory|)
                         (|PartialDifferentialRing| (|Symbol|))
                         (CATEGORY |domain| (SIGNATURE * ($ $ $))
                          (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                          (SIGNATURE |numerator| ($ $))
                          (SIGNATURE |denominator| ($ $))
                          (SIGNATURE |ground?| ((|Boolean|) $)))))))
 ((*1 *2 *3 *4 *5 *6)
  (AND
   (|isDomain| *4
               (|List|
                (|Mapping| (|List| *9) (|List| *7) (|List| (|GuessOption|)))))
   (|isDomain| *5 (|List| (|Symbol|))) (|isDomain| *6 (|List| (|GuessOption|)))
   (|isDomain| *3 (|List| *7)) (|ofCategory| *7 (|Field|))
   (|ofType| *10 (|Mapping| *7 *9)) (|ofType| *11 (|Mapping| *9 *7))
   (|isDomain| *2 (|List| *9)) (|isDomain| *1 (|Guess| *7 *8 *9 *10 *11))
   (|ofCategory| *8 (|GcdDomain|))
   (|ofCategory| *9
                 (|Join| (|FunctionSpace| (|Integer|)) (|IntegralDomain|)
                         (|RetractableTo| (|Symbol|))
                         (|RetractableTo| (|Integer|))
                         (|CombinatorialOpsCategory|)
                         (|PartialDifferentialRing| (|Symbol|))
                         (CATEGORY |domain| (SIGNATURE * ($ $ $))
                          (SIGNATURE / ($ $ $)) (SIGNATURE ^ ($ $ $))
                          (SIGNATURE |numerator| ($ $))
                          (SIGNATURE |denominator| ($ $))
                          (SIGNATURE |ground?| ((|Boolean|) $)))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|AlgebraicNumber|)))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *4
               (|List|
                (|Mapping| (|List| (|Expression| (|Integer|)))
                           (|List| (|AlgebraicNumber|))
                           (|List| (|GuessOption|)))))
   (|isDomain| *5 (|List| (|Symbol|)))
   (|isDomain| *3 (|List| (|AlgebraicNumber|)))
   (|isDomain| *2 (|List| (|Expression| (|Integer|))))
   (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3 *4 *5 *6)
  (AND
   (|isDomain| *4
               (|List|
                (|Mapping| (|List| (|Expression| (|Integer|)))
                           (|List| (|AlgebraicNumber|))
                           (|List| (|GuessOption|)))))
   (|isDomain| *5 (|List| (|Symbol|))) (|isDomain| *6 (|List| (|GuessOption|)))
   (|isDomain| *3 (|List| (|AlgebraicNumber|)))
   (|isDomain| *2 (|List| (|Expression| (|Integer|))))
   (|isDomain| *1 (|GuessAlgebraicNumber|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *4))
       (|ofCategory| *4
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|List| (|GuessOption|)))
       (|ofCategory| *5
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessFinite| *5))))
 ((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *4
               (|List|
                (|Mapping| (|List| (|Expression| (|Integer|))) (|List| *6)
                           (|List| (|GuessOption|)))))
   (|isDomain| *5 (|List| (|Symbol|))) (|isDomain| *3 (|List| *6))
   (|ofCategory| *6
                 (|Join| (|FiniteFieldCategory|)
                         (|ConvertibleTo| (|Integer|))))
   (|isDomain| *2 (|List| (|Expression| (|Integer|))))
   (|isDomain| *1 (|GuessFinite| *6))))
 ((*1 *2 *3 *4 *5 *6)
  (AND
   (|isDomain| *4
               (|List|
                (|Mapping| (|List| (|Expression| (|Integer|))) (|List| *7)
                           (|List| (|GuessOption|)))))
   (|isDomain| *5 (|List| (|Symbol|))) (|isDomain| *6 (|List| (|GuessOption|)))
   (|isDomain| *3 (|List| *7))
   (|ofCategory| *7
                 (|Join| (|FiniteFieldCategory|)
                         (|ConvertibleTo| (|Integer|))))
   (|isDomain| *2 (|List| (|Expression| (|Integer|))))
   (|isDomain| *1 (|GuessFinite| *7))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *4
               (|List|
                (|Mapping| (|List| (|Expression| (|Integer|)))
                           (|List| (|Fraction| (|Integer|)))
                           (|List| (|GuessOption|)))))
   (|isDomain| *5 (|List| (|Symbol|)))
   (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
   (|isDomain| *2 (|List| (|Expression| (|Integer|))))
   (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3 *4 *5 *6)
  (AND
   (|isDomain| *4
               (|List|
                (|Mapping| (|List| (|Expression| (|Integer|)))
                           (|List| (|Fraction| (|Integer|)))
                           (|List| (|GuessOption|)))))
   (|isDomain| *5 (|List| (|Symbol|))) (|isDomain| *6 (|List| (|GuessOption|)))
   (|isDomain| *3 (|List| (|Fraction| (|Integer|))))
   (|isDomain| *2 (|List| (|Expression| (|Integer|))))
   (|isDomain| *1 (|GuessInteger|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *4))))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *5))))
       (|isDomain| *4 (|List| (|GuessOption|))) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomial| *5))))
 ((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *4
               (|List|
                (|Mapping| (|List| (|Expression| (|Integer|)))
                           (|List| (|Fraction| (|Polynomial| *6)))
                           (|List| (|GuessOption|)))))
   (|isDomain| *5 (|List| (|Symbol|)))
   (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *6))))
   (|ofCategory| *6 (|Ring|))
   (|isDomain| *2 (|List| (|Expression| (|Integer|))))
   (|isDomain| *1 (|GuessPolynomial| *6))))
 ((*1 *2 *3 *4 *5 *6)
  (AND
   (|isDomain| *4
               (|List|
                (|Mapping| (|List| (|Expression| (|Integer|)))
                           (|List| (|Fraction| (|Polynomial| *7)))
                           (|List| (|GuessOption|)))))
   (|isDomain| *5 (|List| (|Symbol|))) (|isDomain| *6 (|List| (|GuessOption|)))
   (|isDomain| *3 (|List| (|Fraction| (|Polynomial| *7))))
   (|ofCategory| *7 (|Ring|))
   (|isDomain| *2 (|List| (|Expression| (|Integer|))))
   (|isDomain| *1 (|GuessPolynomial| *7))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *4 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Expression| (|Integer|))))
       (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *4
               (|List|
                (|Mapping| (|List| (|Expression| (|Integer|)))
                           (|List| (|Fraction| (|Polynomial| (|Integer|))))
                           (|List| (|GuessOption|)))))
   (|isDomain| *5 (|List| (|Symbol|)))
   (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
   (|isDomain| *2 (|List| (|Expression| (|Integer|))))
   (|isDomain| *1 (|GuessPolynomialInteger|))))
 ((*1 *2 *3 *4 *5 *6)
  (AND
   (|isDomain| *4
               (|List|
                (|Mapping| (|List| (|Expression| (|Integer|)))
                           (|List| (|Fraction| (|Polynomial| (|Integer|))))
                           (|List| (|GuessOption|)))))
   (|isDomain| *5 (|List| (|Symbol|))) (|isDomain| *6 (|List| (|GuessOption|)))
   (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
   (|isDomain| *2 (|List| (|Expression| (|Integer|))))
   (|isDomain| *1 (|GuessPolynomialInteger|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Kernel| (|Expression| (|Integer|))))
       (|isDomain| *2 (|Polynomial| *4))
       (|isDomain| *1 (|GuessPolynomialFunctions| *4))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Expression| (|Integer|)))
       (|isDomain| *1 (|GuessPolynomialFunctions| *3))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Expression| (|Integer|)))
       (|isDomain| *1 (|GuessFiniteFunctions| *2))
       (|ofCategory| *2
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Expression| (|Integer|)))
       (|isDomain| *2 (|Fraction| (|Polynomial| *4)))
       (|isDomain| *1 (|GuessPolynomialFunctions| *4))
       (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Expression| (|Integer|)))
       (|isDomain| *1 (|GuessFiniteFunctions| *3))
       (|ofCategory| *3
                     (|Join| (|FiniteFieldCategory|)
                             (|ConvertibleTo| (|Integer|))))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| *4)))
       (|ofCategory| *4 (|Ring|)) (|isDomain| *2 (|Expression| (|Integer|)))
       (|isDomain| *1 (|GuessPolynomialFunctions| *4))))) 
(((*1 *1) (|isDomain| *1 (|GroupPresentation|)))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|GroupPresentation|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *3 (|List| (|List| (|Integer|))))
       (|isDomain| *1 (|GroupPresentation|))))) 
(((*1 *1 *1) (|isDomain| *1 (|GroupPresentation|)))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Vector| *4)) (|ofCategory| *4 (|Type|))
       (|ofCategory| *1 (|DirectProductCategory| *3 *4))))
 ((*1 *1 *1 *1) (|isDomain| *1 (|GroupPresentation|)))) 
(((*1 *2 *1 *3 *4)
  (|partial| AND (|isDomain| *3 (|List| (|List| (|Integer|))))
   (|isDomain| *4 (|Boolean|)) (|isDomain| *2 (|PermutationGroup| (|Integer|)))
   (|isDomain| *1 (|GroupPresentation|))))
 ((*1 *2 *1 *3)
  (|partial| AND (|isDomain| *3 (|Boolean|))
   (|isDomain| *2 (|PermutationGroup| (|Integer|)))
   (|isDomain| *1 (|GroupPresentation|))))
 ((*1 *2 *1)
  (|partial| AND (|isDomain| *2 (|PermutationGroup| (|Integer|)))
   (|isDomain| *1 (|GroupPresentation|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|DistributedMultivariatePolynomial| *5 *6)))
       (|isDomain| *4 (|List| (|OrderedVariableList| *5)))
       (|ofType| *5 (|List| (|Symbol|))) (|ofCategory| *6 (|GcdDomain|))
       (|isDomain| *2
                   (|Record|
                    (|:| |dpolys|
                         (|List| (|DistributedMultivariatePolynomial| *5 *6)))
                    (|:| |coords| (|List| (|Integer|)))))
       (|isDomain| *1 (|GroebnerSolve| *5 *6 *7))
       (|ofCategory| *7 (|GcdDomain|))))) 
(((*1 *2 *2 *3)
  (|partial| AND
   (|isDomain| *2
               (|List| (|HomogeneousDistributedMultivariatePolynomial| *4 *5)))
   (|isDomain| *3 (|List| (|OrderedVariableList| *4)))
   (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *5 (|GcdDomain|))
   (|isDomain| *1 (|GroebnerSolve| *4 *5 *6)) (|ofCategory| *6 (|GcdDomain|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|DistributedMultivariatePolynomial| *5 *6)))
       (|isDomain| *4 (|List| (|OrderedVariableList| *5)))
       (|ofType| *5 (|List| (|Symbol|))) (|ofCategory| *6 (|GcdDomain|))
       (|isDomain| *2
                   (|List|
                    (|List| (|DistributedMultivariatePolynomial| *5 *6))))
       (|isDomain| *1 (|GroebnerSolve| *5 *6 *7))
       (|ofCategory| *7 (|GcdDomain|))))) 
(((*1 *1) (|isDomain| *1 (|GraphImage|)))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|GraphImage|))))) 
(((*1 *1 *2 *3 *3 *4 *5)
  (AND (|isDomain| *2 (|List| (|List| (|Point| (|DoubleFloat|)))))
       (|isDomain| *3 (|List| (|Palette|)))
       (|isDomain| *4 (|List| (|PositiveInteger|)))
       (|isDomain| *5 (|List| (|DrawOption|))) (|isDomain| *1 (|GraphImage|))))
 ((*1 *1 *2 *3 *3 *4)
  (AND (|isDomain| *2 (|List| (|List| (|Point| (|DoubleFloat|)))))
       (|isDomain| *3 (|List| (|Palette|)))
       (|isDomain| *4 (|List| (|PositiveInteger|)))
       (|isDomain| *1 (|GraphImage|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| (|Point| (|DoubleFloat|)))))
       (|isDomain| *1 (|GraphImage|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|List| (|Point| (|DoubleFloat|)))))
       (|isDomain| *1 (|GraphImage|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Segment| (|Float|))))
       (|isDomain| *1 (|DrawOption|))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|List| (|Segment| (|Float|))))
       (|isDomain| *3 (|List| (|DrawOption|)))
       (|isDomain| *1 (|DrawOptionFunctions0|))))
 ((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|List| (|Segment| (|Float|))))
       (|isDomain| *1 (|GraphImage|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Segment| (|Float|))))
       (|isDomain| *1 (|GraphImage|))))) 
(((*1 *2 *1 *3 *4 *4 *5)
  (AND (|isDomain| *3 (|Point| (|DoubleFloat|))) (|isDomain| *4 (|Palette|))
       (|isDomain| *5 (|PositiveInteger|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|GraphImage|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Point| (|DoubleFloat|))) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|GraphImage|))))
 ((*1 *2 *1 *3 *4 *4 *5)
  (AND (|isDomain| *3 (|List| (|Point| (|DoubleFloat|))))
       (|isDomain| *4 (|Palette|)) (|isDomain| *5 (|PositiveInteger|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|GraphImage|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Point| (|DoubleFloat|))) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|GraphImage|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|List| (|List| (|Point| (|DoubleFloat|)))))
       (|isDomain| *3 (|List| (|Palette|))) (|isDomain| *1 (|GraphImage|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|DrawOption|))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *3 (|List| (|DrawOption|)))
       (|isDomain| *1 (|DrawOptionFunctions0|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GraphicsDefaults|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GraphicsDefaults|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GraphicsDefaults|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GraphicsDefaults|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GraphicsDefaults|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GraphicsDefaults|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *2 (|Vector| (|Vector| (|Integer|))))
       (|isDomain| *1 (|GrayCode|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Vector| (|Vector| (|Integer|))))
       (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *1 (|GrayCode|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| *6))
       (|ofCategory| *1 (|MaybeSkewPolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|MaybeSkewPolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| *6))
       (|ofCategory| *1 (|MaybeSkewPolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|SemiRing|))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|MaybeSkewPolynomialCategory| *3 *4 *5))))) 
(((*1 *2 *2 *3 *4)
  (|partial| AND (|isDomain| *4 (|Mapping| *3))
   (|ofCategory| *3 (|OrderedSet|))
   (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *6 (|IntegralDomain|))
   (|ofCategory| *7 (|PolynomialCategory| *6 *5 *3))
   (|isDomain| *1 (|GosperSummationMethod| *5 *3 *6 *7 *2))
   (|ofCategory| *2
                 (|Join| (|RetractableTo| (|Fraction| (|Integer|))) (|Field|)
                         (CATEGORY |domain| (SIGNATURE |coerce| ($ *7))
                          (SIGNATURE |numer| (*7 $))
                          (SIGNATURE |denom| (*7 $)))))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Union| (|NonNegativeInteger|) "arbitrary"))
       (|isDomain| *1 (|GuessOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2 (|Union| (|NonNegativeInteger|) "arbitrary"))
       (|isDomain| *1 (|GuessOptionFunctions0|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Union| (|NonNegativeInteger|) "arbitrary"))
       (|isDomain| *1 (|GuessOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2 (|Union| (|NonNegativeInteger|) "arbitrary"))
       (|isDomain| *1 (|GuessOptionFunctions0|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Union| (|PositiveInteger|) "arbitrary"))
       (|isDomain| *1 (|GuessOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2 (|Union| (|PositiveInteger|) "arbitrary"))
       (|isDomain| *1 (|GuessOptionFunctions0|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Union| (|PositiveInteger|) "arbitrary"))
       (|isDomain| *1 (|GuessOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2 (|Union| (|PositiveInteger|) "arbitrary"))
       (|isDomain| *1 (|GuessOptionFunctions0|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Union| (|PositiveInteger|) (|Boolean|)))
       (|isDomain| *1 (|GuessOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2 (|Union| (|PositiveInteger|) (|Boolean|)))
       (|isDomain| *1 (|GuessOptionFunctions0|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Union| (|PositiveInteger|) (|Boolean|)))
       (|isDomain| *1 (|GuessOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2 (|Union| (|PositiveInteger|) (|Boolean|)))
       (|isDomain| *1 (|GuessOptionFunctions0|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Union| (|NonNegativeInteger|) "arbitrary"))
       (|isDomain| *1 (|GuessOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2 (|Union| (|NonNegativeInteger|) "arbitrary"))
       (|isDomain| *1 (|GuessOptionFunctions0|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Union| (|NonNegativeInteger|) "arbitrary"))
       (|isDomain| *1 (|GuessOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2 (|Union| (|NonNegativeInteger|) "arbitrary"))
       (|isDomain| *1 (|GuessOptionFunctions0|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|GuessOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|GuessOptionFunctions0|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GuessOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|))) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|GuessOptionFunctions0|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|GuessOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|GuessOptionFunctions0|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GuessOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|))) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|GuessOptionFunctions0|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GuessOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|))) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|GuessOptionFunctions0|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|GuessOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|))) (|isDomain| *2 (|Symbol|))
       (|isDomain| *1 (|GuessOptionFunctions0|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Symbol|))) (|isDomain| *1 (|GuessOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|)))
       (|isDomain| *2 (|List| (|Symbol|)))
       (|isDomain| *1 (|GuessOptionFunctions0|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|GuessOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|))) (|isDomain| *2 (|Symbol|))
       (|isDomain| *1 (|GuessOptionFunctions0|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|GuessOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|))) (|isDomain| *2 (|Symbol|))
       (|isDomain| *1 (|GuessOptionFunctions0|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|GuessOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|))) (|isDomain| *2 (|Symbol|))
       (|isDomain| *1 (|GuessOptionFunctions0|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|GuessOption|))) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|GuessOptionFunctions0|))))) 
(((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|List| (|DrawOption|)))
   (|isDomain| *4 (|Symbol|)) (|isDomain| *2 (|Any|))
   (|isDomain| *1 (|DrawOption|))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|List| (|DrawOption|)))
   (|isDomain| *4 (|Symbol|)) (|isDomain| *1 (|DrawOptionFunctions1| *2))
   (|ofCategory| *2 (|Type|))))
 ((*1 *2 *3 *4)
  (|partial| AND (|isDomain| *3 (|List| (|GuessOption|)))
   (|isDomain| *4 (|Symbol|)) (|isDomain| *2 (|Any|))
   (|isDomain| *1 (|GuessOption|))))) 
(((*1 *2 *1)
  (AND (|ofType| *3 (|List| (|Symbol|))) (|ofCategory| *4 (|CommutativeRing|))
       (|ofType| *6
        (|Mapping| (|Boolean|) (|Record| (|:| |index| *5) (|:| |exponent| *2))
                   (|Record| (|:| |index| *5) (|:| |exponent| *2))))
       (|ofCategory| *2
                     (|DirectProductCategory| (|#| *3) (|NonNegativeInteger|)))
       (|isDomain| *1 (|GeneralModulePolynomial| *3 *4 *5 *2 *6 *7))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *7
                     (|PolynomialCategory| *4 *2 (|OrderedVariableList| *3)))))) 
(((*1 *2 *1)
  (AND (|ofType| *3 (|List| (|Symbol|))) (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *5
                     (|DirectProductCategory| (|#| *3) (|NonNegativeInteger|)))
       (|ofType| *6
        (|Mapping| (|Boolean|) (|Record| (|:| |index| *2) (|:| |exponent| *5))
                   (|Record| (|:| |index| *2) (|:| |exponent| *5))))
       (|ofCategory| *2 (|OrderedSet|))
       (|isDomain| *1 (|GeneralModulePolynomial| *3 *4 *2 *5 *6 *7))
       (|ofCategory| *7
                     (|PolynomialCategory| *4 *5 (|OrderedVariableList| *3)))))) 
(((*1 *1 *2 *3 *4)
  (AND (|ofType| *5 (|List| (|Symbol|))) (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *4
                     (|DirectProductCategory| (|#| *5) (|NonNegativeInteger|)))
       (|ofType| *6
        (|Mapping| (|Boolean|) (|Record| (|:| |index| *3) (|:| |exponent| *4))
                   (|Record| (|:| |index| *3) (|:| |exponent| *4))))
       (|isDomain| *1 (|GeneralModulePolynomial| *5 *2 *3 *4 *6 *7))
       (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *7
                     (|PolynomialCategory| *2 *4 (|OrderedVariableList| *5)))))) 
(((*1 *1 *2 *3 *1)
  (AND (|ofType| *4 (|List| (|Symbol|))) (|ofCategory| *2 (|CommutativeRing|))
       (|ofCategory| *3
                     (|DirectProductCategory| (|#| *4) (|NonNegativeInteger|)))
       (|ofType| *6
        (|Mapping| (|Boolean|) (|Record| (|:| |index| *5) (|:| |exponent| *3))
                   (|Record| (|:| |index| *5) (|:| |exponent| *3))))
       (|isDomain| *1 (|GeneralModulePolynomial| *4 *2 *5 *3 *6 *7))
       (|ofCategory| *5 (|OrderedSet|))
       (|ofCategory| *7
                     (|PolynomialCategory| *2 *3 (|OrderedVariableList| *4)))))) 
(((*1 *2 *3 *2 *4 *5)
  (AND (|isDomain| *2 (|List| *3)) (|isDomain| *5 (|PositiveInteger|))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *4 (|EuclideanDomain|))
       (|isDomain| *1 (|GeneralHenselPackage| *4 *3))))) 
(((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *4 (|List| *3)) (|isDomain| *6 (|PositiveInteger|))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *5 (|EuclideanDomain|))
       (|isDomain| *2 (|Record| (|:| |plist| (|List| *3)) (|:| |modulo| *5)))
       (|isDomain| *1 (|GeneralHenselPackage| *5 *3))))) 
(((*1 *1 *2)
  (AND
   (|isDomain| *2 (|Stream| (|GeneralizedUnivariatePowerSeries| *3 *4 *5 *6)))
   (|isDomain| *1 (|GeneralizedUnivariatePowerSeries| *3 *4 *5 *6))
   (|ofCategory| *3 (|Ring|))
   (|ofCategory| *4 (|Join| (|OrderedAbelianMonoid|) (|SemiRing|)))
   (|ofType| *5 (|Symbol|)) (|ofType| *6 *3)))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *1 (|GeneralizedUnivariatePowerSeries| *3 *2 *4 *5))
       (|ofCategory| *3 (|Ring|))
       (|ofCategory| *2 (|Join| (|OrderedAbelianMonoid|) (|SemiRing|)))
       (|ofType| *4 (|Symbol|)) (|ofType| *5 *3)))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Matrix| (|Integer|)))
       (|isDomain| *1 (|FiniteMoebiusFunction| *3))
       (|ofCategory| *3 (|Join| (|PartialOrder|) (|SetCategory|)))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Matrix| *4))
       (|isDomain| *1 (|GeneralizedFiniteMoebiusFunction| *3 *4))
       (|ofCategory| *3 (|Join| (|PartialOrder|) (|SetCategory|)))
       (|ofCategory| *4 (|Field|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3))
       (|ofCategory| *3 (|Join| (|PartialOrder|) (|SetCategory|)))
       (|isDomain| *1 (|GeneralizedFiniteMoebiusFunction| *3 *4))
       (|ofCategory| *4 (|Field|))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4)) (|isDomain| *3 (|Mapping| *5 *4 *4))
       (|ofCategory| *4 (|Join| (|PartialOrder|) (|SetCategory|)))
       (|ofCategory| *5 (|Field|))
       (|isDomain| *1 (|GeneralizedFiniteMoebiusFunction| *4 *5))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| *5))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *3 (|EuclideanDomain|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|GenExEuclid| *3 *5))))) 
(((*1 *2 *3 *4 *5)
  (|partial| AND (|isDomain| *5 (|Vector| (|List| *3)))
   (|ofCategory| *4 (|EuclideanDomain|)) (|isDomain| *2 (|List| *3))
   (|isDomain| *1 (|GenExEuclid| *4 *3))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *4 *5)
  (|partial| AND (|isDomain| *3 (|NonNegativeInteger|))
   (|isDomain| *5 (|List| *6))
   (|ofCategory| *6 (|UnivariatePolynomialCategory| *4))
   (|ofCategory| *4 (|EuclideanDomain|)) (|isDomain| *2 (|Vector| (|List| *6)))
   (|isDomain| *1 (|GenExEuclid| *4 *6))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *5 (|EuclideanDomain|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|GenExEuclid| *5 *3))))) 
(((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|Expression| (|Float|)))
       (|isDomain| *4 (|SegmentBinding| (|Float|))) (|isDomain| *5 (|String|))
       (|isDomain| *6 (|List| (|DrawOption|))) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|GnuDraw|))))
 ((*1 *2 *3 *3 *4 *5)
  (AND (|isDomain| *3 (|List| (|DoubleFloat|))) (|isDomain| *4 (|String|))
       (|isDomain| *5 (|List| (|DrawOption|))) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|GnuDraw|))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Expression| (|Float|)))
       (|isDomain| *4 (|SegmentBinding| (|Float|))) (|isDomain| *5 (|String|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|GnuDraw|))))
 ((*1 *2 *3 *3 *4)
  (AND (|isDomain| *3 (|List| (|DoubleFloat|))) (|isDomain| *4 (|String|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|GnuDraw|))))
 ((*1 *2 *3 *4 *4 *5 *6)
  (AND (|isDomain| *3 (|Expression| (|Float|)))
       (|isDomain| *4 (|SegmentBinding| (|Float|))) (|isDomain| *5 (|String|))
       (|isDomain| *6 (|List| (|DrawOption|))) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|GnuDraw|))))
 ((*1 *2 *3 *4 *4 *5)
  (AND (|isDomain| *3 (|Expression| (|Float|)))
       (|isDomain| *4 (|SegmentBinding| (|Float|))) (|isDomain| *5 (|String|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|GnuDraw|))))) 
(((*1 *2)
  (|partial| AND (|ofCategory| *3 (|IntegralDomain|))
   (|ofCategory| *3 (|CommutativeRing|))
   (|isDomain| *2 (|Record| (|:| |particular| *1) (|:| |basis| (|List| *1))))
   (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))))
 ((*1 *2)
  (|partial| AND
   (|isDomain| *2
               (|Record|
                (|:| |particular| (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
                (|:| |basis|
                     (|List| (|GenericNonAssociativeAlgebra| *3 *4 *5 *6)))))
   (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
   (|ofCategory| *3 (|CommutativeRing|)) (|ofType| *4 (|PositiveInteger|))
   (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|Vector| (|Matrix| *3)))))) 
(((*1 *2)
  (|partial| AND (|ofCategory| *3 (|IntegralDomain|))
   (|ofCategory| *3 (|CommutativeRing|))
   (|isDomain| *2 (|Record| (|:| |particular| *1) (|:| |basis| (|List| *1))))
   (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))))
 ((*1 *2)
  (|partial| AND
   (|isDomain| *2
               (|Record|
                (|:| |particular| (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
                (|:| |basis|
                     (|List| (|GenericNonAssociativeAlgebra| *3 *4 *5 *6)))))
   (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
   (|ofCategory| *3 (|CommutativeRing|)) (|ofType| *4 (|PositiveInteger|))
   (|ofType| *5 (|List| (|Symbol|))) (|ofType| *6 (|Vector| (|Matrix| *3)))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Vector| (|Symbol|)))
       (|isDomain| *3 (|Vector| (|GenericNonAssociativeAlgebra| *4 *5 *6 *7)))
       (|isDomain| *1 (|GenericNonAssociativeAlgebra| *4 *5 *6 *7))
       (|ofCategory| *4 (|CommutativeRing|)) (|ofType| *5 (|PositiveInteger|))
       (|ofType| *6 (|List| (|Symbol|)))
       (|ofType| *7 (|Vector| (|Matrix| *4)))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *3 (|Vector| (|GenericNonAssociativeAlgebra| *4 *5 *6 *7)))
       (|isDomain| *1 (|GenericNonAssociativeAlgebra| *4 *5 *6 *7))
       (|ofCategory| *4 (|CommutativeRing|)) (|ofType| *5 (|PositiveInteger|))
       (|ofType| *6 (|List| *2)) (|ofType| *7 (|Vector| (|Matrix| *4)))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Vector| (|GenericNonAssociativeAlgebra| *3 *4 *5 *6)))
       (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofType| *4 (|PositiveInteger|))
       (|ofType| *5 (|List| (|Symbol|)))
       (|ofType| *6 (|Vector| (|Matrix| *3)))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Vector| (|Symbol|)))
       (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofType| *4 (|PositiveInteger|))
       (|ofType| *5 (|List| (|Symbol|)))
       (|ofType| *6 (|Vector| (|Matrix| *3)))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Symbol|))
       (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofType| *4 (|PositiveInteger|))
       (|ofType| *5 (|List| *2)) (|ofType| *6 (|Vector| (|Matrix| *3)))))
 ((*1 *1)
  (AND (|isDomain| *1 (|GenericNonAssociativeAlgebra| *2 *3 *4 *5))
       (|ofCategory| *2 (|CommutativeRing|)) (|ofType| *3 (|PositiveInteger|))
       (|ofType| *4 (|List| (|Symbol|)))
       (|ofType| *5 (|Vector| (|Matrix| *2)))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| (|Polynomial| *4)))
       (|isDomain| *1 (|FramedNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FramedNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FramedNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofCategory| *3 (|Field|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| (|Polynomial| *3)))))
 ((*1 *2)
  (AND
   (|isDomain| *2
               (|SparseUnivariatePolynomial| (|Fraction| (|Polynomial| *3))))
   (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
   (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|CommutativeRing|))
   (|ofType| *4 (|PositiveInteger|)) (|ofType| *5 (|List| (|Symbol|)))
   (|ofType| *6 (|Vector| (|Matrix| *3)))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|SparseUnivariatePolynomial| (|Fraction| (|Polynomial| *3))))
   (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
   (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|CommutativeRing|))
   (|ofType| *4 (|PositiveInteger|)) (|ofType| *5 (|List| (|Symbol|)))
   (|ofType| *6 (|Vector| (|Matrix| *3)))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Fraction| (|Polynomial| *3)))
       (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofType| *4 (|PositiveInteger|))
       (|ofType| *5 (|List| (|Symbol|)))
       (|ofType| *6 (|Vector| (|Matrix| *3)))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Fraction| (|Polynomial| *3)))
       (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofType| *4 (|PositiveInteger|))
       (|ofType| *5 (|List| (|Symbol|)))
       (|ofType| *6 (|Vector| (|Matrix| *3)))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| (|Polynomial| *4)))
       (|isDomain| *1 (|FramedNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FramedNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FramedNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofCategory| *3 (|Field|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| (|Polynomial| *3)))))
 ((*1 *2)
  (AND
   (|isDomain| *2
               (|SparseUnivariatePolynomial| (|Fraction| (|Polynomial| *3))))
   (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
   (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|CommutativeRing|))
   (|ofType| *4 (|PositiveInteger|)) (|ofType| *5 (|List| (|Symbol|)))
   (|ofType| *6 (|Vector| (|Matrix| *3)))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|SparseUnivariatePolynomial| (|Fraction| (|Polynomial| *3))))
   (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
   (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|CommutativeRing|))
   (|ofType| *4 (|PositiveInteger|)) (|ofType| *5 (|List| (|Symbol|)))
   (|ofType| *6 (|Vector| (|Matrix| *3)))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Fraction| (|Polynomial| *3)))
       (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofType| *4 (|PositiveInteger|))
       (|ofType| *5 (|List| (|Symbol|)))
       (|ofType| *6 (|Vector| (|Matrix| *3)))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Fraction| (|Polynomial| *3)))
       (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofType| *4 (|PositiveInteger|))
       (|ofType| *5 (|List| (|Symbol|)))
       (|ofType| *6 (|Vector| (|Matrix| *3)))))) 
(((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Fraction| (|Polynomial| *3)))
       (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofType| *4 (|PositiveInteger|))
       (|ofType| *5 (|List| (|Symbol|)))
       (|ofType| *6 (|Vector| (|Matrix| *3)))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Fraction| (|Polynomial| *3)))
       (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofType| *4 (|PositiveInteger|))
       (|ofType| *5 (|List| (|Symbol|)))
       (|ofType| *6 (|Vector| (|Matrix| *3)))))) 
(((*1 *2 *1 *1)
  (AND (|isDomain| *2 (|Fraction| (|Polynomial| *3)))
       (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofType| *4 (|PositiveInteger|))
       (|ofType| *5 (|List| (|Symbol|)))
       (|ofType| *6 (|Vector| (|Matrix| *3)))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Fraction| (|Polynomial| *3)))
       (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofType| *4 (|PositiveInteger|))
       (|ofType| *5 (|List| (|Symbol|)))
       (|ofType| *6 (|Vector| (|Matrix| *3)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| *1))
       (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *4))
       (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|List| (|Polynomial| *4)))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|List| (|Polynomial| *4)))
       (|isDomain| *1 (|FramedNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FramedNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FramedNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *2 (|List| (|Polynomial| *3)))))
 ((*1 *2)
  (AND (|isDomain| *2 (|List| (|Polynomial| *3)))
       (|isDomain| *1 (|GenericNonAssociativeAlgebra| *3 *4 *5 *6))
       (|ofCategory| *3 (|IntegralDomain|))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofType| *4 (|PositiveInteger|))
       (|ofType| *5 (|List| (|Symbol|)))
       (|ofType| *6 (|Vector| (|Matrix| *3)))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| (|GenericNonAssociativeAlgebra| *4 *5 *6 *7)))
       (|isDomain| *2 (|List| (|Polynomial| *4)))
       (|isDomain| *1 (|GenericNonAssociativeAlgebra| *4 *5 *6 *7))
       (|ofCategory| *4 (|IntegralDomain|))
       (|ofCategory| *4 (|CommutativeRing|)) (|ofType| *5 (|PositiveInteger|))
       (|ofType| *6 (|List| (|Symbol|)))
       (|ofType| *7 (|Vector| (|Matrix| *4)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| *4))
       (|ofCategory| *4 (|Join| (|GcdDomain|) (|canonicalUnitNormal|)))
       (|isDomain| *2
                   (|Record| (|:| |basis| (|Vector| *4))
                             (|:| |transform| (|Matrix| (|Integer|)))))
       (|isDomain| *1 (|GcdBasis| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| (|Fraction| *4)))
       (|ofCategory| *4 (|Join| (|GcdDomain|) (|canonicalUnitNormal|)))
       (|isDomain| *2
                   (|Record| (|:| |basis| (|Vector| *4))
                             (|:| |transform| (|Matrix| (|Integer|)))))
       (|isDomain| *1 (|GcdBasis| *4))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *3 (|GcdDomain|))
       (|isDomain| *1 (|CylindricalAlgebraicDecompositionUtilities| *3 *4))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Vector| *3))
       (|ofCategory| *3 (|Join| (|GcdDomain|) (|canonicalUnitNormal|)))
       (|isDomain| *1 (|GcdBasis| *3))))) 
(((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|Record| (|:| |totdeg| (|NonNegativeInteger|)) (|:| |pol| *4)))
   (|isDomain| *5 (|NonNegativeInteger|))
   (|ofCategory| *4 (|PolynomialCategory| *6 *7 *8))
   (|ofCategory| *6 (|GcdDomain|))
   (|ofCategory| *7 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *8 (|OrderedSet|))
   (|isDomain| *2
               (|Record| (|:| |lcmfij| *7)
                         (|:| |totdeg| (|NonNegativeInteger|)) (|:| |poli| *4)
                         (|:| |polj| *4)))
   (|isDomain| *1 (|GroebnerInternalPackage| *6 *7 *8 *4))))) 
(((*1 *2 *3 *3)
  (AND
   (|isDomain| *3
               (|Record| (|:| |lcmfij| *5)
                         (|:| |totdeg| (|NonNegativeInteger|)) (|:| |poli| *7)
                         (|:| |polj| *7)))
   (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *7 (|PolynomialCategory| *4 *5 *6))
   (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *6 (|OrderedSet|))
   (|isDomain| *2 (|Boolean|))
   (|isDomain| *1 (|GroebnerInternalPackage| *4 *5 *6 *7))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|GroebnerInternalPackage| *4 *5 *6 *7))
       (|ofCategory| *7 (|PolynomialCategory| *4 *5 *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|PolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|GroebnerInternalPackage| *4 *5 *6 *7))))) 
(((*1 *2 *3 *4 *4 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *3
                   (|Record| (|:| |lcmfij| *6)
                             (|:| |totdeg| (|NonNegativeInteger|))
                             (|:| |poli| *4) (|:| |polj| *4)))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|PolynomialCategory| *5 *6 *7))
       (|ofCategory| *5 (|GcdDomain|)) (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *1 (|GroebnerInternalPackage| *5 *6 *7 *4))))) 
(((*1 *2 *3 *4 *4 *2 *2 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *3
                   (|Record| (|:| |lcmfij| *6)
                             (|:| |totdeg| (|NonNegativeInteger|))
                             (|:| |poli| *4) (|:| |polj| *4)))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *4 (|PolynomialCategory| *5 *6 *7))
       (|ofCategory| *5 (|GcdDomain|)) (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *1 (|GroebnerInternalPackage| *5 *6 *7 *4))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|GroebnerInternalPackage| *4 *5 *6 *3))
       (|ofCategory| *3 (|PolynomialCategory| *4 *5 *6))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|GroebnerInternalPackage| *4 *5 *6 *3))
       (|ofCategory| *3 (|PolynomialCategory| *4 *5 *6))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|PolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|GroebnerInternalPackage| *3 *4 *5 *6))))) 
(((*1 *2 *2 *2)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |lcmfij| *4)
                          (|:| |totdeg| (|NonNegativeInteger|)) (|:| |poli| *6)
                          (|:| |polj| *6))))
   (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *6 (|PolynomialCategory| *3 *4 *5))
   (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *5 (|OrderedSet|))
   (|isDomain| *1 (|GroebnerInternalPackage| *3 *4 *5 *6))))) 
(((*1 *2 *3 *4 *2)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |totdeg| (|NonNegativeInteger|))
                          (|:| |pol| *3))))
   (|isDomain| *4 (|NonNegativeInteger|))
   (|ofCategory| *3 (|PolynomialCategory| *5 *6 *7))
   (|ofCategory| *5 (|GcdDomain|))
   (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *7 (|OrderedSet|))
   (|isDomain| *1 (|GroebnerInternalPackage| *5 *6 *7 *3))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| *3))
       (|ofCategory| *3 (|PolynomialCategory| *5 *6 *7))
       (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|))
       (|isDomain| *2 (|Record| (|:| |poly| *3) (|:| |mult| *5)))
       (|isDomain| *1 (|GroebnerInternalPackage| *5 *6 *7 *3))))) 
(((*1 *2 *3 *2)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |lcmfij| *3)
                          (|:| |totdeg| (|NonNegativeInteger|)) (|:| |poli| *6)
                          (|:| |polj| *6))))
   (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *6 (|PolynomialCategory| *4 *3 *5))
   (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *5 (|OrderedSet|))
   (|isDomain| *1 (|GroebnerInternalPackage| *4 *3 *5 *6))))) 
(((*1 *2 *2)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |lcmfij| *4)
                          (|:| |totdeg| (|NonNegativeInteger|)) (|:| |poli| *6)
                          (|:| |polj| *6))))
   (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *6 (|PolynomialCategory| *3 *4 *5))
   (|ofCategory| *3 (|GcdDomain|)) (|ofCategory| *5 (|OrderedSet|))
   (|isDomain| *1 (|GroebnerInternalPackage| *3 *4 *5 *6))))) 
(((*1 *2 *3 *2)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |lcmfij| *5)
                          (|:| |totdeg| (|NonNegativeInteger|)) (|:| |poli| *3)
                          (|:| |polj| *3))))
   (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *3 (|PolynomialCategory| *4 *5 *6))
   (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *6 (|OrderedSet|))
   (|isDomain| *1 (|GroebnerInternalPackage| *4 *5 *6 *3))))) 
(((*1 *2 *3 *3 *3 *3)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|GroebnerInternalPackage| *4 *3 *5 *6))
       (|ofCategory| *6 (|PolynomialCategory| *4 *3 *5))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *3 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|GroebnerInternalPackage| *4 *3 *5 *6))
       (|ofCategory| *6 (|PolynomialCategory| *4 *3 *5))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|Record| (|:| |lcmfij| *5)
                         (|:| |totdeg| (|NonNegativeInteger|)) (|:| |poli| *7)
                         (|:| |polj| *7)))
   (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
   (|ofCategory| *7 (|PolynomialCategory| *4 *5 *6))
   (|ofCategory| *4 (|GcdDomain|)) (|ofCategory| *6 (|OrderedSet|))
   (|isDomain| *2 (|Boolean|))
   (|isDomain| *1 (|GroebnerInternalPackage| *4 *5 *6 *7))))) 
(((*1 *2 *2 *3 *3)
  (AND (|isDomain| *2 (|List| *7)) (|isDomain| *3 (|Integer|))
       (|ofCategory| *7 (|PolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *1 (|GroebnerInternalPackage| *4 *5 *6 *7))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| *2))
       (|ofCategory| *2 (|PolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|GcdDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *1 (|GroebnerInternalPackage| *4 *5 *6 *2))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|PolynomialCategory| *4 *5 *6))
       (|ofCategory| *4
                     (|Join| (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|List| (|List| *7)))
       (|isDomain| *1 (|GroebnerFactorizationPackage| *4 *5 *6 *7))))
 ((*1 *2 *3 *3 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *8 (|PolynomialCategory| *5 *6 *7))
       (|ofCategory| *5
                     (|Join| (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|)) (|isDomain| *2 (|List| (|List| *8)))
       (|isDomain| *1 (|GroebnerFactorizationPackage| *5 *6 *7 *8))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|PolynomialCategory| *4 *5 *6))
       (|ofCategory| *4
                     (|Join| (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|List| (|List| *7)))
       (|isDomain| *1 (|GroebnerFactorizationPackage| *4 *5 *6 *7))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *8 (|PolynomialCategory| *5 *6 *7))
       (|ofCategory| *5
                     (|Join| (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|)) (|isDomain| *2 (|List| (|List| *8)))
       (|isDomain| *1 (|GroebnerFactorizationPackage| *5 *6 *7 *8))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *7))
       (|ofCategory| *7 (|PolynomialCategory| *4 *5 *6))
       (|ofCategory| *4
                     (|Join| (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|)) (|isDomain| *2 (|List| (|List| *7)))
       (|isDomain| *1 (|GroebnerFactorizationPackage| *4 *5 *6 *7))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *8 (|PolynomialCategory| *5 *6 *7))
       (|ofCategory| *5
                     (|Join| (|PolynomialFactorizationExplicit|)
                             (|CharacteristicZero|)))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *7 (|OrderedSet|)) (|isDomain| *2 (|List| (|List| *8)))
       (|isDomain| *1 (|GroebnerFactorizationPackage| *5 *6 *7 *8))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *6))
       (|ofCategory| *6 (|PolynomialCategory| *3 *4 *5))
       (|ofCategory| *3 (|EuclideanDomain|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *1 (|EuclideanGroebnerBasisPackage| *3 *4 *5 *6))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|List| *7)) (|isDomain| *3 (|String|))
       (|ofCategory| *7 (|PolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|EuclideanDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *1 (|EuclideanGroebnerBasisPackage| *4 *5 *6 *7))))
 ((*1 *2 *2 *3 *3)
  (AND (|isDomain| *2 (|List| *7)) (|isDomain| *3 (|String|))
       (|ofCategory| *7 (|PolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|EuclideanDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *1 (|EuclideanGroebnerBasisPackage| *4 *5 *6 *7))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| *2))
       (|ofCategory| *2 (|PolynomialCategory| *4 *5 *6))
       (|ofCategory| *4 (|EuclideanDomain|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *6 (|OrderedSet|))
       (|isDomain| *1 (|EuclideanGroebnerBasisPackage| *4 *5 *6 *2))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|List| (|Integer|)))
       (|isDomain| *1 (|GaussianFactorizationPackage|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|GaloisGroupUtilities| *3))
       (|ofCategory| *3 (|FloatingPointSystem|)) (|ofCategory| *3 (|Ring|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|GaloisGroupUtilities| *3))
       (|ofCategory| *3 (|FloatingPointSystem|)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|GaloisGroupUtilities| *3))
       (|ofCategory| *3 (|FloatingPointSystem|)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|GaloisGroupUtilities| *3))
       (|ofCategory| *3 (|FloatingPointSystem|)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|GaloisGroupUtilities| *3))
       (|ofCategory| *3 (|Ring|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|GaloisGroupUtilities| *3)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|GaloisGroupUtilities| *3)) (|ofCategory| *3 (|Ring|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|GaloisGroupUtilities| *3)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *4 (|Integer|))
       (|isDomain| *1 (|GaloisGroupUtilities| *2)) (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *4 (|Factored| *6))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *5 (|Ring|)) (|isDomain| *2 (|List| *6))
       (|isDomain| *1 (|GaloisGroupPolynomialUtilities| *5 *6))))) 
(((*1 *2 *3 *2)
  (|partial| AND (|isDomain| *3 (|PositiveInteger|))
   (|isDomain| *1 (|GaloisGroupFactorizer| *2))
   (|ofCategory| *2 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3 *2 *4)
  (|partial| AND (|isDomain| *3 (|PositiveInteger|))
   (|isDomain| *4 (|NonNegativeInteger|))
   (|isDomain| *1 (|GaloisGroupFactorizer| *2))
   (|ofCategory| *2 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3 *2 *4)
  (|partial| AND (|isDomain| *3 (|PositiveInteger|))
   (|isDomain| *4 (|List| (|NonNegativeInteger|)))
   (|isDomain| *1 (|GaloisGroupFactorizer| *2))
   (|ofCategory| *2 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3 *2 *4 *5)
  (|partial| AND (|isDomain| *3 (|PositiveInteger|))
   (|isDomain| *4 (|List| (|NonNegativeInteger|)))
   (|isDomain| *5 (|NonNegativeInteger|))
   (|isDomain| *1 (|GaloisGroupFactorizer| *2))
   (|ofCategory| *2 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3 *2 *4 *5 *6)
  (|partial| AND (|isDomain| *3 (|PositiveInteger|))
   (|isDomain| *4 (|List| (|NonNegativeInteger|)))
   (|isDomain| *5 (|NonNegativeInteger|)) (|isDomain| *6 (|Boolean|))
   (|isDomain| *1 (|GaloisGroupFactorizer| *2))
   (|ofCategory| *2 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *4 (|Factored| *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *5))
       (|isDomain| *1 (|GaloisGroupPolynomialUtilities| *5 *2))
       (|ofCategory| *5 (|Ring|))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|List|
                (|Record| (|:| |factor| *4) (|:| |degree| (|Integer|)))))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Integer|)))
   (|isDomain| *2 (|Multiset| (|NonNegativeInteger|)))
   (|isDomain| *1 (|GaloisGroupFactorizer| *4))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Factored| *5))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|Multiset| (|NonNegativeInteger|)))
       (|isDomain| *1 (|GaloisGroupPolynomialUtilities| *4 *5))))) 
(((*1 *2 *2 *3)
  (AND (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|GaloisGroupPolynomialUtilities| *3 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *2 *3)
  (AND (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|GaloisGroupPolynomialUtilities| *3 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|Ring|))
       (|ofCategory| *2
                     (|Join| (|FloatingPointSystem|) (|RetractableTo| *4)
                             (|Field|) (|TranscendentalFunctionCategory|)
                             (|ElementaryFunctionCategory|)))
       (|isDomain| *1 (|GaloisGroupFactorizationUtilities| *4 *3 *2))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|Ring|))
       (|ofCategory| *2
                     (|Join| (|FloatingPointSystem|) (|RetractableTo| *4)
                             (|Field|) (|TranscendentalFunctionCategory|)
                             (|ElementaryFunctionCategory|)))
       (|isDomain| *1 (|GaloisGroupFactorizationUtilities| *4 *3 *2))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|NonNegativeInteger|)) (|ofCategory| *5 (|Ring|))
       (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|GaloisGroupFactorizationUtilities| *5 *3 *6))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *6
                     (|Join| (|FloatingPointSystem|) (|RetractableTo| *5)
                             (|Field|) (|TranscendentalFunctionCategory|)
                             (|ElementaryFunctionCategory|)))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|Ring|)) (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|GaloisGroupFactorizationUtilities| *4 *3 *5))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *5
                     (|Join| (|FloatingPointSystem|) (|RetractableTo| *4)
                             (|Field|) (|TranscendentalFunctionCategory|)
                             (|ElementaryFunctionCategory|)))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|Ring|)) (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|GaloisGroupFactorizationUtilities| *4 *3 *5))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *5
                     (|Join| (|FloatingPointSystem|) (|RetractableTo| *4)
                             (|Field|) (|TranscendentalFunctionCategory|)
                             (|ElementaryFunctionCategory|)))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|Ring|))
       (|ofCategory| *2
                     (|Join| (|FloatingPointSystem|) (|RetractableTo| *4)
                             (|Field|) (|TranscendentalFunctionCategory|)
                             (|ElementaryFunctionCategory|)))
       (|isDomain| *1 (|GaloisGroupFactorizationUtilities| *4 *3 *2))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|Ring|))
       (|ofCategory| *2
                     (|Join| (|FloatingPointSystem|) (|RetractableTo| *5)
                             (|Field|) (|TranscendentalFunctionCategory|)
                             (|ElementaryFunctionCategory|)))
       (|isDomain| *1 (|GaloisGroupFactorizationUtilities| *5 *3 *2))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|Ring|)) (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|GaloisGroupFactorizationUtilities| *4 *3 *5))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *5
                     (|Join| (|FloatingPointSystem|) (|RetractableTo| *4)
                             (|Field|) (|TranscendentalFunctionCategory|)
                             (|ElementaryFunctionCategory|)))))) 
(((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *4 (|Boolean|))
       (|isDomain| *5 (|Set| (|NonNegativeInteger|)))
       (|isDomain| *6 (|NonNegativeInteger|))
       (|isDomain| *2
                   (|Record| (|:| |contp| (|Integer|))
                             (|:| |factors|
                                  (|List|
                                   (|Record| (|:| |irr| *3)
                                             (|:| |pow| (|Integer|)))))))
       (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Boolean|))
       (|isDomain| *2
                   (|Record| (|:| |contp| (|Integer|))
                             (|:| |factors|
                                  (|List|
                                   (|Record| (|:| |irr| *3)
                                             (|:| |pow| (|Integer|)))))))
       (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *2
               (|Record| (|:| |prime| (|Integer|))
                         (|:| |factors| (|List| *3))))
   (|isDomain| *1 (|GaloisGroupFactorizer| *3))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|Factored| *3))
       (|ofCategory| *3 (|IntegralDomain|))))
 ((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|List|
                (|Record| (|:| |factor| *4) (|:| |degree| (|Integer|)))))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Integer|)))
   (|isDomain| *2 (|NonNegativeInteger|))
   (|isDomain| *1 (|GaloisGroupFactorizer| *4))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|GaloisGroupFactorizer| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *1 *2 *3)
  (AND
   (|isDomain| *3
               (|List|
                (|Record| (|:| |flg| (|Union| "nil" "sqfr" "irred" "prime"))
                          (|:| |fctr| *2) (|:| |xpnt| (|Integer|)))))
   (|ofCategory| *2 (|IntegralDomain|)) (|isDomain| *1 (|Factored| *2))))
 ((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|Record| (|:| |contp| (|Integer|))
                         (|:| |factors|
                              (|List|
                               (|Record| (|:| |irr| *4)
                                         (|:| |pow| (|Integer|)))))))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Integer|)))
   (|isDomain| *2 (|Factored| *4))
   (|isDomain| *1 (|GaloisGroupFactorizer| *4))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|FileName|)) (|isDomain| *1 (|FortranTemplate|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|FileName|)) (|isDomain| *1 (|FortranTemplate|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|FortranTemplate|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|FortranTemplate|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|FortranTemplate|))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| "void")))
   (|isDomain| *1 (|FortranType|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Polynomial| (|Integer|))))
       (|isDomain| *1 (|FortranType|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FortranType|))))) 
(((*1 *1) (|isDomain| *1 (|FortranType|)))) 
(((*1 *1) (|isDomain| *1 (|FortranType|)))) 
(((*1 *1) (|isDomain| *1 (|FortranType|)))) 
(((*1 *1) (|isDomain| *1 (|FortranType|)))) 
(((*1 *1) (|isDomain| *1 (|FortranType|)))) 
(((*1 *1) (|isDomain| *1 (|FortranType|)))) 
(((*1 *1) (|isDomain| *1 (|FortranType|)))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FortranScalarType|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FortranScalarType|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FortranScalarType|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FortranScalarType|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FortranScalarType|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|ofCategory| *4
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|RetractableTo| *3)))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|FunctionSpaceReduce| *4 *5))
       (|ofCategory| *5 (|FunctionSpace| *4))))) 
(((*1 *2 *3)
  (AND
   (|ofCategory| *4
                 (|Join| (|Comparable|) (|IntegralDomain|)
                         (|RetractableTo| (|Integer|))))
   (|isDomain| *2 (|Fraction| (|Integer|)))
   (|isDomain| *1 (|FunctionSpaceReduce| *4 *3))
   (|ofCategory| *3 (|FunctionSpace| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Kernel| *3)) (|ofCategory| *3 (|FunctionSpace| *5))
       (|ofCategory| *5
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|RetractableTo| (|Integer|))))
       (|isDomain| *2 (|SparseUnivariatePolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|FunctionSpaceReduce| *5 *3))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *2)) (|ofCategory| *2 (|FunctionSpace| *4))
       (|isDomain| *1 (|FunctionalSpecialFunction| *4 *2))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *2)) (|ofCategory| *2 (|FunctionSpace| *4))
       (|isDomain| *1 (|FunctionalSpecialFunction| *4 *2))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *2)) (|ofCategory| *2 (|FunctionSpace| *4))
       (|isDomain| *1 (|FunctionalSpecialFunction| *4 *2))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *2)) (|ofCategory| *2 (|FunctionSpace| *4))
       (|isDomain| *1 (|FunctionalSpecialFunction| *4 *2))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *2)) (|ofCategory| *2 (|FunctionSpace| *4))
       (|isDomain| *1 (|FunctionalSpecialFunction| *4 *2))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *2)) (|ofCategory| *2 (|FunctionSpace| *4))
       (|isDomain| *1 (|FunctionalSpecialFunction| *4 *2))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *2)) (|ofCategory| *2 (|FunctionSpace| *4))
       (|isDomain| *1 (|FunctionalSpecialFunction| *4 *2))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|FunctionalSpecialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|FloatSpecialFunctions|))))) 
(((*1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2 *2 *3)
  (AND (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *3 (|Float|))
       (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2 *2 *3)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *3 (|DoubleFloat|))
       (|isDomain| *1 (|FloatSpecialFunctions|))))) 
(((*1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2 *2 *3)
  (AND (|isDomain| *2 (|Complex| (|Float|))) (|isDomain| *3 (|Float|))
       (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2 *2 *3)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *3 (|DoubleFloat|))
       (|isDomain| *1 (|FloatSpecialFunctions|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Complex| (|Float|))) (|isDomain| *2 (|Float|))
       (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Complex| (|Float|))) (|isDomain| *2 (|Float|))
       (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Complex| (|DoubleFloat|)))
       (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|FloatSpecialFunctions|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatSpecialFunctions|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|FloatSpecialFunctions|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatSpecialFunctions|))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *1 (|FourierSeries| *3 *2))
       (|ofCategory| *3
                     (|Join| (|CommutativeRing|)
                             (|Algebra| (|Fraction| (|Integer|)))))
       (|ofCategory| *2 (|Join| (|OrderedSet|) (|AbelianGroup|)))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *1 (|FourierSeries| *3 *2))
       (|ofCategory| *3
                     (|Join| (|CommutativeRing|)
                             (|Algebra| (|Fraction| (|Integer|)))))
       (|ofCategory| *2 (|Join| (|OrderedSet|) (|AbelianGroup|)))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|PolynomialFactorizationExplicit|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|IntegrationResult| *3))
       (|isDomain| *1 (|FunctionSpaceComplexIntegration| *5 *3))
       (|ofCategory| *3
                     (|Join| (|TranscendentalFunctionCategory|)
                             (|AlgebraicallyClosedFunctionSpace| *5)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteSetAggregate| *3))
       (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *1)
  (AND (|ofCategory| *1 (|FiniteSetAggregate| *2)) (|ofCategory| *2 (|Finite|))
       (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *6))
       (|isDomain| *4
                   (|Record| (|:| |pos_Check?| (|Boolean|))
                             (|:| |atan_Flag|
                                  (|Union| "complex" "real: two sides"
                                           "real: left side" "real: right side"
                                           "just do it"))
                             (|:| |coeff_check?|
                                  (|Union| (|Mapping| (|Boolean|) *6)
                                           #1="none"))
                             (|:| |inv_check?|
                                  (|Union| (|Mapping| (|Boolean|) *6) #1#))
                             (|:| |zero_check?|
                                  (|Union| (|Mapping| (|Boolean|) *6) #1#))
                             (|:| |log_x_replace| (|Boolean|))
                             (|:| |log_x_val| *6)))
       (|ofCategory| *6
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|Algebra| (|Fraction| (|Integer|)))
                             (|FunctionSpace| *5)))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|ofCategory| *7 (|Join| (|OrderedAbelianMonoid|) (|OrderedRing|)))
       (|ofCategory| *8
                     (|Join| (|UnivariatePowerSeriesCategory| *6 *7) (|Field|)
                             (|PowerSeriesCategory| *6 *7
                                                    (|SingletonAsOrderedSet|))
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *10 (|UnivariateTaylorSeriesCategory| *6))
       (|ofType| *12 (|Mapping| *6 *7))
       (|isDomain| *2
                   (|Union| (|:| |%series| *8)
                            (|:| |%problem|
                                 (|Record| (|:| |func| (|String|))
                                           (|:| |prob| (|String|))))))
       (|isDomain| *1
                   (|FunctionSpaceToUnivariatePowerSeries2| *5 *6 *7 *8 *9 *10
                                                            *11 *12 *13))
       (|ofCategory| *9 (|PartialTranscendentalFunctions| *8))
       (|ofCategory| *11
                     (|TaylorSeriesExpansion| *6 *7 (|SingletonAsOrderedSet|)
                                              *8 *10))
       (|ofType| *13 (|Symbol|))))) 
(((*1 *2 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|ofCategory| *4
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|Algebra| (|Fraction| (|Integer|)))
                         (|FunctionSpace| *3)))
   (|ofCategory| *5 (|Join| (|OrderedAbelianMonoid|) (|OrderedRing|)))
   (|ofCategory| *2
                 (|Join| (|UnivariatePowerSeriesCategory| *4 *5) (|Field|)
                         (|PowerSeriesCategory| *4 *5
                                                (|SingletonAsOrderedSet|))
                         (|TranscendentalFunctionCategory|)))
   (|ofCategory| *7 (|UnivariateTaylorSeriesCategory| *4))
   (|ofType| *9 (|Mapping| *4 *5))
   (|isDomain| *1
               (|FunctionSpaceToUnivariatePowerSeries2| *3 *4 *5 *2 *6 *7 *8 *9
                                                        *10))
   (|ofCategory| *6 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *8
                 (|TaylorSeriesExpansion| *4 *5 (|SingletonAsOrderedSet|) *2
                                          *7))
   (|ofType| *10 (|Symbol|))))) 
(((*1 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|ofCategory| *4
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|Algebra| (|Fraction| (|Integer|)))
                         (|FunctionSpace| *3)))
   (|ofCategory| *5 (|Join| (|OrderedAbelianMonoid|) (|OrderedRing|)))
   (|ofCategory| *2
                 (|Join| (|UnivariatePowerSeriesCategory| *4 *5) (|Field|)
                         (|PowerSeriesCategory| *4 *5
                                                (|SingletonAsOrderedSet|))
                         (|TranscendentalFunctionCategory|)))
   (|ofCategory| *7 (|UnivariateTaylorSeriesCategory| *4))
   (|ofType| *9 (|Mapping| *4 *5))
   (|isDomain| *1
               (|FunctionSpaceToUnivariatePowerSeries2| *3 *4 *5 *2 *6 *7 *8 *9
                                                        *10))
   (|ofCategory| *6 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *8
                 (|TaylorSeriesExpansion| *4 *5 (|SingletonAsOrderedSet|) *2
                                          *7))
   (|ofType| *10 (|Symbol|))))) 
(((*1 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|ofCategory| *4
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|Algebra| (|Fraction| (|Integer|)))
                         (|FunctionSpace| *3)))
   (|ofCategory| *5 (|Join| (|OrderedAbelianMonoid|) (|OrderedRing|)))
   (|ofCategory| *2
                 (|Join| (|UnivariatePowerSeriesCategory| *4 *5) (|Field|)
                         (|PowerSeriesCategory| *4 *5
                                                (|SingletonAsOrderedSet|))
                         (|TranscendentalFunctionCategory|)))
   (|ofCategory| *7 (|UnivariateTaylorSeriesCategory| *4))
   (|ofType| *9 (|Mapping| *4 *5))
   (|isDomain| *1
               (|FunctionSpaceToUnivariatePowerSeries2| *3 *4 *5 *2 *6 *7 *8 *9
                                                        *10))
   (|ofCategory| *6 (|PartialTranscendentalFunctions| *2))
   (|ofCategory| *8
                 (|TaylorSeriesExpansion| *4 *5 (|SingletonAsOrderedSet|) *2
                                          *7))
   (|ofType| *10 (|Symbol|))))) 
(((*1 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *1 (|FunctionSpaceToExponentialExpansion| *3 *2 *4 *5))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *3)))
   (|ofType| *4 (|Symbol|)) (|ofType| *5 *2)))
 ((*1 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|Algebra| (|Fraction| (|Integer|)))
                         (|FunctionSpace| *3)))
   (|ofCategory| *4 (|Join| (|OrderedAbelianMonoid|) (|OrderedRing|)))
   (|ofCategory| *5
                 (|Join| (|UnivariatePowerSeriesCategory| *2 *4) (|Field|)
                         (|PowerSeriesCategory| *2 *4
                                                (|SingletonAsOrderedSet|))
                         (|TranscendentalFunctionCategory|)))
   (|ofCategory| *7 (|UnivariateTaylorSeriesCategory| *2))
   (|ofType| *9 (|Mapping| *2 *4))
   (|isDomain| *1
               (|FunctionSpaceToUnivariatePowerSeries2| *3 *2 *4 *5 *6 *7 *8 *9
                                                        *10))
   (|ofCategory| *6 (|PartialTranscendentalFunctions| *5))
   (|ofCategory| *8
                 (|TaylorSeriesExpansion| *2 *4 (|SingletonAsOrderedSet|) *5
                                          *7))
   (|ofType| *10 (|Symbol|))))) 
(((*1 *2 *3 *4 *5 *4 *3)
  (AND (|isDomain| *4 (|Boolean|))
       (|isDomain| *5
                   (|Union| #1="complex" #2="real: two sides"
                            #3="real: left side" #4="real: right side"
                            #5="just do it"))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|Algebra| (|Fraction| (|Integer|)))
                             (|FunctionSpace| *6)
                             (CATEGORY |domain| (SIGNATURE |coerce| ($ *7)))))
       (|ofCategory| *7 (|Join| (|OrderedAbelianMonoid|) (|OrderedRing|)))
       (|ofCategory| *8
                     (|Join| (|UnivariatePowerSeriesCategory| *3 *7) (|Field|)
                             (|PowerSeriesCategory| *3 *7
                                                    (|SingletonAsOrderedSet|))
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *10 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *2
                   (|Union| (|:| |%series| *8)
                            (|:| |%problem|
                                 (|Record| (|:| |func| (|String|))
                                           (|:| |prob| (|String|))))))
       (|isDomain| *1
                   (|FunctionSpaceToUnivariatePowerSeries| *6 *3 *7 *8 *9 *10
                                                           *11 *12))
       (|ofCategory| *9 (|PartialTranscendentalFunctions| *8))
       (|ofCategory| *11
                     (|TaylorSeriesExpansion| *3 *7 (|SingletonAsOrderedSet|)
                                              *8 *10))
       (|ofType| *12 (|Symbol|))))
 ((*1 *2 *3 *4 *5 *4 *3 *6 *6 *6)
  (AND (|isDomain| *5 (|Union| #1# #2# #3# #4# #5#))
       (|isDomain| *6 (|Mapping| (|Boolean|) *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|Algebra| (|Fraction| (|Integer|)))
                             (|FunctionSpace| *7)
                             (CATEGORY |domain| (SIGNATURE |coerce| ($ *8)))))
       (|ofCategory| *8 (|Join| (|OrderedAbelianMonoid|) (|OrderedRing|)))
       (|isDomain| *4 (|Boolean|))
       (|ofCategory| *7
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|ofCategory| *9
                     (|Join| (|UnivariatePowerSeriesCategory| *3 *8) (|Field|)
                             (|PowerSeriesCategory| *3 *8
                                                    (|SingletonAsOrderedSet|))
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *11 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *2
                   (|Union| (|:| |%series| *9)
                            (|:| |%problem|
                                 (|Record| (|:| |func| (|String|))
                                           (|:| |prob| (|String|))))))
       (|isDomain| *1
                   (|FunctionSpaceToUnivariatePowerSeries| *7 *3 *8 *9 *10 *11
                                                           *12 *13))
       (|ofCategory| *10 (|PartialTranscendentalFunctions| *9))
       (|ofCategory| *12
                     (|TaylorSeriesExpansion| *3 *8 (|SingletonAsOrderedSet|)
                                              *9 *11))
       (|ofType| *13 (|Symbol|))))
 ((*1 *2 *3 *4 *5 *4 *3)
  (AND (|isDomain| *4 (|Boolean|))
       (|isDomain| *5
                   (|Union| #6="complex" #7="real: two sides"
                            #8="real: left side" #9="real: right side"
                            #10="just do it"))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|Algebra| (|Fraction| (|Integer|)))
                             (|FunctionSpace| *6)))
       (|ofCategory| *7 (|Join| (|OrderedAbelianMonoid|) (|OrderedRing|)))
       (|ofCategory| *8
                     (|Join| (|UnivariatePowerSeriesCategory| *3 *7) (|Field|)
                             (|PowerSeriesCategory| *3 *7
                                                    (|SingletonAsOrderedSet|))
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *10 (|UnivariateTaylorSeriesCategory| *3))
       (|ofType| *12 (|Mapping| *3 *7))
       (|isDomain| *2
                   (|Union| (|:| |%series| *8)
                            (|:| |%problem|
                                 (|Record| (|:| |func| (|String|))
                                           (|:| |prob| (|String|))))))
       (|isDomain| *1
                   (|FunctionSpaceToUnivariatePowerSeries2| *6 *3 *7 *8 *9 *10
                                                            *11 *12 *13))
       (|ofCategory| *9 (|PartialTranscendentalFunctions| *8))
       (|ofCategory| *11
                     (|TaylorSeriesExpansion| *3 *7 (|SingletonAsOrderedSet|)
                                              *8 *10))
       (|ofType| *13 (|Symbol|))))
 ((*1 *2 *3 *4 *5 *4 *3 *6 *6 *6)
  (AND (|isDomain| *5 (|Union| #6# #7# #8# #9# #10#))
       (|isDomain| *6 (|Mapping| (|Boolean|) *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|Algebra| (|Fraction| (|Integer|)))
                             (|FunctionSpace| *7)))
       (|isDomain| *4 (|Boolean|))
       (|ofCategory| *7
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|ofCategory| *8 (|Join| (|OrderedAbelianMonoid|) (|OrderedRing|)))
       (|ofCategory| *9
                     (|Join| (|UnivariatePowerSeriesCategory| *3 *8) (|Field|)
                             (|PowerSeriesCategory| *3 *8
                                                    (|SingletonAsOrderedSet|))
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *11 (|UnivariateTaylorSeriesCategory| *3))
       (|ofType| *13 (|Mapping| *3 *8))
       (|isDomain| *2
                   (|Union| (|:| |%series| *9)
                            (|:| |%problem|
                                 (|Record| (|:| |func| (|String|))
                                           (|:| |prob| (|String|))))))
       (|isDomain| *1
                   (|FunctionSpaceToUnivariatePowerSeries2| *7 *3 *8 *9 *10 *11
                                                            *12 *13 *14))
       (|ofCategory| *10 (|PartialTranscendentalFunctions| *9))
       (|ofCategory| *12
                     (|TaylorSeriesExpansion| *3 *8 (|SingletonAsOrderedSet|)
                                              *9 *11))
       (|ofType| *14 (|Symbol|))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|Boolean|))
       (|isDomain| *5
                   (|Union| "complex" "real: two sides" "real: left side"
                            "real: right side" "just do it"))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|Algebra| (|Fraction| (|Integer|)))
                             (|FunctionSpace| *6)
                             (CATEGORY |domain| (SIGNATURE |coerce| ($ *7)))))
       (|ofCategory| *7 (|Join| (|OrderedAbelianMonoid|) (|OrderedRing|)))
       (|ofCategory| *8
                     (|Join| (|UnivariatePowerSeriesCategory| *3 *7) (|Field|)
                             (|PowerSeriesCategory| *3 *7
                                                    (|SingletonAsOrderedSet|))
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *10 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *2
                   (|Union| (|:| |%series| *8)
                            (|:| |%problem|
                                 (|Record| (|:| |func| (|String|))
                                           (|:| |prob| (|String|))))))
       (|isDomain| *1
                   (|FunctionSpaceToUnivariatePowerSeries| *6 *3 *7 *8 *9 *10
                                                           *11 *12))
       (|ofCategory| *9 (|PartialTranscendentalFunctions| *8))
       (|ofCategory| *11
                     (|TaylorSeriesExpansion| *3 *7 (|SingletonAsOrderedSet|)
                                              *8 *10))
       (|ofType| *12 (|Symbol|))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|Boolean|))
       (|isDomain| *5
                   (|Union| "complex" "real: two sides" "real: left side"
                            "real: right side" "just do it"))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|Algebra| (|Fraction| (|Integer|)))
                             (|FunctionSpace| *6)))
       (|ofCategory| *7 (|Join| (|OrderedAbelianMonoid|) (|OrderedRing|)))
       (|ofCategory| *8
                     (|Join| (|UnivariatePowerSeriesCategory| *3 *7) (|Field|)
                             (|PowerSeriesCategory| *3 *7
                                                    (|SingletonAsOrderedSet|))
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *10 (|UnivariateTaylorSeriesCategory| *3))
       (|ofType| *12 (|Mapping| *3 *7))
       (|isDomain| *2
                   (|Union| (|:| |%series| *8)
                            (|:| |%problem|
                                 (|Record| (|:| |func| (|String|))
                                           (|:| |prob| (|String|))))))
       (|isDomain| *1
                   (|FunctionSpaceToUnivariatePowerSeries2| *6 *3 *7 *8 *9 *10
                                                            *11 *12 *13))
       (|ofCategory| *9 (|PartialTranscendentalFunctions| *8))
       (|ofCategory| *11
                     (|TaylorSeriesExpansion| *3 *7 (|SingletonAsOrderedSet|)
                                              *8 *10))
       (|ofType| *13 (|Symbol|))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|Boolean|))
       (|isDomain| *5
                   (|Union| "complex" "real: two sides" "real: left side"
                            "real: right side" "just do it"))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|Algebra| (|Fraction| (|Integer|)))
                             (|FunctionSpace| *6)
                             (CATEGORY |domain| (SIGNATURE |coerce| ($ *7)))))
       (|ofCategory| *7 (|Join| (|OrderedAbelianMonoid|) (|OrderedRing|)))
       (|ofCategory| *8
                     (|Join| (|UnivariatePowerSeriesCategory| *3 *7) (|Field|)
                             (|PowerSeriesCategory| *3 *7
                                                    (|SingletonAsOrderedSet|))
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *10 (|UnivariateTaylorSeriesCategory| *3))
       (|isDomain| *2
                   (|Union| (|:| |%series| *8)
                            (|:| |%problem|
                                 (|Record| (|:| |func| (|String|))
                                           (|:| |prob| (|String|))))))
       (|isDomain| *1
                   (|FunctionSpaceToUnivariatePowerSeries| *6 *3 *7 *8 *9 *10
                                                           *11 *12))
       (|ofCategory| *9 (|PartialTranscendentalFunctions| *8))
       (|ofCategory| *11
                     (|TaylorSeriesExpansion| *3 *7 (|SingletonAsOrderedSet|)
                                              *8 *10))
       (|ofType| *12 (|Symbol|))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|Boolean|))
       (|isDomain| *5
                   (|Union| "complex" "real: two sides" "real: left side"
                            "real: right side" "just do it"))
       (|ofCategory| *6
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|Algebra| (|Fraction| (|Integer|)))
                             (|FunctionSpace| *6)))
       (|ofCategory| *7 (|Join| (|OrderedAbelianMonoid|) (|OrderedRing|)))
       (|ofCategory| *8
                     (|Join| (|UnivariatePowerSeriesCategory| *3 *7) (|Field|)
                             (|PowerSeriesCategory| *3 *7
                                                    (|SingletonAsOrderedSet|))
                             (|TranscendentalFunctionCategory|)))
       (|ofCategory| *10 (|UnivariateTaylorSeriesCategory| *3))
       (|ofType| *12 (|Mapping| *3 *7))
       (|isDomain| *2
                   (|Union| (|:| |%series| *8)
                            (|:| |%problem|
                                 (|Record| (|:| |func| (|String|))
                                           (|:| |prob| (|String|))))))
       (|isDomain| *1
                   (|FunctionSpaceToUnivariatePowerSeries2| *6 *3 *7 *8 *9 *10
                                                            *11 *12 *13))
       (|ofCategory| *9 (|PartialTranscendentalFunctions| *8))
       (|ofCategory| *11
                     (|TaylorSeriesExpansion| *3 *7 (|SingletonAsOrderedSet|)
                                              *8 *10))
       (|ofType| *13 (|Symbol|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Boolean|))
       (|ofCategory| *5
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Union|
                    (|:| |%expansion| (|ExponentialExpansion| *5 *3 *6 *7))
                    (|:| |%problem|
                         (|Record| (|:| |func| (|String|))
                                   (|:| |prob| (|String|))))))
       (|isDomain| *1 (|FunctionSpaceToExponentialExpansion| *5 *3 *6 *7))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *5)))
       (|ofType| *6 (|Symbol|)) (|ofType| *7 *3)))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|List| *1))
       (|ofCategory| *1 (|FunctionSpace| *4))
       (|ofCategory| *4 (|Comparable|))))
 ((*1 *1 *2 *1 *1 *1 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|ofCategory| *1 (|FunctionSpace| *3))
       (|ofCategory| *3 (|Comparable|))))
 ((*1 *1 *2 *1 *1 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|ofCategory| *1 (|FunctionSpace| *3))
       (|ofCategory| *3 (|Comparable|))))
 ((*1 *1 *2 *1 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|ofCategory| *1 (|FunctionSpace| *3))
       (|ofCategory| *3 (|Comparable|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|ofCategory| *1 (|FunctionSpace| *3))
       (|ofCategory| *3 (|Comparable|))))) 
(((*1 *2 *1)
  (|partial| AND (|ofCategory| *3 (|AbelianSemiGroup|))
   (|ofCategory| *3 (|Comparable|))
   (|isDomain| *2
               (|Record| (|:| |coef| (|Integer|)) (|:| |var| (|Kernel| *1))))
   (|ofCategory| *1 (|FunctionSpace| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *1)) (|ofCategory| *1 (|FunctionSpace| *4))
       (|ofCategory| *4 (|Comparable|)) (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|List| (|Kernel| *1)))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Comparable|))
       (|isDomain| *2 (|List| (|Kernel| *1)))
       (|ofCategory| *1 (|FunctionSpace| *3))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Factored| *3)) (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *1 (|FactoredFunctionUtilities| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| *1))
       (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2)
  (AND (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|FramedNonAssociativeAlgebra&| *3 *2))
       (|ofCategory| *3 (|FramedNonAssociativeAlgebra| *2))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FramedNonAssociativeAlgebra| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| *1))
       (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *2))
       (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2)
  (AND (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|FramedNonAssociativeAlgebra&| *3 *2))
       (|ofCategory| *3 (|FramedNonAssociativeAlgebra| *2))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FramedNonAssociativeAlgebra| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| *1))
       (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *4))
       (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Matrix| *4))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Matrix| *4))
       (|isDomain| *1 (|FramedNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FramedNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FramedNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Matrix| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| *1))
       (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *4))
       (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Matrix| *4))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Matrix| *4))
       (|isDomain| *1 (|FramedNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FramedNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FramedNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Matrix| *3))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Vector| *1))
       (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *4))
       (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Matrix| *4))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FramedNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Matrix| *3))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Vector| *1))
       (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *4))
       (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Matrix| *4))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FramedNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Matrix| *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Vector| *3)) (|ofCategory| *3 (|Field|))
       (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *3))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Vector| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *4 (|UniqueFactorizationDomain|))
       (|ofCategory| *1 (|FunctionFieldCategory| *4 *3 *5))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *3)))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Vector| *4)) (|isDomain| *3 (|Vector| *1))
       (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *4))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Vector| *4)) (|isDomain| *3 (|Vector| *1))
       (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *1 (|FiniteRankAlgebra| *4 *5))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Vector| *3))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *1 (|FramedModule| *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|FractionalIdeal| *3 *4 *5 *6))
       (|ofCategory| *6 (|RetractableTo| *4))
       (|ofCategory| *3 (|EuclideanDomain|))
       (|ofCategory| *4 (|QuotientFieldCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *6 (|FramedAlgebra| *4 *5)) (|ofType| *7 (|Vector| *6))
       (|isDomain| *1 (|FractionalIdealAsModule| *3 *4 *5 *6 *7))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Vector| *6)) (|ofCategory| *6 (|FramedAlgebra| *4 *5))
       (|ofCategory| *4 (|QuotientFieldCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *3 (|EuclideanDomain|))
       (|isDomain| *1 (|FractionalIdealAsModule| *3 *4 *5 *6 *7))
       (|ofType| *7 *2)))) 
(((*1 *1 *1)
  (AND (|ofCategory| *2 (|EuclideanDomain|))
       (|ofCategory| *3 (|QuotientFieldCategory| *2))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|isDomain| *1 (|FractionalIdeal| *2 *3 *4 *5))
       (|ofCategory| *5
                     (|Join| (|FramedAlgebra| *3 *4) (|RetractableTo| *3)))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *4 (|Vector| *2))
       (|ofCategory| *5 (|EuclideanDomain|))
       (|ofCategory| *6 (|QuotientFieldCategory| *5))
       (|ofCategory| *2 (|Join| (|FramedAlgebra| *6 *7) (|RetractableTo| *6)))
       (|isDomain| *1 (|FractionalIdeal| *5 *6 *7 *2))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| *1))
       (|ofCategory| *1 (|FiniteRankAlgebra| *4 *5))
       (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *2 (|Matrix| *4))))
 ((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *2 (|Matrix| *4))
       (|isDomain| *1 (|FramedAlgebra&| *3 *4 *5))
       (|ofCategory| *3 (|FramedAlgebra| *4 *5))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FramedAlgebra| *3 *4))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|isDomain| *2 (|Matrix| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Matrix| (|Integer|)))
       (|isDomain| *1 (|FiniteGroupPackage| *3))
       (|ofCategory| *3 (|Join| (|Group|) (|Finite|)))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Vector| *1))
       (|ofCategory| *1 (|FiniteRankAlgebra| *4 *5))
       (|ofCategory| *4 (|CommutativeRing|))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *2 (|Matrix| *4))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FramedAlgebra| *3 *4))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|isDomain| *2 (|Matrix| *3))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *1 (|Factored| *2))
       (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2 (|List| (|Record| (|:| |gen| *3) (|:| |exp| (|Integer|)))))
   (|isDomain| *1 (|FreeGroup| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |gen| *3) (|:| |exp| (|NonNegativeInteger|)))))
   (|isDomain| *1 (|FreeMonoid| *3)) (|ofCategory| *3 (|SetCategory|))))
 ((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |factor| *3) (|:| |exponent| (|Integer|)))))
   (|isDomain| *1 (|Factored| *3)) (|ofCategory| *3 (|IntegralDomain|))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *1 (|Factored| *2))
       (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Factored| *3))
       (|ofCategory| *3 (|IntegralDomain|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|Union| "nil" "sqfr" "irred" "prime"))
       (|isDomain| *1 (|Factored| *4)) (|ofCategory| *4 (|IntegralDomain|))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *1 (|Factored| *2))
       (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *1 (|Factored| *2))
       (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *1 *2 *3 *4)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *4 (|Union| "nil" "sqfr" "irred" "prime"))
       (|isDomain| *1 (|Factored| *2)) (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Float|))) (|isDomain| *1 (|DrawOption|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4)) (|isDomain| *3 (|String|))
       (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *1 (|FiniteGraph| *4))))
 ((*1 *1)
  (|partial| AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *2))
   (|ofCategory| *2 (|IntegralDomain|)) (|ofCategory| *2 (|CommutativeRing|))))
 ((*1 *2 *1)
  (AND (|isDomain| *1 (|Factored| *2)) (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|Factored| *2)) (|ofCategory| *2 (|IntegralDomain|))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *3 (|Boolean|))
       (|isDomain| *1 (|Bits|))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|ofCategory| *1 (|arbitraryPrecision|))
       (|ofCategory| *1 (|FloatingPointSystem|))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FloatingPointSystem|))
       (|isDomain| *2 (|PositiveInteger|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *1 (|arbitraryPrecision|))
       (|ofCategory| *1 (|FloatingPointSystem|))
       (|isDomain| *2 (|PositiveInteger|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *1 (|arbitraryPrecision|))
       (|ofCategory| *1 (|FloatingPointSystem|))
       (|isDomain| *2 (|PositiveInteger|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteFieldCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *2 *1 *1)
  (|partial| AND (|ofCategory| *1 (|FieldOfPrimeCharacteristic|))
   (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|FieldOfPrimeCharacteristic|))
       (|isDomain| *2 (|NonNegativeInteger|))))
 ((*1 *1 *1) (|ofCategory| *1 (|FieldOfPrimeCharacteristic|)))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Fraction| *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *3 (|Join| (|Field|) (|CharacteristicZero|)))
       (|isDomain| *1 (|FullPartialFractionExpansion| *3 *4))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))
       (|isDomain| *1 (|FullPartialFractionExpansion| *3 *2))
       (|ofCategory| *3 (|Join| (|Field|) (|CharacteristicZero|)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|Join| (|Field|) (|CharacteristicZero|)))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |exponent| (|NonNegativeInteger|))
                              (|:| |center| *4) (|:| |num| *4))))
       (|isDomain| *1 (|FullPartialFractionExpansion| *3 *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| (|String|))) (|isDomain| *1 (|FortranPackage|))))) 
(((*1 *2 *3 *4 *5 *6)
  (AND
   (|isDomain| *5
               (|List|
                (|List|
                 (|Union| (|:| |array| (|List| *3)) (|:| |scalar| *3)))))
   (|isDomain| *6 (|List| (|Symbol|))) (|isDomain| *3 (|Symbol|))
   (|isDomain| *4
               (|List| (|Union| (|:| |array| (|List| *3)) (|:| |scalar| *3))))
   (|isDomain| *2 (|SExpression|)) (|isDomain| *1 (|FortranPackage|))))
 ((*1 *2 *3 *4 *5 *6 *3)
  (AND
   (|isDomain| *5
               (|List|
                (|List|
                 (|Union| (|:| |array| (|List| *3)) (|:| |scalar| *3)))))
   (|isDomain| *6 (|List| (|Symbol|))) (|isDomain| *3 (|Symbol|))
   (|isDomain| *4
               (|List| (|Union| (|:| |array| (|List| *3)) (|:| |scalar| *3))))
   (|isDomain| *2 (|SExpression|)) (|isDomain| *1 (|FortranPackage|))))
 ((*1 *2 *3 *4 *5 *4)
  (AND (|isDomain| *4 (|List| (|Symbol|))) (|isDomain| *5 (|TheSymbolTable|))
       (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|SExpression|))
       (|isDomain| *1 (|FortranPackage|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *1 (|ScriptFormulaFormat|))))) 
(((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *1 (|ScriptFormulaFormat|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|String|))
       (|isDomain| *1 (|FortranOutputStackPackage|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|FileName|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|FortranOutputStackPackage|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|FortranOutputStackPackage|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|FortranOutputStackPackage|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Stack| (|String|)))
       (|isDomain| *1 (|FortranOutputStackPackage|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Stack| (|String|)))
       (|isDomain| *1 (|FortranOutputStackPackage|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|OutputForm|))
       (|isDomain| *1 (|FreeNilpotentLie| *3 *4 *5))
       (|ofType| *3 (|NonNegativeInteger|))
       (|ofType| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|CommutativeRing|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|OutputForm|))
       (|isDomain| *1 (|FreeNilpotentLie| *3 *4 *5))
       (|ofType| *3 (|NonNegativeInteger|))
       (|ofType| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|CommutativeRing|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Permutation| *3)))
       (|ofCategory| *3 (|SetCategory|)) (|isDomain| *1 (|FunctionGraph| *3))))
 ((*1 *1 *2 *3)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |value| *4) (|:| |posX| (|NonNegativeInteger|))
                          (|:| |posY| (|NonNegativeInteger|)))))
   (|isDomain| *3
               (|List|
                (|Record| (|:| |name| (|String|))
                          (|:| |arrType| (|NonNegativeInteger|))
                          (|:| |fromOb| (|NonNegativeInteger|))
                          (|:| |toOb| (|NonNegativeInteger|))
                          (|:| |xOffset| (|Integer|))
                          (|:| |yOffset| (|Integer|))
                          (|:| |map| (|List| (|NonNegativeInteger|))))))
   (|ofCategory| *4 (|SetCategory|)) (|isDomain| *1 (|FunctionGraph| *4))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |value| *3) (|:| |posX| (|NonNegativeInteger|))
                          (|:| |posY| (|NonNegativeInteger|))
                          (|:| |next| (|NonNegativeInteger|))
                          (|:| |map| (|List| (|NonNegativeInteger|))))))
   (|ofCategory| *3 (|SetCategory|)) (|isDomain| *1 (|FunctionGraph| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|FunctionGraph| *3))))) 
(((*1 *1 *2 *2 *2)
  (AND (|isDomain| *2 (|String|)) (|ofCategory| *1 (|FileNameCategory|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FileNameCategory|)) (|isDomain| *2 (|String|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FileNameCategory|)) (|isDomain| *2 (|String|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FileNameCategory|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FileNameCategory|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FileNameCategory|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|FreeMonoid| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|FreeMonoid| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *1 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |lm| (|FreeMonoid| *3))
                         (|:| |mm| (|FreeMonoid| *3))
                         (|:| |rm| (|FreeMonoid| *3))))
   (|isDomain| *1 (|FreeMonoid| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3))
       (|ofCategory| *3 (|Join| (|PartialOrder|) (|SetCategory|)))
       (|isDomain| *1 (|FiniteMoebiusFunction| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FreeModuleCategory| *3 *4))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *4 (|Comparable|)) (|isDomain| *2 (|List| *4))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Integer|)))))
       (|isDomain| *4 (|List| (|Symbol|))) (|isDomain| *2 (|List| (|List| *5)))
       (|isDomain| *1 (|FloatingRealPackage| *5))
       (|ofCategory| *5 (|Join| (|OrderedRing|) (|Field|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| (|Integer|))))
       (|isDomain| *2 (|List| *4)) (|isDomain| *1 (|FloatingRealPackage| *4))
       (|ofCategory| *4 (|Join| (|OrderedRing|) (|Field|)))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| (|Complex| (|Integer|)))))
       (|isDomain| *2 (|List| (|Complex| *4)))
       (|isDomain| *1 (|FloatingComplexPackage| *4))
       (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))))
 ((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Complex| (|Integer|))))))
   (|isDomain| *4 (|List| (|Symbol|)))
   (|isDomain| *2 (|List| (|List| (|Complex| *5))))
   (|isDomain| *1 (|FloatingComplexPackage| *5))
   (|ofCategory| *5 (|Join| (|Field|) (|OrderedRing|)))))) 
(((*1 *2 *3 *4)
  (AND
   (|isDomain| *3 (|List| (|Fraction| (|Polynomial| (|Complex| (|Integer|))))))
   (|isDomain| *2 (|List| (|List| (|Equation| (|Polynomial| (|Complex| *4))))))
   (|isDomain| *1 (|FloatingComplexPackage| *4))
   (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|List|
                (|Equation|
                 (|Fraction| (|Polynomial| (|Complex| (|Integer|)))))))
   (|isDomain| *2 (|List| (|List| (|Equation| (|Polynomial| (|Complex| *4))))))
   (|isDomain| *1 (|FloatingComplexPackage| *4))
   (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Fraction| (|Polynomial| (|Complex| (|Integer|)))))
       (|isDomain| *2 (|List| (|Equation| (|Polynomial| (|Complex| *4)))))
       (|isDomain| *1 (|FloatingComplexPackage| *4))
       (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|Equation|
                (|Fraction| (|Polynomial| (|Complex| (|Integer|))))))
   (|isDomain| *2 (|List| (|Equation| (|Polynomial| (|Complex| *4)))))
   (|isDomain| *1 (|FloatingComplexPackage| *4))
   (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|Float|)))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|DoubleFloat|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|DoubleFloat|))))
 ((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|Fraction| (|Integer|))) (|isDomain| *1 (|Float|))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|Fraction| (|Integer|))) (|isDomain| *1 (|Float|))))) 
(((*1 *1 *1) (|isDomain| *1 (|DoubleFloat|)))
 ((*1 *1 *1) (|isDomain| *1 (|Float|))) ((*1 *1) (|isDomain| *1 (|Float|)))) 
(((*1 *1 *1) (|isDomain| *1 (|DoubleFloat|)))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|FortranExpression| *2 *3 *4))
       (|ofType| *2 (|List| (|Symbol|))) (|ofType| *3 (|List| (|Symbol|)))
       (|ofCategory| *4 (|FortranMachineTypeCategory|))))
 ((*1 *1 *1) (|isDomain| *1 (|Float|))) ((*1 *1) (|isDomain| *1 (|Float|)))) 
(((*1 *1) (|isDomain| *1 (|DoubleFloat|))) ((*1 *1) (|isDomain| *1 (|Float|)))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Float|))))
 ((*1 *2) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|Float|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Float|))))
 ((*1 *2) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|Float|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Float|))))
 ((*1 *2) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|Float|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|Float|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatLiouvilianFunctions|))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *4 *4)) (|ofCategory| *4 (|Type|))
       (|isDomain| *1 (|FiniteLinearAggregateSort| *4 *2))
       (|ofCategory| *2
                     (|Join| (|FiniteLinearAggregate| *4)
                             (|shallowlyMutable|)))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *4 *4)) (|ofCategory| *4 (|Type|))
       (|isDomain| *1 (|FiniteLinearAggregateSort| *4 *2))
       (|ofCategory| *2
                     (|Join| (|FiniteLinearAggregate| *4)
                             (|shallowlyMutable|)))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|Mapping| (|Boolean|) *4 *4)) (|ofCategory| *4 (|Type|))
       (|isDomain| *1 (|FiniteLinearAggregateSort| *4 *2))
       (|ofCategory| *2
                     (|Join| (|FiniteLinearAggregate| *4)
                             (|shallowlyMutable|)))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|LyndonWord| *3)) (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *1 (|FreeLieAlgebra| *3 *4))
       (|ofCategory| *4 (|CommutativeRing|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *1 (|FiniteLattice| *2 *3))
       (|ofCategory| *2 (|SetCategory|)) (|ofType| *3 (|FiniteBiCPO| *2))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FiniteLattice| *3 *4))
       (|ofCategory| *3 (|SetCategory|)) (|ofType| *4 (|FiniteBiCPO| *3))))) 
(((*1 *2)
  (AND (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Vector| *1))
       (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *3))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FiniteRankNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FiniteRankNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FiniteRankNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FiniteRankNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FiniteRankNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FiniteRankNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FiniteRankNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FiniteRankNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FiniteRankNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FiniteRankNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FiniteRankNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FiniteRankNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FiniteRankNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FiniteRankNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FiniteRankNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FiniteRankNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FiniteRankNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FiniteRankNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FiniteRankNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FiniteRankNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FiniteRankNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FiniteRankNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FiniteRankNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FiniteRankNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FiniteRankNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FiniteRankNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FiniteRankNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FiniteRankNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|List| (|Vector| *4)))
       (|isDomain| *1 (|FiniteRankNonAssociativeAlgebra&| *3 *4))
       (|ofCategory| *3 (|FiniteRankNonAssociativeAlgebra| *4))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *2 (|List| (|Vector| *3)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *3))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *3))))) 
(((*1 *1)
  (|partial| AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *2))
   (|ofCategory| *2 (|IntegralDomain|)) (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *1)
  (|partial| AND (|ofCategory| *1 (|FiniteRankNonAssociativeAlgebra| *2))
   (|ofCategory| *2 (|IntegralDomain|)) (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|ofCategory| *1 (|FileCategory| *2 *4))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))))
 ((*1 *1 *2)
  (AND (|ofCategory| *1 (|FileCategory| *2 *3))
       (|ofCategory| *2 (|SetCategory|)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|String|)) (|ofCategory| *1 (|FileCategory| *3 *4))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FileCategory| *3 *4))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|String|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FileCategory| *3 *2))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *1 *2)
  (AND (|ofCategory| *1 (|FileCategory| *3 *2))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FileCategory| *3 *4))
       (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|Void|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |value| *3)
                              (|:| |posX| (|NonNegativeInteger|))
                              (|:| |posY| (|NonNegativeInteger|)))))))) 
(((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |name| (|String|))
                              (|:| |arrType| (|NonNegativeInteger|))
                              (|:| |fromOb| (|NonNegativeInteger|))
                              (|:| |toOb| (|NonNegativeInteger|))
                              (|:| |xOffset| (|Integer|))
                              (|:| |yOffset| (|Integer|))
                              (|:| |map| (|List| (|NonNegativeInteger|))))))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|DifferentialPolynomialCategory| *2 *3 *4 *5))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *4 (|DifferentialVariableCategory| *3))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))))
 ((*1 *1)
  (AND (|ofCategory| *1 (|FiniteGraph| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *1 *2)
  (AND (|ofCategory| *1 (|FiniteGraph| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4)) (|isDomain| *3 (|String|))
       (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *1 (|FiniteGraph| *4))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4)) (|isDomain| *3 (|String|))
       (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *1 (|FiniteGraph| *4))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4)) (|isDomain| *3 (|String|))
       (|ofCategory| *4 (|SetCategory|)) (|ofCategory| *1 (|FiniteGraph| *4))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|String|))))) 
(((*1 *2 *1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))))) 
(((*1 *2 *1 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|Tree| (|Integer|)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|List| (|Tree| (|Integer|))))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|Tree| (|Integer|)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|List| (|Tree| (|Integer|))))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|List| (|Loop|)))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|FiniteGraph| *4)) (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *2 (|List| (|Loop|)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|List| (|Loop|)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|Matrix| (|Integer|)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|Matrix| (|NonNegativeInteger|)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|Matrix| (|Integer|)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|Matrix| (|Integer|)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *1 *4 *4)
  (AND (|isDomain| *3 (|Scene| (|SCartesian| 2))) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *1 (|FiniteGraph| *5)) (|ofCategory| *5 (|SetCategory|))
       (|isDomain| *2 (|Void|))))) 
(((*1 *2 *3 *1 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *1 (|FiniteGraph| *5)) (|ofCategory| *5 (|SetCategory|))
       (|isDomain| *2 (|Void|))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|List| *1))
       (|isDomain| *5 (|Boolean|)) (|ofCategory| *1 (|FiniteGraph| *6))
       (|ofCategory| *6 (|SetCategory|)) (|isDomain| *2 (|Void|))))) 
(((*1 *2 *3 *1 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|Boolean|))
       (|ofCategory| *1 (|FiniteGraph| *5)) (|ofCategory| *5 (|SetCategory|))
       (|isDomain| *2 (|Void|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|FiniteGraph| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *1 *2 *3 *4 *4)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *3 (|List| *5)) (|isDomain| *4 (|Integer|))
       (|ofCategory| *1 (|FiniteGraph| *5)) (|ofCategory| *5 (|SetCategory|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|))
       (|ofCategory| *2
                     (|Join| (|FieldOfPrimeCharacteristic|)
                             (CATEGORY |domain| (SIGNATURE |coerce| ($ *4))
                              (SIGNATURE |lookup| ((|PositiveInteger|) $))
                              (SIGNATURE |basis|
                               ((|Vector| $) (|PositiveInteger|)))
                              (SIGNATURE |Frobenius| ($ $)))))
       (|isDomain| *1 (|FiniteFieldPolynomialPackage2| *2 *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|))
       (|isDomain| *2 (|PrimitiveArray| (|SparseUnivariatePolynomial| *4)))
       (|isDomain| *1 (|FiniteFieldPolynomialPackage| *4))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *3))
       (|ofCategory| *3 (|FiniteFieldCategory|))
       (|isDomain| *1 (|FiniteFieldPolynomialPackage| *3))))) 
(((*1 *2 *2)
  (|partial| AND (|isDomain| *2 (|SparseUnivariatePolynomial| *3))
   (|ofCategory| *3 (|FiniteFieldCategory|))
   (|isDomain| *1 (|FiniteFieldPolynomialPackage| *3))))) 
(((*1 *2 *2)
  (|partial| AND (|isDomain| *2 (|SparseUnivariatePolynomial| *3))
   (|ofCategory| *3 (|FiniteFieldCategory|))
   (|isDomain| *1 (|FiniteFieldPolynomialPackage| *3))))) 
(((*1 *2 *2)
  (|partial| AND (|isDomain| *2 (|SparseUnivariatePolynomial| *3))
   (|ofCategory| *3 (|FiniteFieldCategory|))
   (|isDomain| *1 (|FiniteFieldPolynomialPackage| *3))))) 
(((*1 *2 *2)
  (|partial| AND (|isDomain| *2 (|SparseUnivariatePolynomial| *3))
   (|ofCategory| *3 (|FiniteFieldCategory|))
   (|isDomain| *1 (|FiniteFieldPolynomialPackage| *3))))) 
(((*1 *2 *2)
  (|partial| AND (|isDomain| *2 (|SparseUnivariatePolynomial| *3))
   (|ofCategory| *3 (|FiniteFieldCategory|))
   (|isDomain| *1 (|FiniteFieldPolynomialPackage| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *4))
       (|isDomain| *1 (|FiniteFieldPolynomialPackage| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *4))
       (|isDomain| *1 (|FiniteFieldPolynomialPackage| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *4))
       (|isDomain| *1 (|FiniteFieldPolynomialPackage| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *4))
       (|isDomain| *1 (|FiniteFieldPolynomialPackage| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *4))
       (|isDomain| *1 (|FiniteFieldPolynomialPackage| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|FiniteFieldPolynomialPackage| *3))
       (|ofCategory| *3 (|FiniteFieldCategory|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|FiniteFieldPolynomialPackage| *3))
       (|ofCategory| *3 (|FiniteFieldCategory|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|FiniteFieldPolynomialPackage| *3))
       (|ofCategory| *3 (|FiniteFieldCategory|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteFieldCategory|)) (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FiniteFieldPolynomialPackage| *4))))) 
(((*1 *2)
  (AND
   (|isDomain| *2
               (|Vector|
                (|List|
                 (|Record| (|:| |value| (|PrimeField| *3))
                           (|:| |index| (|SingleInteger|))))))
   (|isDomain| *1 (|FiniteFieldNormalBasis| *3 *4))
   (|ofType| *3 (|PositiveInteger|)) (|ofType| *4 (|PositiveInteger|))))
 ((*1 *2)
  (AND
   (|isDomain| *2
               (|Vector|
                (|List|
                 (|Record| (|:| |value| *3) (|:| |index| (|SingleInteger|))))))
   (|isDomain| *1 (|FiniteFieldNormalBasisExtensionByPolynomial| *3 *4))
   (|ofCategory| *3 (|FiniteFieldCategory|))
   (|ofType| *4 (|Union| (|SparseUnivariatePolynomial| *3) *2))))
 ((*1 *2)
  (AND
   (|isDomain| *2
               (|Vector|
                (|List|
                 (|Record| (|:| |value| *3) (|:| |index| (|SingleInteger|))))))
   (|isDomain| *1 (|FiniteFieldNormalBasisExtension| *3 *4))
   (|ofCategory| *3 (|FiniteFieldCategory|))
   (|ofType| *4 (|PositiveInteger|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Matrix| (|PrimeField| *3)))
       (|isDomain| *1 (|FiniteFieldNormalBasis| *3 *4))
       (|ofType| *3 (|PositiveInteger|)) (|ofType| *4 (|PositiveInteger|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|Matrix| *3))
       (|isDomain| *1 (|FiniteFieldNormalBasisExtensionByPolynomial| *3 *4))
       (|ofCategory| *3 (|FiniteFieldCategory|))
       (|ofType| *4
        (|Union| (|SparseUnivariatePolynomial| *3)
                 (|Vector|
                  (|List|
                   (|Record| (|:| |value| *3)
                             (|:| |index| (|SingleInteger|)))))))))
 ((*1 *2)
  (AND (|isDomain| *2 (|Matrix| *3))
       (|isDomain| *1 (|FiniteFieldNormalBasisExtension| *3 *4))
       (|ofCategory| *3 (|FiniteFieldCategory|))
       (|ofType| *4 (|PositiveInteger|))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|Vector|
                (|List|
                 (|Record| (|:| |value| *4) (|:| |index| (|SingleInteger|))))))
   (|ofCategory| *4 (|FiniteFieldCategory|))
   (|isDomain| *2 (|NonNegativeInteger|))
   (|isDomain| *1 (|FiniteFieldFunctions| *4))))
 ((*1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FiniteFieldNormalBasis| *3 *4))
       (|ofType| *3 (|PositiveInteger|)) (|ofType| *4 (|PositiveInteger|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FiniteFieldNormalBasisExtensionByPolynomial| *3 *4))
       (|ofCategory| *3 (|FiniteFieldCategory|))
       (|ofType| *4
        (|Union| (|SparseUnivariatePolynomial| *3)
                 (|Vector|
                  (|List|
                   (|Record| (|:| |value| *3)
                             (|:| |index| (|SingleInteger|)))))))))
 ((*1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FiniteFieldNormalBasisExtension| *3 *4))
       (|ofCategory| *3 (|FiniteFieldCategory|))
       (|ofType| *4 (|PositiveInteger|))))) 
(((*1 *2)
  (AND (|ofCategory| *1 (|FiniteFieldCategory|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |factor| (|Integer|))
                              (|:| |exponent| (|Integer|)))))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *1 (|FiniteFieldCategory|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|Table| (|PositiveInteger|) (|NonNegativeInteger|)))))) 
(((*1 *1) (|ofCategory| *1 (|FiniteFieldCategory|)))) 
(((*1 *2)
  (AND (|ofCategory| *1 (|FiniteFieldCategory|))
       (|isDomain| *2 (|Union| "prime" "polynomial" "normal" "cyclic"))))) 
(((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|List| *7))
       (|isDomain| *4
                   (|Mapping| *7 (|NonNegativeInteger|) (|NonNegativeInteger|)
                              *8))
       (|isDomain| *5 (|Vector| *8))
       (|isDomain| *6 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *7 (|Join| (|IntegralDomain|) (|GcdDomain|)))
       (|ofCategory| *8 (|AbelianMonoidRing| *7 (|NonNegativeInteger|)))
       (|isDomain| *2 (|Matrix| (|SparseUnivariatePolynomial| *7)))
       (|isDomain| *1 (|FractionFreeFastGaussian| *7 *8))))
 ((*1 *2 *3 *4 *5 *6 *7)
  (AND (|isDomain| *3 (|List| *8))
       (|isDomain| *4
                   (|Mapping| *8 (|NonNegativeInteger|) (|NonNegativeInteger|)
                              *9))
       (|isDomain| *5 (|Vector| *9)) (|isDomain| *6 (|Vector| (|Integer|)))
       (|ofCategory| *8 (|Join| (|IntegralDomain|) (|GcdDomain|)))
       (|ofCategory| *9 (|AbelianMonoidRing| *8 *7))
       (|isDomain| *7 (|NonNegativeInteger|))
       (|isDomain| *2 (|Matrix| (|SparseUnivariatePolynomial| *8)))
       (|isDomain| *1 (|FractionFreeFastGaussian| *8 *9))))
 ((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|List| *7))
       (|isDomain| *4
                   (|Mapping| *7 (|NonNegativeInteger|) (|NonNegativeInteger|)
                              *8))
       (|isDomain| *5 (|Vector| *9))
       (|isDomain| *6 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *7 (|Join| (|IntegralDomain|) (|GcdDomain|)))
       (|ofCategory| *8 (|FiniteAbelianMonoidRing| *7 (|NonNegativeInteger|)))
       (|ofCategory| *9
                     (|FiniteAbelianMonoidRing| (|Fraction| *7)
                                                (|NonNegativeInteger|)))
       (|isDomain| *2 (|Matrix| (|SparseUnivariatePolynomial| *7)))
       (|isDomain| *1 (|FractionFreeFastGaussianFractions| *7 *8 *9))))) 
(((*1 *2 *3 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|Join| (|IntegralDomain|) (|GcdDomain|)))
       (|isDomain| *2 (|Stream| (|List| (|NonNegativeInteger|))))
       (|isDomain| *1 (|FractionFreeFastGaussian| *4 *5))
       (|ofCategory| *5 (|AbelianMonoidRing| *4 *3))))) 
(((*1 *2 *3 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|Join| (|IntegralDomain|) (|GcdDomain|)))
       (|isDomain| *2 (|Stream| (|List| (|NonNegativeInteger|))))
       (|isDomain| *1 (|FractionFreeFastGaussian| *4 *5))
       (|ofCategory| *5 (|AbelianMonoidRing| *4 *3))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *3 (|Join| (|IntegralDomain|) (|GcdDomain|)))
       (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|FractionFreeFastGaussian| *3 *5))
       (|ofCategory| *5 (|AbelianMonoidRing| *3 *4))))) 
(((*1 *2 *2 *3 *3 *4)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *2 (|Join| (|IntegralDomain|) (|GcdDomain|)))
       (|isDomain| *1 (|FractionFreeFastGaussian| *2 *4))
       (|ofCategory| *4 (|AbelianMonoidRing| *2 *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|Join| (|IntegralDomain|) (|GcdDomain|)))
       (|isDomain| *2 (|List| *4))
       (|isDomain| *1 (|FractionFreeFastGaussian| *4 *5))
       (|ofCategory| *5 (|AbelianMonoidRing| *4 *3))))) 
(((*1 *2 *3 *3 *4)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *2 (|Join| (|IntegralDomain|) (|GcdDomain|)))
       (|isDomain| *1 (|FractionFreeFastGaussian| *2 *4))
       (|ofCategory| *4 (|AbelianMonoidRing| *2 *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|Join| (|IntegralDomain|) (|GcdDomain|)))
       (|isDomain| *2 (|List| *4))
       (|isDomain| *1 (|FractionFreeFastGaussian| *4 *5))
       (|ofCategory| *5 (|AbelianMonoidRing| *4 *3))))) 
(((*1 *2 *3 *3 *4)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *2 (|Join| (|IntegralDomain|) (|GcdDomain|)))
       (|isDomain| *1 (|FractionFreeFastGaussian| *2 *4))
       (|ofCategory| *4 (|AbelianMonoidRing| *2 *3))))) 
(((*1 *2 *3 *4 *5 *6)
  (AND
   (|isDomain| *3
               (|Mapping| *2 (|NonNegativeInteger|) (|NonNegativeInteger|) *7))
   (|isDomain| *4 (|Vector| *7))
   (|isDomain| *6 (|Vector| (|SparseUnivariatePolynomial| *2)))
   (|ofCategory| *7 (|AbelianMonoidRing| *2 *5))
   (|isDomain| *5 (|NonNegativeInteger|))
   (|ofCategory| *2 (|Join| (|IntegralDomain|) (|GcdDomain|)))
   (|isDomain| *1 (|FractionFreeFastGaussian| *2 *7))))) 
(((*1 *2 *3 *4 *5 *6)
  (AND (|isDomain| *3 (|List| *7))
       (|isDomain| *4
                   (|Mapping| *7 (|NonNegativeInteger|)
                              (|Vector| (|SparseUnivariatePolynomial| *7))))
       (|isDomain| *5 (|Vector| (|Integer|)))
       (|ofCategory| *7 (|Join| (|IntegralDomain|) (|GcdDomain|)))
       (|isDomain| *6 (|NonNegativeInteger|))
       (|isDomain| *2 (|Matrix| (|SparseUnivariatePolynomial| *7)))
       (|isDomain| *1 (|FractionFreeFastGaussian| *7 *8))
       (|ofCategory| *8 (|AbelianMonoidRing| *7 *6))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|List| *6))
       (|isDomain| *4
                   (|Mapping| *6 (|NonNegativeInteger|)
                              (|Vector| (|SparseUnivariatePolynomial| *6))))
       (|isDomain| *5 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *6 (|Join| (|IntegralDomain|) (|GcdDomain|)))
       (|isDomain| *2 (|Matrix| (|SparseUnivariatePolynomial| *6)))
       (|isDomain| *1 (|FractionFreeFastGaussian| *6 *7))
       (|ofCategory| *7 (|AbelianMonoidRing| *6 (|NonNegativeInteger|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|isDomain| *2
                   (|Union| (|SparseUnivariatePolynomial| *4)
                            (|Vector|
                             (|List|
                              (|Record| (|:| |value| *4)
                                        (|:| |index| (|SingleInteger|)))))))
       (|isDomain| *1 (|FiniteFieldFunctions| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|))))) 
(((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|PositiveInteger|))
   (|isDomain| *2
               (|Vector|
                (|List|
                 (|Record| (|:| |value| *4) (|:| |index| (|SingleInteger|))))))
   (|isDomain| *1 (|FiniteFieldFunctions| *4))
   (|ofCategory| *4 (|FiniteFieldCategory|))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|Vector|
                (|List|
                 (|Record| (|:| |value| *4) (|:| |index| (|SingleInteger|))))))
   (|ofCategory| *4 (|FiniteFieldCategory|)) (|isDomain| *2 (|Matrix| *4))
   (|isDomain| *1 (|FiniteFieldFunctions| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|))
       (|isDomain| *2
                   (|Vector|
                    (|List|
                     (|Record| (|:| |value| *4)
                               (|:| |index| (|SingleInteger|))))))
       (|isDomain| *1 (|FiniteFieldFunctions| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *4))
       (|ofCategory| *4 (|FiniteFieldCategory|))
       (|isDomain| *2 (|PrimitiveArray| (|SingleInteger|)))
       (|isDomain| *1 (|FiniteFieldFunctions| *4))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|PrimitiveArray| (|SingleInteger|)))
       (|isDomain| *1 (|FiniteFieldCyclicGroup| *3 *4))
       (|ofType| *3 (|PositiveInteger|)) (|ofType| *4 (|PositiveInteger|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|PrimitiveArray| (|SingleInteger|)))
       (|isDomain| *1 (|FiniteFieldCyclicGroupExtensionByPolynomial| *3 *4))
       (|ofCategory| *3 (|FiniteFieldCategory|))
       (|ofType| *4 (|SparseUnivariatePolynomial| *3))))
 ((*1 *2)
  (AND (|isDomain| *2 (|PrimitiveArray| (|SingleInteger|)))
       (|isDomain| *1 (|FiniteFieldCyclicGroupExtension| *3 *4))
       (|ofCategory| *3 (|FiniteFieldCategory|))
       (|ofType| *4 (|PositiveInteger|))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|UniqueFactorizationDomain|))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| (|Fraction| *5)))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|FunctionFieldCategory&| *3 *4 *5 *6))
       (|ofCategory| *3 (|FunctionFieldCategory| *4 *5 *6))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|UniqueFactorizationDomain|))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| (|Fraction| *5)))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FunctionFieldCategory&| *3 *4 *5 *6))
       (|ofCategory| *3 (|FunctionFieldCategory| *4 *5 *6))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| (|Fraction| *5)))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FunctionFieldCategory&| *4 *3 *5 *6))
       (|ofCategory| *4 (|FunctionFieldCategory| *3 *5 *6))))
 ((*1 *2 *3 *3)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *4 *3 *5))
       (|ofCategory| *4 (|UniqueFactorizationDomain|))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *3)))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *4 *3 *5))
       (|ofCategory| *4 (|UniqueFactorizationDomain|))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *3)))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *4 *3 *5))
       (|ofCategory| *4 (|UniqueFactorizationDomain|))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *3)))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *3)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2)
  (AND (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Vector| *1))
       (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *4 *3 *5))
       (|ofCategory| *4 (|UniqueFactorizationDomain|))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *3)))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Boolean|))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Vector| *1))
       (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Vector| *1))
       (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Vector| *1))
       (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))))) 
(((*1 *2)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Matrix| (|Fraction| *4)))))) 
(((*1 *2)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Matrix| (|Fraction| *4)))))) 
(((*1 *2)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Matrix| (|Fraction| *4)))))) 
(((*1 *2)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Matrix| (|Fraction| *4)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Record| (|:| |num| (|Vector| *4)) (|:| |den| *4)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Record| (|:| |num| (|Vector| *4)) (|:| |den| *4)))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|Vector| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *4 (|UniqueFactorizationDomain|))
       (|ofCategory| *1 (|FunctionFieldCategory| *4 *3 *5))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *3)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Mapping| *5 *5))
       (|ofCategory| *1 (|FunctionFieldCategory| *4 *5 *6))
       (|ofCategory| *4 (|UniqueFactorizationDomain|))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| (|Fraction| *5)))
       (|isDomain| *2 (|Record| (|:| |num| (|Matrix| *5)) (|:| |den| *5)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| (|Point| *3) (|Point| *3)))
       (|isDomain| *1 (|CoordinateSystems| *3))
       (|ofCategory| *3
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)
                             (|RadicalCategory|)))))
 ((*1 *2)
  (|partial| AND (|ofCategory| *4 (|UniqueFactorizationDomain|))
   (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *2)))
   (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))
   (|isDomain| *1 (|FunctionFieldCategory&| *3 *4 *2 *5))
   (|ofCategory| *3 (|FunctionFieldCategory| *4 *2 *5))))
 ((*1 *2)
  (|partial| AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *2 *4))
   (|ofCategory| *3 (|UniqueFactorizationDomain|))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| *2)))
   (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2)
  (|partial| AND (|ofCategory| *4 (|UniqueFactorizationDomain|))
   (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *2)))
   (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))
   (|isDomain| *1 (|FunctionFieldCategory&| *3 *4 *2 *5))
   (|ofCategory| *3 (|FunctionFieldCategory| *4 *2 *5))))
 ((*1 *2)
  (|partial| AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *2 *4))
   (|ofCategory| *3 (|UniqueFactorizationDomain|))
   (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| *2)))
   (|ofCategory| *2 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Mapping| *5 *5))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *4 (|UniqueFactorizationDomain|))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| (|Fraction| *5)))
       (|isDomain| *2
                   (|Record| (|:| |num| *1) (|:| |den| *5) (|:| |derivden| *5)
                             (|:| |gd| *5)))
       (|ofCategory| *1 (|FunctionFieldCategory| *4 *5 *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *5 (|UniqueFactorizationDomain|))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| (|Fraction| *6)))
       (|isDomain| *2 (|List| (|Polynomial| *5)))
       (|isDomain| *1 (|FunctionFieldCategory&| *4 *5 *6 *7))
       (|ofCategory| *4 (|FunctionFieldCategory| *5 *6 *7))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *1 (|FunctionFieldCategory| *4 *5 *6))
       (|ofCategory| *4 (|UniqueFactorizationDomain|))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| (|Fraction| *5)))
       (|ofCategory| *4 (|Field|)) (|isDomain| *2 (|List| (|Polynomial| *4)))))) 
(((*1 *2)
  (AND (|ofCategory| *4 (|UniqueFactorizationDomain|))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| (|Fraction| *5)))
       (|isDomain| *2 (|List| (|List| *4)))
       (|isDomain| *1 (|FunctionFieldCategory&| *3 *4 *5 *6))
       (|ofCategory| *3 (|FunctionFieldCategory| *4 *5 *6))))
 ((*1 *2)
  (AND (|ofCategory| *1 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|ofCategory| *3 (|Finite|)) (|isDomain| *2 (|List| (|List| *3)))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FortranExpression| *3 *4 *5))
       (|ofType| *3 (|List| (|Symbol|))) (|ofType| *4 (|List| (|Symbol|)))
       (|ofCategory| *5 (|FortranMachineTypeCategory|))))
 ((*1 *2)
  (AND (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|FortranExpression| *3 *4 *5))
       (|ofType| *3 (|List| (|Symbol|))) (|ofType| *4 (|List| (|Symbol|)))
       (|ofCategory| *5 (|FortranMachineTypeCategory|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| (|Float|))) (|isDomain| *2 (|Float|))
       (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| (|Complex| (|Float|))))
       (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatEllipticFunctions|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Float|))) (|isDomain| *2 (|Float|))
       (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Complex| (|Float|))))
       (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatEllipticFunctions|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|Float|)) (|isDomain| *2 (|List| (|Float|)))
       (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Complex| (|Float|))) (|isDomain| *4 (|Float|))
       (|isDomain| *2 (|List| (|Complex| (|Float|))))
       (|isDomain| *1 (|FloatEllipticFunctions|))))) 
(((*1 *2 *3 *2 *3)
  (AND (|isDomain| *2 (|List| (|Float|))) (|isDomain| *3 (|Float|))
       (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *3 *2 *4)
  (AND (|isDomain| *2 (|List| (|Complex| (|Float|))))
       (|isDomain| *3 (|Complex| (|Float|))) (|isDomain| *4 (|Float|))
       (|isDomain| *1 (|FloatEllipticFunctions|))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|List| (|Float|))) (|isDomain| *3 (|Float|))
       (|isDomain| *1 (|FloatEllipticFunctions|))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|List| (|Complex| (|Float|))))
       (|isDomain| *3 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatEllipticFunctions|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|Float|)))
       (|isDomain| *1 (|FloatEllipticFunctions|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|Complex| (|Float|)))
       (|isDomain| *2 (|List| (|Complex| (|Float|))))
       (|isDomain| *1 (|FloatEllipticFunctions|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|Complex| (|Float|)))
       (|isDomain| *2 (|List| (|Complex| (|Float|))))
       (|isDomain| *1 (|FloatEllipticFunctions|))))) 
(((*1 *1 *2 *3 *3 *3 *4)
  (AND (|ofCategory| *4 (|Field|))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *3)))
       (|ofCategory| *1 (|FiniteDivisorCategory| *4 *3 *5 *2))
       (|ofCategory| *2 (|FunctionFieldCategory| *4 *3 *5))))
 ((*1 *1 *2 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|ofCategory| *2 (|Field|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|ofCategory| *1 (|FiniteDivisorCategory| *2 *4 *5 *6))
       (|ofCategory| *6 (|FunctionFieldCategory| *2 *4 *5))))
 ((*1 *1 *2 *2)
  (AND (|ofCategory| *2 (|Field|))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| *3)))
       (|ofCategory| *1 (|FiniteDivisorCategory| *2 *3 *4 *5))
       (|ofCategory| *5 (|FunctionFieldCategory| *2 *3 *4))))
 ((*1 *1 *2)
  (AND (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|ofCategory| *1 (|FiniteDivisorCategory| *3 *4 *5 *2))
       (|ofCategory| *2 (|FunctionFieldCategory| *3 *4 *5))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|FractionalIdeal| *4 (|Fraction| *4) *5 *6))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|ofCategory| *6 (|FunctionFieldCategory| *3 *4 *5))
       (|ofCategory| *3 (|Field|))
       (|ofCategory| *1 (|FiniteDivisorCategory| *3 *4 *5 *6))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteDivisorCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|ofCategory| *6 (|FunctionFieldCategory| *3 *4 *5))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Vector| *6))
       (|isDomain| *1 (|FiniteDivisor| *3 *4 *5 *6))
       (|ofCategory| *6 (|FunctionFieldCategory| *3 *4 *5))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|Field|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| (|Fraction| *4)))
       (|isDomain| *2 (|Vector| *6))
       (|isDomain| *1 (|FiniteDivisor| *3 *4 *5 *6))
       (|ofCategory| *6 (|FunctionFieldCategory| *3 *4 *5))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|FortranCodeTools|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *1 (|FortranCodeTools|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|FortranCodeTools|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|FortranCodeTools|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|FortranCodeTools|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|FortranCodeTools|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *4 (|List| (|OutputForm|)))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|FortranCodeTools|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| (|String|))) (|isDomain| *3 (|String|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|FortranCodeTools|))))) 
(((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *4
               (|Union| (|:| |fst| (|FortranScalarType|)) (|:| |void| "void")))
   (|isDomain| *5 (|List| (|Symbol|))) (|isDomain| *3 (|Symbol|))
   (|isDomain| *2 (|Void|)) (|isDomain| *1 (|FortranCodeTools|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|FortranCodeTools|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|String|))) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|FortranCodeTools|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|FortranCodeTools|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *4 (|Boolean|))
       (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *1 (|FortranCodeTools|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *1 (|FortranCodeTools|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|OutputForm|)) (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *1 (|FortranCodeTools|))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| (|Symbol|))) (|isDomain| *4 (|OutputForm|))
       (|isDomain| *5 (|Boolean|)) (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *1 (|FortranCodeTools|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Mapping| (|List| (|String|))))
       (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *1 (|FortranCodeTools|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Boolean|))
       (|isDomain| *4 (|Mapping| (|List| (|String|))))
       (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *1 (|FortranCodeTools|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Boolean|))
       (|isDomain| *4 (|Mapping| (|List| (|String|))))
       (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *1 (|FortranCodeTools|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| (|String|)))
       (|isDomain| *1 (|FortranCodeTools|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *4 (|Polynomial| (|Integer|)))
       (|isDomain| *2 (|FortranCode|))
       (|isDomain| *1 (|FortranCodePackage1|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *4 (|Polynomial| (|Integer|)))
       (|isDomain| *2 (|FortranCode|))
       (|isDomain| *1 (|FortranCodePackage1|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *4 (|Polynomial| (|Integer|)))
       (|isDomain| *2 (|FortranCode|))
       (|isDomain| *1 (|FortranCodePackage1|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|FourierComponent| *3))
       (|ofCategory| *3 (|OrderedSet|))))) 
(((*1 *1 *2 *3 *1)
  (AND (|isDomain| *2 (|SegmentBinding| (|Polynomial| (|Integer|))))
       (|isDomain| *3 (|Polynomial| (|Integer|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|SegmentBinding| (|Polynomial| (|Integer|))))
       (|isDomain| *1 (|FortranCode|))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Switch|)) (|isDomain| *1 (|FortranCode|))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Switch|)) (|isDomain| *1 (|FortranCode|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|SingleInteger|)) (|isDomain| *1 (|FortranCode|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|SingleInteger|)) (|isDomain| *1 (|FortranCode|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|String|))) (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|FortranCode|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|FortranCode|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Expression| (|Complex| (|Float|))))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Expression| (|Integer|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Expression| (|Float|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Expression| (|MachineComplex|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Expression| (|MachineInteger|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Expression| (|MachineFloat|)))
       (|isDomain| *1 (|FortranCode|))))
 ((*1 *1) (|isDomain| *1 (|FortranCode|)))) 
(((*1 *1 *2 *1 *1)
  (AND (|isDomain| *2 (|Switch|)) (|isDomain| *1 (|FortranCode|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Switch|)) (|isDomain| *1 (|FortranCode|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|FortranCode|)))
       (|isDomain| *1 (|FortranCode|))))) 
(((*1 *1) (|isDomain| *1 (|FortranCode|)))) 
(((*1 *1) (|isDomain| *1 (|FortranCode|)))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|OutputForm|)))
       (|isDomain| *1 (|FortranCode|))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Symbol|))) (|isDomain| *2 (|Symbol|))
       (|isDomain| *1 (|FortranCode|))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|Union| (|:| |Null| "null") (|:| |Assignment| "assignment")
                        (|:| |Conditional| "conditional")
                        (|:| |Return| "return") (|:| |Block| "block")
                        (|:| |Comment| "comment") (|:| |Call| "call")
                        (|:| |For| "for") (|:| |While| "while")
                        (|:| |Repeat| "repeat") (|:| |Goto| "goto")
                        (|:| |Continue| "continue")
                        (|:| |ArrayAssignment| "arrayAssignment")
                        (|:| |Save| "save") (|:| |Stop| "stop")
                        (|:| |Common| "common") (|:| |Print| "print")))
   (|isDomain| *1 (|FortranCode|))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|Union| (|:| |nullBranch| "null")
                        (|:| |assignmentBranch|
                             (|Record| (|:| |var| (|Symbol|))
                                       (|:| |arrayIndex|
                                            (|List|
                                             (|Polynomial| (|Integer|))))
                                       (|:| |rand|
                                            (|Record|
                                             (|:| |ints2Floats?| (|Boolean|))
                                             (|:| |expr| (|OutputForm|))))))
                        (|:| |arrayAssignmentBranch|
                             (|Record| (|:| |var| (|Symbol|))
                                       (|:| |rand| (|OutputForm|))
                                       (|:| |ints2Floats?| (|Boolean|))))
                        (|:| |conditionalBranch|
                             (|Record| (|:| |switch| (|Switch|))
                                       (|:| |thenClause| (|FortranCode|))
                                       (|:| |elseClause| (|FortranCode|))))
                        (|:| |returnBranch|
                             (|Record| (|:| |empty?| (|Boolean|))
                                       (|:| |value|
                                            (|Record|
                                             (|:| |ints2Floats?| (|Boolean|))
                                             (|:| |expr| (|OutputForm|))))))
                        (|:| |blockBranch| (|List| (|FortranCode|)))
                        (|:| |commentBranch| (|List| (|String|)))
                        (|:| |callBranch| (|String|))
                        (|:| |forBranch|
                             (|Record|
                              (|:| |range|
                                   (|SegmentBinding|
                                    (|Polynomial| (|Integer|))))
                              (|:| |span| (|Polynomial| (|Integer|)))
                              (|:| |body| (|FortranCode|))))
                        (|:| |labelBranch| (|SingleInteger|))
                        (|:| |loopBranch|
                             (|Record| (|:| |switch| (|Switch|))
                                       (|:| |body| (|FortranCode|))))
                        (|:| |commonBranch|
                             (|Record| (|:| |name| (|Symbol|))
                                       (|:| |contents| (|List| (|Symbol|)))))
                        (|:| |printBranch| (|List| (|OutputForm|)))))
   (|isDomain| *1 (|FortranCode|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Void|)) (|isDomain| *1 (|FortranCode|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|String|))) (|isDomain| *1 (|FortranCode|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|SingleInteger|)) (|isDomain| *1 (|FortranCode|))))) 
(((*1 *1)
  (AND (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *2))
       (|ofCategory| *2 (|Finite|)) (|ofCategory| *2 (|Field|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *3))
       (|ofCategory| *3 (|Finite|))
       (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *3))
       (|ofCategory| *3 (|Field|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *3))
       (|ofCategory| *3 (|Field|)) (|ofCategory| *3 (|Finite|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *3))))) 
(((*1 *2 *1 *1)
  (|partial| AND (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *3))
   (|ofCategory| *3 (|Field|)) (|ofCategory| *3 (|Finite|))
   (|isDomain| *2 (|SparseUnivariatePolynomial| *3))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|FiniteAlgebraicExtensionField| *3))
       (|ofCategory| *3 (|Field|)) (|ofCategory| *3 (|Finite|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *3))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *4 *4))
       (|ofCategory| *1 (|FiniteAbelianMonoidRing| *3 *4))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *4 (|OrderedAbelianMonoid|))))) 
(((*1 *1 *1 *2 *3 *1)
  (AND (|ofCategory| *1 (|FiniteAbelianMonoidRing| *2 *3))
       (|ofCategory| *2 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *3 (|OrderedAbelianMonoid|))))) 
(((*1 *1 *1 *2 *3 *1)
  (AND (|ofCategory| *1 (|FiniteAbelianMonoidRing| *3 *2))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *2 (|OrderedAbelianMonoid|)) (|ofCategory| *3 (|Ring|))))) 
(((*1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *1 (|CommutativeRing|))
       (|ofCategory| *1 (|FiniteAbelianMonoidRing| *3 *4))
       (|ofCategory| *3 (|Join| (|SemiRng|) (|AbelianMonoid|)))
       (|ofCategory| *4 (|OrderedAbelianMonoid|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|ofCategory| *1 (|FreeAbelianMonoidCategory| *4 *2))
       (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *2 (|CancellationAbelianMonoid|))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| *4 *4))
       (|ofCategory| *1 (|FreeAbelianMonoidCategory| *3 *4))
       (|ofCategory| *3 (|SetCategory|))
       (|ofCategory| *4 (|CancellationAbelianMonoid|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|FreeAbelianMonoidCategory| *2 *3))
       (|ofCategory| *2 (|SetCategory|))
       (|ofCategory| *3 (|CancellationAbelianMonoid|))
       (|ofCategory| *3 (|OrderedAbelianMonoid|))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|SparseUnivariatePolynomial|
                (|Fraction| (|Polynomial| (|Integer|)))))
   (|isDomain| *1 (|FakePolynomial|))))) 
(((*1 *1 *1 *2 *2)
  (AND (|isDomain| *2 (|List| (|Symbol|))) (|isDomain| *1 (|FakePolynomial|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *2 (|Ring|))
       (|isDomain| *1 (|FactoringUtilities| *4 *5 *2 *6))
       (|ofCategory| *6 (|PolynomialCategory| *2 *4 *5))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *7))
       (|isDomain| *3 (|Integer|))
       (|ofCategory| *7 (|PolynomialCategory| *6 *4 *5))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|Ring|))
       (|isDomain| *1 (|FactoringUtilities| *4 *5 *6 *7))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *6))
       (|ofCategory| *6 (|Ring|)) (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *7))
       (|isDomain| *1 (|FactoringUtilities| *4 *5 *6 *7))
       (|ofCategory| *7 (|PolynomialCategory| *6 *4 *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *7))
       (|ofCategory| *7 (|PolynomialCategory| *6 *4 *5))
       (|ofCategory| *4 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *5 (|OrderedSet|)) (|ofCategory| *6 (|Ring|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *6))
       (|isDomain| *1 (|FactoringUtilities| *4 *5 *6 *7))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *9))
       (|isDomain| *4 (|List| *7)) (|isDomain| *5 (|List| *8))
       (|ofCategory| *7 (|OrderedSet|)) (|ofCategory| *8 (|Ring|))
       (|ofCategory| *9 (|PolynomialCategory| *8 *6 *7))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *8))
       (|isDomain| *1 (|FactoringUtilities| *6 *7 *8 *9))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|FacetCategory|)) (|isDomain| *2 (|Integer|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|ExponentialOfUnivariatePuiseuxSeries| *3 *4 *5))
       (|ofCategory| *3 (|Join| (|Field|) (|Comparable|)))
       (|ofType| *4 (|Symbol|)) (|ofType| *5 *3)))) 
(((*1 *2 *3 *3 *3 *4 *5 *4 *6)
  (AND (|isDomain| *3 (|Expression| (|Integer|)))
       (|isDomain| *4 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *5 (|Segment| (|DoubleFloat|))) (|isDomain| *6 (|Integer|))
       (|isDomain| *2 (|TubePlot| (|Plot3D|)))
       (|isDomain| *1 (|ExpressionTubePlot|))))
 ((*1 *2 *3 *3 *3 *4 *5 *4 *6 *7)
  (AND (|isDomain| *3 (|Expression| (|Integer|)))
       (|isDomain| *4 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *5 (|Segment| (|DoubleFloat|))) (|isDomain| *6 (|Integer|))
       (|isDomain| *7 (|String|)) (|isDomain| *2 (|TubePlot| (|Plot3D|)))
       (|isDomain| *1 (|ExpressionTubePlot|))))
 ((*1 *2 *3 *3 *3 *4 *5 *6 *7)
  (AND (|isDomain| *3 (|Expression| (|Integer|)))
       (|isDomain| *4 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *5 (|Segment| (|DoubleFloat|)))
       (|isDomain| *6 (|DoubleFloat|)) (|isDomain| *7 (|Integer|))
       (|isDomain| *2 (|TubePlot| (|Plot3D|)))
       (|isDomain| *1 (|ExpressionTubePlot|))))
 ((*1 *2 *3 *3 *3 *4 *5 *6 *7 *8)
  (AND (|isDomain| *3 (|Expression| (|Integer|)))
       (|isDomain| *4 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *5 (|Segment| (|DoubleFloat|)))
       (|isDomain| *6 (|DoubleFloat|)) (|isDomain| *7 (|Integer|))
       (|isDomain| *8 (|String|)) (|isDomain| *2 (|TubePlot| (|Plot3D|)))
       (|isDomain| *1 (|ExpressionTubePlot|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|DoubleFloat|))
       (|isDomain| *2 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *1 (|ExpressionTubePlot|))))) 
(((*1 *2 *2 *3 *4)
  (AND (|isDomain| *3 (|BasicOperator|)) (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5
                     (|Join| (|Comparable|) (|IntegralDomain|)
                             (|ConvertibleTo| (|InputForm|))))
       (|ofCategory| *2 (|FunctionSpace| *5))
       (|isDomain| *1 (|ExpressionSolve| *5 *2 *6 *7))
       (|ofCategory| *6 (|UnivariateTaylorSeriesCategory| *2))
       (|ofCategory| *7
                     (|UnivariateTaylorSeriesCategory|
                      (|SparseMultivariatePolynomialExpressions| *2)))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Expression| *3))
       (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Comparable|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Expression| *3))
       (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Comparable|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Expression| *3))
       (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Comparable|))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Expression| *3))
       (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Comparable|))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|EuclideanDomain|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|EuclideanDomain|))
       (|isDomain| *2 (|NonNegativeInteger|))))) 
(((*1 *2 *1 *1 *1)
  (|partial| AND (|isDomain| *2 (|Record| (|:| |coef1| *1) (|:| |coef2| *1)))
   (|ofCategory| *1 (|EuclideanDomain|))))
 ((*1 *2 *1 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |coef1| *1) (|:| |coef2| *1)
                         (|:| |generator| *1)))
   (|ofCategory| *1 (|EuclideanDomain|))))) 
(((*1 *2 *2 *1)
  (|partial| AND (|isDomain| *2 (|List| *1))
   (|ofCategory| *1 (|EuclideanDomain|))))) 
(((*1 *1 *1 *1) (|ofCategory| *1 (|ExpressionSpace|)))
 ((*1 *1 *1) (|ofCategory| *1 (|ExpressionSpace|)))) 
(((*1 *2 *1)
  (|partial| AND (|isDomain| *2 (|Kernel| *1))
   (|ofCategory| *1 (|ExpressionSpace|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *1)) (|ofCategory| *1 (|ExpressionSpace|))
       (|isDomain| *2 (|List| (|Kernel| *1)))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Kernel| *1)))
       (|ofCategory| *1 (|ExpressionSpace|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *1)) (|ofCategory| *1 (|ExpressionSpace|))
       (|isDomain| *2 (|List| (|Kernel| *1)))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Kernel| *1)))
       (|ofCategory| *1 (|ExpressionSpace|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ExpressionSpace|))
       (|isDomain| *2 (|List| (|BasicOperator|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Kernel| *5)) (|ofCategory| *5 (|FunctionSpace| *4))
       (|ofCategory| *4 (|RetractableTo| (|Integer|)))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *5))
       (|isDomain| *1 (|AlgebraicFunction| *4 *5))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Kernel| *1)) (|ofCategory| *1 (|Ring|))
       (|ofCategory| *1 (|ExpressionSpace|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *1))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Exit|))
       (|isDomain| *1 (|ErrorFunctions|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|String|))) (|isDomain| *2 (|Exit|))
       (|isDomain| *1 (|ErrorFunctions|))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Exit|))
       (|isDomain| *1 (|ErrorFunctions|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| (|String|))) (|isDomain| *3 (|String|))
       (|isDomain| *2 (|Exit|)) (|isDomain| *1 (|ErrorFunctions|))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Ring|))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|isDomain| *1 (|CommuteUnivariatePolynomialCategory| *3 *4 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))))
 ((*1 *1 *1) (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|AbelianGroup|))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|AbelianGroup|))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1)
  (|partial| AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|Monoid|))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1)
  (|partial| AND (|isDomain| *1 (|Equation| *2)) (|ofCategory| *2 (|Monoid|))
   (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Equation| *3))) (|isDomain| *1 (|Equation| *3))
       (|ofCategory| *3 (|IntegralDomain|)) (|ofCategory| *3 (|Type|))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2
               (|Record| (|:| |unit| *1) (|:| |canonical| *1)
                         (|:| |associate| *1)))
   (|ofCategory| *1 (|EntireRing|))))) 
(((*1 *1 *1) (|ofCategory| *1 (|EntireRing|)))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|EntireRing|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|EntireRing|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *3 *3 *2)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *2 *4 *5))
       (|ofCategory| *2 (|Type|)) (|ofCategory| *4 (|IndexedAggregate| *3 *2))
       (|ofCategory| *5 (|IndexedAggregate| *3 *2))
       (|isDomain| *3 (|Integer|))))
 ((*1 *2 *1 *3 *2)
  (AND (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|EltableAggregate| *3 *2)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatEllipticIntegrals|))))
 ((*1 *2 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatEllipticIntegrals|))))) 
(((*1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatEllipticIntegrals|))))
 ((*1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatEllipticIntegrals|))))) 
(((*1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatEllipticIntegrals|))))
 ((*1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatEllipticIntegrals|))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatEllipticIntegrals|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatEllipticIntegrals|))))) 
(((*1 *2 *2 *3)
  (|partial| AND (|isDomain| *2 (|List| *5))
   (|isDomain| *3 (|List| (|Symbol|))) (|ofCategory| *5 (|FunctionSpace| *4))
   (|ofCategory| *4 (|Join| (|IntegralDomain|) (|Comparable|)))
   (|isDomain| *1 (|ExpressionLinearSolve| *4 *5))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Stream| *4)) (|ofCategory| *4 (|Field|))
       (|isDomain| *2 (|List| (|Stream| *4)))
       (|isDomain| *1 (|EllipticFunctionsUnivariateTaylorSeries| *4 *5))
       (|ofCategory| *5 (|UnivariateTaylorSeriesCategory| *4))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|UniversalSegment| (|Integer|)))
       (|ofCategory| *1 (|ExtensibleLinearAggregate| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|ofCategory| *1 (|ExtensibleLinearAggregate| *3))
       (|ofCategory| *3 (|Type|))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3))
       (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|DictionaryOperations| *3))
       (|ofCategory| *3 (|Type|))))
 ((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Mapping| (|Boolean|) *3))
       (|ofCategory| *1 (|ExtensibleLinearAggregate| *3))
       (|ofCategory| *3 (|Type|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Kernel| *5))
       (|ofCategory| *5
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *4)))
       (|ofCategory| *4
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Union| (|:| |vec| (|Vector| (|Fraction| (|Integer|))))
                            (|:| |func| *5) (|:| |fail| (|Boolean|))))
       (|isDomain| *1 (|ElementaryFunctionStructurePackage| *4 *5))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|Fraction| (|Integer|)))
       (|ofCategory| *4
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *1 (|ElementaryFunctionStructurePackage| *4 *2))
       (|ofCategory| *2
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *4)))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|Mapping| *2 (|Kernel| *2)))
       (|ofCategory| *2
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *4)))
       (|ofCategory| *4
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *1 (|ElementaryFunctionStructurePackage| *4 *2))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Kernel| *2))
       (|ofCategory| *2
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *4)))
       (|ofCategory| *4
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *1 (|ElementaryFunctionStructurePackage| *4 *2))))) 
(((*1 *2 *3 *2 *4)
  (|partial| AND (|isDomain| *3 (|List| (|Kernel| *2)))
   (|isDomain| *4 (|Symbol|))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *5)))
   (|ofCategory| *5
                 (|Join| (|IntegralDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *1 (|ElementaryFunctionStructurePackage| *5 *2))))) 
(((*1 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|IntegralDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *1 (|ElementaryFunctionStructurePackage| *3 *2))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *3)))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *1 (|ElementaryFunctionStructurePackage| *4 *2))
       (|ofCategory| *2
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *4)))))) 
(((*1 *2 *2)
  (AND
   (|ofCategory| *3
                 (|Join| (|IntegralDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *1 (|ElementaryFunctionStructurePackage| *3 *2))
   (|ofCategory| *2
                 (|Join| (|AlgebraicallyClosedField|)
                         (|TranscendentalFunctionCategory|)
                         (|FunctionSpace| *3)))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *1 (|ElementaryFunctionStructurePackage| *4 *2))
       (|ofCategory| *2
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *4)))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Symbol|))
       (|ofCategory| *5
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Record| (|:| |func| *3)
                             (|:| |kers| (|List| (|Kernel| *3)))
                             (|:| |vals| (|List| *3))))
       (|isDomain| *1 (|ElementaryFunctionStructurePackage| *5 *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *5)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| (|Symbol|)))
       (|ofCategory| *5
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Record| (|:| |func| *3)
                             (|:| |kers| (|List| (|Kernel| *3)))
                             (|:| |vals| (|List| *3))))
       (|isDomain| *1 (|ElementaryFunctionStructurePackage| *5 *3))
       (|ofCategory| *3
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *5)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *6)) (|isDomain| *4 (|List| (|Symbol|)))
       (|ofCategory| *6
                     (|Join| (|AlgebraicallyClosedField|)
                             (|TranscendentalFunctionCategory|)
                             (|FunctionSpace| *5)))
       (|ofCategory| *5
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Record| (|:| |funcs| (|List| *6))
                             (|:| |kers| (|List| (|Kernel| *6)))
                             (|:| |vals| (|List| *6))))
       (|isDomain| *1 (|ElementaryFunctionStructurePackage| *5 *6))))) 
(((*1 *2 *2 *2)
  (|partial| AND (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
   (|ofCategory| *4 (|OrderedAbelianMonoid|))
   (|isDomain| *1
               (|ElementaryFunctionsGeneralizedUnivariatePowerSeries| *3 *4
                                                                      *2))
   (|ofCategory| *2
                 (|Join| (|UnivariatePowerSeriesCategory| *3 *4)
                         (CATEGORY |domain| (SIGNATURE |removeZeros| ($ $ *4))
                          (SIGNATURE |apply_taylor| ($ (|Stream| *3) $)))))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|SparseUnivariatePolynomial|
                (|SparseMultivariatePolynomial| *4 (|Kernel| *5))))
   (|ofCategory| *4 (|Join| (|GcdDomain|) (|Comparable|)))
   (|ofCategory| *5 (|FunctionSpace| *4))
   (|isDomain| *2
               (|Factored|
                (|SparseUnivariatePolynomial|
                 (|SparseMultivariatePolynomial| *4 (|Kernel| *5)))))
   (|isDomain| *1 (|ExpressionFactorPolynomial| *4 *5))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|ElementaryFunction| *4 *3))
       (|ofCategory| *3 (|Join| (|FunctionSpace| *4) (|RadicalCategory|)))))) 
(((*1 *2 *2 *3)
  (|partial| AND
   (|isDomain| *3 (|List| (|Record| (|:| |func| *2) (|:| |pole| (|Boolean|)))))
   (|ofCategory| *2 (|Join| (|FunctionSpace| *4) (|RadicalCategory|)))
   (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
   (|isDomain| *1 (|ElementaryFunction| *4 *2))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))))) 
(((*1 *2)
  (AND (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))))) 
(((*1 *2)
  (AND (|ofCategory| *2 (|Join| (|FunctionSpace| *3) (|RadicalCategory|)))
       (|isDomain| *1 (|ElementaryFunction| *3 *2))
       (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Integer|))) (|isDomain| *1 (|ExtAlgBasis|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|isDomain| *1 (|ExtAlgBasis|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *3 (|DifferentialRing|)) (|ofCategory| *3 (|Ring|))
       (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|DifferentialVariableCategory| *4))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Mapping| *1 (|NonNegativeInteger|)))
       (|ofCategory| *1 (|DifferentialPolynomialCategory| *3 *4 *5 *6))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|Ring|)) (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *5 (|DifferentialVariableCategory| *3))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Mapping| *1 (|NonNegativeInteger|)))
       (|ofCategory| *1 (|DifferentialPolynomialCategory| *4 *3 *5 *6))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|DifferentialVariableCategory| *2))
       (|ofCategory| *2 (|OrderedSet|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Distribution| *5))
       (|isDomain| *4 (|UnivariatePolynomial| *6 *5))
       (|ofCategory| *5 (|Field|)) (|ofCategory| *5 (|CommutativeRing|))
       (|ofType| *6 (|Symbol|))
       (|isDomain| *2 (|ContinuedFraction| (|UnivariatePolynomial| *6 *5)))
       (|isDomain| *1 (|DistributionContinuedFractionPackage| *5 *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Distribution| *5))
       (|isDomain| *4 (|UnivariatePolynomial| *6 (|Fraction| *5)))
       (|ofCategory| *5 (|IntegralDomain|)) (|not| (|ofCategory| *5 (|Field|)))
       (|ofCategory| *5 (|CommutativeRing|)) (|ofType| *6 (|Symbol|))
       (|isDomain| *2
                   (|ContinuedFraction|
                    (|UnivariatePolynomial| *6 (|Fraction| *5))))
       (|isDomain| *1 (|DistributionContinuedFractionPackage| *5 *6))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|DrawOption|))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|Float|)) (|isDomain| *3 (|List| (|DrawOption|)))
       (|isDomain| *1 (|DrawOptionFunctions0|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|DrawOption|))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *3 (|List| (|DrawOption|)))
       (|isDomain| *1 (|DrawOptionFunctions0|))))) 
(((*1 *1) (|isDomain| *1 (|Character|)))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
       (|isDomain| *1 (|DrawOption|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|DrawOption|)))
       (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
       (|isDomain| *1 (|DrawOptionFunctions0|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|DrawOption|))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *3 (|List| (|DrawOption|)))
       (|isDomain| *1 (|DrawOptionFunctions0|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|DrawOption|))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *3 (|List| (|DrawOption|)))
       (|isDomain| *1 (|DrawOptionFunctions0|))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|Palette|)) (|isDomain| *3 (|List| (|DrawOption|)))
       (|isDomain| *1 (|DrawOptionFunctions0|))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|Palette|)) (|isDomain| *3 (|List| (|DrawOption|)))
       (|isDomain| *1 (|DrawOptionFunctions0|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|DrawOption|))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *3 (|List| (|DrawOption|)))
       (|isDomain| *1 (|DrawOptionFunctions0|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|DrawOption|))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *3 (|List| (|DrawOption|)))
       (|isDomain| *1 (|DrawOptionFunctions0|))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *3 (|List| (|DrawOption|)))
       (|isDomain| *1 (|DrawOptionFunctions0|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Plot|))
       (|isDomain| *2
                   (|Record|
                    (|:| |brans| (|List| (|List| (|Point| (|DoubleFloat|)))))
                    (|:| |xValues| (|Segment| (|DoubleFloat|)))
                    (|:| |yValues| (|Segment| (|DoubleFloat|)))))
       (|isDomain| *1 (|TwoDimensionalPlotClipping|))))
 ((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|Plot|)) (|isDomain| *4 (|Fraction| (|Integer|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |brans| (|List| (|List| (|Point| (|DoubleFloat|)))))
                    (|:| |xValues| (|Segment| (|DoubleFloat|)))
                    (|:| |yValues| (|Segment| (|DoubleFloat|)))))
       (|isDomain| *1 (|TwoDimensionalPlotClipping|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Point| (|DoubleFloat|))))
       (|isDomain| *2
                   (|Record|
                    (|:| |brans| (|List| (|List| (|Point| (|DoubleFloat|)))))
                    (|:| |xValues| (|Segment| (|DoubleFloat|)))
                    (|:| |yValues| (|Segment| (|DoubleFloat|)))))
       (|isDomain| *1 (|TwoDimensionalPlotClipping|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|List| (|Point| (|DoubleFloat|)))))
       (|isDomain| *2
                   (|Record|
                    (|:| |brans| (|List| (|List| (|Point| (|DoubleFloat|)))))
                    (|:| |xValues| (|Segment| (|DoubleFloat|)))
                    (|:| |yValues| (|Segment| (|DoubleFloat|)))))
       (|isDomain| *1 (|TwoDimensionalPlotClipping|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Segment| (|Float|))))
       (|isDomain| *1 (|DrawOption|))))
 ((*1 *1 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|DrawOption|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Palette|)) (|isDomain| *1 (|DrawOption|))))
 ((*1 *1 *2) (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|DrawOption|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|Palette|)) (|isDomain| *1 (|DrawOption|))))
 ((*1 *1 *2) (AND (|isDomain| *2 (|Float|)) (|isDomain| *1 (|DrawOption|))))) 
(((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)
                          (|DoubleFloat|)))
   (|isDomain| *1 (|DrawOption|))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2 (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)))
   (|isDomain| *1 (|DrawOption|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *1 (|DrawOption|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Segment| (|Fraction| (|Integer|)))))
       (|isDomain| *1 (|DrawOption|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Segment| (|Float|))))
       (|isDomain| *1 (|DrawOption|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|DrawOption|))) (|isDomain| *4 (|Symbol|))
       (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|DrawOption|))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|SegmentBinding| (|Float|)))
       (|isDomain| *5 (|List| (|DrawOption|)))
       (|isDomain| *2 (|TwoDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctions| *3))
       (|ofCategory| *3
                     (|Join| (|ConvertibleTo| (|InputForm|))
                             (|SetCategory|)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|SegmentBinding| (|Float|)))
       (|isDomain| *2 (|TwoDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctions| *3))
       (|ofCategory| *3
                     (|Join| (|ConvertibleTo| (|InputForm|))
                             (|SetCategory|)))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|ParametricPlaneCurve| *6))
       (|isDomain| *4 (|SegmentBinding| (|Float|)))
       (|isDomain| *5 (|List| (|DrawOption|)))
       (|ofCategory| *6
                     (|Join| (|ConvertibleTo| (|InputForm|)) (|SetCategory|)))
       (|isDomain| *2 (|TwoDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctions| *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|ParametricPlaneCurve| *5))
       (|isDomain| *4 (|SegmentBinding| (|Float|)))
       (|ofCategory| *5
                     (|Join| (|ConvertibleTo| (|InputForm|)) (|SetCategory|)))
       (|isDomain| *2 (|TwoDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctions| *5))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|ParametricSpaceCurve| *6))
       (|isDomain| *4 (|SegmentBinding| (|Float|)))
       (|isDomain| *5 (|List| (|DrawOption|)))
       (|ofCategory| *6
                     (|Join| (|ConvertibleTo| (|InputForm|)) (|SetCategory|)))
       (|isDomain| *2 (|ThreeDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctions| *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|ParametricSpaceCurve| *5))
       (|isDomain| *4 (|SegmentBinding| (|Float|)))
       (|ofCategory| *5
                     (|Join| (|ConvertibleTo| (|InputForm|)) (|SetCategory|)))
       (|isDomain| *2 (|ThreeDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctions| *5))))
 ((*1 *2 *3 *4 *4 *5)
  (AND (|isDomain| *4 (|SegmentBinding| (|Float|)))
       (|isDomain| *5 (|List| (|DrawOption|)))
       (|isDomain| *2 (|ThreeDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctions| *3))
       (|ofCategory| *3
                     (|Join| (|ConvertibleTo| (|InputForm|))
                             (|SetCategory|)))))
 ((*1 *2 *3 *4 *4)
  (AND (|isDomain| *4 (|SegmentBinding| (|Float|)))
       (|isDomain| *2 (|ThreeDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctions| *3))
       (|ofCategory| *3
                     (|Join| (|ConvertibleTo| (|InputForm|))
                             (|SetCategory|)))))
 ((*1 *2 *3 *4 *4 *5)
  (AND (|isDomain| *3 (|ParametricSurface| *6))
       (|isDomain| *4 (|SegmentBinding| (|Float|)))
       (|isDomain| *5 (|List| (|DrawOption|)))
       (|ofCategory| *6
                     (|Join| (|ConvertibleTo| (|InputForm|)) (|SetCategory|)))
       (|isDomain| *2 (|ThreeDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctions| *6))))
 ((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|ParametricSurface| *5))
       (|isDomain| *4 (|SegmentBinding| (|Float|)))
       (|ofCategory| *5
                     (|Join| (|ConvertibleTo| (|InputForm|)) (|SetCategory|)))
       (|isDomain| *2 (|ThreeDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctions| *5))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *4 (|Segment| (|Float|)))
       (|isDomain| *5 (|List| (|DrawOption|)))
       (|isDomain| *2 (|TwoDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *4 (|Segment| (|Float|)))
       (|isDomain| *2 (|TwoDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|ParametricPlaneCurve|
                (|Mapping| (|DoubleFloat|) (|DoubleFloat|))))
   (|isDomain| *4 (|Segment| (|Float|)))
   (|isDomain| *5 (|List| (|DrawOption|)))
   (|isDomain| *2 (|TwoDimensionalViewport|))
   (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|ParametricPlaneCurve|
                (|Mapping| (|DoubleFloat|) (|DoubleFloat|))))
   (|isDomain| *4 (|Segment| (|Float|)))
   (|isDomain| *2 (|TwoDimensionalViewport|))
   (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|ParametricSpaceCurve|
                (|Mapping| (|DoubleFloat|) (|DoubleFloat|))))
   (|isDomain| *4 (|Segment| (|Float|)))
   (|isDomain| *5 (|List| (|DrawOption|)))
   (|isDomain| *2 (|ThreeDimensionalViewport|))
   (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|ParametricSpaceCurve|
                (|Mapping| (|DoubleFloat|) (|DoubleFloat|))))
   (|isDomain| *4 (|Segment| (|Float|)))
   (|isDomain| *2 (|ThreeDimensionalViewport|))
   (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| (|Point| (|DoubleFloat|)) (|DoubleFloat|)))
       (|isDomain| *4 (|Segment| (|Float|)))
       (|isDomain| *5 (|List| (|DrawOption|)))
       (|isDomain| *2 (|ThreeDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| (|Point| (|DoubleFloat|)) (|DoubleFloat|)))
       (|isDomain| *4 (|Segment| (|Float|)))
       (|isDomain| *2 (|ThreeDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4 *4 *5)
  (AND
   (|isDomain| *3 (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)))
   (|isDomain| *4 (|Segment| (|Float|)))
   (|isDomain| *5 (|List| (|DrawOption|)))
   (|isDomain| *2 (|ThreeDimensionalViewport|))
   (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4 *4)
  (AND
   (|isDomain| *3 (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)))
   (|isDomain| *4 (|Segment| (|Float|)))
   (|isDomain| *2 (|ThreeDimensionalViewport|))
   (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4 *4 *5)
  (AND
   (|isDomain| *3
               (|Mapping| (|Point| (|DoubleFloat|)) (|DoubleFloat|)
                          (|DoubleFloat|)))
   (|isDomain| *4 (|Segment| (|Float|)))
   (|isDomain| *5 (|List| (|DrawOption|)))
   (|isDomain| *2 (|ThreeDimensionalViewport|))
   (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4 *4)
  (AND
   (|isDomain| *3
               (|Mapping| (|Point| (|DoubleFloat|)) (|DoubleFloat|)
                          (|DoubleFloat|)))
   (|isDomain| *4 (|Segment| (|Float|)))
   (|isDomain| *2 (|ThreeDimensionalViewport|))
   (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4 *4 *5)
  (AND
   (|isDomain| *3
               (|ParametricSurface|
                (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|))))
   (|isDomain| *4 (|Segment| (|Float|)))
   (|isDomain| *5 (|List| (|DrawOption|)))
   (|isDomain| *2 (|ThreeDimensionalViewport|))
   (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4 *4)
  (AND
   (|isDomain| *3
               (|ParametricSurface|
                (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|))))
   (|isDomain| *4 (|Segment| (|Float|)))
   (|isDomain| *2 (|ThreeDimensionalViewport|))
   (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4 *4 *5)
  (AND (|isDomain| *3 (|Equation| *7)) (|isDomain| *4 (|Symbol|))
       (|isDomain| *5 (|List| (|DrawOption|)))
       (|ofCategory| *7 (|FunctionSpace| *6))
       (|ofCategory| *6
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))))
       (|isDomain| *2 (|TwoDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctionsForAlgebraicCurves| *6 *7))))
 ((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| (|DoubleFloat|)))
       (|isDomain| *2 (|TwoDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctionsForPoints|))))
 ((*1 *2 *3 *3 *4)
  (AND (|isDomain| *3 (|List| (|DoubleFloat|)))
       (|isDomain| *4 (|List| (|DrawOption|)))
       (|isDomain| *2 (|TwoDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctionsForPoints|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Point| (|DoubleFloat|))))
       (|isDomain| *2 (|TwoDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctionsForPoints|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Point| (|DoubleFloat|))))
       (|isDomain| *4 (|List| (|DrawOption|)))
       (|isDomain| *2 (|TwoDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctionsForPoints|))))
 ((*1 *2 *3 *3 *3)
  (AND (|isDomain| *3 (|List| (|DoubleFloat|)))
       (|isDomain| *2 (|ThreeDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctionsForPoints|))))
 ((*1 *2 *3 *3 *3 *4)
  (AND (|isDomain| *3 (|List| (|DoubleFloat|)))
       (|isDomain| *4 (|List| (|DrawOption|)))
       (|isDomain| *2 (|ThreeDimensionalViewport|))
       (|isDomain| *1 (|TopLevelDrawFunctionsForPoints|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|)) (|isDomain| *1 (|DrawComplex|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|DrawComplex|))))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|DrawComplex|))))) 
(((*1 *2 *3 *4 *4)
  (AND
   (|isDomain| *3
               (|Mapping| (|Complex| (|DoubleFloat|))
                          (|Complex| (|DoubleFloat|))))
   (|isDomain| *4 (|Segment| (|DoubleFloat|)))
   (|isDomain| *2 (|ThreeDimensionalViewport|))
   (|isDomain| *1 (|DrawComplex|))))) 
(((*1 *2 *3 *4 *4 *5)
  (AND
   (|isDomain| *3
               (|Mapping| (|Complex| (|DoubleFloat|))
                          (|Complex| (|DoubleFloat|))))
   (|isDomain| *4 (|Segment| (|DoubleFloat|))) (|isDomain| *5 (|Boolean|))
   (|isDomain| *2 (|ThreeDimensionalViewport|))
   (|isDomain| *1 (|DrawComplex|))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|SegmentBinding| (|Float|)))
       (|isDomain| *5 (|List| (|DrawOption|))) (|isDomain| *2 (|GraphImage|))
       (|isDomain| *1 (|TopLevelDrawFunctions| *3))
       (|ofCategory| *3
                     (|Join| (|ConvertibleTo| (|InputForm|))
                             (|SetCategory|)))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|ParametricPlaneCurve| *6))
       (|isDomain| *4 (|SegmentBinding| (|Float|)))
       (|isDomain| *5 (|List| (|DrawOption|)))
       (|ofCategory| *6
                     (|Join| (|ConvertibleTo| (|InputForm|)) (|SetCategory|)))
       (|isDomain| *2 (|GraphImage|))
       (|isDomain| *1 (|TopLevelDrawFunctions| *6))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|ParametricSpaceCurve| *6))
       (|isDomain| *4 (|SegmentBinding| (|Float|)))
       (|isDomain| *5 (|List| (|DrawOption|)))
       (|ofCategory| *6
                     (|Join| (|ConvertibleTo| (|InputForm|)) (|SetCategory|)))
       (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
       (|isDomain| *1 (|TopLevelDrawFunctions| *6))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|ParametricSpaceCurve| *5))
       (|isDomain| *4 (|SegmentBinding| (|Float|)))
       (|ofCategory| *5
                     (|Join| (|ConvertibleTo| (|InputForm|)) (|SetCategory|)))
       (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
       (|isDomain| *1 (|TopLevelDrawFunctions| *5))))
 ((*1 *2 *3 *4 *4 *5)
  (AND (|isDomain| *4 (|SegmentBinding| (|Float|)))
       (|isDomain| *5 (|List| (|DrawOption|)))
       (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
       (|isDomain| *1 (|TopLevelDrawFunctions| *3))
       (|ofCategory| *3
                     (|Join| (|ConvertibleTo| (|InputForm|))
                             (|SetCategory|)))))
 ((*1 *2 *3 *4 *4)
  (AND (|isDomain| *4 (|SegmentBinding| (|Float|)))
       (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
       (|isDomain| *1 (|TopLevelDrawFunctions| *3))
       (|ofCategory| *3
                     (|Join| (|ConvertibleTo| (|InputForm|))
                             (|SetCategory|)))))
 ((*1 *2 *3 *4 *4 *5)
  (AND (|isDomain| *3 (|ParametricSurface| *6))
       (|isDomain| *4 (|SegmentBinding| (|Float|)))
       (|isDomain| *5 (|List| (|DrawOption|)))
       (|ofCategory| *6
                     (|Join| (|ConvertibleTo| (|InputForm|)) (|SetCategory|)))
       (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
       (|isDomain| *1 (|TopLevelDrawFunctions| *6))))
 ((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|ParametricSurface| *5))
       (|isDomain| *4 (|SegmentBinding| (|Float|)))
       (|ofCategory| *5
                     (|Join| (|ConvertibleTo| (|InputForm|)) (|SetCategory|)))
       (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
       (|isDomain| *1 (|TopLevelDrawFunctions| *5))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| (|DoubleFloat|) (|DoubleFloat|)))
       (|isDomain| *4 (|Segment| (|Float|)))
       (|isDomain| *5 (|List| (|DrawOption|))) (|isDomain| *2 (|GraphImage|))
       (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|ParametricPlaneCurve|
                (|Mapping| (|DoubleFloat|) (|DoubleFloat|))))
   (|isDomain| *4 (|Segment| (|Float|)))
   (|isDomain| *5 (|List| (|DrawOption|))) (|isDomain| *2 (|GraphImage|))
   (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4 *5)
  (AND
   (|isDomain| *3
               (|ParametricSpaceCurve|
                (|Mapping| (|DoubleFloat|) (|DoubleFloat|))))
   (|isDomain| *4 (|Segment| (|Float|)))
   (|isDomain| *5 (|List| (|DrawOption|)))
   (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
   (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4)
  (AND
   (|isDomain| *3
               (|ParametricSpaceCurve|
                (|Mapping| (|DoubleFloat|) (|DoubleFloat|))))
   (|isDomain| *4 (|Segment| (|Float|)))
   (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
   (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Mapping| (|Point| (|DoubleFloat|)) (|DoubleFloat|)))
       (|isDomain| *4 (|Segment| (|Float|)))
       (|isDomain| *5 (|List| (|DrawOption|)))
       (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
       (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| (|Point| (|DoubleFloat|)) (|DoubleFloat|)))
       (|isDomain| *4 (|Segment| (|Float|)))
       (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
       (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4 *4 *5)
  (AND
   (|isDomain| *3 (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)))
   (|isDomain| *4 (|Segment| (|Float|)))
   (|isDomain| *5 (|List| (|DrawOption|)))
   (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
   (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4 *4)
  (AND
   (|isDomain| *3 (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)))
   (|isDomain| *4 (|Segment| (|Float|)))
   (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
   (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4 *4 *5)
  (AND
   (|isDomain| *3
               (|Mapping| (|Point| (|DoubleFloat|)) (|DoubleFloat|)
                          (|DoubleFloat|)))
   (|isDomain| *4 (|Segment| (|Float|)))
   (|isDomain| *5 (|List| (|DrawOption|)))
   (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
   (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4 *4)
  (AND
   (|isDomain| *3
               (|Mapping| (|Point| (|DoubleFloat|)) (|DoubleFloat|)
                          (|DoubleFloat|)))
   (|isDomain| *4 (|Segment| (|Float|)))
   (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
   (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4 *4 *5)
  (AND
   (|isDomain| *3
               (|ParametricSurface|
                (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|))))
   (|isDomain| *4 (|Segment| (|Float|)))
   (|isDomain| *5 (|List| (|DrawOption|)))
   (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
   (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4 *4)
  (AND
   (|isDomain| *3
               (|ParametricSurface|
                (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|))))
   (|isDomain| *4 (|Segment| (|Float|)))
   (|isDomain| *2 (|ThreeSpace| (|DoubleFloat|)))
   (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))
 ((*1 *2 *3 *4 *4 *5)
  (AND (|isDomain| *3 (|Equation| *7)) (|isDomain| *4 (|Symbol|))
       (|isDomain| *5 (|List| (|DrawOption|)))
       (|ofCategory| *7 (|FunctionSpace| *6))
       (|ofCategory| *6
                     (|Join| (|IntegralDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))))
       (|isDomain| *2 (|GraphImage|))
       (|isDomain| *1 (|TopLevelDrawFunctionsForAlgebraicCurves| *6 *7))))) 
(((*1 *2 *2 *3)
  (AND
   (|isDomain| *2
               (|Mapping| (|Point| (|DoubleFloat|)) (|DoubleFloat|)
                          (|DoubleFloat|)))
   (|isDomain| *3
               (|Mapping| (|DoubleFloat|) (|DoubleFloat|) (|DoubleFloat|)
                          (|DoubleFloat|)))
   (|isDomain| *1 (|TopLevelDrawFunctionsForCompiledFunctions|))))) 
(((*1 *2 *2 *1)
  (AND (|ofCategory| *1 (|DequeueAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *2 *1)
  (AND (|ofCategory| *1 (|DequeueAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|DequeueAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|DequeueAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|DifferentialPolynomialCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|DifferentialVariableCategory| *4))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|List| *4))))) 
(((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|DifferentialPolynomialCategory| *4 *3 *5 *6))
       (|ofCategory| *4 (|Ring|)) (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *5 (|DifferentialVariableCategory| *3))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|DifferentialPolynomialCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|DifferentialVariableCategory| *4))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|DifferentialPolynomialCategory| *3 *4 *5 *6))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|DifferentialVariableCategory| *4))
       (|ofCategory| *6 (|OrderedAbelianMonoidSup|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|DifferentialPolynomialCategory| *3 *4 *2 *5))
       (|ofCategory| *3 (|Ring|)) (|ofCategory| *4 (|OrderedSet|))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))
       (|ofCategory| *2 (|DifferentialVariableCategory| *4))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|DifferentialPolynomialCategory| *2 *3 *4 *5))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *3 (|OrderedSet|))
       (|ofCategory| *4 (|DifferentialVariableCategory| *3))
       (|ofCategory| *5 (|OrderedAbelianMonoidSup|))))) 
(((*1 *2 *3 *3 *2)
  (|partial| AND (|isDomain| *2 (|NonNegativeInteger|))
   (|isDomain| *1 (|DiscreteLogarithmPackage| *3))
   (|ofCategory| *3
                 (|Join| (|Monoid|) (|Finite|)
                         (CATEGORY |domain|
                          (SIGNATURE ^ ($ $ (|Integer|))))))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *1 (|DataList| *3))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|DoublyLinkedAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|DoublyLinkedAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|DoublyLinkedAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|DoublyLinkedAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|DistributionFunctions2| *3 *2))
       (|ofCategory| *3 (|CommutativeRing|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Mapping| *6 *5)) (|isDomain| *4 (|Distribution| *5))
       (|ofCategory| *5 (|CommutativeRing|))
       (|ofCategory| *6 (|CommutativeRing|))
       (|isDomain| *2 (|Distribution| *6))
       (|isDomain| *1 (|DistributionFunctions2| *5 *6))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|Distribution| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Sequence| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|Distribution| *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|Distribution| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Sequence| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|Distribution| *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|Distribution| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Sequence| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|Distribution| *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|Distribution| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Sequence| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|Distribution| *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|Distribution| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Sequence| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|Distribution| *3))))) 
(((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|Stream| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|Distribution| *3))))
 ((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|Sequence| *3)) (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|Distribution| *3))))) 
(((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|Integer|)) (|isDomain| *4 (|Sequence| *2))
       (|isDomain| *1 (|Distribution| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Stream| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|Distribution| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Sequence| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|CommutativeRing|))
       (|isDomain| *1 (|Distribution| *3))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Distribution| *3))
       (|isDomain| *1 (|DistributionPackage| *3))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|ofCategory| *3 (|CommutativeRing|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Distribution| *3))
       (|isDomain| *1 (|DistributionPackage| *3))
       (|ofCategory| *3 (|CommutativeRing|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Distribution| *3))
       (|isDomain| *1 (|DistributionPackage| *3))
       (|ofCategory| *3 (|CommutativeRing|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Distribution| *3))
       (|isDomain| *1 (|DistributionPackage| *3))
       (|ofCategory| *3 (|CommutativeRing|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Distribution| *3))
       (|isDomain| *1 (|DistributionPackage| *3))
       (|ofCategory| *3 (|CommutativeRing|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Distribution| *3))
       (|isDomain| *1 (|DistributionPackage| *3))
       (|ofCategory| *3 (|CommutativeRing|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *1 (|DistributionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|ofCategory| *1 (|DistributionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|ofCategory| *1 (|DistributionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|PositiveInteger|))
       (|ofCategory| *1 (|DistributionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|DistributionCategory| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Sequence| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|DistributionCategory| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Sequence| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|DistributionCategory| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Sequence| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|DistributionCategory| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Sequence| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|DistributionCategory| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|isDomain| *2 (|Stream| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|DistributionCategory| *3))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *3 (|Algebra| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|Sequence| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|DistributionCategory| *3))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *3 (|IntegralDomain|)) (|not| (|ofCategory| *3 (|Field|)))
       (|isDomain| *2
                   (|Record| (|:| |an| (|Stream| (|Fraction| *3)))
                             (|:| |bn| (|Stream| (|Fraction| *3)))))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|DistributionCategory| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofCategory| *3 (|Field|))
       (|isDomain| *2
                   (|Record| (|:| |an| (|Stream| *3))
                             (|:| |bn| (|Stream| *3))))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|DistributionCategory| *3))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *3 (|IntegralDomain|)) (|not| (|ofCategory| *3 (|Field|)))
       (|isDomain| *2
                   (|Stream| (|SparseUnivariatePolynomial| (|Fraction| *3))))))
 ((*1 *2 *1)
  (AND (|ofCategory| *1 (|DistributionCategory| *3))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofCategory| *3 (|Field|))
       (|isDomain| *2 (|Stream| (|SparseUnivariatePolynomial| *3)))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|DistributionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|DistributionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|DistributionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|DistributionCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|DisplayPackage|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|String|))) (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|DisplayPackage|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|)) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|DisplayPackage|))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|String|))) (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|DisplayPackage|))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *3 (|Integer|))
       (|isDomain| *1 (|DisplayPackage|))))) 
(((*1 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|DisplayPackage|))))) 
(((*1 *1)
  (AND (|isDomain| *1 (|DirichletRing| *2)) (|ofCategory| *2 (|Ring|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|DirichletRing| *4)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|DirichletRing| *4)) (|ofCategory| *4 (|Ring|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Equation| (|Polynomial| (|Integer|))))
       (|isDomain| *2
                   (|Record| (|:| |varOrder| (|List| (|Symbol|)))
                             (|:| |inhom|
                                  (|Union|
                                   (|List| (|Vector| (|NonNegativeInteger|)))
                                   "failed"))
                             (|:| |hom|
                                  (|List| (|Vector| (|NonNegativeInteger|))))))
       (|isDomain| *1 (|DiophantineSolutionPackage|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *1 (|DictionaryOperations| *3))))
 ((*1 *1)
  (AND (|ofCategory| *1 (|DictionaryOperations| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|IntegerMod| *3))
       (|isDomain| *1 (|DihedralGroup| *3 *4 *5))
       (|ofType| *3 (|PositiveInteger|)) (|ofType| *4 (|Symbol|))
       (|ofType| *5 (|Symbol|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|IntegerMod| 2))
       (|isDomain| *1 (|DihedralGroup| *3 *4 *5))
       (|ofType| *3 (|PositiveInteger|)) (|ofType| *4 (|Symbol|))
       (|ofType| *5 (|Symbol|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|DihedralGroup| *3 *4 *5))
       (|ofType| *3 (|PositiveInteger|)) (|ofType| *4 (|Symbol|))
       (|ofType| *5 (|Symbol|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|DihedralGroup| *3 *4 *5))
       (|ofType| *3 (|PositiveInteger|)) (|ofType| *4 (|Symbol|))
       (|ofType| *5 (|Symbol|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *1 (|DenavitHartenbergMatrix| *2))
       (|ofCategory| *2
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)))))) 
(((*1 *1 *2)
  (AND (|isDomain| *1 (|DenavitHartenbergMatrix| *2))
       (|ofCategory| *2
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)))))) 
(((*1 *1 *2)
  (AND (|isDomain| *1 (|DenavitHartenbergMatrix| *2))
       (|ofCategory| *2
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|FinitePoset| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|DirectedGraph| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Permutation| *3)))
       (|ofCategory| *3 (|SetCategory|)) (|isDomain| *1 (|DirectedGraph| *3))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4))
       (|isDomain| *3 (|List| (|List| (|NonNegativeInteger|))))
       (|ofCategory| *4 (|SetCategory|)) (|isDomain| *1 (|DirectedGraph| *4))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4))
       (|isDomain| *3
                   (|List|
                    (|Record| (|:| |fromOb| (|NonNegativeInteger|))
                              (|:| |toOb| (|NonNegativeInteger|)))))
       (|ofCategory| *4 (|SetCategory|)) (|isDomain| *1 (|DirectedGraph| *4))))
 ((*1 *1 *2 *3)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |value| *4) (|:| |posX| (|NonNegativeInteger|))
                          (|:| |posY| (|NonNegativeInteger|)))))
   (|isDomain| *3
               (|List|
                (|Record| (|:| |name| (|String|))
                          (|:| |arrType| (|NonNegativeInteger|))
                          (|:| |fromOb| (|NonNegativeInteger|))
                          (|:| |toOb| (|NonNegativeInteger|))
                          (|:| |xOffset| (|Integer|))
                          (|:| |yOffset| (|Integer|))
                          (|:| |map| (|List| (|NonNegativeInteger|))))))
   (|ofCategory| *4 (|SetCategory|)) (|isDomain| *1 (|DirectedGraph| *4))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2
               (|List|
                (|Record| (|:| |value| *3) (|:| |posX| (|NonNegativeInteger|))
                          (|:| |posY| (|NonNegativeInteger|)))))
   (|ofCategory| *3 (|SetCategory|)) (|isDomain| *1 (|DirectedGraph| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|DirectedGraph| *3))))) 
(((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Integer|))
       (|isDomain| *1 (|ComplexDoubleFloatVector|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|DoubleFloatVector|))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|DoubleFloat|))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|Complex| (|DoubleFloat|)))
       (|isDomain| *1 (|DoubleFloatSpecialFunctions|))))) 
(((*1 *1 *1) (|isDomain| *1 (|DoubleFloat|)))) 
(((*1 *1 *1) (|isDomain| *1 (|DoubleFloat|)))) 
(((*1 *2 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|DoubleFloat|))))) 
(((*1 *2 *3 *4 *5 *5 *2)
  (|partial| AND (|isDomain| *2 (|Boolean|)) (|isDomain| *3 (|Polynomial| *6))
   (|isDomain| *4 (|Symbol|)) (|isDomain| *5 (|OrderedCompletion| *7))
   (|ofCategory| *6
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|ofCategory| *7
                 (|Join| (|TranscendentalFunctionCategory|)
                         (|AlgebraicallyClosedField|) (|FunctionSpace| *6)))
   (|isDomain| *1 (|DefiniteIntegrationTools| *6 *7))))
 ((*1 *2 *3 *4 *4 *2)
  (|partial| AND (|isDomain| *2 (|Boolean|))
   (|isDomain| *3 (|SparseUnivariatePolynomial| *6))
   (|isDomain| *4 (|OrderedCompletion| *6))
   (|ofCategory| *6
                 (|Join| (|TranscendentalFunctionCategory|)
                         (|AlgebraicallyClosedField|) (|FunctionSpace| *5)))
   (|ofCategory| *5
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *1 (|DefiniteIntegrationTools| *5 *6))))) 
(((*1 *2 *3 *4 *2 *2 *5)
  (|partial| AND (|isDomain| *2 (|OrderedCompletion| *4))
   (|isDomain| *3 (|Kernel| *4)) (|isDomain| *5 (|Boolean|))
   (|ofCategory| *4
                 (|Join| (|TranscendentalFunctionCategory|)
                         (|AlgebraicallyClosedField|) (|FunctionSpace| *6)))
   (|ofCategory| *6
                 (|Join| (|GcdDomain|) (|Comparable|)
                         (|RetractableTo| (|Integer|))
                         (|LinearlyExplicitOver| (|Integer|))))
   (|isDomain| *1 (|DefiniteIntegrationTools| *6 *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|String|))
       (|ofCategory| *4
                     (|Join| (|GcdDomain|) (|Comparable|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|DefiniteIntegrationTools| *4 *5))
       (|ofCategory| *5
                     (|Join| (|TranscendentalFunctionCategory|)
                             (|AlgebraicallyClosedField|)
                             (|FunctionSpace| *4)))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|AntiSymm| *2 *3)) (|ofCategory| *2 (|Ring|))
       (|ofType| *3 (|List| (|Symbol|)))))
 ((*1 *1 *1)
  (AND (|isDomain| *1 (|DeRhamComplex| *2 *3))
       (|ofCategory| *2 (|Join| (|Ring|) (|Comparable|)))
       (|ofType| *3 (|List| (|Symbol|)))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|AntiSymm| *3 *4))
       (|ofCategory| *3 (|Ring|)) (|ofType| *4 (|List| (|Symbol|)))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|DeRhamComplex| *3 *4))
       (|ofCategory| *3 (|Join| (|Ring|) (|Comparable|)))
       (|ofType| *4 (|List| (|Symbol|)))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Expression| *3))
       (|ofCategory| *3 (|Join| (|Ring|) (|Comparable|)))
       (|isDomain| *1 (|DeRhamComplex| *3 *4))
       (|ofType| *4 (|List| (|Symbol|)))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|DeRhamComplex| *2 *3))
       (|ofCategory| *2 (|Join| (|Ring|) (|Comparable|)))
       (|ofType| *3 (|List| (|Symbol|)))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|Dequeue| *3))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|DeltaComplex| *3))
       (|isDomain| *1 (|DeltaComplexFactory| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|FiniteCubicalComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|)) (|isDomain| *1 (|DeltaComplex| *3))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|FiniteSimplicialComplex| *4))
       (|isDomain| *3 (|Boolean|)) (|ofCategory| *4 (|AbelianGroup|))
       (|isDomain| *1 (|DeltaComplex| *4))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|FiniteSimplicialComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|)) (|isDomain| *1 (|DeltaComplex| *3))))
 ((*1 *1 *2 *3 *4)
  (AND (|isDomain| *2 (|List| *5)) (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *4 (|List| (|List| (|List| (|Integer|)))))
       (|ofCategory| *5 (|AbelianGroup|)) (|isDomain| *1 (|DeltaComplex| *5))))) 
(((*1 *1 *2 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|DeltaComplex| *3)) (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|List| (|List| (|Integer|))))
       (|isDomain| *1 (|DeltaComplex| *4)) (|ofCategory| *4 (|AbelianGroup|))))) 
(((*1 *2 *3 *4 *5 *5 *6)
  (AND (|isDomain| *4 (|Symbol|)) (|isDomain| *5 (|OrderedCompletion| *3))
       (|isDomain| *6 (|Boolean|))
       (|ofCategory| *3
                     (|Join| (|TranscendentalFunctionCategory|)
                             (|PrimitiveFunctionCategory|)
                             (|AlgebraicallyClosedFunctionSpace| *7)))
       (|ofCategory| *7
                     (|Join| (|PolynomialFactorizationExplicit|) (|Comparable|)
                             (|CharacteristicZero|)
                             (|RetractableTo| (|Integer|))
                             (|LinearlyExplicitOver| (|Integer|))))
       (|isDomain| *2
                   (|Union| (|:| |f1| (|OrderedCompletion| *3))
                            (|:| |f2| (|List| (|OrderedCompletion| *3)))
                            (|:| |fail| "failed")
                            (|:| |pole| "potentialPole")))
       (|isDomain| *1 (|ElementaryFunctionDefiniteIntegration| *7 *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|DecimalExpansion|))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|FiniteFieldCategory|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|DistinctDegreeFactorize| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *2 *3 *2)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|FiniteFieldCategory|))
       (|isDomain| *1 (|DistinctDegreeFactorize| *4 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *2 *3 *2)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|FiniteFieldCategory|))
       (|isDomain| *1 (|DistinctDegreeFactorize| *4 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *2 *3 *2)
  (AND (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|FiniteFieldCategory|))
       (|isDomain| *1 (|DistinctDegreeFactorize| *4 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|FiniteFieldCategory|))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |deg| (|NonNegativeInteger|))
                              (|:| |prod| *3))))
       (|isDomain| *1 (|DistinctDegreeFactorize| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Boolean|)) (|ofCategory| *5 (|FiniteFieldCategory|))
       (|isDomain| *2
                   (|Record| (|:| |cont| *5)
                             (|:| |factors|
                                  (|List|
                                   (|Record| (|:| |irr| *3)
                                             (|:| |pow| (|Integer|)))))))
       (|isDomain| *1 (|DistinctDegreeFactorize| *5 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Mapping| *2 *2)) (|ofCategory| *5 (|Field|))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| (|Fraction| *2)))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| *5))
       (|isDomain| *1 (|DoubleResultantPackage| *5 *2 *6 *3))
       (|ofCategory| *3 (|FunctionFieldCategory| *5 *2 *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|Factored| (|SparseUnivariatePolynomial| (|Integer|))))
       (|isDomain| *1 (|CyclotomicPolynomialPackage|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|List| (|SparseUnivariatePolynomial| (|Integer|))))
       (|isDomain| *1 (|CyclotomicPolynomialPackage|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|SymmetricPolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|CycleIndicators|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Integer|)))
       (|isDomain| *2 (|SymmetricPolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|CycleIndicators|))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|SymmetricPolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|CycleIndicators|))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *2 (|SymmetricPolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|CycleIndicators|))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|SymmetricPolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *2 (|Fraction| (|Integer|)))
       (|isDomain| *1 (|CycleIndicators|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|SymmetricPolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|CycleIndicators|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|SymmetricPolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|CycleIndicators|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|SymmetricPolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|CycleIndicators|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|SymmetricPolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|CycleIndicators|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Integer|))
       (|isDomain| *2 (|SymmetricPolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|CycleIndicators|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Vector| (|Matrix| *4)))
       (|ofCategory| *4 (|CommutativeRing|))
       (|isDomain| *2 (|Vector| (|Matrix| (|Polynomial| *4))))
       (|isDomain| *1 (|CoerceVectorMatrixPackage| *4))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|AbelianGroup|))
       (|isDomain| *1 (|FiniteCubicalComplex| *3))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4))
       (|isDomain| *3 (|List| (|List| (|List| (|Integer|)))))
       (|ofCategory| *4 (|AbelianGroup|))
       (|isDomain| *1 (|FiniteCubicalComplex| *4))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4))
       (|isDomain| *3 (|List| (|List| (|Segment| (|Integer|)))))
       (|ofCategory| *4 (|AbelianGroup|))
       (|isDomain| *1 (|FiniteCubicalComplex| *4))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|List| *4)) (|isDomain| *3 (|List| (|CubicalFacet|)))
       (|ofCategory| *4 (|AbelianGroup|))
       (|isDomain| *1 (|FiniteCubicalComplex| *4))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|CubicalFacet|))
       (|isDomain| *1 (|FiniteCubicalComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Type|)) (|isDomain| *1 (|CyclicStreamTools| *3 *2))
       (|ofCategory| *2 (|LazyStreamAggregate| *3))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|Type|)) (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|CyclicStreamTools| *4 *3))
       (|ofCategory| *3 (|LazyStreamAggregate| *4))))) 
(((*1 *2 *2)
  (|partial| AND (|ofCategory| *3 (|Type|))
   (|isDomain| *1 (|CyclicStreamTools| *3 *2))
   (|ofCategory| *2 (|LazyStreamAggregate| *3))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))
       (|isDomain| *2
                   (|Record| (|:| |start| *3) (|:| |factors| (|Factored| *3))))
       (|isDomain| *1 (|ComplexRootFindingPackage| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Complex| *4)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *2 (|Join| (|Field|) (|OrderedRing|)))
       (|isDomain| *1 (|ComplexRootFindingPackage| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Complex| *2)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Complex| *4))
       (|isDomain| *1 (|ComplexRootFindingPackage| *4 *3))
       (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *2 *3 *2)
  (AND (|ofCategory| *2 (|Join| (|Field|) (|OrderedRing|)))
       (|isDomain| *1 (|ComplexRootFindingPackage| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Complex| *2)))))
 ((*1 *2 *3)
  (AND (|ofCategory| *2 (|Join| (|Field|) (|OrderedRing|)))
       (|isDomain| *1 (|ComplexRootFindingPackage| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Complex| *2)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Field|) (|OrderedRing|)))
       (|isDomain| *1 (|ComplexRootFindingPackage| *3 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| (|Complex| *3)))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *5 (|Boolean|))
       (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))
       (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|ComplexRootFindingPackage| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Complex| *4)))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))
       (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|ComplexRootFindingPackage| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Complex| *4)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Field|) (|OrderedRing|)))
       (|isDomain| *1 (|ComplexRootFindingPackage| *3 *2))
       (|ofCategory| *2 (|UnivariatePolynomialCategory| (|Complex| *3)))))) 
(((*1 *2 *3 *3 *4)
  (AND (|isDomain| *4 (|Boolean|))
       (|ofCategory| *5 (|Join| (|Field|) (|OrderedRing|)))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |factors| (|List| *3)) (|:| |error| *5))))
       (|isDomain| *1 (|ComplexRootFindingPackage| *5 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Complex| *5)))))
 ((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))
       (|isDomain| *2
                   (|List|
                    (|Record| (|:| |factors| (|List| *3)) (|:| |error| *4))))
       (|isDomain| *1 (|ComplexRootFindingPackage| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Complex| *4)))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *2 (|List| (|Complex| *4)))
       (|isDomain| *1 (|ComplexRootPackage| *3 *4))
       (|ofCategory| *3
                     (|UnivariatePolynomialCategory| (|Complex| (|Integer|))))
       (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))))
 ((*1 *2 *3)
  (AND (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))
       (|isDomain| *2 (|List| (|Complex| *4)))
       (|isDomain| *1 (|ComplexRootFindingPackage| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Complex| *4)))))
 ((*1 *2 *3 *4)
  (AND (|ofCategory| *4 (|Join| (|Field|) (|OrderedRing|)))
       (|isDomain| *2 (|List| (|Complex| *4)))
       (|isDomain| *1 (|ComplexRootFindingPackage| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Complex| *4)))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|EuclideanDomain|))
       (|isDomain| *1 (|CRApackage| *3))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|EuclideanDomain|))
       (|isDomain| *1 (|CRApackage| *3))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *2 (|Mapping| (|Point| *3) (|Point| *3)))
       (|isDomain| *1 (|CoordinateSystems| *3))
       (|ofCategory| *3
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)
                             (|RadicalCategory|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| (|Point| *3) (|Point| *3)))
       (|isDomain| *1 (|CoordinateSystems| *3))
       (|ofCategory| *3
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)
                             (|RadicalCategory|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| (|Point| *3) (|Point| *3)))
       (|isDomain| *1 (|CoordinateSystems| *3))
       (|ofCategory| *3
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)
                             (|RadicalCategory|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| (|Point| *3) (|Point| *3)))
       (|isDomain| *1 (|CoordinateSystems| *3))
       (|ofCategory| *3
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)
                             (|RadicalCategory|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| (|Point| *3) (|Point| *3)))
       (|isDomain| *1 (|CoordinateSystems| *3))
       (|ofCategory| *3
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)
                             (|RadicalCategory|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| (|Point| *3) (|Point| *3)))
       (|isDomain| *1 (|CoordinateSystems| *3))
       (|ofCategory| *3
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)
                             (|RadicalCategory|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Mapping| (|Point| *3) (|Point| *3)))
       (|isDomain| *1 (|CoordinateSystems| *3))
       (|ofCategory| *3
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)
                             (|RadicalCategory|)))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Point| *3))
       (|ofCategory| *3
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)
                             (|RadicalCategory|)))
       (|isDomain| *1 (|CoordinateSystems| *3))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Point| *3))
       (|ofCategory| *3
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)
                             (|RadicalCategory|)))
       (|isDomain| *1 (|CoordinateSystems| *3))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Point| *3))
       (|ofCategory| *3
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)
                             (|RadicalCategory|)))
       (|isDomain| *1 (|CoordinateSystems| *3))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Point| *3))
       (|ofCategory| *3
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)
                             (|RadicalCategory|)))
       (|isDomain| *1 (|CoordinateSystems| *3))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Point| *3))
       (|ofCategory| *3
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)
                             (|RadicalCategory|)))
       (|isDomain| *1 (|CoordinateSystems| *3))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Point| *3))
       (|ofCategory| *3
                     (|Join| (|Field|) (|TranscendentalFunctionCategory|)
                             (|RadicalCategory|)))
       (|isDomain| *1 (|CoordinateSystems| *3))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|Stream| *2)) (|ofCategory| *2 (|EuclideanDomain|))
       (|isDomain| *1 (|ContinuedFraction| *2))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Stream| *3)) (|isDomain| *1 (|ContinuedFraction| *3))
       (|ofCategory| *3 (|EuclideanDomain|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Stream| *3)) (|isDomain| *1 (|ContinuedFraction| *3))
       (|ofCategory| *3 (|EuclideanDomain|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Stream| *3)) (|isDomain| *1 (|ContinuedFraction| *3))
       (|ofCategory| *3 (|EuclideanDomain|))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|ContinuedFraction| *2))
       (|ofCategory| *2 (|EuclideanDomain|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Stream| (|Fraction| *3)))
       (|isDomain| *1 (|ContinuedFraction| *3))
       (|ofCategory| *3 (|EuclideanDomain|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Stream| (|Fraction| *3)))
       (|isDomain| *1 (|ContinuedFraction| *3))
       (|ofCategory| *3 (|EuclideanDomain|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Stream| *3)) (|isDomain| *1 (|ContinuedFraction| *3))
       (|ofCategory| *3 (|EuclideanDomain|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Stream| *3)) (|isDomain| *1 (|ContinuedFraction| *3))
       (|ofCategory| *3 (|EuclideanDomain|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|SubSpaceComponentProperty|))))) 
(((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|SubSpaceComponentProperty|))))) 
(((*1 *2 *3 *4 *4 *4 *4)
  (AND (|isDomain| *3 (|List| (|Lambda| (|Typed|)))) (|isDomain| *4 (|String|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|compCode|))))) 
(((*1 *2 *3 *4 *4 *4)
  (AND (|isDomain| *3 (|List| (|ILogic|))) (|isDomain| *4 (|String|))
       (|isDomain| *2 (|Void|)) (|isDomain| *1 (|compCode|))))) 
(((*1 *1)
  (AND (|ofCategory| *1 (|ComplexCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *1 *2 *2)
  (AND (|ofCategory| *1 (|ComplexCategory| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|ComplexCategory| *3))
       (|ofCategory| *3 (|CommutativeRing|))
       (|ofCategory| *3 (|RealNumberSystem|))
       (|ofCategory| *3 (|TranscendentalFunctionCategory|))
       (|isDomain| *2 (|Record| (|:| |r| *3) (|:| |phi| *3)))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|Comparable|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|Commutator|)))
 ((*1 *1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Commutator|))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|CombinatorialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|CombinatorialFunction| *4 *2))
       (|ofCategory| *2 (|FunctionSpace| *4))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|CombinatorialOpsCategory|))
       (|isDomain| *2 (|Symbol|))))
 ((*1 *1 *1) (|ofCategory| *1 (|CombinatorialOpsCategory|)))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|CombinatorialFunction| *4 *2))
       (|ofCategory| *2 (|FunctionSpace| *4))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|SegmentBinding| *2))
       (|ofCategory| *2 (|FunctionSpace| *4))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|CombinatorialFunction| *4 *2))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|SegmentBinding| *1))
       (|ofCategory| *1 (|CombinatorialOpsCategory|))))
 ((*1 *1 *1 *2)
  (AND (|ofCategory| *1 (|CombinatorialOpsCategory|))
       (|isDomain| *2 (|Symbol|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *1 (|IntegerCombinatoricFunctions| *2))
       (|ofCategory| *2 (|IntegerNumberSystem|))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *1 (|IntegerCombinatoricFunctions| *2))
       (|ofCategory| *2 (|IntegerNumberSystem|))))) 
(((*1 *2 *2 *2)
  (AND (|isDomain| *1 (|IntegerCombinatoricFunctions| *2))
       (|ofCategory| *2 (|IntegerNumberSystem|))))) 
(((*1 *1 *1 *1) (|ofCategory| *1 (|CombinatorialFunctionCategory|)))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|CombinatorialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *2 *2 *2)
  (AND (|isDomain| *1 (|IntegerCombinatoricFunctions| *2))
       (|ofCategory| *2 (|IntegerNumberSystem|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *1 (|IntegerCombinatoricFunctions| *2))
       (|ofCategory| *2 (|IntegerNumberSystem|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| *2)) (|ofCategory| *2 (|IntegerNumberSystem|))
       (|isDomain| *1 (|IntegerCombinatoricFunctions| *2))))) 
(((*1 *1 *1) (|ofCategory| *1 (|CombinatorialFunctionCategory|)))
 ((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|CombinatorialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))
 ((*1 *2 *2)
  (AND (|isDomain| *1 (|IntegerCombinatoricFunctions| *2))
       (|ofCategory| *2 (|IntegerNumberSystem|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *2)) (|ofCategory| *2 (|FunctionSpace| *4))
       (|isDomain| *1 (|CombinatorialFunction| *4 *2))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *2)) (|ofCategory| *2 (|FunctionSpace| *4))
       (|isDomain| *1 (|CombinatorialFunction| *4 *2))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *2)) (|ofCategory| *2 (|FunctionSpace| *4))
       (|isDomain| *1 (|CombinatorialFunction| *4 *2))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *2)) (|ofCategory| *2 (|FunctionSpace| *4))
       (|isDomain| *1 (|CombinatorialFunction| *4 *2))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *2)) (|ofCategory| *2 (|FunctionSpace| *4))
       (|isDomain| *1 (|CombinatorialFunction| *4 *2))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *2)) (|ofCategory| *2 (|FunctionSpace| *4))
       (|isDomain| *1 (|CombinatorialFunction| *4 *2))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|CombinatorialFunction| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))))) 
(((*1 *1) (|isDomain| *1 (|Color|)))) 
(((*1 *1) (|isDomain| *1 (|Color|)))) 
(((*1 *1) (|isDomain| *1 (|Color|)))) 
(((*1 *1) (|isDomain| *1 (|Color|)))) 
(((*1 *2) (AND (|isDomain| *2 (|PositiveInteger|)) (|isDomain| *1 (|Color|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Matrix| (|Integer|))))
       (|isDomain| *1 (|CoChainComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|ChainComplex|))))
 ((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|CoChainComplex| *3))
       (|ofCategory| *3 (|AbelianGroup|))))) 
(((*1 *2 *1 *3 *2)
  (AND (|isDomain| *2 (|List| *4)) (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|AbelianGroup|))
       (|isDomain| *1 (|CoChainComplex| *4))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|Coalgebra| *3 *2))
       (|ofCategory| *3 (|CommutativeRing|)) (|ofCategory| *2 (|Module| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|Coalgebra| *2 *3)) (|ofCategory| *3 (|Module| *2))
       (|ofCategory| *2 (|CommutativeRing|))))) 
(((*1 *2 *3 *4 *4 *4 *4)
  (AND (|isDomain| *3 (|List| (|List| (|Point| (|DoubleFloat|)))))
       (|isDomain| *4 (|DoubleFloat|))
       (|isDomain| *2
                   (|Record|
                    (|:| |brans| (|List| (|List| (|Point| (|DoubleFloat|)))))
                    (|:| |xValues| (|Segment| (|DoubleFloat|)))
                    (|:| |yValues| (|Segment| (|DoubleFloat|)))))
       (|isDomain| *1 (|TwoDimensionalPlotClipping|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Plot|))
       (|isDomain| *2
                   (|Record|
                    (|:| |brans| (|List| (|List| (|Point| (|DoubleFloat|)))))
                    (|:| |xValues| (|Segment| (|DoubleFloat|)))
                    (|:| |yValues| (|Segment| (|DoubleFloat|)))))
       (|isDomain| *1 (|TwoDimensionalPlotClipping|))))
 ((*1 *2 *3 *4 *4)
  (AND (|isDomain| *3 (|Plot|)) (|isDomain| *4 (|Fraction| (|Integer|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |brans| (|List| (|List| (|Point| (|DoubleFloat|)))))
                    (|:| |xValues| (|Segment| (|DoubleFloat|)))
                    (|:| |yValues| (|Segment| (|DoubleFloat|)))))
       (|isDomain| *1 (|TwoDimensionalPlotClipping|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Vector| *6)))
       (|isDomain| *4 (|List| (|Mapping| *6 *6)))
       (|ofCategory| *6 (|FunctionSpace| *5))
       (|ofCategory| *5 (|Join| (|IntegralDomain|) (|Comparable|)))
       (|isDomain| *2
                   (|Record| (|:| |transform| (|Matrix| *6))
                             (|:| |basis| (|List| (|Vector| *6)))))
       (|isDomain| *1 (|ConstantLinearDependence| *5 *6))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Matrix| *6)) (|isDomain| *4 (|List| (|Mapping| *6 *6)))
       (|ofCategory| *6 (|FunctionSpace| *5))
       (|ofCategory| *5 (|Join| (|IntegralDomain|) (|Comparable|)))
       (|isDomain| *2 (|List| (|Vector| *6)))
       (|isDomain| *1 (|ConstantLinearDependence| *5 *6))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Vector| *4)) (|isDomain| *5 (|List| (|Mapping| *4 *4)))
       (|ofCategory| *4 (|FunctionSpace| *6))
       (|ofCategory| *6 (|Join| (|IntegralDomain|) (|Comparable|)))
       (|isDomain| *2
                   (|Record|
                    (|:| |particular| (|Union| (|Vector| *4) #1="failed"))
                    (|:| |basis| (|List| (|Vector| *4)))))
       (|isDomain| *1 (|ConstantLinearDependence| *6 *4))))
 ((*1 *2 *3 *4 *5)
  (AND (|isDomain| *3 (|Matrix| *7)) (|isDomain| *4 (|Vector| *7))
       (|isDomain| *5 (|List| (|Mapping| *7 *7)))
       (|ofCategory| *7 (|FunctionSpace| *6))
       (|ofCategory| *6 (|Join| (|IntegralDomain|) (|Comparable|)))
       (|isDomain| *2
                   (|Record| (|:| |particular| (|Union| (|Vector| *7) #1#))
                             (|:| |basis| (|List| (|Vector| *7)))))
       (|isDomain| *1 (|ConstantLinearDependence| *6 *7))))) 
(((*1 *2 *2 *3 *4)
  (|partial| AND (|isDomain| *2 (|Vector| *3))
   (|isDomain| *4 (|List| (|Mapping| *3 *3)))
   (|ofCategory| *3 (|FunctionSpace| *5))
   (|ofCategory| *5 (|Join| (|IntegralDomain|) (|Comparable|)))
   (|isDomain| *1 (|ConstantLinearDependence| *5 *3))))
 ((*1 *2 *3 *2 *4)
  (|partial| AND (|isDomain| *2 (|Vector| *6)) (|isDomain| *3 (|Matrix| *6))
   (|isDomain| *4 (|List| (|Mapping| *6 *6)))
   (|ofCategory| *6 (|FunctionSpace| *5))
   (|ofCategory| *5 (|Join| (|IntegralDomain|) (|Comparable|)))
   (|isDomain| *1 (|ConstantLinearDependence| *5 *6))))) 
(((*1 *2 *2 *3)
  (|partial| AND (|isDomain| *2 (|Vector| *5))
   (|isDomain| *3 (|List| (|Mapping| *5 *5)))
   (|ofCategory| *5 (|FunctionSpace| *4))
   (|ofCategory| *4 (|Join| (|IntegralDomain|) (|Comparable|)))
   (|isDomain| *1 (|ConstantLinearDependence| *4 *5))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|Vector| *6)) (|isDomain| *4 (|List| (|Mapping| *6 *6)))
       (|ofCategory| *6 (|FunctionSpace| *5))
       (|ofCategory| *5 (|Join| (|IntegralDomain|) (|Comparable|)))
       (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|ConstantLinearDependence| *5 *6))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|PositiveInteger|))
       (|isDomain| *1 (|CliffordAlgebra| *3 *4 *5)) (|ofType| *3 *2)
       (|ofCategory| *4 (|Field|)) (|ofType| *5 (|SquareMatrix| *3 *4))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|PositiveInteger|)))
       (|isDomain| *1 (|CliffordAlgebra| *3 *4 *5))
       (|ofType| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Field|))
       (|ofType| *5 (|SquareMatrix| *3 *4))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *4)) (|ofCategory| *4 (|Field|))
       (|ofType| *5 (|SquareMatrix| *3 *4))
       (|isDomain| *1 (|CliffordAlgebra| *3 *4 *5))
       (|ofType| *3 (|PositiveInteger|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|CliffordAlgebra| *3 *4 *5))
       (|ofType| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Field|))
       (|ofType| *5 (|SquareMatrix| *3 *4))))) 
(((*1 *1)
  (AND (|isDomain| *1 (|CliffordAlgebra| *2 *3 *4))
       (|ofType| *2 (|PositiveInteger|)) (|ofCategory| *3 (|Field|))
       (|ofType| *4 (|SquareMatrix| *2 *3))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|Mapping| (|CliffordAlgebra| *4 *5 *6)
                          (|CliffordAlgebra| *4 *5 *6)))
   (|isDomain| *2 (|Matrix| (|CliffordAlgebra| *4 *5 *6)))
   (|isDomain| *1 (|CliffordAlgebra| *4 *5 *6))
   (|ofType| *4 (|PositiveInteger|)) (|ofCategory| *5 (|Field|))
   (|ofType| *6 (|SquareMatrix| *4 *5))))
 ((*1 *2 *3)
  (AND
   (|isDomain| *3
               (|Mapping| (|CliffordAlgebra| *4 *5 *6)
                          (|CliffordAlgebra| *4 *5 *6)
                          (|CliffordAlgebra| *4 *5 *6)))
   (|isDomain| *2 (|Matrix| (|CliffordAlgebra| *4 *5 *6)))
   (|isDomain| *1 (|CliffordAlgebra| *4 *5 *6))
   (|ofType| *4 (|PositiveInteger|)) (|ofCategory| *5 (|Field|))
   (|ofType| *6 (|SquareMatrix| *4 *5))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|CliffordAlgebra| *2 *3 *4))
       (|ofType| *2 (|PositiveInteger|)) (|ofCategory| *3 (|Field|))
       (|ofType| *4 (|SquareMatrix| *2 *3))))) 
(((*1 *1 *1 *1)
  (AND (|isDomain| *1 (|CliffordAlgebra| *2 *3 *4))
       (|ofType| *2 (|PositiveInteger|)) (|ofCategory| *3 (|Field|))
       (|ofType| *4 (|SquareMatrix| *2 *3))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|CliffordAlgebra| *2 *3 *4))
       (|ofType| *2 (|PositiveInteger|)) (|ofCategory| *3 (|Field|))
       (|ofType| *4 (|SquareMatrix| *2 *3))))) 
(((*1 *1 *1)
  (AND (|isDomain| *1 (|CliffordAlgebra| *2 *3 *4))
       (|ofType| *2 (|PositiveInteger|)) (|ofCategory| *3 (|Field|))
       (|ofType| *4 (|SquareMatrix| *2 *3))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *3 (|String|))
       (|isDomain| *1 (|CliffordAlgebra| *4 *5 *6))
       (|ofType| *4 (|PositiveInteger|)) (|ofCategory| *5 (|Field|))
       (|ofType| *6 (|SquareMatrix| *4 *5))))) 
(((*1 *2 *3 *1)
  (|partial| AND (|isDomain| *3 (|Mapping| (|Boolean|) *2))
   (|ofCategory| *1 (|Collection| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|finiteAggregate|))
       (|ofCategory| *1 (|Collection| *2)) (|ofCategory| *2 (|Type|))
       (|ofCategory| *2 (|BasicType|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|JetDifferentialEquation| *4 *5))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|ofCategory| *5 (|JetBundleFunctionCategory| *4))
       (|isDomain| *2
                   (|Record| (|:| |IDe| (|JetDifferentialEquation| *4 *5))
                             (|:| |ISys| (|List| *5))
                             (|:| |Order| (|NonNegativeInteger|))
                             (|:| |NumProj| (|NonNegativeInteger|))
                             (|:| |Dim| (|NonNegativeInteger|))
                             (|:| |CarChar| (|List| (|NonNegativeInteger|)))))
       (|isDomain| *1 (|CartanKuranishi| *4 *5))))) 
(((*1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|CartanKuranishi| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| (|NonNegativeInteger|)))
       (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *5 (|JetBundleCategory|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|CartanKuranishi| *5 *6))
       (|ofCategory| *6 (|JetBundleFunctionCategory| *5))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|Integer|))
       (|isDomain| *5 (|List| (|NonNegativeInteger|)))
       (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *6 (|JetBundleCategory|))
       (|isDomain| *2 (|List| (|Integer|)))
       (|isDomain| *1 (|CartanKuranishi| *6 *7))
       (|ofCategory| *7 (|JetBundleFunctionCategory| *6))))) 
(((*1 *2 *3 *4 *5)
  (AND (|isDomain| *4 (|Integer|))
       (|isDomain| *5 (|List| (|NonNegativeInteger|)))
       (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *6 (|JetBundleCategory|))
       (|isDomain| *2 (|List| (|Integer|)))
       (|isDomain| *1 (|CartanKuranishi| *6 *7))
       (|ofCategory| *7 (|JetBundleFunctionCategory| *6))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| (|Fraction| (|Integer|))))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *1 (|CartanKuranishi| *4 *5))
       (|ofCategory| *5 (|JetBundleFunctionCategory| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|CartanKuranishi| *4 *5))
       (|ofCategory| *5 (|JetBundleFunctionCategory| *4))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|List| (|NonNegativeInteger|)))
       (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|JetBundleCategory|))
       (|isDomain| *1 (|CartanKuranishi| *4 *5))
       (|ofCategory| *5 (|JetBundleFunctionCategory| *4))))) 
(((*1 *2 *2 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|CartanKuranishi| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|CartanKuranishi| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|ofCategory| *3 (|JetBundleCategory|))
       (|isDomain| *1 (|CartanKuranishi| *3 *4))
       (|ofCategory| *4 (|JetBundleFunctionCategory| *3))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|UniqueFactorizationDomain|))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *2
                   (|Record| (|:| |func| *3) (|:| |poly| *3)
                             (|:| |c1| (|Fraction| *5))
                             (|:| |c2| (|Fraction| *5))
                             (|:| |deg| (|NonNegativeInteger|))))
       (|isDomain| *1 (|ChangeOfVariable| *4 *5 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Fraction| *5)))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| *6)))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *5 (|UniqueFactorizationDomain|))
       (|isDomain| *2
                   (|Record| (|:| |func| (|List| *4)) (|:| |poly| *4)
                             (|:| |c1| (|Fraction| *6))
                             (|:| |c2| (|Fraction| *6))
                             (|:| |deg| (|NonNegativeInteger|))))
       (|isDomain| *1 (|ChangeOfVariable| *5 *6 *4))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| (|Fraction| *5)))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *2 (|UniqueFactorizationDomain|))
       (|isDomain| *1 (|ChangeOfVariable| *2 *5 *4))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|NonNegativeInteger|)) (|isDomain| *3 (|Fraction| *6))
       (|ofCategory| *5 (|UniqueFactorizationDomain|))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| *5))
       (|isDomain| *2
                   (|Record| (|:| |exponent| (|NonNegativeInteger|))
                             (|:| |coef| (|Fraction| *6)) (|:| |radicand| *6)))
       (|isDomain| *1 (|ChangeOfVariable| *5 *6 *7))
       (|ofCategory| *7 (|UnivariatePolynomialCategory| *3))))) 
(((*1 *2 *3)
  (|partial| AND (|ofCategory| *4 (|UniqueFactorizationDomain|))
   (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
   (|isDomain| *2
               (|Record| (|:| |radicand| (|Fraction| *5))
                         (|:| |deg| (|NonNegativeInteger|))))
   (|isDomain| *1 (|ChangeOfVariable| *4 *5 *3))
   (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Fraction| *5)))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|UniqueFactorizationDomain|))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *2 (|Record| (|:| |coef| (|Fraction| *5)) (|:| |poly| *3)))
       (|isDomain| *1 (|ChangeOfVariable| *4 *5 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Fraction| *5)))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Character|))))) 
(((*1 *1 *2) (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|Character|))))
 ((*1 *1 *2) (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|Character|))))) 
(((*1 *1) (|isDomain| *1 (|Character|)))) 
(((*1 *1) (|isDomain| *1 (|Character|)))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Character|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Character|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Character|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Character|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Character|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|Character|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Matrix| (|Integer|))))
       (|isDomain| *1 (|ChainComplex|))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|CubicalFacet|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|List| (|List| (|Integer|))))
       (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|CubicalFacet|))))
 ((*1 *1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Segment| (|Integer|))))
       (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|CubicalFacet|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Segment| (|Integer|))))
       (|isDomain| *1 (|CubicalFacet|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Integer|)) (|isDomain| *1 (|CubicalFacet|))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *2 (|SimpleCell| *3 (|SparseUnivariatePolynomial| *3)))
       (|ofCategory| *3 (|RealClosedField|)) (|isDomain| *1 (|Cell| *3))))
 ((*1 *1 *2)
  (AND
   (|isDomain| *2 (|List| (|SimpleCell| *3 (|SparseUnivariatePolynomial| *3))))
   (|ofCategory| *3 (|RealClosedField|)) (|isDomain| *1 (|Cell| *3))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|Cell| *3))
       (|ofCategory| *3 (|RealClosedField|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| (|Symbol|))) (|isDomain| *1 (|Cell| *3))
       (|ofCategory| *3 (|RealClosedField|))))) 
(((*1 *1 *1)
  (|partial| AND (|isDomain| *1 (|Cell| *2))
   (|ofCategory| *2 (|RealClosedField|))))) 
(((*1 *2 *1)
  (AND
   (|isDomain| *2 (|List| (|SimpleCell| *3 (|SparseUnivariatePolynomial| *3))))
   (|isDomain| *1 (|Cell| *3)) (|ofCategory| *3 (|RealClosedField|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Character|)))
       (|isDomain| *1 (|CharacterClass|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|CharacterClass|))))) 
(((*1 *1) (|isDomain| *1 (|CharacterClass|)))) 
(((*1 *1) (|isDomain| *1 (|CharacterClass|)))) 
(((*1 *1) (|isDomain| *1 (|CharacterClass|)))) 
(((*1 *1) (|isDomain| *1 (|CharacterClass|)))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| *8)) (|isDomain| *4 (|CartesianTensor| *5 *6 *7))
       (|ofType| *5 (|Integer|)) (|ofType| *6 (|NonNegativeInteger|))
       (|ofCategory| *7 (|CommutativeRing|))
       (|ofCategory| *8 (|CommutativeRing|))
       (|isDomain| *2 (|CartesianTensor| *5 *6 *8))
       (|isDomain| *1 (|CartesianTensorFunctions2| *5 *6 *7 *8))))) 
(((*1 *1)
  (AND (|isDomain| *1 (|CartesianTensor| *2 *3 *4)) (|ofType| *2 (|Integer|))
       (|ofType| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|CommutativeRing|))))) 
(((*1 *1)
  (AND (|isDomain| *1 (|CartesianTensor| *2 *3 *4)) (|ofType| *2 (|Integer|))
       (|ofType| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|CommutativeRing|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|List| *5)) (|isDomain| *1 (|CartesianTensor| *3 *4 *5))
       (|ofType| *3 (|Integer|)) (|ofType| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|CommutativeRing|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *5)) (|ofCategory| *5 (|CommutativeRing|))
       (|isDomain| *1 (|CartesianTensor| *3 *4 *5)) (|ofType| *3 (|Integer|))
       (|ofType| *4 (|NonNegativeInteger|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|CardinalNumber|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|CardinalNumber|))))) 
(((*1 *2) (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|CardinalNumber|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|CardinalNumber|))))) 
(((*1 *2 *2)
  (AND (|isDomain| *2 (|List| *4))
       (|ofCategory| *4 (|UnivariatePolynomialCategory| *3))
       (|ofCategory| *3 (|GcdDomain|))
       (|isDomain| *1 (|CylindricalAlgebraicDecompositionUtilities| *3 *4))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Polynomial| *5))) (|isDomain| *4 (|Cell| *5))
       (|ofCategory| *5 (|RealClosedField|))
       (|isDomain| *2 (|List| (|SparseUnivariatePolynomial| *5)))
       (|isDomain| *1 (|CylindricalAlgebraicDecompositionPackage| *5))))) 
(((*1 *2 *3 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| (|Polynomial| *4)))
       (|ofCategory| *4 (|RealClosedField|))
       (|isDomain| *2 (|List| (|Polynomial| *4)))
       (|isDomain| *1 (|CylindricalAlgebraicDecompositionPackage| *4))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3 (|List| (|SparseUnivariatePolynomial| (|Polynomial| *4))))
   (|ofCategory| *4 (|RealClosedField|))
   (|isDomain| *2 (|List| (|Polynomial| *4)))
   (|isDomain| *1 (|CylindricalAlgebraicDecompositionPackage| *4))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3 (|List| (|SparseUnivariatePolynomial| (|Polynomial| *4))))
   (|ofCategory| *4 (|RealClosedField|))
   (|isDomain| *2 (|List| (|Polynomial| *4)))
   (|isDomain| *1 (|CylindricalAlgebraicDecompositionPackage| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| (|Polynomial| *4)))
       (|ofCategory| *4 (|RealClosedField|))
       (|isDomain| *2 (|List| (|Polynomial| *4)))
       (|isDomain| *1 (|CylindricalAlgebraicDecompositionPackage| *4))))) 
(((*1 *2 *3)
  (AND
   (|isDomain| *3 (|List| (|SparseUnivariatePolynomial| (|Polynomial| *4))))
   (|ofCategory| *4 (|RealClosedField|))
   (|isDomain| *2 (|List| (|Polynomial| *4)))
   (|isDomain| *1 (|CylindricalAlgebraicDecompositionPackage| *4))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| (|Polynomial| *4)))
       (|ofCategory| *4 (|RealClosedField|))
       (|isDomain| *2 (|List| (|Cell| *4)))
       (|isDomain| *1 (|CylindricalAlgebraicDecompositionPackage| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|List| (|Polynomial| *5)))
       (|isDomain| *4 (|List| (|Symbol|)))
       (|ofCategory| *5 (|RealClosedField|))
       (|isDomain| *2 (|List| (|Cell| *5)))
       (|isDomain| *1 (|CylindricalAlgebraicDecompositionPackage| *5))))) 
(((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|CachableSet|)) (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|Void|))))) 
(((*1 *1 *1 *1) (|partial| |ofCategory| *1 (|CancellationAbelianMonoid|)))) 
(((*1 *1 *1 *2 *1)
  (AND (|isDomain| *1 (|BinaryTree| *2)) (|ofCategory| *2 (|SetCategory|))))
 ((*1 *1 *2)
  (AND (|isDomain| *1 (|BinaryTree| *2)) (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *1 (|BinaryTournament| *3))))) 
(((*1 *1 *1 *2 *1)
  (AND (|ofCategory| *1 (|BinaryTreeCategory| *2))
       (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|Boolean|)))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|BitAggregate|)))) 
(((*1 *1 *1 *1) (|isDomain| *1 (|Boolean|)))
 ((*1 *1 *1 *1) (|ofCategory| *1 (|BitAggregate|)))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|OrderedSet|))
       (|isDomain| *1 (|BinarySearchTree| *3))))) 
(((*1 *1 *2 *1)
  (AND (|isDomain| *1 (|BinarySearchTree| *2))
       (|ofCategory| *2 (|OrderedSet|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|BrillhartTests| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|BrillhartTests| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *2)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|BrillhartTests| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|BrillhartTests| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))
 ((*1 *2 *3 *2)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|BrillhartTests| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|Integer|)))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|BinaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|shallowlyMutable|))
       (|ofCategory| *1 (|BinaryRecursiveAggregate| *2))
       (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|BasicOperator|))
   (|isDomain| *1 (|BasicOperatorFunctions1| *2))
   (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|BasicOperator|))
       (|isDomain| *1 (|BasicOperatorFunctions1| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|BasicOperator|))
       (|isDomain| *3 (|List| (|Mapping| *4 (|List| *4))))
       (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|BasicOperatorFunctions1| *4))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|BasicOperator|)) (|isDomain| *3 (|Mapping| *4 *4))
       (|ofCategory| *4 (|SetCategory|))
       (|isDomain| *1 (|BasicOperatorFunctions1| *4))))
 ((*1 *2 *3)
  (|partial| AND (|isDomain| *3 (|BasicOperator|))
   (|isDomain| *2 (|List| (|Mapping| *4 (|List| *4))))
   (|isDomain| *1 (|BasicOperatorFunctions1| *4))
   (|ofCategory| *4 (|SetCategory|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|AssociationList| (|Symbol|) (|None|)))
       (|isDomain| *1 (|BasicOperator|))))) 
(((*1 *2 *1)
  (|partial| AND (|isDomain| *2 (|NonNegativeInteger|))
   (|isDomain| *1 (|BasicOperator|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|BasicOperator|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|BasicOperator|))))) 
(((*1 *2 *1)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|BasicOperator|))))) 
(((*1 *1 *1 *2)
  (AND
   (|isDomain| *2 (|Mapping| (|Boolean|) (|BasicOperator|) (|BasicOperator|)))
   (|isDomain| *1 (|BasicOperator|))))) 
(((*1 *1 *1 *2)
  (AND
   (|isDomain| *2 (|Mapping| (|Boolean|) (|BasicOperator|) (|BasicOperator|)))
   (|isDomain| *1 (|BasicOperator|))))) 
(((*1 *2 *1)
  (|partial| AND
   (|isDomain| *2 (|Mapping| (|InputForm|) (|List| (|InputForm|))))
   (|isDomain| *1 (|BasicOperator|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| (|InputForm|) (|List| (|InputForm|))))
       (|isDomain| *1 (|BasicOperator|))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|Boolean|))
       (|isDomain| *1 (|BasicOperator|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|BasicOperator|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *1 (|BasicOperator|))))) 
(((*1 *2 *1 *3)
  (|partial| AND (|isDomain| *3 (|Symbol|)) (|isDomain| *2 (|None|))
   (|isDomain| *1 (|BasicOperator|))))) 
(((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|Symbol|)) (|isDomain| *3 (|None|))
       (|isDomain| *1 (|BasicOperator|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|AssociationList| (|Symbol|) (|None|)))
       (|isDomain| *1 (|BasicOperator|))))) 
(((*1 *1 *1) (|isDomain| *1 (|Boolean|)))) 
(((*1 *1) (|ofCategory| *1 (|BoundedMeetSemilattice|)))) 
(((*1 *1) (|ofCategory| *1 (|BoundedJoinSemilattice|)))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|String|)) (|isDomain| *1 (|BitStreamFrame|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|Boolean|)))
       (|isDomain| *1 (|BitStreamFrame|))))) 
(((*1 *2 *1 *2)
  (AND (|isDomain| *2 (|SingleInteger|)) (|isDomain| *1 (|BinaryFile|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|BagAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|BagAggregate| *2)) (|ofCategory| *2 (|Type|))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *5 (|FiniteLinearAggregate| *2))
       (|ofCategory| *6 (|FiniteLinearAggregate| *2))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|BezoutMatrix| *2 *3 *4 *5 *6))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *4 (|MatrixCategory| *2 *5 *6))))
 ((*1 *2 *3)
  (AND (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|BezoutMatrixWrapper| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *5 (|FiniteLinearAggregate| *2))
       (|ofCategory| *6 (|FiniteLinearAggregate| *2))
       (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|BezoutMatrix| *2 *3 *4 *5 *6))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))
       (|ofCategory| *4 (|MatrixCategory| *2 *5 *6))))
 ((*1 *2 *3 *3)
  (AND (|ofCategory| *2 (|Ring|)) (|ofCategory| *2 (|CommutativeRing|))
       (|isDomain| *1 (|BezoutMatrixWrapper| *2 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *2))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|CommutativeRing|)) (|ofCategory| *4 (|Ring|))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|ofCategory| *7 (|FiniteLinearAggregate| *4))
       (|isDomain| *2 (|IndexedVector| *3 0))
       (|isDomain| *1 (|BezoutMatrix| *4 *3 *5 *6 *7))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *5 (|MatrixCategory| *4 *6 *7))))
 ((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|CommutativeRing|)) (|ofCategory| *4 (|Ring|))
       (|isDomain| *2 (|IndexedVector| *3 0))
       (|isDomain| *1 (|BezoutMatrixWrapper| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|Ring|)) (|ofCategory| *2 (|MatrixCategory| *4 *5 *6))
       (|isDomain| *1 (|BezoutMatrix| *4 *3 *2 *5 *6))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))))
 ((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|Ring|)) (|isDomain| *2 (|Matrix| *4))
       (|isDomain| *1 (|BezoutMatrixWrapper| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *4 (|Ring|))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|ofCategory| *7 (|FiniteLinearAggregate| *4))
       (|isDomain| *1 (|BezoutMatrix| *4 *5 *2 *6 *7))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *2 (|MatrixCategory| *4 *6 *7))))
 ((*1 *2 *2 *3 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *4 (|Ring|))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))
       (|ofCategory| *7 (|FiniteLinearAggregate| *4))
       (|isDomain| *1 (|BezoutMatrix| *4 *5 *2 *6 *7))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *2 (|MatrixCategory| *4 *6 *7))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *2 (|Matrix| *4)) (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|Ring|)) (|isDomain| *1 (|BezoutMatrixWrapper| *4 *5))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))))
 ((*1 *2 *2 *3 *3)
  (AND (|isDomain| *2 (|Matrix| *4)) (|isDomain| *3 (|NonNegativeInteger|))
       (|ofCategory| *4 (|Ring|)) (|isDomain| *1 (|BezoutMatrixWrapper| *4 *5))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|Ring|)) (|ofCategory| *2 (|MatrixCategory| *4 *5 *6))
       (|isDomain| *1 (|BezoutMatrix| *4 *3 *2 *5 *6))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))
       (|ofCategory| *5 (|FiniteLinearAggregate| *4))
       (|ofCategory| *6 (|FiniteLinearAggregate| *4))))
 ((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|Ring|)) (|isDomain| *2 (|Matrix| *4))
       (|isDomain| *1 (|BezoutMatrixWrapper| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|BalancedBinaryTree| *3))
       (|ofCategory| *3 (|SetCategory|))))) 
(((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|BalancedBinaryTree| *3))))) 
(((*1 *1 *1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *3 *3 *3 *3 *3))
       (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|BalancedBinaryTree| *3))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Mapping| *2 *2 *2))
       (|isDomain| *1 (|BalancedBinaryTree| *2))
       (|ofCategory| *2 (|SetCategory|))))) 
(((*1 *1 *1 *2 *3)
  (AND (|isDomain| *3 (|Mapping| (|List| *2) *2 *2 *2))
       (|ofCategory| *2 (|SetCategory|))
       (|isDomain| *1 (|BalancedBinaryTree| *2))))
 ((*1 *1 *1 *2 *3)
  (AND (|isDomain| *3 (|Mapping| *2 *2 *2)) (|ofCategory| *2 (|SetCategory|))
       (|isDomain| *1 (|BalancedBinaryTree| *2))))) 
(((*1 *2 *3 *3)
  (AND (|ofCategory| *4 (|Join| (|GcdDomain|) (|CharacteristicZero|)))
       (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|BalancedFactorisation| *4 *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *4))))
 ((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|List| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| *5))
       (|ofCategory| *5 (|Join| (|GcdDomain|) (|CharacteristicZero|)))
       (|isDomain| *2 (|Factored| *3))
       (|isDomain| *1 (|BalancedFactorisation| *5 *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *3 *3 (|Integer|))) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|Automorphism| *3))))
 ((*1 *1 *2 *2)
  (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|Automorphism| *3))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Mapping| *3 *3)) (|ofCategory| *3 (|Ring|))
       (|isDomain| *1 (|Automorphism| *3))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|SetCategory|))
       (|isDomain| *1 (|ArrayStack| *3))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|Field|))
       (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2
                   (|Record| (|:| |minor| (|List| (|PositiveInteger|)))
                             (|:| |eq| *3)
                             (|:| |minors|
                                  (|List| (|List| (|PositiveInteger|))))
                             (|:| |ops| (|List| *3))))
       (|isDomain| *1 (|AssociatedEquations| *5 *3))
       (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *5))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Matrix| *4)) (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|Vector| (|Matrix| *4)))
       (|isDomain| *1 (|AssociatedEquations| *4 *5))
       (|ofCategory| *5 (|LinearOrdinaryDifferentialOperatorCategory| *4))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *2
                   (|Record| (|:| |mat| (|Matrix| *5))
                             (|:| |vec|
                                  (|Vector| (|List| (|PositiveInteger|))))))
       (|isDomain| *1 (|AssociatedEquations| *5 *3))
       (|ofCategory| *3 (|LinearOrdinaryDifferentialOperatorCategory| *5))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|OneDimensionalArray| *3)) (|ofCategory| *3 (|Type|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *3)) (|ofCategory| *3 (|Type|))
       (|isDomain| *1 (|OneDimensionalArray| *3))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))
       (|isDomain| *2 (|Segment| (|Integer|)))))) 
(((*1 *2 *1)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))
       (|isDomain| *2 (|Segment| (|Integer|)))))) 
(((*1 *1 *1 *2 *3)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *3))
       (|ofCategory| *4 (|Type|)) (|ofCategory| *5 (|IndexedAggregate| *2 *4))
       (|ofCategory| *3 (|IndexedAggregate| *2 *4))
       (|isDomain| *2 (|Integer|))))) 
(((*1 *1 *1 *2 *2 *1)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|)) (|ofCategory| *4 (|IndexedAggregate| *2 *3))
       (|ofCategory| *5 (|IndexedAggregate| *2 *3))
       (|isDomain| *2 (|Integer|))))) 
(((*1 *1 *1 *2 *2)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|)) (|ofCategory| *4 (|IndexedAggregate| *2 *3))
       (|ofCategory| *5 (|IndexedAggregate| *2 *3))
       (|isDomain| *2 (|Integer|))))) 
(((*1 *1 *1 *2 *2)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *3 (|Type|)) (|ofCategory| *4 (|IndexedAggregate| *2 *3))
       (|ofCategory| *5 (|IndexedAggregate| *2 *3))
       (|isDomain| *2 (|Integer|))))) 
(((*1 *1 *1)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *2 *3 *4))
       (|ofCategory| *2 (|Type|))
       (|ofCategory| *3 (|IndexedAggregate| (|Integer|) *2))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *2))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *1)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *2 *3 *4))
       (|ofCategory| *2 (|Type|))
       (|ofCategory| *3 (|IndexedAggregate| (|Integer|) *2))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *2))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| *1)) (|ofCategory| *3 (|Type|))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))))
 ((*1 *1 *1 *1)
  (AND (|ofCategory| *1 (|TwoDimensionalArrayCategory| *2 *3 *4))
       (|ofCategory| *2 (|Type|))
       (|ofCategory| *3 (|IndexedAggregate| (|Integer|) *2))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *2))))) 
(((*1 *1 *2)
  (AND (|isDomain| *2 (|List| (|List| *1))) (|ofCategory| *3 (|Type|))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *3 *4 *5))
       (|ofCategory| *4 (|IndexedAggregate| (|Integer|) *3))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *3))))) 
(((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|List| (|NonNegativeInteger|)))
       (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *4))
       (|ofCategory| *6 (|IndexedAggregate| (|Integer|) *4))
       (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|PositiveInteger|)) (|ofCategory| *4 (|Type|))
       (|ofCategory| *5 (|IndexedAggregate| (|Integer|) *4))
       (|ofCategory| *6 (|IndexedAggregate| (|Integer|) *4))
       (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|TwoDimensionalArrayCategory| *4 *5 *6))))) 
(((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| (|Symbol|))) (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5
                     (|Join| (|Ring|) (|PatternMatchable| *4) (|Comparable|)
                             (|ConvertibleTo| (|Pattern| *4))))
       (|isDomain| *1 (|ApplyRules| *4 *5 *2))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *5) (|PatternMatchable| *4)
                             (|ConvertibleTo| (|Pattern| *4))))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|List| (|RewriteRule| *4 *5 *2)))
       (|ofCategory| *4 (|SetCategory|))
       (|ofCategory| *5
                     (|Join| (|Ring|) (|PatternMatchable| *4) (|Comparable|)
                             (|ConvertibleTo| (|Pattern| *4))))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *5) (|PatternMatchable| *4)
                             (|ConvertibleTo| (|Pattern| *4))))
       (|isDomain| *1 (|ApplyRules| *4 *5 *2))))
 ((*1 *2 *3 *2 *4)
  (AND (|isDomain| *3 (|List| (|RewriteRule| *5 *6 *2)))
       (|isDomain| *4 (|PositiveInteger|)) (|ofCategory| *5 (|SetCategory|))
       (|ofCategory| *6
                     (|Join| (|Ring|) (|PatternMatchable| *5) (|Comparable|)
                             (|ConvertibleTo| (|Pattern| *5))))
       (|ofCategory| *2
                     (|Join| (|FunctionSpace| *6) (|PatternMatchable| *5)
                             (|ConvertibleTo| (|Pattern| *5))))
       (|isDomain| *1 (|ApplyRules| *5 *6 *2))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|SExpression|)) (|isDomain| *3 (|None|))
       (|isDomain| *1 (|Any|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|Any|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|OutputForm|)) (|isDomain| *1 (|Any|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|SExpression|)) (|isDomain| *1 (|Any|))))) 
(((*1 *2 *1) (AND (|isDomain| *2 (|None|)) (|isDomain| *1 (|Any|))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|Boolean|)) (|isDomain| *2 (|String|))
       (|isDomain| *1 (|Any|))))) 
(((*1 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|List| *4))
       (|isDomain| *1 (|AlgebraPackage| *3 *4))
       (|ofCategory| *4 (|FramedNonAssociativeAlgebra| *3))))) 
(((*1 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *2 (|List| (|Matrix| *3)))
       (|isDomain| *1 (|AlgebraPackage| *3 *4))
       (|ofCategory| *4 (|FramedNonAssociativeAlgebra| *3))))) 
(((*1 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *2 (|List| (|Matrix| *3)))
       (|isDomain| *1 (|AlgebraPackage| *3 *4))
       (|ofCategory| *4 (|FramedNonAssociativeAlgebra| *3))))) 
(((*1 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *2 (|List| (|Matrix| *3)))
       (|isDomain| *1 (|AlgebraPackage| *3 *4))
       (|ofCategory| *4 (|FramedNonAssociativeAlgebra| *3))))) 
(((*1 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|List| *4))
       (|isDomain| *1 (|AlgebraPackage| *3 *4))
       (|ofCategory| *4 (|FramedNonAssociativeAlgebra| *3))))) 
(((*1 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|List| *4))
       (|isDomain| *1 (|AlgebraPackage| *3 *4))
       (|ofCategory| *4 (|FramedNonAssociativeAlgebra| *3))))) 
(((*1 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|List| *4))
       (|isDomain| *1 (|AlgebraPackage| *3 *4))
       (|ofCategory| *4 (|FramedNonAssociativeAlgebra| *3))))) 
(((*1 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|List| *4))
       (|isDomain| *1 (|AlgebraPackage| *3 *4))
       (|ofCategory| *4 (|FramedNonAssociativeAlgebra| *3))))) 
(((*1 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|List| *4))
       (|isDomain| *1 (|AlgebraPackage| *3 *4))
       (|ofCategory| *4 (|FramedNonAssociativeAlgebra| *3))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|AlgebraPackage| *4 *3))
       (|ofCategory| *3 (|FramedNonAssociativeAlgebra| *4))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|)) (|isDomain| *2 (|List| *3))
       (|isDomain| *1 (|AlgebraPackage| *4 *3))
       (|ofCategory| *3 (|FramedNonAssociativeAlgebra| *4))))) 
(((*1 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|)) (|isDomain| *2 (|List| *4))
       (|isDomain| *1 (|AlgebraPackage| *3 *4))
       (|ofCategory| *4 (|FramedNonAssociativeAlgebra| *3))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|AlgebraPackage| *4 *3))
       (|ofCategory| *3 (|FramedNonAssociativeAlgebra| *4))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|AlgebraPackage| *4 *3))
       (|ofCategory| *3 (|FramedNonAssociativeAlgebra| *4))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|AlgebraPackage| *4 *3))
       (|ofCategory| *3 (|FramedNonAssociativeAlgebra| *4))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|AlgebraPackage| *4 *3))
       (|ofCategory| *3 (|FramedNonAssociativeAlgebra| *4))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|NonNegativeInteger|))
       (|isDomain| *1 (|AlgebraPackage| *4 *3))
       (|ofCategory| *3 (|FramedNonAssociativeAlgebra| *4))))) 
(((*1 *2 *3 *2 *4)
  (AND (|isDomain| *3 (|BasicOperator|)) (|isDomain| *4 (|NonNegativeInteger|))
       (|ofCategory| *5 (|Comparable|)) (|ofCategory| *5 (|GcdDomain|))
       (|ofCategory| *5 (|RetractableTo| (|Integer|)))
       (|ofCategory| *5 (|IntegralDomain|))
       (|isDomain| *1 (|AlgebraicManipulations| *5 *2))
       (|ofCategory| *2 (|FunctionSpace| *5))
       (|ofCategory| *2
                     (|Join| (|Field|) (|ExpressionSpace|)
                             (CATEGORY |domain|
                              (SIGNATURE |numer|
                               ((|SparseMultivariatePolynomial| *5
                                                                (|Kernel| $))
                                $))
                              (SIGNATURE |denom|
                               ((|SparseMultivariatePolynomial| *5
                                                                (|Kernel| $))
                                $))
                              (SIGNATURE |coerce|
                               ($
                                (|SparseMultivariatePolynomial| *5
                                                                (|Kernel|
                                                                 $)))))))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Comparable|)) (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *3 (|RetractableTo| (|Integer|)))
       (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *1 (|AlgebraicManipulations| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))
       (|ofCategory| *2
                     (|Join| (|Field|) (|ExpressionSpace|)
                             (CATEGORY |domain|
                              (SIGNATURE |numer|
                               ((|SparseMultivariatePolynomial| *3
                                                                (|Kernel| $))
                                $))
                              (SIGNATURE |denom|
                               ((|SparseMultivariatePolynomial| *3
                                                                (|Kernel| $))
                                $))
                              (SIGNATURE |coerce|
                               ($
                                (|SparseMultivariatePolynomial| *3
                                                                (|Kernel|
                                                                 $)))))))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Comparable|)) (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *3 (|RetractableTo| (|Integer|)))
       (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *1 (|AlgebraicManipulations| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))
       (|ofCategory| *2
                     (|Join| (|Field|) (|ExpressionSpace|)
                             (CATEGORY |domain|
                              (SIGNATURE |numer|
                               ((|SparseMultivariatePolynomial| *3
                                                                (|Kernel| $))
                                $))
                              (SIGNATURE |denom|
                               ((|SparseMultivariatePolynomial| *3
                                                                (|Kernel| $))
                                $))
                              (SIGNATURE |coerce|
                               ($
                                (|SparseMultivariatePolynomial| *3
                                                                (|Kernel|
                                                                 $)))))))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Comparable|)) (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *3 (|RetractableTo| (|Integer|)))
       (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *1 (|AlgebraicManipulations| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))
       (|ofCategory| *2
                     (|Join| (|Field|) (|ExpressionSpace|)
                             (CATEGORY |domain|
                              (SIGNATURE |numer|
                               ((|SparseMultivariatePolynomial| *3
                                                                (|Kernel| $))
                                $))
                              (SIGNATURE |denom|
                               ((|SparseMultivariatePolynomial| *3
                                                                (|Kernel| $))
                                $))
                              (SIGNATURE |coerce|
                               ($
                                (|SparseMultivariatePolynomial| *3
                                                                (|Kernel|
                                                                 $)))))))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|Comparable|)) (|ofCategory| *3 (|GcdDomain|))
       (|ofCategory| *3 (|RetractableTo| (|Integer|)))
       (|ofCategory| *3 (|UniqueFactorizationDomain|))
       (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *1 (|AlgebraicManipulations| *3 *2))
       (|ofCategory| *2 (|FunctionSpace| *3))
       (|ofCategory| *2
                     (|Join| (|Field|) (|ExpressionSpace|)
                             (CATEGORY |domain|
                              (SIGNATURE |numer|
                               ((|SparseMultivariatePolynomial| *3
                                                                (|Kernel| $))
                                $))
                              (SIGNATURE |denom|
                               ((|SparseMultivariatePolynomial| *3
                                                                (|Kernel| $))
                                $))
                              (SIGNATURE |coerce|
                               ($
                                (|SparseMultivariatePolynomial| *3
                                                                (|Kernel|
                                                                 $)))))))))) 
(((*1 *2 *3)
  (AND (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *2 (|SparseUnivariatePolynomial| *3))
       (|isDomain| *1 (|AlgebraicManipulations| *4 *3))
       (|ofCategory| *3
                     (|Join| (|Field|) (|ExpressionSpace|)
                             (CATEGORY |domain|
                              (SIGNATURE |numer|
                               ((|SparseMultivariatePolynomial| *4
                                                                (|Kernel| $))
                                $))
                              (SIGNATURE |denom|
                               ((|SparseMultivariatePolynomial| *4
                                                                (|Kernel| $))
                                $))
                              (SIGNATURE |coerce|
                               ($
                                (|SparseMultivariatePolynomial| *4
                                                                (|Kernel|
                                                                 $)))))))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *1 (|AlgebraicManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|Field|) (|ExpressionSpace|)
                             (CATEGORY |domain|
                              (SIGNATURE |numer|
                               ((|SparseMultivariatePolynomial| *3
                                                                (|Kernel| $))
                                $))
                              (SIGNATURE |denom|
                               ((|SparseMultivariatePolynomial| *3
                                                                (|Kernel| $))
                                $))
                              (SIGNATURE |coerce|
                               ($
                                (|SparseMultivariatePolynomial| *3
                                                                (|Kernel|
                                                                 $)))))))))
 ((*1 *2 *2 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *1 (|AlgebraicManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|Field|) (|ExpressionSpace|)
                             (CATEGORY |domain|
                              (SIGNATURE |numer|
                               ((|SparseMultivariatePolynomial| *3
                                                                (|Kernel| $))
                                $))
                              (SIGNATURE |denom|
                               ((|SparseMultivariatePolynomial| *3
                                                                (|Kernel| $))
                                $))
                              (SIGNATURE |coerce|
                               ($
                                (|SparseMultivariatePolynomial| *3
                                                                (|Kernel|
                                                                 $)))))))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| *2))
       (|ofCategory| *2
                     (|Join| (|Field|) (|ExpressionSpace|)
                             (CATEGORY |domain|
                              (SIGNATURE |numer|
                               ((|SparseMultivariatePolynomial| *4
                                                                (|Kernel| $))
                                $))
                              (SIGNATURE |denom|
                               ((|SparseMultivariatePolynomial| *4
                                                                (|Kernel| $))
                                $))
                              (SIGNATURE |coerce|
                               ($
                                (|SparseMultivariatePolynomial| *4
                                                                (|Kernel|
                                                                 $)))))))
       (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *1 (|AlgebraicManipulations| *4 *2))))
 ((*1 *2 *2 *3)
  (AND (|isDomain| *3 (|List| (|Kernel| *2)))
       (|ofCategory| *2
                     (|Join| (|Field|) (|ExpressionSpace|)
                             (CATEGORY |domain|
                              (SIGNATURE |numer|
                               ((|SparseMultivariatePolynomial| *4
                                                                (|Kernel| $))
                                $))
                              (SIGNATURE |denom|
                               ((|SparseMultivariatePolynomial| *4
                                                                (|Kernel| $))
                                $))
                              (SIGNATURE |coerce|
                               ($
                                (|SparseMultivariatePolynomial| *4
                                                                (|Kernel|
                                                                 $)))))))
       (|ofCategory| *4 (|IntegralDomain|))
       (|isDomain| *1 (|AlgebraicManipulations| *4 *2))))) 
(((*1 *2 *2)
  (AND (|ofCategory| *3 (|IntegralDomain|))
       (|isDomain| *1 (|AlgebraicManipulations| *3 *2))
       (|ofCategory| *2
                     (|Join| (|Field|) (|ExpressionSpace|)
                             (CATEGORY |domain|
                              (SIGNATURE |numer|
                               ((|SparseMultivariatePolynomial| *3
                                                                (|Kernel| $))
                                $))
                              (SIGNATURE |denom|
                               ((|SparseMultivariatePolynomial| *3
                                                                (|Kernel| $))
                                $))
                              (SIGNATURE |coerce|
                               ($
                                (|SparseMultivariatePolynomial| *3
                                                                (|Kernel|
                                                                 $)))))))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|NonNegativeInteger|)) (|ofCategory| *4 (|Field|))
       (|ofCategory| *5 (|UnivariatePolynomialCategory| *4))
       (|isDomain| *2 (|Void|))
       (|isDomain| *1 (|AlgebraicFunctionField| *4 *5 *6 *7))
       (|ofCategory| *6 (|UnivariatePolynomialCategory| (|Fraction| *5)))
       (|ofType| *7 *6)))) 
(((*1 *2 *3)
  (AND (|isDomain| *2 (|Boolean|)) (|isDomain| *1 (|AlgFactor| *3))
       (|ofCategory| *3 (|UnivariatePolynomialCategory| (|AlgebraicNumber|)))))) 
(((*1 *2 *3 *1)
  (|partial| AND (|ofCategory| *1 (|AssociationListAggregate| *3 *4))
   (|ofCategory| *3 (|SetCategory|)) (|ofCategory| *4 (|Type|))
   (|isDomain| *2 (|Record| (|:| |key| *3) (|:| |entry| *4)))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|Aggregate|)) (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *1 *3)
  (AND (|ofCategory| *1 (|Aggregate|)) (|isDomain| *3 (|NonNegativeInteger|))
       (|isDomain| *2 (|Boolean|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *4 (|Integer|)) (|ofCategory| *2 (|FunctionSpace| *3))
       (|isDomain| *1 (|AlgebraicFunction| *3 *2))
       (|ofCategory| *3 (|RetractableTo| *4))
       (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))))) 
(((*1 *2 *3)
  (AND (|isDomain| *3 (|List| *5)) (|ofCategory| *5 (|FunctionSpace| *4))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *2 (|OutputForm|))
       (|isDomain| *1 (|AlgebraicFunction| *4 *5))))) 
(((*1 *2 *3 *2)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *2))
       (|ofCategory| *2 (|FunctionSpace| *4))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|AlgebraicFunction| *4 *2))))) 
(((*1 *1 *1 *2 *3)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *1))
       (|isDomain| *3 (|Symbol|))
       (|ofCategory| *1 (|AlgebraicallyClosedFunctionSpace| *4))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))))
 ((*1 *2 *2 *3 *4)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *2))
       (|isDomain| *4 (|Symbol|)) (|ofCategory| *2 (|FunctionSpace| *5))
       (|ofCategory| *5 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *1 (|AlgebraicFunction| *5 *2))))) 
(((*1 *1 *2 *3 *3 *4 *4)
  (AND (|isDomain| *2 (|Polynomial| (|Integer|))) (|isDomain| *3 (|Symbol|))
       (|isDomain| *4 (|Segment| (|Fraction| (|Integer|))))
       (|isDomain| *1 (|PlaneAlgebraicCurvePlot|))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *1))
       (|isDomain| *4 (|Symbol|))
       (|ofCategory| *1 (|AlgebraicallyClosedField|))
       (|isDomain| *2 (|List| *1))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *1))
       (|ofCategory| *1 (|AlgebraicallyClosedField|))
       (|isDomain| *2 (|List| *1))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Polynomial| *1))
       (|ofCategory| *1 (|AlgebraicallyClosedField|))
       (|isDomain| *2 (|List| *1))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|AlgebraicallyClosedFunctionSpace| *4))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|AlgebraicallyClosedFunctionSpace| *3))))) 
(((*1 *1 *2 *3)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *1))
       (|isDomain| *3 (|Symbol|))
       (|ofCategory| *1 (|AlgebraicallyClosedField|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|SparseUnivariatePolynomial| *1))
       (|ofCategory| *1 (|AlgebraicallyClosedField|))))
 ((*1 *1 *2)
  (AND (|isDomain| *2 (|Polynomial| *1))
       (|ofCategory| *1 (|AlgebraicallyClosedField|))))
 ((*1 *1 *1 *2)
  (AND (|isDomain| *2 (|Symbol|))
       (|ofCategory| *1 (|AlgebraicallyClosedFunctionSpace| *3))
       (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))))
 ((*1 *1 *1)
  (AND (|ofCategory| *1 (|AlgebraicallyClosedFunctionSpace| *2))
       (|ofCategory| *2 (|Join| (|Comparable|) (|IntegralDomain|)))))) 
(((*1 *2 *3 *4)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *1))
       (|isDomain| *4 (|Symbol|))
       (|ofCategory| *1 (|AlgebraicallyClosedField|))
       (|isDomain| *2 (|List| *1))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|SparseUnivariatePolynomial| *1))
       (|ofCategory| *1 (|AlgebraicallyClosedField|))
       (|isDomain| *2 (|List| *1))))
 ((*1 *2 *3)
  (AND (|isDomain| *3 (|Polynomial| *1))
       (|ofCategory| *1 (|AlgebraicallyClosedField|))
       (|isDomain| *2 (|List| *1))))
 ((*1 *2 *1 *3)
  (AND (|isDomain| *3 (|Symbol|))
       (|ofCategory| *4 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|AlgebraicallyClosedFunctionSpace| *4))))
 ((*1 *2 *1)
  (AND (|ofCategory| *3 (|Join| (|Comparable|) (|IntegralDomain|)))
       (|isDomain| *2 (|List| *1))
       (|ofCategory| *1 (|AlgebraicallyClosedFunctionSpace| *3))))) 
(((*1 *2 *1 *1)
  (AND (|ofCategory| *1 (|AbelianMonoid|)) (|isDomain| *2 (|Boolean|))))) 
((|opposite?| . 2000733) (|zerosOf| . 1999824) (|zeroOf| . 1999090)
 (|rootsOf| . 1998181) (|makeSketch| . 1997964) (|rootSum| . 1997447)
 (|inrootof| . 1997205) (|droot| . 1996957) (|iroot| . 1996698)
 (|size?| . 1996565) (|eq?| . 1996478) (|assoc| . 1996262)
 (|doublyTransitive?| . 1996099) (|knownInfBasis| . 1995755)
 (|rootSplit| . 1994748) (|ratDenom| . 1990636) (|ratPoly| . 1989572)
 (|rootFactor| . 1988337) (|rootPower| . 1987157) (|rootProduct| . 1985977)
 (|rootSimp| . 1984797) (|rootKerSimp| . 1983531) (|leftRank| . 1983316)
 (|rightRank| . 1983101) (|doubleRank| . 1982886) (|weakBiRank| . 1982671)
 (|biRank| . 1982456) (|basisOfCommutingElements| . 1982262)
 (|basisOfLeftAnnihilator| . 1982065) (|basisOfRightAnnihilator| . 1981868)
 (|basisOfLeftNucleus| . 1981674) (|basisOfRightNucleus| . 1981480)
 (|basisOfMiddleNucleus| . 1981286) (|basisOfNucleus| . 1981092)
 (|basisOfCenter| . 1980898) (|basisOfLeftNucloid| . 1980686)
 (|basisOfRightNucloid| . 1980474) (|basisOfCentroid| . 1980262)
 (|radicalOfLeftTraceForm| . 1980068) (|showTypeInOutput| . 1979958)
 (|obj| . 1979887) (|dom| . 1979809) (|objectOf| . 1979732)
 (|domainOf| . 1979655) (|any| . 1979540) (|applyRules| . 1978519)
 (|localUnquote| . 1978048) (|vertSplit| . 1977405) (|blockConcat| . 1977129)
 (|vertConcat| . 1976622) (|horizConcat| . 1976115) (|squareTop| . 1975876)
 (|swapColumns!| . 1975621) (|swapRows!| . 1975366) (|setsubMatrix!| . 1975108)
 (|setColumn!| . 1974853) (|colSlice| . 1974567) (|rowSlice| . 1974281)
 (|oneDimensionalArray| . 1974011) (|associatedSystem| . 1973589)
 (|uncouplingMatrices| . 1973322) (|associatedEquations| . 1972751)
 (|arrayStack| . 1972624) (|morphism| . 1972229)
 (|balancedFactorisation| . 1971704) (|mapDown!| . 1971387)
 (|mapUp!| . 1971072) (|setleaves!| . 1970934) (|balancedBinaryTree| . 1970778)
 (|sylvesterMatrix| . 1970258) (|subSylvesterMatrix| . 1969044)
 (|bezoutMatrix| . 1968524) (|subresultants| . 1967859)
 (|bezoutResultant| . 1967286) (|bezoutDiscriminant| . 1966719)
 (|inspect| . 1966630) (|extract!| . 1966541) (|position!| . 1966449)
 (|starts| . 1966262) (|_\|_| . 1966204) (T$ . 1966146) (|test| . 1966102)
 (|setProperties| . 1965978) (|setProperty| . 1965855) (|property| . 1965729)
 (|deleteProperty!| . 1965641) (|assert| . 1965553) (|has?| . 1965430)
 (|input| . 1965160) (|comparison| . 1965017) (|equality| . 1964874)
 (|nary?| . 1964788) (|unary?| . 1964702) (|nullary?| . 1964616)
 (|arity| . 1964506) (|properties| . 1964385) (|derivative| . 1963774)
 (|constantOperator| . 1963621) (|constantOpIfCan| . 1963466)
 (|setright!| . 1963309) (|setleft!| . 1963152)
 (|brillhartIrreducible?| . 1962831) (|brillhartTrials| . 1962480)
 (|noLinearFactor?| . 1962320) (|insertRoot!| . 1962213)
 (|binarySearchTree| . 1962081) (|nor| . 1961982) (|nand| . 1961883)
 (|node| . 1961768) (|binaryTournament| . 1961636) (|binaryTree| . 1961448)
 (|subtractIfCan| . 1961371) (|setPosition| . 1961239)
 (|cylindricalDecomposition| . 1960741) (|projectionSet| . 1960486)
 (|coefficientSet| . 1960231) (|discriminantSet| . 1959976)
 (|resultantSet| . 1959721) (|principalSubResultantSet| . 1959463)
 (|specialise| . 1959183) (|squareFreeBasis| . 1958955)
 (|generalizedContinuumHypothesisAssumed| . 1958868)
 (|generalizedContinuumHypothesisAssumed?| . 1958786) (|countable?| . 1958699)
 (|Aleph| . 1958594) (|unravel| . 1958382) (|ravel| . 1958170)
 (|leviCivitaSymbol| . 1957989) (|kroneckerDelta| . 1957808)
 (|reshape| . 1957431) (|alphanumeric| . 1957383) (|alphabetic| . 1957335)
 (|hexDigit| . 1957287) (|digit| . 1957239) (|charClass| . 1957050)
 (|simpleCells| . 1956877) (|projection| . 1956774) (|variablesOf| . 1956641)
 (|mainVariableOf| . 1956517) (|makeCell| . 1956178) (|setMult| . 1956090)
 (|getIntervals| . 1955977) (|cubicalFacet| . 1955608)
 (|chainComplex| . 1955496) (|alphanumeric?| . 1955416)
 (|lowerCase?| . 1955336) (|upperCase?| . 1955256) (|alphabetic?| . 1955176)
 (|hexDigit?| . 1955096) (|digit?| . 1955016) (|newline| . 1954973)
 (|escape| . 1954930) (|char| . 1954773) (|ord| . 1954693)
 (|mkIntegral| . 1954354) (|radPoly| . 1953958) (|rootPoly| . 1953459)
 (|goodPoint| . 1953161) (|chvar| . 1952071) (|setOutMode| . 1951854)
 (|setRedMode| . 1951637) (|stirling| . 1951414) (|alpha| . 1951139)
 (|hilbert| . 1950834) (|alphaHilbert| . 1950529) (|arbFunctions| . 1950172)
 (|gauge| . 1949815) (|gaugeHilbert| . 1949461) (|bound| . 1949238)
 (|complete2| . 1948582) (|removeDuplicates| . 1948411) (|find| . 1948265)
 (|setMode| . 1948018) (|conj| . 1947836) (|gradeInvolution| . 1947654)
 (|rc| . 1947469) (|lc| . 1947284) (|toTable| . 1946499)
 (|ePseudoscalar| . 1946320) (|eFromBinaryMap| . 1946092)
 (|multivector| . 1945875) (|ee| . 1945641) (|e| . 1945440)
 (|linearlyDependentOverConstants?| . 1945133)
 (|linearDependenceOverConstants| . 1944860)
 (|particularSolutionOverConstants| . 1944280)
 (|solveLinearOverConstants| . 1943344) (|nullSpaceOverConstants| . 1943026)
 (|constant_subspace| . 1942587) (|clipParametric| . 1941818)
 (|clipWithRanges| . 1941370) (|counit| . 1941231) (|coproduct| . 1941092)
 (|coboundary| . 1940908) (|validate| . 1940693) (|coChainComplex| . 1940534)
 (|numberOfHues| . 1940453) (|blue| . 1940414) (|green| . 1940375)
 (|yellow| . 1940336) (|red| . 1940297) (|iifact| . 1940111)
 (|iibinom| . 1939897) (|iiperm| . 1939683) (|iipow| . 1939469)
 (|iidsum| . 1939255) (|iidprod| . 1939041) (|ipow| . 1938827)
 (|factorial| . 1938452) (|multinomial| . 1938296)
 (|distinct_partition| . 1938171) (|permutation| . 1937787)
 (|stirling1| . 1937659) (|stirling2| . 1937531) (|catalan| . 1937406)
 (|summation| . 1936728) (|factorials| . 1936154) (|mkcomm| . 1936025)
 (|smaller?| . 1935937) (|polarCoordinates| . 1935659) (|complex| . 1935546)
 (|imaginary| . 1935439) (|writeCategory| . 1935282) (|writePackage| . 1935112)
 (|solid| . 1935004) (|solid?| . 1934899) (|denominators| . 1934759)
 (|numerators| . 1934619) (|convergents| . 1934459) (|approximants| . 1934299)
 (|reducedForm| . 1934189) (|partialQuotients| . 1934049)
 (|partialDenominators| . 1933909) (|partialNumerators| . 1933769)
 (|reducedContinuedFraction| . 1933626) (|polar| . 1933376)
 (|cylindrical| . 1933126) (|spherical| . 1932876) (|parabolic| . 1932626)
 (|parabolicCylindrical| . 1932376) (|paraboloidal| . 1932126)
 (|ellipticCylindrical| . 1931851) (|prolateSpheroidal| . 1931576)
 (|oblateSpheroidal| . 1931301) (|bipolar| . 1931026)
 (|bipolarCylindrical| . 1930751) (|toroidal| . 1930476) (|conical| . 1930198)
 (|modTree| . 1930064) (|multiEuclideanTree| . 1929930)
 (|complexZeros| . 1929137) (|divisorCascade| . 1928423) (|graeffe| . 1928214)
 (|pleskenSplit| . 1927676) (|reciprocalPolynomial| . 1927467)
 (|rootRadius| . 1927048) (|schwerpunkt| . 1926813) (|setErrorBound| . 1926604)
 (|startPolynomial| . 1926293) (|cycleElt| . 1926137)
 (|computeCycleLength| . 1925944) (|computeCycleEntry| . 1925794)
 (|addCube| . 1925641) (|cubicalComplex| . 1924896) (|coerceP| . 1924667)
 (|powerSum| . 1924500) (|elementary| . 1924333) (|alternating| . 1924166)
 (|cyclic| . 1923999) (|dihedral| . 1923832) (|cap| . 1923649)
 (|cup| . 1923514) (|wreath| . 1923379) (|SFunction| . 1923203)
 (|skewSFunction| . 1923024) (|cyclotomicDecomposition| . 1922842)
 (|cyclotomicFactorization| . 1922656) (|doubleResultant| . 1922310)
 (|distdfact| . 1921808) (|separateDegrees| . 1921461) (|exptMod| . 1921225)
 (|trace2PowMod| . 1920989) (|tracePowMod| . 1920753)
 (|irreducible?| . 1920541) (|decimal| . 1920432) (|innerint| . 1919453)
 (|faceMap| . 1919256) (|triangle| . 1919109) (|deltaComplex| . 1918396)
 (|circle| . 1918247) (|dequeue| . 1918123) (|exteriorDifferential| . 1917960)
 (|totalDifferential| . 1917756) (|homogeneous?| . 1917412)
 (|leadingBasisTerm| . 1917124) (|ignore?| . 1916573) (|computeInt| . 1916021)
 (|checkForZero| . 1914868) (|doubleFloatFormat| . 1914787) (|qsqrt| . 1914739)
 (|qlog| . 1914691) (|hypergeometric0F1| . 1914453) (|qnew| . 1913982)
 (|directedGraph| . 1912033) (|rotatez| . 1911862) (|rotatey| . 1911691)
 (|rotatex| . 1911520) (|exponentb| . 1911327) (|exponenta| . 1911134)
 (|expb| . 1910929) (|expa| . 1910723) (|dictionary| . 1910492)
 (|dioSolve| . 1909941) (|additive?| . 1909779) (|multiplicative?| . 1909617)
 (|zeta| . 1909532) (|newLine| . 1909451) (|copies| . 1909327)
 (|say| . 1909084) (|sayLength| . 1908835) (|monotoneConvolution| . 1908717)
 (|booleanConvolution| . 1908599) (|freeConvolution| . 1908481)
 (|classicalConvolution| . 1908363) (|orthogonalPolynomials| . 1907859)
 (|jacobiParameters| . 1907233) (|monotoneCumulants| . 1907017)
 (|hankelDeterminants| . 1906872) (|booleanCumulants| . 1906725)
 (|freeCumulants| . 1906578) (|classicalCumulants| . 1906431)
 (|moments| . 1906284) (|booleanCumulant| . 1906123) (|freeCumulant| . 1905962)
 (|classicalCumulant| . 1905801) (|moment| . 1905637)
 (|gaussianDistribution| . 1905482) (|poissonDistribution| . 1905327)
 (|wignerDistribution| . 1905172) (|freePoissonDistribution| . 1905017)
 (|bernoulliDistribution01| . 1904862) (|arcsineDistribution| . 1904645)
 (|distributionByMonotoneCumulants| . 1904237)
 (|booleanCumulantFromJacobi| . 1904059)
 (|distributionByJacobiParameters| . 1903783)
 (|distributionByBooleanCumulants| . 1903513)
 (|distributionByFreeCumulants| . 1903243)
 (|distributionByClassicalCumulants| . 1902973)
 (|distributionByEvenMoments| . 1902703) (|distributionByMoments| . 1902433)
 (|mapall| . 1902147) (|R1_to_R2_coercion| . 1901984) (|setnext!| . 1901830)
 (|setprevious!| . 1901676) (|next| . 1901571) (|previous| . 1901466)
 (|datalist| . 1901342) (|shanksDiscLogAlgorithm| . 1901040)
 (|separant| . 1900770) (|leader| . 1900500) (|isobaric?| . 1900195)
 (|weights| . 1899544) (|differentialVariables| . 1899239)
 (|extractBottom!| . 1899146) (|extractTop!| . 1899053)
 (|insertBottom!| . 1898957) (|insertTop!| . 1898861) (|recolor| . 1898503)
 (|makeObject| . 1891515) (|drawComplex| . 1891196)
 (|drawComplexVectorField| . 1890908) (|setRealSteps| . 1890826)
 (|setImagSteps| . 1890744) (|setClipValue| . 1890656) (|draw| . 1881230)
 (|option?| . 1881070) (|range| . 1880839) (|colorFunction| . 1880390)
 (|curveColor| . 1880232) (|pointColor| . 1880074) (|clip| . 1878338)
 (|clipBoolean| . 1878195) (|style| . 1877975) (|toScale| . 1877753)
 (|pointColorPalette| . 1877610) (|curveColorPalette| . 1877467)
 (|var1Steps| . 1877220) (|var2Steps| . 1876973) (|space| . 1876659)
 (|tubePoints| . 1876412) (|tubeRadius| . 1876194)
 (|JContinuedFraction| . 1875350) (|makeVariable| . 1874479) (|Nul| . 1874384)
 (|exponents| . 1874291) (|iisqrt2| . 1874082) (|iisqrt3| . 1873873)
 (|iiexp| . 1873661) (|iilog| . 1873449) (|iisin| . 1873237)
 (|iicos| . 1873025) (|iitan| . 1872813) (|iicot| . 1872601)
 (|iisec| . 1872389) (|iicsc| . 1872177) (|iiasin| . 1871965)
 (|iiacos| . 1871753) (|iiatan| . 1871541) (|iiacot| . 1871329)
 (|iiasec| . 1871117) (|iiacsc| . 1870905) (|iisinh| . 1870693)
 (|iicosh| . 1870481) (|iitanh| . 1870269) (|iicoth| . 1870057)
 (|iisech| . 1869845) (|iicsch| . 1869633) (|iiasinh| . 1869421)
 (|iiacosh| . 1869209) (|iiatanh| . 1868997) (|iiacoth| . 1868785)
 (|iiasech| . 1868573) (|iiacsch| . 1868361) (|specialTrigs| . 1868061)
 (|localReal?| . 1867821) (|poly_factor| . 1867348) (|do_quo| . 1866801)
 (|rischNormalize| . 1864583) (|realLiouvillian| . 1863583)
 (|realElementary| . 1862583) (|validExponential| . 1862030)
 (|rootNormalize| . 1861493) (|rmap| . 1860941) (|tanQ| . 1860393)
 (|irootDep| . 1859690) (|select!| . 1859328) (|delete!| . 1859015)
 (|sncndn| . 1858748) (|lin_sol| . 1858490) (|ellipticRC| . 1858250)
 (|ellipticRD| . 1858004) (|ellipticRF| . 1857758) (|ellipticRJ| . 1857506)
 (|qsetelt!| . 1857068) (|unit?| . 1856983) (|associates?| . 1856895)
 (|unitCanonical| . 1856846) (|unitNormal| . 1856658)
 (|factorAndSplit| . 1856490) (|rightOne| . 1856365) (|leftOne| . 1856240)
 (|rightZero| . 1856115) (|leftZero| . 1855990) (|swap| . 1855666)
 (|error| . 1855149) (|minPoly| . 1854644) (|operators| . 1854532)
 (|tower| . 1854290) (|kernels| . 1854048) (|mainKernel| . 1853943)
 (|distribute| . 1853834) (|multiEuclidean| . 1853728)
 (|extendedEuclidean| . 1853395) (|euclideanSize| . 1853287)
 (|sizeLess?| . 1853194) (|getSimplifyDenomsFlag| . 1853034)
 (|setSimplifyDenomsFlag| . 1852871) (|simplifyPower| . 1852705)
 (|number?| . 1852542) (|replaceDiffs| . 1851987)
 (|constantToUnaryFunction| . 1851818) (|tubePlot| . 1850390)
 (|exponentialOrder| . 1850144) (|getMult| . 1850056)
 (|completeEval| . 1849621) (|lowerPolynomial| . 1849255)
 (|raisePolynomial| . 1848889) (|normalDeriv| . 1848542) (|ran| . 1848255)
 (|subst_var| . 1848154) (|to_UP| . 1847971) (|highCommonTerms| . 1847744)
 (|mapCoef| . 1847526) (|nthCoef| . 1847314) (|binomThmExpt| . 1847027)
 (|fmecg| . 1846801) (|pomopo!| . 1846602) (|mapExponents| . 1846368)
 (|linearAssociatedLog| . 1845965) (|linearAssociatedOrder| . 1845765)
 (|linearAssociatedExp| . 1845555) (|createNormalElement| . 1845415)
 (|setLabelValue| . 1845325) (|getCode| . 1845233) (|printCode| . 1845154)
 (|code| . 1842528) (|operation| . 1841791) (|common| . 1841662)
 (|printStatement| . 1841559) (|save| . 1841514) (|stop| . 1841469)
 (|block| . 1841365) (|cond| . 1841192) (|returns| . 1840496)
 (|call| . 1840415) (|comment| . 1840244) (|continue| . 1840154)
 (|gotoJump| . 1840064) (|repeatUntilLoop| . 1839978) (|whileLoop| . 1839892)
 (|forLoop| . 1839585) (|sin?| . 1839453) (|zeroVector| . 1839270)
 (|zeroSquareMatrix| . 1839087) (|identitySquareMatrix| . 1838904)
 (|fort_clean_lines| . 1838800) (|do_with_error_env3| . 1838603)
 (|do_with_error_env2| . 1838406) (|do_with_error_env1| . 1838247)
 (|expression2Fortran1| . 1838032) (|statement2Fortran| . 1837897)
 (|expression2Fortran| . 1837762) (|getStatement| . 1837589)
 (|changeExprLength| . 1837468) (|displayLines| . 1837339)
 (|dispStatement| . 1837215) (|fortFormatHead| . 1836956)
 (|fortFormatTypeLines| . 1836797) (|fort_format_types| . 1836634)
 (|indentFortLevel| . 1836513) (|checkType| . 1836425)
 (|newFortranTempVar| . 1836340) (|clear_used_intrinsics| . 1836259)
 (|get_used_intrinsics| . 1836158) (|get_fort_indent| . 1836072)
 (|lSpaceBasis| . 1835735) (|finiteBasis| . 1835398) (|principal?| . 1835053)
 (|divisor| . 1833394) (|weierstrassHalfPeriods| . 1833225)
 (|weierstrassInvariants| . 1833056) (|modularInvariantJ| . 1832944)
 (|landen1| . 1832639) (|landen2| . 1832302) (|landen| . 1831971)
 (|kprod| . 1831672) (|sn2| . 1831367) (|useNagFunctions| . 1830898)
 (|rationalPoints| . 1830193) (|nonSingularModel| . 1829403)
 (|algSplitSimple| . 1828946) (|hyperelliptic| . 1828366)
 (|elliptic| . 1827513) (|integralDerivationMatrix| . 1827130)
 (|integralRepresents| . 1826823) (|integralCoordinates| . 1826481)
 (|yCoordinates| . 1826139) (|inverseIntegralMatrixAtInfinity| . 1825825)
 (|integralMatrixAtInfinity| . 1825511) (|inverseIntegralMatrix| . 1825197)
 (|integralMatrix| . 1824883) (|reduceBasisAtInfinity| . 1824579)
 (|normalizeAtInfinity| . 1824275) (|complementaryBasis| . 1823971)
 (|integral?| . 1823063) (|integralAtInfinity?| . 1822761)
 (|integralBasisAtInfinity| . 1822460) (|ramified?| . 1821858)
 (|ramifiedAtInfinity?| . 1821559) (|singular?| . 1820957)
 (|singularAtInfinity?| . 1820658) (|branchPoint?| . 1820056)
 (|branchPointAtInfinity?| . 1819757) (|rationalPoint?| . 1819087)
 (|absolutelyIrreducible?| . 1818429) (|genus| . 1817749)
 (|getZechTable| . 1817064) (|createZechTable| . 1816830)
 (|createMultiplicationTable| . 1816462)
 (|createMultiplicationMatrix| . 1816169)
 (|createLowComplexityTable| . 1815860)
 (|createLowComplexityNormalBasis| . 1815407) (|fffg| . 1814321)
 (|generalCoefficient| . 1813885) (|ShiftAction| . 1813638)
 (|ShiftC| . 1813362) (|DiffAction| . 1813115) (|DiffC| . 1812839)
 (|qShiftAction| . 1812589) (|qShiftC| . 1812310) (|genVectorStream| . 1811997)
 (|genVectorStream2| . 1811684) (|generalInterpolation| . 1809831)
 (|representationType| . 1809696) (|createPrimitiveElement| . 1809641)
 (|tableForDiscreteLogarithm| . 1809471) (|factorsOfCyclicGroupSize| . 1809240)
 (|sizeMultiplication| . 1808113) (|getMultiplicationMatrix| . 1807301)
 (|getMultiplicationTable| . 1806311) (|primitive?| . 1806009)
 (|numberOfIrreduciblePoly| . 1805841) (|numberOfPrimitivePoly| . 1805673)
 (|numberOfNormalPoly| . 1805505) (|createIrreduciblePoly| . 1805280)
 (|createPrimitivePoly| . 1805055) (|createNormalPoly| . 1804830)
 (|createNormalPrimitivePoly| . 1804605)
 (|createPrimitiveNormalPoly| . 1804380) (|nextIrreduciblePoly| . 1804196)
 (|nextPrimitivePoly| . 1804012) (|nextNormalPoly| . 1803828)
 (|nextNormalPrimitivePoly| . 1803644) (|nextPrimitiveNormalPoly| . 1803460)
 (|leastAffineMultiple| . 1803278) (|reducedQPowers| . 1803020)
 (|rootOfIrreduciblePoly| . 1802420) (|mapContra| . 1802195)
 (|looseEquals| . 1802062) (|diagramHeight| . 1801921)
 (|diagramWidth| . 1801780) (|deepDiagramSvg| . 1801585)
 (|diagramsSvg| . 1801362) (|diagramSvg| . 1801167) (|subdiagramSvg| . 1800953)
 (|isFunctional?| . 1800823) (|distanceMatrix| . 1800682)
 (|laplacianMatrix| . 1800541) (|adjacencyMatrix| . 1800389)
 (|incidenceMatrix| . 1800248) (|isAcyclic?| . 1800118)
 (|loopsArrows| . 1799982) (|loopsAtNode| . 1799797) (|loopsNodes| . 1799661)
 (|spanningForestNode| . 1799513) (|spanningTreeNode| . 1799325)
 (|spanningForestArrow| . 1799177) (|spanningTreeArrow| . 1798989)
 (|routeArrows| . 1798787) (|routeNodes| . 1798585) (|arrowsToArrow| . 1798386)
 (|arrowsFromArrow| . 1798187) (|nodeToArrow| . 1797988)
 (|nodeFromArrow| . 1797789) (|arrowsToNode| . 1797590)
 (|arrowsFromNode| . 1797391) (|nodeToNode| . 1797192)
 (|nodeFromNode| . 1796993) (|outDegree| . 1796849) (|inDegree| . 1796705)
 (|getArrowIndex| . 1796558) (|arrowName| . 1796377) (|isFixPoint?| . 1796198)
 (|isGreaterThan?| . 1796016) (|isDirectSuccessor?| . 1795834)
 (|kgraph| . 1795674) (|cycleClosed| . 1795514) (|cycleOpen| . 1795354)
 (|terminal| . 1795259) (|initial| . 1794899) (|getArrows| . 1794305)
 (|getVertexIndex| . 1794161) (|getVertices| . 1793835) (|flush| . 1793663)
 (|write!| . 1793520) (|read!| . 1793380) (|iomode| . 1793206)
 (|reopen!| . 1793036) (|open| . 1792728) (|rightUnit| . 1792562)
 (|leftUnit| . 1792396) (|rightMinimalPolynomial| . 1792169)
 (|leftMinimalPolynomial| . 1791942) (|associatorDependence| . 1791496)
 (|lieAlgebra?| . 1791130) (|jordanAlgebra?| . 1790764)
 (|noncommutativeJordanAlgebra?| . 1790398) (|jordanAdmissible?| . 1790032)
 (|lieAdmissible?| . 1789666) (|jacobiIdentity?| . 1789300)
 (|powerAssociative?| . 1789149) (|alternative?| . 1788783)
 (|flexible?| . 1788417) (|rightAlternative?| . 1788051)
 (|leftAlternative?| . 1787685) (|antiAssociative?| . 1787319)
 (|associative?| . 1786953) (|antiCommutative?| . 1786587)
 (|commutative?| . 1786221) (|rightCharacteristicPolynomial| . 1786038)
 (|leftCharacteristicPolynomial| . 1785855) (|rightNorm| . 1785729)
 (|leftNorm| . 1785603) (|rightTrace| . 1785477) (|leftTrace| . 1785351)
 (|someBasis| . 1785198) (|finiteLattice| . 1784878) (|LiePoly| . 1784692)
 (|quickSort| . 1784399) (|heapSort| . 1784106) (|shellSort| . 1783813)
 (|gamma| . 1783702) (|outputSpacing| . 1783581) (|outputGeneral| . 1783392)
 (|outputFixed| . 1783203) (|outputFloating| . 1783014) (|exp1| . 1782933)
 (|log10| . 1782609) (|log2| . 1782485) (|rationalApproximation| . 1781899)
 (|relerror| . 1781854) (|complexSolve| . 1780614) (|complexRoots| . 1780055)
 (|realRoots| . 1779551) (|support| . 1779348) (|moebiusFunction| . 1779177)
 (|overlap| . 1778897) (|hcrf| . 1778802) (|hclf| . 1778707)
 (|writable?| . 1778616) (|readable?| . 1778525) (|exists?| . 1778434)
 (|extension| . 1778344) (|directory| . 1778254) (|filename| . 1778158)
 (|functionGraph| . 1776724) (|shallowExpand| . 1776483)
 (|deepExpand| . 1776242) (|clearFortranOutputStack| . 1776131)
 (|showFortranOutputStack| . 1776020) (|popFortranOutputStack| . 1775928)
 (|pushFortranOutputStack| . 1775670) (|topFortranOutputStack| . 1775569)
 (|setFormula!| . 1775459) (|formula| . 1775352) (|linkToFortran| . 1774331)
 (|setLegalFortranSourceExtensions| . 1774236) (|fracPart| . 1773844)
 (|polyPart| . 1773637) (|fullPartialFraction| . 1773391)
 (|primeFrobenius| . 1773206) (|discreteLog| . 1772968)
 (|decreasePrecision| . 1772783) (|increasePrecision| . 1772598)
 (|bits| . 1772213) (|unitNormalize| . 1772120) (|unit| . 1771617)
 (|flagFactor| . 1771421) (|sqfrFactor| . 1771290) (|primeFactor| . 1771159)
 (|nthFlag| . 1770966) (|nthExponent| . 1770835)
 (|irreducibleFactor| . 1770704) (|factors| . 1770108) (|nilFactor| . 1769977)
 (|regularRepresentation| . 1769352) (|traceMatrix| . 1768643)
 (|randomLC| . 1768253) (|minimize| . 1767921) (|module| . 1767156)
 (|represents| . 1766108) (|rightRegularRepresentation| . 1765762)
 (|leftRegularRepresentation| . 1765416) (|rightTraceMatrix| . 1764867)
 (|leftTraceMatrix| . 1764318) (|rightDiscriminant| . 1763859)
 (|leftDiscriminant| . 1763400) (|mergeFactors| . 1763248)
 (|algtower| . 1762850) (|isMult| . 1762603) (|applyQuote| . 1761893)
 (|exprToXXP| . 1761023) (|exprToUPS| . 1757286) (|exprToGenUPS| . 1753549)
 (|exprToPS| . 1746053) (|localAbs| . 1744236) (|atan1| . 1742932)
 (|integ| . 1741628) (|integ_df| . 1740321) (|powToUPS| . 1737755)
 (|universe| . 1737620) (|cardinality| . 1737465)
 (|internalIntegrate0| . 1736813) (|makeCos| . 1736539) (|makeSin| . 1736265)
 (|logGamma| . 1735834) (|li2| . 1735723) (|rabs| . 1735012)
 (|lambert_via_newton1| . 1734504) (|lambert_via_newton2| . 1733996)
 (|lambert_inverse_series| . 1733565) (|iiGamma| . 1733375) (|iiabs| . 1733185)
 (|iiconjugate| . 1732995) (|iiBeta| . 1732777) (|iidigamma| . 1732587)
 (|iipolygamma| . 1732369) (|iiBesselJ| . 1732151) (|iiBesselY| . 1731933)
 (|iiBesselI| . 1731715) (|iiBesselK| . 1731497) (|iiAiryAi| . 1731307)
 (|iiAiryAiPrime| . 1731117) (|iiAiryBi| . 1730927) (|iiAiryBiPrime| . 1730737)
 (|iAiryAi| . 1730547) (|iAiryAiPrime| . 1730357) (|iAiryBi| . 1730167)
 (|iAiryBiPrime| . 1729977) (|iiHypergeometricF| . 1729759)
 (|iiPolylog| . 1729566) (|iLambertW| . 1729376) (|bringDown| . 1728707)
 (|newReduc| . 1728392) (|logical?| . 1728302) (|character?| . 1728212)
 (|doubleComplex?| . 1728122) (|complex?| . 1728032) (|double?| . 1727942)
 (|fortranCharacter| . 1727897) (|fortranDoubleComplex| . 1727852)
 (|fortranComplex| . 1727807) (|fortranLogical| . 1727762)
 (|fortranInteger| . 1727717) (|fortranDouble| . 1727672)
 (|fortranReal| . 1727627) (|external?| . 1727545) (|dimensionsOf| . 1727430)
 (|scalarTypeOf| . 1727273) (|fortranCarriageReturn| . 1727193)
 (|fortranLiteral| . 1727074) (|fortranLiteralLine| . 1726955)
 (|processTemplate| . 1726776) (|makeFR| . 1726045) (|musserTrials| . 1725686)
 (|stopMusserTrials| . 1725327) (|numberOfFactors| . 1724895)
 (|modularFactor| . 1724633) (|useSingleFactorBound?| . 1724469)
 (|useSingleFactorBound| . 1724302) (|useEisensteinCriterion?| . 1724138)
 (|useEisensteinCriterion| . 1723971) (|eisensteinIrreducible?| . 1723804)
 (|tryFunctionalDecomposition?| . 1723640)
 (|tryFunctionalDecomposition| . 1723473) (|henselFact| . 1722999)
 (|btwFact| . 1722419) (|beauzamyBound| . 1721975) (|bombieriNorm| . 1721106)
 (|rootBound| . 1720662) (|singleFactorBound| . 1719727)
 (|quadraticNorm| . 1719311) (|infinityNorm| . 1718895)
 (|scaleRoots| . 1718716) (|shiftRoots| . 1718537)
 (|degreePartition| . 1717957) (|factorOfDegree| . 1716450)
 (|factorsOfDegree| . 1716168) (|pascalTriangle| . 1715996)
 (|rangePascalTriangle| . 1715719) (|sizePascalTriangle| . 1715581)
 (|fillPascalTriangle| . 1715457) (|safeCeiling| . 1715285)
 (|safeFloor| . 1715113) (|safetyMargin| . 1714738) (|sumSquares| . 1714593)
 (|euclideanNormalForm| . 1714274) (|euclideanGroebner| . 1713267)
 (|factorGroebnerBasis| . 1712338) (|groebnerFactorize| . 1710476)
 (|credPol| . 1710169) (|gbasis| . 1709831) (|critT| . 1709364)
 (|critM| . 1709064) (|critB| . 1708758) (|critBonD| . 1708292)
 (|critMTonD1| . 1707829) (|critMonD1| . 1707363) (|redPo| . 1706990)
 (|updatF| . 1706537) (|updatD| . 1706071) (|minGbasis| . 1705767)
 (|lepol| . 1705470) (|prinshINFO| . 1705176) (|prindINFO| . 1704665)
 (|fprindINFO| . 1704151) (|prinpolINFO| . 1703822) (|prinb| . 1703500)
 (|critpOrder| . 1703030) (|makeCrit| . 1702445) (|gcdBasis| . 1702054)
 (|gcdDecomposition| . 1701411) (|conditionsForIdempotents| . 1700040)
 (|genericRightDiscriminant| . 1699694) (|genericRightTraceForm| . 1699342)
 (|genericLeftDiscriminant| . 1698996) (|genericLeftTraceForm| . 1698644)
 (|genericRightNorm| . 1698295) (|genericRightTrace| . 1697946)
 (|genericRightMinimalPolynomial| . 1697571) (|rightRankPolynomial| . 1696731)
 (|genericLeftNorm| . 1696382) (|genericLeftTrace| . 1696033)
 (|genericLeftMinimalPolynomial| . 1695658) (|leftRankPolynomial| . 1694818)
 (|generic| . 1692954) (|rightUnits| . 1692233) (|leftUnits| . 1691512)
 (|gnuDraw| . 1690210) (|compBound| . 1689958) (|tablePow| . 1689670)
 (|solveid| . 1689424) (|testModulus| . 1689190)
 (|generalizedMoebiusFunction| . 1688930)
 (|canonicalMoebiusFunction| . 1688710) (|moebiusMatrix| . 1688308)
 (|removeZeros| . 1688061) (|infsum| . 1687747) (|HenselLift| . 1687412)
 (|completeHensel| . 1687155) (|multMonom| . 1686570) (|build| . 1685985)
 (|leadingIndex| . 1685406) (|leadingExponent| . 1684827) (|option| . 1684318)
 (|checkOptions| . 1684179) (|displayKind| . 1683959) (|indexName| . 1683739)
 (|variableName| . 1683519) (|functionNames| . 1683272)
 (|functionName| . 1683052) (|one| . 1682830) (|checkExtraValues| . 1682608)
 (|safety| . 1682355) (|allDegrees| . 1682133) (|maxMixedDegree| . 1681880)
 (|maxDegree| . 1681576) (|maxLevel| . 1681272) (|Somos| . 1680974)
 (|homogeneous| . 1680676) (|maxPower| . 1680378) (|maxSubst| . 1680080)
 (|maxShift| . 1679776) (|maxDerivative| . 1679472) (|GospersMethod| . 1678884)
 (|primitiveMonomials| . 1678578) (|totalDegreeSorted| . 1678254)
 (|totalDegree| . 1677646) (|nextSubsetGray| . 1677497)
 (|firstSubsetGray| . 1677344) (|clipPointsDefault| . 1677171)
 (|drawToScale| . 1676998) (|adaptive| . 1676605) (|putColorInfo| . 1676443)
 (|appendPoint| . 1676311) (|component| . 1675750) (|ranges| . 1675257)
 (|pointLists| . 1675135) (|makeGraphImage| . 1674520)
 (|sendGraphImage| . 1674442) (|graphImage| . 1674398) (|groebSolve| . 1673957)
 (|testDim| . 1673620) (|genericPosition| . 1673081)
 (|toPermutationIfCan| . 1672596) (|directProduct| . 1672403)
 (|refactor| . 1672349) (|groupPresentation| . 1672012) (F2EXPRR . 1671555)
 (EXPRR2F . 1671091) (|iim2| . 1670935) (|iiretractVar| . 1670727)
 (|guess| . 1659478) (|guessExpRat| . 1649855) (|guessBinRat| . 1640232)
 (|guessAlgDep| . 1635851) (|guessFE| . 1631578) (|guessAlg| . 1627305)
 (|guessPade| . 1623032) (|algDepHP| . 1604427) (|substHP| . 1586474)
 (|shiftHP| . 1549521) (|diffHP| . 1512568) (|guessRec| . 1505051)
 (|guessPRec| . 1497534) (|guessRat| . 1490017) (|guessADE| . 1482500)
 (|guessHolo| . 1474983) (|HankelMatrix| . 1474830) (|update!| . 1474739)
 (|lfunc| . 1474654) (|inHallBasis?| . 1474528) (|reorder| . 1473764)
 (|heap| . 1473644) (|gcdprim| . 1473492) (|gcdcofact| . 1473333)
 (|gcdcofactprim| . 1473174) (|lintgcd| . 1472987) (|hex| . 1472874)
 (|members| . 1472317) (|parts| . 1471868) (|count| . 1471406)
 (|every?| . 1471176) (|any?| . 1470946) (|map!| . 1470478)
 (|dispGenerators| . 1470396) (|homologyzc2| . 1470354)
 (|homologyc2| . 1470312) (|homologyzz| . 1470270) (|homologyz| . 1470228)
 (|homology0| . 1470186) (|homologyGroup| . 1470091) (|antipode| . 1469950)
 (|trueEqual| . 1469854) (|factorList| . 1469189)
 (|listConjugateBases| . 1468564) (|matrixGcd| . 1468102)
 (|divideIfCan!| . 1467648) (|leastPower| . 1467219) (|idealiser| . 1466378)
 (|idealiserMatrix| . 1465958) (|moduleSum| . 1465447)
 (|mapUnivariate| . 1464711) (|mapUnivariateIfCan| . 1464333)
 (|mapMatrixIfCan| . 1463911) (|mapBivariate| . 1463472)
 (|fullDisplay| . 1462558) (|relationsIdeal| . 1462059) (|saturate| . 1461510)
 (|groebner?| . 1461225) (|groebnerIdeal| . 1460933) (|ideal| . 1459919)
 (|leadingIdeal| . 1459662) (|backOldPos| . 1459220)
 (|generalPosition| . 1458715) (|quotient| . 1457963) (|zeroDim?| . 1457357)
 (|inRadical?| . 1457069) (|in?| . 1456781) (|element?| . 1456493)
 (|zeroDimPrime?| . 1455834) (|zeroDimPrimary?| . 1455175)
 (|radical| . 1454544) (|primaryDecomp| . 1453364) (|leadingTerm| . 1453149)
 (|constructOrdered| . 1452925) (|leadingSupport| . 1452770)
 (|eigenvector| . 1452119) (|generalizedEigenvector| . 1450286)
 (|eigenvalues| . 1449282) (|eigenvectors| . 1447369)
 (|generalizedEigenvectors| . 1445627) (|removeRepeats!| . 1445410)
 (|shrinkable| . 1445123) (|physicalLength!| . 1444839)
 (|physicalLength| . 1444530) (|flexibleArray| . 1444243)
 (|parseILTerm| . 1443975) (|parseIL2| . 1443707) (|parseIL| . 1443631)
 (|proposition| . 1443555) (|generalizedInverse| . 1443269)
 (|row_operation_base| . 1442915) (|row_operation_modular| . 1442558)
 (|do_modular_solve| . 1441935) (|do_poly_integer| . 1440838)
 (|merge_exponents| . 1440583) (|merge2| . 1440166) (|setFieldInfo| . 1439865)
 (|pol| . 1439651) (|xn| . 1439421) (|dAndcExp| . 1439171) (|repSq| . 1438965)
 (|expPot| . 1438761) (|qPot| . 1438566) (|lookup| . 1438279)
 (|normal?| . 1437703) (|normalElement| . 1437365)
 (|minimalPolynomial| . 1436536) (|incidenceAlgebra| . 1436117)
 (|increment| . 1435949) (|incrementBy| . 1435778) (|charpol| . 1435483)
 (|solve1| . 1435187) (|innerEigenvectors| . 1434574) (|compile| . 1434444)
 (|declare| . 1434317) (|parse| . 1434238) (|unparse| . 1434159)
 (|flatten| . 1433976) (|binary| . 1433774) (|packageCall| . 1433411)
 (|coerceToType| . 1433280) (|atType| . 1433149) (|pretendOfType| . 1433018)
 (|interpret| . 1432813) (|infiniteProduct| . 1432643)
 (|evenInfiniteProduct| . 1432473) (|oddInfiniteProduct| . 1432303)
 (|generalInfiniteProduct| . 1432099) (|innerSolve1| . 1431507)
 (|innerSolve| . 1431151) (|makeEq| . 1430797)
 (|modularGcdPrimitive| . 1430505) (|modularGcd| . 1430213)
 (|reduction| . 1429606) (|signAround| . 1428831) (|invmod| . 1428770)
 (|powmod| . 1428706) (|mulmod| . 1428642) (|submod| . 1428578)
 (|addmod| . 1428514) (|mask| . 1428456) (|dec| . 1428398) (|inc| . 1428340)
 (|symmetricRemainder| . 1428279) (|positiveRemainder| . 1428218)
 (|bit?| . 1428121) (|algint| . 1427602) (|algintegrate| . 1426960)
 (|palgintegrate| . 1426318) (|algextint| . 1423056)
 (|algextint_base| . 1421309) (|bitLength| . 1421227) (|bitCoef| . 1421140)
 (|bitTruth| . 1421018) (|contains?| . 1420771) (|width| . 1420562)
 (|inf| . 1420353) (|qinterval| . 1420141) (|interval| . 1419467)
 (|li_int| . 1418287) (|poly_int| . 1417107) (|solve_u| . 1416465)
 (|lfextendedint| . 1415822) (|lfintegrate| . 1415141)
 (|BasicMethod| . 1414978) (|PollardSmallFactor| . 1414848)
 (|palgint0| . 1413491) (|palgRDE0| . 1412140) (|rationalize_ir| . 1411543)
 (|palgLODE0| . 1409830) (|carmichaelLambda| . 1409722)
 (|chineseRemainder| . 1408598) (|divisors| . 1408453) (|eulerPhi| . 1408345)
 (|fibonacci| . 1408237) (|harmonic| . 1408088) (|jacobi| . 1407977)
 (|moebiusMu| . 1407701) (|numberOfDivisors| . 1407593)
 (|sumOfDivisors| . 1407485) (|sumOfKthPowerDivisors| . 1407335)
 (|HermiteIntegrate| . 1405455) (|palgint| . 1404844) (|palgRDE| . 1404228)
 (|param_RDE| . 1403341) (|param_LODE| . 1402454) (|palgLODE| . 1401634)
 (|primextint| . 1400890) (|expextint| . 1400134) (|diffextint| . 1399549)
 (|unkextint| . 1398964) (|monologextint| . 1398042) (|extendedint| . 1395052)
 (|logextint| . 1393129) (|splitConstant| . 1392542)
 (|pmComplexintegrate| . 1391835) (|pmintegrate| . 1390447)
 (|infieldint| . 1390140) (|integerIfCan| . 1389991)
 (|internalIntegrate| . 1388943) (|infieldIntegrate| . 1388631)
 (|varselect| . 1388409) (|kmax| . 1388187) (|ksec| . 1387925)
 (|vark| . 1387668) (|removeConstantTerm| . 1387441) (|mkPrim| . 1387163)
 (|intPatternMatch| . 1386322) (|primintegrate| . 1385416)
 (|expintegrate| . 1384475) (|lambintegrate| . 1383737)
 (|monomialIntegrate| . 1383276) (|monomialIntPoly| . 1382988)
 (|inverseLaplace| . 1382391) (|iprint| . 1382267) (|elem?| . 1382139)
 (|notelem| . 1381965) (|logpart| . 1381610) (|ratpart| . 1381517)
 (|mkAnswer| . 1381078) (|perfectNthPower?| . 1380892)
 (|perfectNthRoot| . 1380500) (|approxNthRoot| . 1380342)
 (|perfectSquare?| . 1380205) (|perfectSqrt| . 1380090)
 (|approxSqrt| . 1379981) (|generateIrredPoly| . 1379760)
 (|complexExpand| . 1378865) (|complexIntegrate| . 1377804)
 (|dimensionOfIrreducibleRepresentation| . 1377650)
 (|irreducibleRepresentation| . 1377057) (|checkRur| . 1376406)
 (|cAcsch| . 1376230) (|cAsech| . 1376054) (|cAcoth| . 1375878)
 (|cAtanh| . 1375702) (|cAcosh| . 1375526) (|cAsinh| . 1375350)
 (|cCsch| . 1375174) (|cSech| . 1374998) (|cCoth| . 1374822)
 (|cTanh| . 1374646) (|cCosh| . 1374470) (|cSinh| . 1374294)
 (|cAcsc| . 1374118) (|cAsec| . 1373942) (|cAcot| . 1373766)
 (|cAtan| . 1373590) (|cAcos| . 1373414) (|cAsin| . 1373238) (|cCsc| . 1373062)
 (|cSec| . 1372886) (|cCot| . 1372710) (|cTan| . 1372534) (|cCos| . 1372358)
 (|cSin| . 1372182) (|cLog| . 1372006) (|cExp| . 1371830)
 (|cRationalPower| . 1371632) (|cPower| . 1371453)
 (|seriesToOutputForm| . 1371070) (|iCompose| . 1370953)
 (|taylorQuoByVar| . 1370839) (|iExquo| . 1370682) (|getStream| . 1370488)
 (|getRef| . 1370303) (|makeSeries| . 1370035) (GF2FG . 1369483)
 (FG2F . 1368969) (F2FG . 1368455) (|explogs2trigs| . 1367903)
 (|trigs2explogs| . 1367340) (|do_liou| . 1366697) (|swap!| . 1366490)
 (|fill!| . 1366071) (|entry?| . 1365826) (|indices| . 1365485)
 (|index?| . 1365324) (|dimS| . 1365057) (|dimJ| . 1364790) (|Pr| . 1364628)
 (|Pm| . 1364463) (|integrateIfCan| . 1364347) (|derivativeOf?| . 1364225)
 (|weight| . 1363115) (|type| . 1363024) (|allRepeated| . 1362617)
 (|m2r| . 1362228) (|r2m| . 1361839) (|repeatedIndex| . 1361723)
 (|multiIndex| . 1361604) (|numerJP| . 1361394) (|autoReduce| . 1361237)
 (|reduceMod| . 1361077) (|simpMod| . 1360288) (|simpOne| . 1360166)
 (|dSubst| . 1360038) (|solveFor| . 1359907) (|sortLD| . 1359750)
 (|leadingDer| . 1359628) (|freeOf?| . 1359259) (|orderDim| . 1359004)
 (|formalDiff2| . 1358312) (|formalDiff| . 1357772) (|class| . 1357121)
 (|const?| . 1356971) (|jetVariables| . 1356821) (|numDepVar| . 1356337)
 (|numIndVar| . 1355853) (|getNotation| . 1355417) (|setNotation| . 1354908)
 (P . 1353590) (U . 1353152) (X . 1352714) (|ground| . 1352030)
 (|printSys| . 1351785) (|jacobiMatrix| . 1351088) (|makeSystem| . 1350874)
 (|setSimpMode| . 1350434) (|extractSymbol| . 1349998)
 (|analyseSymbol| . 1349531) (|prolongSymbol| . 1349299)
 (|prolongMV| . 1348906) (|project| . 1348678) (|contract| . 1347352)
 (|differentials| . 1347153) (|dP| . 1346881) (|dU| . 1346667) (|dX| . 1346453)
 (|d| . 1346113) (|eqRep?| . 1345911) (|ground?| . 1345158)
 (|prolong| . 1344238) (|lie| . 1343845) (|directions| . 1343647)
 (|diffP| . 1343376) (|diffU| . 1343163) (|diffX| . 1342950)
 (|search| . 1342812) (|keys| . 1342655) (|key?| . 1342495)
 (|symbolIfCan| . 1342368) (|kernel| . 1341805) (|height| . 1341152)
 (|argument| . 1340760) (|constantKernel| . 1340590)
 (|constantIfCan| . 1340411) (|kovacic| . 1339452) (|toStringConven| . 1339296)
 (|unbind| . 1339215) (|bind| . 1339134) (|subst| . 1338444)
 (|free?| . 1338326) (|getBoundValue| . 1338197) (|isFreeNode?| . 1338079)
 (|isBoundNode?| . 1337961) (|isLambda?| . 1337843) (|isCompound?| . 1337725)
 (|parseLambda| . 1337608) (|lambda| . 1337141) (|laplace| . 1336533)
 (|latticeJoinOfMeets| . 1336305) (|toStringUnwrapped| . 1336053)
 (|opType| . 1335801) (|deductions| . 1335482) (|meet| . 1335108)
 (|emptyLattice| . 1335006) (|latticeMeetOfJoins| . 1334778)
 (|logicF| . 1334638) (|logicT| . 1334498) (|trailingCoefficient| . 1334325)
 (|normalizeIfCan| . 1333870) (|polCase| . 1333492) (|distFact| . 1332621)
 (|identification| . 1332280) (|LyndonCoordinates| . 1331927)
 (|LyndonBasis| . 1331553) (|zeroDimensional?| . 1330931)
 (|fglmIfCan| . 1330360) (|lexTriangular| . 1329904)
 (|squareFreeLexTriangular| . 1328906) (|belong?| . 1326964)
 (|fresnelC| . 1326287) (|fresnelS| . 1325610) (|erfi| . 1324933)
 (|erf| . 1324256) (|dilog| . 1323785) (|li| . 1323108) (|Chi| . 1322431)
 (|Shi| . 1321754) (|Ci| . 1321077) (|Si| . 1320400) (|Ei| . 1319723)
 (|linGenPos| . 1319282) (|groebgen| . 1318843) (|totolex| . 1318532)
 (|minPol| . 1317807) (|computeBasis| . 1317568) (|coord| . 1316858)
 (|anticoord| . 1316525) (|intcompBasis| . 1316234) (|choosemon| . 1315946)
 (|close!| . 1315764) (|pack!| . 1315618) (|library| . 1315539)
 (|complexLimit| . 1314336) (|dehomogenize| . 1313622) (|lin_comb!| . 1313367)
 (|lin_comb| . 1311464) (|linearlyDependent?| . 1311235)
 (|linearDependence| . 1311006) (|solveLinear| . 1309218)
 (|reducedSystem| . 1308034) (|setDifference| . 1307913)
 (|setIntersection| . 1307792) (|setUnion| . 1307671) (|tails| . 1307548)
 (|append| . 1307468) (|null| . 1307354) (|nil| . 1307280) (|match| . 1305969)
 (|splitList| . 1305690) (|topologicalSort!| . 1305508)
 (|topologicalSort| . 1305146) (|cartesianPower| . 1304934)
 (|minShift| . 1304775) (|substitute| . 1304661) (|duplicates?| . 1304525)
 (|mapGen| . 1303837) (|mapExpon| . 1303308) (|commutativeEquality| . 1303109)
 (|leftMult| . 1302938) (|rightMult| . 1302767) (|makeUnit| . 1302602)
 (|nthFactor| . 1301809) (|nthExpon| . 1301316) (|makeMulti| . 1301082)
 (|makeTerm| . 1300911) (|listOfMonoms| . 1300670) (|sort!| . 1300210)
 (|reverse!| . 1299770) (|copyInto!| . 1299553) (|sorted?| . 1299122)
 (|reverse| . 1298465) (|insert| . 1297986) (|delete| . 1297707)
 (|delta_deriv| . 1297435) (|symmetricSquare| . 1297281) (|factor1| . 1296646)
 (|testnp| . 1295798) (|testfn| . 1294739) (|testf2| . 1293315)
 (|testll| . 1292197) (|testlc| . 1291021) (|testln| . 1288081)
 (|testlw| . 1286532) (|testcp| . 1285733) (|testco| . 1285176)
 (|testcx| . 1284598) (|testpd| . 1284007) (|testfr| . 1281374)
 (|testsb| . 1280409) (|testro| . 1279615) (|testfo| . 1276982)
 (|testsc| . 1276264) (|testfg| . 1275489) (|testlp| . 1274803)
 (|testis| . 1274429) (|testgt| . 1274170) (|gen_exp| . 1272861)
 (|ge_minimal| . 1270474) (|symmetricProduct| . 1270080)
 (|symmetricPower| . 1269594) (|directSum| . 1269200) (|false| . 1269159)
 (|true| . 1269118) (|entries| . 1268858) (|loop| . 1268754)
 (|lcmCoef| . 1268564) (|solveLinearPolynomialEquationByFractions| . 1268296)
 (|list| . 1268206) (|hasSolution?| . 1267525) (|linSolve| . 1266946)
 (|intoMatrix| . 1266440) (|LUDecomp| . 1266115) (|LUSolve| . 1265905)
 (|LUInverse| . 1265642) (|LyndonWordsList| . 1265420)
 (|LyndonWordsList1| . 1265174) (|lyndonIfCan| . 1265036) (|lyndon| . 1264904)
 (|lyndon?| . 1264744) (|lexico| . 1264328)
 (|numberOfComputedEntries| . 1264186) (|rst| . 1264083) (|frst| . 1263980)
 (|lazyEvaluate| . 1263877) (|lazy?| . 1263746) (|explicitlyEmpty?| . 1263615)
 (|explicitEntries?| . 1263484) (|matrixDimensions| . 1263316)
 (|matrixConcat3D| . 1263172) (|plus| . 1262690) (|identityMatrix| . 1262506)
 (|zeroMatrix| . 1261922) (|algebraicGcd| . 1261027) (|pseudoRem| . 1260841)
 (|canonicalIfCan| . 1260656) (|pack_modulus| . 1260370) (|MPtoMPT| . 1260113)
 (|pack_exps| . 1259851) (|repack1| . 1259572) (|pack_exps0| . 1259348)
 (|m_inverse| . 1259091) (|rightRecip| . 1258862) (|leftRecip| . 1258633)
 (|leftPower| . 1258435) (|rightPower| . 1258237) (|one?| . 1257776)
 (|element| . 1257459) (|rowMatrix| . 1257145) (|rows| . 1256498)
 (|columnMatrix| . 1256184) (|columns| . 1255537) (|subMatrix| . 1254625)
 (|bandMatrix| . 1253892) (|blockSplit| . 1252374) (|iter| . 1252171)
 (|arg1| . 1252014) (|arg2| . 1251857) (|comp| . 1251578) (|nullary| . 1251443)
 (|id| . 1251339) (|recur| . 1250947) (|const| . 1250423) (|curry| . 1250207)
 (|diag| . 1249988) (|curryRight| . 1249722) (|curryLeft| . 1249456)
 (|constantRight| . 1249193) (|constantLeft| . 1248930) (|twist| . 1248664)
 (|kronecker_prod1| . 1248176) (|positivePower| . 1247880)
 (|kroneckerSum| . 1247409) (|kroneckerProduct| . 1246864)
 (|elRow1!| . 1246539) (|elRow2!| . 1246211) (|elColumn2!| . 1245883)
 (|fractionFreeGauss!| . 1245548) (|invertIfCan| . 1245085) (|copy!| . 1244938)
 (|plus!| . 1244788) (|minus!| . 1244493) (|leftScalarTimes!| . 1244343)
 (|rightScalarTimes!| . 1244193) (|times!| . 1244043) (|power!| . 1243841)
 (|gradient| . 1243509) (|divergence| . 1243214) (|laplacian| . 1242919)
 (|hessian| . 1242587) (|bandedHessian| . 1242213) (|jacobian| . 1241881)
 (|bandedJacobian| . 1241504) (|duplicates| . 1241232)
 (|removeDuplicates!| . 1240987) (|ddFact| . 1240682)
 (|separateFactors| . 1240040) (|meshPar2Var| . 1238776)
 (|meshFun2Var| . 1238268) (|meshPar1Var| . 1237901) (|ptFunc| . 1237461)
 (|ldegree| . 1237239) (|subst_vars| . 1237051) (|trial_division| . 1236717)
 (|toPermutation| . 1236543) (|toCayleyGraph| . 1236088) (|limit| . 1232214)
 (|contraAdjoint| . 1231890) (|coAdjoint| . 1231566)
 (|multifunctionGraph| . 1229843) (|minimumExponent| . 1229680)
 (|maximumExponent| . 1229517) (|precision| . 1229077) (|mantissa| . 1228900)
 (|rowEch| . 1228749) (|rowEchLocal| . 1228595) (|rowEchelonLocal| . 1228438)
 (|normalizedDivide| . 1227827) (|maxint| . 1227642)
 (|binaryFunction| . 1227336) (|makeFloatFunction| . 1226832)
 (|function| . 1225600) (|makeRecord| . 1225407) (|unaryFunction| . 1225142)
 (|compiledFunction| . 1224564) (|corrPoly| . 1223879) (|lifting| . 1222354)
 (|exprex| . 1222114) (|coerceS| . 1221874) (|mfactor| . 1221695)
 (|ddfact| . 1221260) (|mmul| . 1221124) (|mod_exp| . 1220814)
 (|power_matrix| . 1220386) (|modular_compose| . 1220019)
 (|ini_rdata| . 1219712) (|red_pol| . 1219425) (|HP_solve_I| . 1218643)
 (|HP_solve_A| . 1217797) (|HP_solve_P| . 1216975) (|HP_solve_PA| . 1216080)
 (|HP_solve_M| . 1215273) (|check_sol1a| . 1214952) (|VSUPI_to_VPA| . 1214733)
 (|VSUPPI_to_VPA| . 1214391) (|LLFI_to_LPA| . 1214180)
 (|LLFPI_to_LPA| . 1213869) (|get_variables| . 1213654)
 (|unpack_poly| . 1213299) (|HP_solve| . 1212491)
 (|gen_Monte_Carlo_check| . 1211911) (|LLF_to_LPA| . 1211546)
 (|VSUPS_to_VPA| . 1211148) (|frobenius| . 1210952) (|computePowers| . 1210740)
 (|An| . 1210556) (|UnVectorise| . 1210372) (|Vectorise| . 1210188)
 (|setPoly| . 1210041) (|index| . 1209331) (|exponent| . 1208178)
 (|exQuo| . 1207164) (|cumulant2moment| . 1207026)
 (|moment2cumulant| . 1206888) (|moment2nthJacobi| . 1206639)
 (|moment2jacobi| . 1206334) (|moment2jacobi2| . 1206088)
 (|freeCumulant2moment| . 1205950) (|moment2freeCumulant| . 1205812)
 (|booleanCumulant2moment| . 1205674) (|moment2booleanCumulant| . 1205536)
 (|monotoneCumulant2moment| . 1205398)
 (|monotoneCumulant2momentPoly| . 1205190) (|qcumulant2nthmoment| . 1205000)
 (|hankelDeterminant| . 1204813) (|jacobi2poly| . 1204606)
 (|moment2Stransform| . 1204177) (|moment2monotoneCumulant| . 1203834)
 (|derivationCoordinates| . 1203520) (|generator| . 1202127)
 (|splitSquarefree| . 1201769) (|normalDenom| . 1201524)
 (|totalfract| . 1200859) (|pushdterm| . 1200276) (|pushucoef| . 1199678)
 (|pushuconst| . 1199190) (|numberOfMonomials| . 1198577)
 (|monomials| . 1197941) (|mrv_normalize| . 1197415) (|mrv_limit| . 1194605)
 (|mrv_limit1| . 1194388) (|mrv_sign| . 1193872) (|mrv_cmp| . 1193183)
 (|mrv_set| . 1192465) (|expr_to_series| . 1191859) (|mrv_rewrite| . 1191183)
 (|mrv_rewrite0| . 1190935) (|multiset| . 1190637) (|systemCommand| . 1190515)
 (|mergeDifference| . 1190386) (|logDependenceQ| . 1190152)
 (|squareFreePrim| . 1189846) (|compdegd| . 1189383) (|univcase| . 1189074)
 (|consnewpol| . 1188475) (|nsqfree| . 1187676) (|intChoose| . 1186751)
 (|coefChoose| . 1186414) (|myDegree| . 1185948) (|normDeriv2| . 1185586)
 (|plenaryPower| . 1185424) (|commutator| . 1185149) (|associator| . 1185087)
 (|antiCommutator| . 1185024) (|naiveBeckermannLabahn| . 1184417)
 (|naiveBeckermannLabahnMultipoint| . 1183842)
 (|naiveBeckermannLabahn1| . 1182897) (|naiveBeckermannLabahn0| . 1182443)
 (|reduceBasis0| . 1181985) (|reduceBasis| . 1181540)
 (|complexEigenvalues| . 1181285) (|complexEigenvectors| . 1180791)
 (|newton| . 1180595) (|groebner| . 1177237) (|redPol| . 1176618)
 (|hMonic| . 1176075) (|virtualDegree| . 1175454) (|sPol| . 1174577)
 (|shift| . 1174164) (|normalizedAssociate| . 1173813) (|normalize| . 1171250)
 (|outputArgs| . 1170834) (|normInvertible?| . 1170360)
 (|normFactors| . 1169973) (|npcoef| . 1169085)
 (|characteristicPolynomial| . 1166742) (|realEigenvalues| . 1166514)
 (|realEigenvectors| . 1166124) (|halfExtendedResultant2| . 1165832)
 (|halfExtendedResultant1| . 1165540) (|extendedResultant| . 1165172)
 (|subResultantsChain| . 1164952) (|lazyPseudoQuotient| . 1164838)
 (|lazyPseudoRemainder| . 1164724) (|bernoulliB| . 1164486)
 (|eulerE| . 1164248) (|numeric| . 1162529) (|complexNumeric| . 1158487)
 (|numericIfCan| . 1157054) (|complexNumericIfCan| . 1153853)
 (|FormatArabic| . 1153725) (|ScanArabic| . 1153597) (|FormatRoman| . 1153469)
 (|ScanRoman| . 1153341) (|ScanFloatIgnoreSpaces| . 1153223)
 (|ScanFloatIgnoreSpacesIfCan| . 1153099) (|rk4| . 1152349) (|rk4a| . 1151970)
 (|rk4qc| . 1150895) (|rk4f| . 1150522) (|aromberg| . 1150114)
 (|asimpson| . 1149706) (|atrapezoidal| . 1149298) (|romberg| . 1148893)
 (|simpson| . 1148488) (|trapezoidal| . 1148083) (|rombergo| . 1147678)
 (|simpsono| . 1147273) (|trapezoidalo| . 1146868) (|sup| . 1146596)
 (|inv| . 1145275) (|imagE| . 1145164) (|imagk| . 1145053) (|imagj| . 1144942)
 (|imagi| . 1144831) (|octon| . 1144563) (|constDsolve| . 1143780)
 (|expint| . 1143177) (|diff| . 1142368) (|algDsolve| . 1140779)
 (|denomLODE| . 1139766) (|indicialEquations| . 1137582)
 (|indicialEquation| . 1136582) (|denomRicDE| . 1136081)
 (|leadingCoefficientRicDE| . 1135490) (|constantCoefficientRicDE| . 1134859)
 (|changeVar| . 1133899) (|ratDsolve| . 1131446)
 (|indicialEquationAtInfinity| . 1130622) (|integrate_sols| . 1129092)
 (|reduceLODE| . 1128046) (|singRicDE| . 1126518) (|polyRicDE| . 1125085)
 (|ricDsolve| . 1120787) (|triangulate| . 1118710) (|solveInField| . 1116526)
 (|wronskianMatrix| . 1116025) (|variationOfParameters| . 1115790)
 (|addVertex| . 1115683) (|boolWordPermute| . 1115362) (|reindex| . 1115083)
 (|subtract| . 1115030) (|sameFace?| . 1114855) (|isSubsetOf?| . 1114766)
 (|allSubsets| . 1114142) (|getIndexesSigned| . 1114047)
 (|getIndexes| . 1113934) (|orientedFacetIfCan| . 1113820)
 (|orientedFacetSigned| . 1113725) (|orientedFacetUnsigned| . 1113630)
 (|orientedFacet| . 1113392) (|operator| . 1111139) (|arguments| . 1111001)
 (|has_op?| . 1110845) (|is_symbol?| . 1110689) (|precondition| . 1110598)
 (|OMmakeConn| . 1110494) (|OMcloseConn| . 1110406)
 (|OMconnInDevice| . 1110301) (|OMconnOutDevice| . 1110196)
 (|OMconnectTCP| . 1110031) (|OMbindTCP| . 1109896) (|OMopenFile| . 1109760)
 (|OMopenString| . 1109627) (|OMclose| . 1109545) (|OMsetEncoding| . 1109414)
 (|OMputApp| . 1109332) (|OMputAtp| . 1109250) (|OMputAttr| . 1109168)
 (|OMputBind| . 1109086) (|OMputBVar| . 1109004) (|OMputError| . 1108922)
 (|OMputObject| . 1108840) (|OMputEndApp| . 1108758) (|OMputEndAtp| . 1108676)
 (|OMputEndAttr| . 1108594) (|OMputEndBind| . 1108512)
 (|OMputEndBVar| . 1108430) (|OMputEndError| . 1108348)
 (|OMputEndObject| . 1108266) (|OMputInteger| . 1108144)
 (|OMputFloat| . 1108018) (|OMputVariable| . 1107897) (|OMputString| . 1107776)
 (|OMputSymbol| . 1107652) (|OMgetApp| . 1107570) (|OMgetAtp| . 1107488)
 (|OMgetAttr| . 1107406) (|OMgetBind| . 1107324) (|OMgetBVar| . 1107242)
 (|OMgetError| . 1107160) (|OMgetObject| . 1107078) (|OMgetEndApp| . 1106996)
 (|OMgetEndAtp| . 1106914) (|OMgetEndAttr| . 1106832)
 (|OMgetEndBind| . 1106750) (|OMgetEndBVar| . 1106668)
 (|OMgetEndError| . 1106586) (|OMgetEndObject| . 1106504)
 (|OMgetInteger| . 1106417) (|OMgetFloat| . 1106326)
 (|OMgetVariable| . 1106240) (|OMgetString| . 1106154)
 (|OMgetSymbol| . 1106015) (|OMgetType| . 1105929)
 (|OMencodingBinary| . 1105879) (|OMencodingSGML| . 1105829)
 (|OMencodingXML| . 1105779) (|OMencodingUnknown| . 1105729)
 (|omError| . 1105587) (|errorInfo| . 1105493) (|errorKind| . 1105390)
 (|OMReadError?| . 1105300) (|OMUnknownSymbol?| . 1105210)
 (|OMUnknownCD?| . 1105120) (|OMParseError?| . 1105030) (|OMwrite| . 1103594)
 (|OMread| . 1103468) (|OMreadFile| . 1103350) (|OMreadStr| . 1103232)
 (|OMlistCDs| . 1103132) (|OMlistSymbols| . 1103002)
 (|OMsupportsCD?| . 1102880) (|OMsupportsSymbol?| . 1102755)
 (|OMunhandledSymbol| . 1102633) (|OMreceive| . 1102497) (|OMsend| . 1102333)
 (|OMserve| . 1102198) (|infinity| . 1101988) (|makeop| . 1101656)
 (|opeval| . 1101352) (|evaluateInverse| . 1101055) (|evaluate| . 1099983)
 (|conjug| . 1099677) (|getDatabase| . 1099540) (|whatInfinity| . 1099393)
 (|infinite?| . 1099126) (|finite?| . 1098774) (|minusInfinity| . 1098566)
 (|plusInfinity| . 1098358) (|pureLex| . 1098135) (|totalLex| . 1097912)
 (|reverseLex| . 1097689) (|leftLcm| . 1097542) (|right_ext_ext_GCD| . 1097195)
 (|rightExtendedGcd| . 1096911) (|rightGcd| . 1096764)
 (|rightExactQuotient| . 1096611) (|rightRemainder| . 1096464)
 (|rightQuotient| . 1096317) (|rightLcm| . 1096170)
 (|leftExtendedGcd| . 1095886) (|leftGcd| . 1095739)
 (|leftExactQuotient| . 1095586) (|leftRemainder| . 1095439)
 (|leftQuotient| . 1095292) (|times| . 1095021) (|monicLeftDivide| . 1094446)
 (|monicRightDivide| . 1093871) (|leftDivide| . 1093314)
 (|rightDivide| . 1092757) (|output| . 1092372) (|outputList| . 1092249)
 (|or| . 1092102) (|and| . 1091955) (|quo| . 1091794) (|rem| . 1091633)
 (~= . 1091498) (|blankSeparate| . 1091403) (|semicolonSeparate| . 1091308)
 (|commaSeparate| . 1091213) (|pile| . 1091118) (|paren| . 1090838)
 (|bracket| . 1090698) (|brace| . 1090558) (|prod| . 1090412)
 (|overlabel| . 1090362) (|overbar| . 1090315) (|prime| . 1090173)
 (|quote| . 1090085) (|supersub| . 1089987) (|presuper| . 1089937)
 (|presub| . 1089887) (|super| . 1089837) (|sub| . 1089787)
 (|rarrow| . 1089737) (|assign| . 1084769) (|slash| . 1084719)
 (|over| . 1084669) (|zag| . 1084619) (|box| . 1084432) (|label| . 1084382)
 (|infix?| . 1084301) (|postfix| . 1084251) (|infix| . 1084102)
 (|prefix| . 1084004) (|vconcat| . 1083861) (|hconcat| . 1083718)
 (|rspace| . 1083632) (|vspace| . 1083551) (|hspace| . 1083470)
 (|messagePrint| . 1083356) (|message| . 1083276) (|padecf| . 1082957)
 (|pade| . 1081998) (|root| . 1081731) (|quotientByP| . 1081669)
 (|moduloP| . 1081564) (|modulus| . 1080288) (|digits| . 1079600)
 (|continuedFraction| . 1078591) (|light| . 1078515) (|pastel| . 1078439)
 (|bright| . 1078143) (|dim| . 1078067) (|dark| . 1077991)
 (|motzkinPathArray| . 1077811) (|jacobiPathArray| . 1077634)
 (|bottom| . 1077376) (|surface| . 1077278) (|coordinate| . 1076853)
 (|partitions| . 1076368) (|odd_partitions| . 1076044)
 (|distinct_partitions| . 1075720) (|conjugates| . 1075595)
 (|shuffle| . 1075423) (|shufflein| . 1075251) (|sequences| . 1074912)
 (|permutations| . 1074752) (|lists| . 1074496) (|atoms| . 1074240)
 (|makeResult| . 1073936) (|is?| . 1072735) (|Is| . 1071367)
 (|addMatchRestricted| . 1071176) (|insertMatch| . 1070988)
 (|addMatch| . 1070800) (|getMatch| . 1070613) (|failed| . 1070273)
 (|failed?| . 1069871) (|optpair| . 1069729) (|getBadValues| . 1069600)
 (|resetBadValues| . 1069511) (|hasTopPredicate?| . 1069387)
 (|topPredicate| . 1069197) (|setTopPredicate| . 1069035)
 (|patternVariable| . 1068875) (|withPredicates| . 1068743)
 (|setPredicates| . 1068611) (|predicates| . 1068482)
 (|hasPredicate?| . 1068358) (|optional?| . 1068234) (|multiple?| . 1068110)
 (|generic?| . 1067986) (|quoted?| . 1067862) (|inR?| . 1067738)
 (|depth| . 1067603) (|isList| . 1067461) (|isQuotient| . 1067235)
 (|isOp| . 1066818) (|predicate| . 1066601) (|satisfy?| . 1065942)
 (|addBadValue| . 1065651) (|badValues| . 1065449) (|retractable?| . 1064561)
 (|listOfTerms| . 1063741) (|One| . 1063253) (|adjoint| . 1061938)
 (|id_map| . 1061722) (|diff_map| . 1061508) (|ptree| . 1061321)
 (|coerceImages| . 1060999) (|fixedPoints| . 1060843) (|odd?| . 1060480)
 (|even?| . 1060117) (|numberOfCycles| . 1059978) (|cyclePartition| . 1059848)
 (|coerceListOfPairs| . 1059711) (|coercePreimagesImages| . 1059574)
 (|listRepresentation| . 1059353) (|permanent| . 1059150) (|cycles| . 1059003)
 (|cycle| . 1058865) (|perm_to_vec| . 1058588)
 (|relationsInGenerators| . 1058430) (|relationsInStrongGenerators| . 1058272)
 (|initializeGroupForWordProblem| . 1057973) (|movedPoints| . 1057716)
 (|wordInGenerators| . 1057518) (|wordInStrongGenerators| . 1057320)
 (|orbits| . 1057173) (|orbit| . 1056548) (|permutationGroup| . 1056392)
 (|wordsForStrongGenerators| . 1056223) (|strongGenerators| . 1056067)
 (|base| . 1055598) (|random| . 1054437) (|generators| . 1053911)
 (|eval1a| . 1053153) (|eval1| . 1051629) (|modpreduction| . 1050972)
 (|modpeval| . 1050724) (|addVertex2| . 1050518) (|setMult!| . 1050343)
 (|getMaxRight| . 1050240) (|getMaxLeft| . 1050137) (|getIndexs| . 1049908)
 (|productFacet| . 1049542)
 (|solveLinearPolynomialEquationByRecursion| . 1049128)
 (|factorByRecursion| . 1048699) (|factorSquareFreeByRecursion| . 1048270)
 (|randomR| . 1047643) (|bivariateSLPEBR| . 1047226) (|charthRoot| . 1046967)
 (|conditionP| . 1046766) (|solveLinearPolynomialEquation| . 1045728)
 (|factorSquareFreePolynomial| . 1045523) (|factorPolynomial| . 1045007)
 (|squareFreePolynomial| . 1044802) (|gcdPolynomial| . 1044197)
 (|cmult| . 1043607) (|possibleOrder| . 1043040) (|handle_imaginary| . 1042272)
 (|simplifyCoeffs| . 1041446) (|torsion?| . 1040420) (|torsionIfCan| . 1039277)
 (|getGoodPrime| . 1038976) (|badNum| . 1038397) (|mix| . 1038027)
 (|doubleDisc| . 1037769) (|polyred| . 1037542) (|padicFraction| . 1037434)
 (|padicallyExpand| . 1037266) (|fractionalTerms| . 1037110)
 (|numberOfFractionalTerms| . 1036974) (|nthFractionalTerm| . 1036835)
 (|firstNumer| . 1036727) (|firstDenom| . 1036587)
 (|compactFraction| . 1036479) (|partialFraction| . 1035349)
 (|gcdPrimitive| . 1034460) (|symmetricGroup| . 1034022)
 (|alternatingGroup| . 1033687) (|abelianGroup| . 1033510)
 (|cyclicGroup| . 1033072) (|dihedralGroup| . 1032634) (|mathieu11| . 1032345)
 (|mathieu12| . 1032056) (|mathieu22| . 1031767) (|mathieu23| . 1031478)
 (|mathieu24| . 1031189) (|janko2| . 1030900) (|rubiksGroup| . 1030778)
 (|youngGroup| . 1030449) (|lexGroebner| . 1030261) (|totalGroebner| . 1030073)
 (|qcoerce| . 1029896) (|expressIdealMember| . 1029785)
 (|principalIdeal| . 1029591) (|LagrangeInterpolation| . 1029380)
 (|psolve| . 1017810) (|wrregime| . 1016702) (|rdregime| . 1015432)
 (|bsolve| . 1013728) (|dmp2rfi| . 1012121) (|se2rfi| . 1011553)
 (|pr2dmp| . 1011050) (|hasoln| . 1010396) (|ParCondList| . 1009323)
 (|redpps| . 1008631) (|B1solve| . 1007618) (|factorset| . 1007153)
 (|maxrank| . 1006229) (|minrank| . 1005305) (|minset| . 1004799)
 (|nextSublist| . 1004246) (|overset?| . 1003674) (|ParCond| . 1002938)
 (|redmat| . 1002408) (|regime| . 1001009) (|sqfree| . 1000572)
 (|inconsistent?| . 999495) (|debug| . 999200) (|numFunEvals| . 999128)
 (|setAdaptive| . 999053) (|adaptive?| . 998981)
 (|setScreenResolution| . 998906) (|screenResolution| . 998663)
 (|setMaxPoints| . 998588) (|maxPoints| . 998345) (|setMinPoints| . 998270)
 (|minPoints| . 998027) (|parametric?| . 997952) (|plotPolar| . 997270)
 (|debug3D| . 997193) (|numFunEvals3D| . 997119) (|setAdaptive3D| . 997042)
 (|adaptive3D?| . 996968) (|setScreenResolution3D| . 996891)
 (|screenResolution3D| . 996817) (|setMaxPoints3D| . 996740)
 (|maxPoints3D| . 996666) (|setMinPoints3D| . 996589) (|minPoints3D| . 996515)
 (|tValues| . 996407) (|tRange| . 996221) (|plot| . 994219)
 (|pointPlot| . 993514) (|calcRanges| . 993333) (|optional| . 993031)
 (|multiple| . 992729) (|fixPredicate| . 992394) (|patternMatch| . 987410)
 (|patternMatchTimes| . 986797) (|bernoulli| . 986460) (|chebyshevT| . 986114)
 (|chebyshevU| . 985768) (|cyclotomic| . 985246) (|euler| . 984950)
 (|fixedDivisor| . 984773) (|laguerre| . 984596) (|legendre| . 984297)
 (|dmpToHdmp| . 984025) (|hdmpToDmp| . 983753) (|pToHdmp| . 983514)
 (|hdmpToP| . 983275) (|dmpToP| . 983047) (|pToDmp| . 982819)
 (|sylvesterSequence| . 982611) (|sturmSequence| . 982406)
 (|boundOfCauchy| . 982195) (|sturmVariationsOf| . 981910)
 (|lazyVariations| . 981584) (|content| . 980897) (|minimumDegree| . 980107)
 (|isPlus| . 978998) (|isTimes| . 977862) (|isExpt| . 975804)
 (|isPower| . 974787) (|rroot| . 974062) (|qroot| . 973289) (|froot| . 972532)
 (|nthr| . 971798) (|copy_first| . 971621) (|copy_slice| . 971441)
 (|eval_at| . 971293) (|vector_add_mul| . 971107) (|mul_by_binomial| . 970752)
 (|mul_by_scalar| . 970572) (|mul| . 970427)
 (|truncated_multiplication| . 970279) (|truncated_mul_add| . 970096)
 (|pow| . 969656) (|divide!| . 969476) (|remainder!| . 969299)
 (|vector_combination| . 969110) (|to_mod_pa| . 968902) (|pa_to_sup| . 968725)
 (|lcm| . 968392) (|extended_gcd| . 968201) (< . 967790) (> . 967559)
 (>= . 967421) (<= . 967149) (|createY| . 966648) (|createX| . 966147)
 (|createWidth| . 965655) (|isDirected?| . 965205) (|coverMatrix| . 965057)
 (|zetaMatrix| . 964909) (|moebius| . 964662) (|isAntiChain?| . 964538)
 (|isChain?| . 964414) (|isAntisymmetric?| . 964290)
 (|completeTransitivity| . 964201) (|completeReflexivity| . 964112)
 (|objectToIndex| . 963974) (|indexToObject| . 963836) (|lowerSet| . 963747)
 (|upperSet| . 963658) (|lub| . 963463) (|glb| . 963268) (|joinIfCan| . 962928)
 (|meetIfCan| . 962588) (|implies| . 962330) (|powerSetStructure| . 962241)
 (|opposite| . 962152) (|addArrow!| . 960929) (|setArr| . 960752)
 (|setVert| . 960600) (|getArr| . 960458) (|getVert| . 960334)
 (|finitePoset| . 959430) (|addObject!| . 958984) (|powerset| . 958804)
 (|completelyOrderedSet| . 958640) (|posetN5| . 958476) (|posetM5| . 958312)
 (|posetO6| . 958148) (|posetP6| . 957984) (|posetL7| . 957820)
 (|firstUncouplingMatrix| . 957546) (|le| . 957374) (|lcx0| . 956799)
 (|lcz| . 956364) (|coeffs0| . 956077) (|coeffs1| . 955773)
 (|alg_reduce0| . 955563) (|alg_reduce| . 955270)
 (|alg_trial_division| . 954946) (|integral| . 953781)
 (|primitiveElement| . 951121) (|nextPrime| . 951004) (|prevPrime| . 950887)
 (|primes| . 950739) (|print| . 950543) (|merge!| . 950119)
 (|get_rational_roots| . 949327) (|integerBound| . 948852)
 (|resultantEuclidean| . 948533) (|semiResultantEuclidean2| . 948279)
 (|semiResultantEuclidean1| . 948025) (|indiceSubResultant| . 947794)
 (|indiceSubResultantEuclidean| . 947423)
 (|semiIndiceSubResultantEuclidean| . 947117) (|degreeSubResultant| . 946886)
 (|degreeSubResultantEuclidean| . 946515)
 (|semiDegreeSubResultantEuclidean| . 946209)
 (|lastSubResultantEuclidean| . 945887)
 (|semiLastSubResultantEuclidean| . 945630)
 (|subResultantGcdEuclidean| . 945346)
 (|semiSubResultantGcdEuclidean2| . 945098)
 (|semiSubResultantGcdEuclidean1| . 944850) (|discriminantEuclidean| . 944531)
 (|semiDiscriminantEuclidean| . 944277) (|chainSubResultants| . 944067)
 (|schema| . 943830) (|resultantReduit| . 943616)
 (|resultantReduitEuclidean| . 943259)
 (|semiResultantReduitEuclidean| . 942967) (|divide| . 942120)
 (|next_sousResultant2| . 941932) (|pdct| . 941852) (|powers| . 941701)
 (|partition| . 941487) (|complete| . 940610) (|pole?| . 940265)
 (|zRange| . 940140) (|yRange| . 939892) (|xRange| . 939644)
 (|listBranches| . 939364) (|triangular?| . 939026)
 (|rewriteIdealWithRemainder| . 938678)
 (|rewriteIdealWithHeadRemainder| . 938330) (|remainder| . 937886)
 (|headRemainder| . 937509) (|roughUnitIdeal?| . 937171)
 (|roughEqualIdeals?| . 936830) (|roughSubIdeal?| . 936489)
 (|roughBase?| . 936151) (|trivialIdeal?| . 935850) (|collectUpper| . 935581)
 (|collect| . 935143) (|collectUnder| . 934874) (|mainVariable?| . 934570)
 (|mainVariables| . 934269) (|removeSquaresIfCan| . 933945)
 (|unprotectedRemoveRedundantFactors| . 933625)
 (|removeRedundantFactors| . 931946) (|certainlySubVariety?| . 931591)
 (|possiblyNewVariety?| . 931199) (|probablyZeroDim?| . 930847)
 (|selectPolynomials| . 930338) (|selectOrPolynomials| . 929813)
 (|selectAndPolynomials| . 929288) (|quasiMonicPolynomials| . 928825)
 (|univariate?| . 928508) (|univariatePolynomials| . 928045)
 (|linear?| . 927728) (|linearPolynomials| . 927265) (|bivariate?| . 926948)
 (|bivariatePolynomials| . 926485)
 (|removeRoughlyRedundantFactorsInPols| . 925802)
 (|removeRoughlyRedundantFactorsInPol| . 925475) (|interReduce| . 925151)
 (|roughBasicSet| . 924694) (|crushedSet| . 924370)
 (|rewriteSetByReducingWithParticularGenerators| . 923897)
 (|rewriteIdealWithQuasiMonicGenerators| . 923470)
 (|squareFreeFactors| . 923121) (|univariatePolynomialsGcds| . 922380)
 (|removeRoughlyRedundantFactorsInContents| . 922021)
 (|removeRedundantFactorsInContents| . 921662)
 (|removeRedundantFactorsInPols| . 921303) (|irreducibleFactors| . 920870)
 (|lazyIrreducibleFactors| . 920437)
 (|removeIrreducibleRedundantFactors| . 920001) (|normalForm| . 919305)
 (|changeBase| . 918952) (|companionBlocks| . 918600) (|xCoord| . 918477)
 (|yCoord| . 918354) (|zCoord| . 918231) (|rCoord| . 918108)
 (|thetaCoord| . 917985) (|phiCoord| . 917862) (|color| . 917665)
 (|hue| . 917394) (|shade| . 917195) (|nthRootIfCan| . 917030)
 (|expIfCan| . 916910) (|logIfCan| . 916790) (|sinIfCan| . 916670)
 (|cosIfCan| . 916550) (|tanIfCan| . 916430) (|cotIfCan| . 916310)
 (|secIfCan| . 916190) (|cscIfCan| . 916070) (|asinIfCan| . 915950)
 (|acosIfCan| . 915830) (|atanIfCan| . 915710) (|acotIfCan| . 915590)
 (|asecIfCan| . 915470) (|acscIfCan| . 915350) (|sinhIfCan| . 915230)
 (|coshIfCan| . 915110) (|tanhIfCan| . 914990) (|cothIfCan| . 914870)
 (|sechIfCan| . 914750) (|cschIfCan| . 914630) (|asinhIfCan| . 914510)
 (|acoshIfCan| . 914390) (|atanhIfCan| . 914270) (|acothIfCan| . 914150)
 (|asechIfCan| . 914030) (|acschIfCan| . 913910) (|pushdown| . 912297)
 (|pushup| . 910684) (|reducedDiscriminant| . 910369)
 (|idealSimplify| . 910113) (|definingInequation| . 909857)
 (|definingEquations| . 909566) (|setStatus| . 909253)
 (|quasiAlgebraicSet| . 908959) (|radicalSimplify| . 908321)
 (|denominator| . 907948) (|numerator| . 907585) (|denom| . 906155)
 (|numer| . 904705) (|quadraticForm| . 904533) (|back| . 904442)
 (|front| . 904351) (|rotate!| . 904260) (|dequeue!| . 904169)
 (|enqueue!| . 904075) (|quatern| . 903953) (|imagK| . 903731)
 (|imagJ| . 903509) (|imagI| . 903287) (|queue| . 903165) (|nthRoot| . 902717)
 (|fractRadix| . 902582) (|wholeRadix| . 902450) (|cycleRagits| . 902318)
 (|prefixRagits| . 902186) (|fractRagits| . 902052) (|wholeRagits| . 901920)
 (|radix| . 901758) (|randnum| . 901581) (|reseed| . 901458) (|seed| . 901370)
 (|factorSquareFree| . 899801) (|rational| . 898318) (|rational?| . 896966)
 (|rationalIfCan| . 895483) (|setvalue!| . 895339) (|setchildren!| . 895167)
 (|node?| . 895002) (|child?| . 894837) (|leaves| . 894707) (|nodes| . 894577)
 (|rename| . 894481) (|rename!| . 894385) (|mainValue| . 894260)
 (|mainDefiningPolynomial| . 894135) (|mainForm| . 894029) (|sqrt| . 893315)
 (|multi_SPDE| . 892188) (SPDE1 . 891733) (|rischDEsys| . 890650)
 (|ei_int| . 889799) (|mk_erf| . 889219) (|risch_de_ext| . 888442)
 (|do_risch_DE| . 887607) (|do_param_RDE| . 886903) (|param_rde| . 883828)
 (|param_rde2| . 882441) (|exp_lower_bound| . 881550) (|monomRDEsys| . 880975)
 (|baseRDEsys| . 880610) (|weighted| . 880374) (|rdHack1| . 880118)
 (|midpoint| . 879795) (|midpoints| . 879437) (|realZeros| . 876135)
 (|mainCharacterization| . 875732) (|algebraicOf| . 875305)
 (|makeRec| . 874642) (|makeFEq| . 873976) (|getEq| . 873453)
 (|values| . 872291) (|eltable?| . 871740) (|ReduceOrder| . 871290)
 (|setref| . 871203) (|deref| . 871121) (|ref| . 871039)
 (|radicalEigenvectors| . 870555) (|radicalEigenvector| . 870294)
 (|radicalEigenvalues| . 870097) (|eigenMatrix| . 869893)
 (|normalise| . 869768) (|gramschmidt| . 869634) (|orthonormalBasis| . 869426)
 (|antisymmetricTensors| . 868976) (|createGenericMatrix| . 868774)
 (|symmetricTensors| . 868407) (|tensorProduct| . 867853)
 (|permutationRepresentation| . 866794) (|completeEchelonBasis| . 866612)
 (|createRandomElement| . 866429) (|cyclicSubmodule| . 866160)
 (|standardBasisOfCyclicSubmodule| . 865902) (|areEquivalent?| . 865166)
 (|isAbsolutelyIrreducible?| . 864718) (|meatAxe| . 863520)
 (|scanOneDimSubspaces| . 863238) (|double| . 862986) (|expt| . 862734)
 (|lift| . 860815) (|showArrayValues| . 860738) (|showScalarValues| . 860661)
 (|solveRetract| . 860253) (|variables| . 857413) (|mainVariable| . 856482)
 (|univariate| . 853086) (|multivariate| . 850945) (|uniform01| . 850853)
 (|normal01| . 850761) (|exponential1| . 850669) (|chiSquare1| . 850528)
 (|normal| . 850385) (|exponential| . 849989) (|chiSquare| . 849829)
 (F . 849666) (|t| . 849506) (|factorFraction| . 849266)
 (|alg_split_roots| . 848703) (|alg_split_root0| . 848357) (|uniform| . 847880)
 (|binomial| . 847253) (|poisson| . 847087) (|geometric| . 846921)
 (|ridHack1| . 846806) (|interpolate| . 845363) (|nullity| . 843990)
 (|column| . 843437) (|qelt| . 842747) (|maxColIndex| . 842200)
 (|minColIndex| . 841653) (|maxRowIndex| . 841106) (|minRowIndex| . 840559)
 (|antisymmetric?| . 839970) (|symmetric?| . 839416) (|diagonal?| . 838862)
 (|square?| . 838308) (|matrix| . 836961) (|rectangularMatrix| . 836701)
 (|annihilate?| . 836622) (|characteristic| . 834598) (|round| . 834543)
 (|fractionPart| . 833872) (|wholePart| . 833409) (|floor| . 833192)
 (|ceiling| . 832975) (|norm| . 829018) (|mightHaveRoots| . 828771)
 (|refine| . 826717) (|middle| . 826508) (|size| . 824159) (|right| . 823538)
 (|left| . 822917) (|roman| . 822752) (|mainSquareFreePart| . 822517)
 (|mainPrimitivePart| . 822282) (|mainContent| . 822047)
 (|primitivePart!| . 821812) (|gcd| . 819177) (|iexactQuo| . 818019)
 (|next_subResultant2| . 817770) (|LazardQuotient2| . 817243)
 (|LazardQuotient| . 816722) (|subResultantChain| . 816444)
 (|halfExtendedSubResultantGcd2| . 815810)
 (|halfExtendedSubResultantGcd1| . 815176) (|extendedSubResultantGcd| . 814430)
 (|exactQuotient!| . 813946) (|exactQuotient| . 813462)
 (|primPartElseUnitCanonical!| . 813222) (|primPartElseUnitCanonical| . 812982)
 (|retract| . 806293) (|retractIfCan| . 799275) (|lazyResidueClass| . 798601)
 (|monicModulo| . 798283) (|lazyPseudoDivide| . 797126)
 (|lazyPremWithDefault| . 796405) (|lazyPquo| . 795992) (|lazyPrem| . 795579)
 (|pquo| . 795166) (|prem| . 794753) (|supRittWu?| . 794519)
 (|RittWuCompare| . 794283) (|mainMonomials| . 794052)
 (|mainCoefficients| . 793821) (|leastMonomial| . 793618)
 (|mainMonomial| . 793415) (|quasiMonic?| . 793184) (|monic?| . 792751)
 (|deepestInitial| . 792548) (|iteratedInitials| . 792317)
 (|deepestTail| . 792114) (|head| . 791808) (|mdeg| . 791559) (|mvar| . 791092)
 (|relativeApprox| . 790482) (|rootOf| . 788872) (|allRootsOf| . 787747)
 (|definingPolynomial| . 786671) (|positive?| . 786101) (|negative?| . 785531)
 (|augment| . 784189) (|lastSubResultant| . 783253)
 (|lastSubResultantElseSplit| . 782914) (|invertibleSet| . 782591)
 (|invertible?| . 781859) (|invertibleElseSplit?| . 781514)
 (|purelyAlgebraicLeadingMonomial?| . 781191)
 (|algebraicCoefficients?| . 780868) (|purelyTranscendental?| . 780545)
 (|purelyAlgebraic?| . 779904) (|prepareSubResAlgo| . 779417)
 (|internalLastSubResultant| . 778417) (|integralLastSubResultant| . 777978)
 (|toseLastSubResultant| . 777539) (|toseInvertible?| . 776661)
 (|toseInvertibleSet| . 776265) (|toseSquareFreePart| . 775829)
 (|quotedOperators| . 775353) (|pattern| . 774913) (|suchThat| . 772683)
 (|rule| . 771774) (|rules| . 771288) (|ruleset| . 770802) (|rur| . 768421)
 (|create| . 768366) (|nullBoundary| . 768275) (|boxBoundary| . 768178)
 (|ellipseBoundary| . 768081) (|intersection| . 767938) (|sunion| . 767841)
 (|extendToPoint| . 767744) (|containsPoint?| . 767612)
 (|lineIntersect| . 767515) (|isNull?| . 767386) (|isEllipse?| . 767257)
 (|isBox?| . 767128) (|getMin| . 767034) (|getMax| . 766940)
 (|getCentre| . 766846) (|clearCache| . 766724) (|linearSearch| . 766572)
 (|enterInCache| . 766279) (|parse_integer| . 766155) (|variableOf| . 765961)
 (|samplePoint| . 765671) (|hasDimension?| . 765323)
 (|allSimpleCells| . 764790) (|createSceneRoot| . 764289)
 (|createSceneGroup| . 764202) (|addSceneGroup| . 764112)
 (|createSceneLine| . 763690) (|addSceneLine| . 763259)
 (|createSceneLines| . 763125) (|addSceneLines| . 762988)
 (|createSceneShape| . 762611) (|addSceneShape| . 762228)
 (|createSceneDef| . 762101) (|addSceneDef| . 761971)
 (|createSceneUse| . 761847) (|addSceneUse| . 761720)
 (|createSceneArrows| . 761514) (|addSceneArrows| . 761305)
 (|createSceneArrow| . 760934) (|addSceneArrow| . 760557)
 (|createSceneNamedPoints| . 760420) (|addSceneNamedPoints| . 760280)
 (|createSceneIFS| . 759961) (|addSceneIFS| . 759636)
 (|createSceneBox| . 759507) (|addSceneBox| . 759375)
 (|createSceneText| . 758733) (|addSceneText| . 758082)
 (|createSceneClip| . 757798) (|addSceneClip| . 757508)
 (|createSceneGrid| . 756865) (|addSceneGrid| . 756210)
 (|createScenePattern| . 755768) (|addScenePattern| . 755320)
 (|createSceneRuler| . 754963) (|addSceneRuler| . 754600)
 (|createSceneGraph| . 754375) (|addSceneGraph| . 754147)
 (|createSceneMaterial| . 753676) (|addSceneMaterial| . 753199)
 (|createSceneTransform| . 753068) (|addSceneTransform| . 752934)
 (|createPlot1Din2D| . 752429) (|addPlot1Din2D| . 751918)
 (|createPlot1Din2Dparametric| . 751611) (|addPlot1Din2Dparametric| . 751301)
 (|createPlot1Din3Dparametric| . 750749) (|addPlot1Din3Dparametric| . 750191)
 (|createPlot2Din3D| . 749657) (|addPlot2Din3D| . 749384)
 (|createPlot2Din3Dparametric| . 748797) (|addPlot2Din3Dparametric| . 748204)
 (|createArrows2Din2D| . 747967) (|addArrows2Din2D| . 747727)
 (|addChild!| . 747602) (|removeChild!| . 747477) (|setTransform!| . 747318)
 (|toSVG| . 746213) (|toX3D| . 745338) (|toObj| . 744511) (|writeSvg| . 744359)
 (|writeSvgQuantised| . 744207) (|writeX3d| . 744055) (|writeObj| . 743736)
 (|smesh| . 743568) (|singleFace| . 743440) (|subdivide| . 743347)
 (|sierpinskiDivide| . 743205) (|stube| . 742728) (|curveLoops| . 742490)
 (|indexes| . 742333) (|pointList| . 742074) (|findNode| . 741900)
 (|addNode!| . 741723) (|addPoints!| . 741582) (|findPoint| . 741444)
 (|getNames| . 741293) (|isNodeBranch?| . 741157) (|isNodeLeaf?| . 741021)
 (|isPointLeaf?| . 740885) (|namedBranch| . 740675) (|namedPoints| . 740303)
 (|normalisePoint| . 740211) (|structuralConstants| . 738859)
 (|equation| . 738498) (|incr| . 738371) (|high| . 738279) (|low| . 738187)
 (|hi| . 738095) (|lo| . 738003) (BY . 737873) (|horizSplit| . 736936)
 (|horizJoin| . 736796) (|join| . 736055) (|pivots| . 735793)
 (|pivot| . 735550) (|primitiveRowEchelon| . 735116) (|setGcdMode| . 734913)
 (|rowEchelon| . 731996) (|extract| . 731818) (|appendRow!| . 731528)
 (|consRow!| . 731238) (|deleteRow!| . 731038) (|setRow!| . 730177)
 (|row| . 729313) (|sortedPurge!| . 729091) (|purge!| . 728869)
 (|elimZeroCols!| . 728707) (|allIndices| . 728535) (|nrows| . 727760)
 (|ncols| . 726985) (|dilate| . 726871) (|firstn| . 726683)
 (|sequence| . 726396) (|apply| . 724124) (|union| . 723331)
 (|subset?| . 723197) (|symmetricDifference| . 723091) (|difference| . 722881)
 (|intersect| . 720858) (|set| . 720629) (|latex| . 720544)
 (|hashUpdate!| . 720453) (|hash| . 720361) (|complement| . 719943)
 (|subsetLattice| . 719793) (|delta| . 719584) (|enumerate| . 719298)
 (|setOfMinN| . 719098) (|elements| . 718898) (|replaceKthElement| . 718733)
 (|incrementKthElement| . 718571) (|cdr| . 718343) (|car| . 718115)
 (|float| . 717651) (|integer| . 717161) (|symbol| . 716602)
 (|destruct| . 716119) (|float?| . 715856) (|integer?| . 715234)
 (|symbol?| . 714725) (|string?| . 714338) (|list?| . 714075)
 (|pair?| . 713812) (|null?| . 713549) (|eq| . 713283) (|fortran| . 713048)
 (|startTable!| . 712212) (|stopTable!| . 711448)
 (|supDimElseRittWu?| . 710666) (|algebraicSort| . 709890)
 (|moreAlgebraic?| . 709108) (|subTriSet?| . 708326) (|subPolSet?| . 707488)
 (|internalSubPolSet?| . 706650) (|internalInfRittWu?| . 705812)
 (|internalSubQuasiComponent?| . 705058) (|subQuasiComponent?| . 703426)
 (|removeSuperfluousQuasiComponents| . 702650) (|subCase?| . 701732)
 (|removeSuperfluousCases| . 700900) (|prepareDecompose| . 699618)
 (|branchIfCan| . 698502) (|startTableGcd!| . 697629)
 (|stopTableGcd!| . 696828) (|startTableInvSet!| . 695955)
 (|stopTableInvSet!| . 695154) (|stosePrepareSubResAlgo| . 694638)
 (|stoseInternalLastSubResultant| . 693584)
 (|stoseIntegralLastSubResultant| . 693116) (|stoseLastSubResultant| . 692648)
 (|stoseInvertible?_sqfreg| . 692135) (|stoseInvertibleSet_sqfreg| . 691710)
 (|stoseInvertible?_reg| . 691197) (|stoseInvertibleSet_reg| . 690772)
 (|stoseInvertible?| . 689836) (|stoseInvertibleSet| . 689411)
 (|stoseSquareFreePart| . 688946) (|coleman| . 688770)
 (|inverseColeman| . 688594) (|listYoungTableaus| . 688415)
 (|makeYoungTableau| . 688242) (|nextColeman| . 688066)
 (|nextLatticePermutation| . 687908) (|nextPartition| . 687546)
 (|numberOfImproperPartitions| . 687428) (|subSet| . 687270)
 (|unrankImproperPartitions0| . 687112) (|unrankImproperPartitions1| . 686954)
 (|SturmHabichtSequence| . 686741) (|SturmHabichtCoefficients| . 686528)
 (|SturmHabicht| . 686315) (|countRealRoots| . 686105)
 (|SturmHabichtMultiple| . 685853) (|countRealRootsMultiple| . 685604)
 (|coHomology| . 685161) (|homology| . 684472) (|coChain| . 684176)
 (|chain| . 683742) (|fundamentalGroup| . 682744) (|oneSkeleton| . 682408)
 (|simplicialJoin| . 682254) (|makeDisjoint| . 682138)
 (|refactorIndexes| . 681871) (|cone| . 681709) (|link| . 681280)
 (|star| . 681123) (|boundary| . 680529) (|addImpliedFaces| . 680191)
 (|sort| . 679170) (|grade| . 678606) (|minIndex| . 678184)
 (|maxIndex| . 677608) (|addSimplex| . 677451)
 (|simplicialComplexIfCan| . 677106) (|simplicialComplex| . 676490)
 (|sphereSolid| . 676106) (|sphereSurface| . 675722) (|line| . 675557)
 (|torusSurface| . 675124) (|band| . 674838) (|moebiusBand| . 674552)
 (|projectiveSpace| . 674001) (|kleinBottle| . 673568) (|dunceHat| . 673256)
 (|Or| . 673117) (|And| . 672978) (|Not| . 672845) (|xor| . 672695)
 (|not| . 672509) (|qconvert| . 672423) (|/\\| . 672132) (|\\/| . 671841)
 (~ . 671330) (|top| . 671239) (|pop!| . 671148) (|push!| . 671054)
 (|redux| . 670737) (|freeVariable?| . 670608) (|getVariable| . 670438)
 (|isS?| . 670312) (|isK?| . 670186) (|isI?| . 670060) (|variable?| . 669934)
 (|atom?| . 669054) (|getChildren| . 668465) (|parseTerm| . 667845)
 (|parseSki| . 667720) (S . 667632) (K . 667544) (I . 667456) (|ski| . 667273)
 (|Delta| . 666924) (D . 664351) (|Pfaffian| . 663785) (|minordet| . 662930)
 (|determinant| . 661791) (|diagonalProduct| . 661119) (|trace| . 660188)
 (|diagonal| . 659931) (|diagonalMatrix| . 658348) (|scalarMatrix| . 657823)
 (|hermite| . 657370) (|completeHermite| . 657022) (|smith| . 656443)
 (|completeSmith| . 655411) (|diophantineSystem| . 654981)
 (|remap_variables| . 654596) (|csubst| . 654238)
 (|particularSolution| . 652037) (|mapSolve| . 651427) (|linear| . 650746)
 (|quadratic| . 650062) (|cubic| . 649375) (|quartic| . 648685)
 (|aLinear| . 648373) (|aQuadratic| . 648058) (|aCubic| . 647740)
 (|aQuartic| . 647419) (|radicalSolve| . 644407) (|radicalRoots| . 643650)
 (|contractSolve| . 642701) (|decomposeFunc| . 642460) (|limitPart| . 642411)
 (|integerPart| . 642308) (|ordinalPower| . 642256) (|ordinalMul| . 642204)
 (|ordinalAdd| . 642152) (|omegapower| . 642103) (|omega| . 642057)
 (|bubbleSort!| . 641463) (|insertionSort!| . 640869) (|check| . 640006)
 (|objects| . 639613) (|lprop| . 639456) (|llprop| . 639290) (|lllp| . 639132)
 (|lllip| . 638964) (|lp| . 638824) (|mesh?| . 638694) (|mesh| . 637288)
 (|polygon?| . 637158) (|polygon| . 636599) (|closedCurve?| . 636469)
 (|closedCurve| . 635910) (|curve?| . 635780) (|curve| . 635026)
 (|point?| . 634896) (|enterPointData| . 634707) (|composites| . 634577)
 (|components| . 634447) (|numberOfComposites| . 634306)
 (|numberOfComponents| . 633487) (|create3Space| . 633261)
 (|outputAsFortran| . 632632) (|outputAsScript| . 632369)
 (|outputAsTex| . 632106) (|abs| . 631142) (|conjugate| . 630363)
 (|Beta| . 629505) (|digamma| . 628826) (|polygamma| . 628249)
 (|Gamma| . 627316) (|besselJ| . 626824) (|besselY| . 626332)
 (|besselI| . 625840) (|besselK| . 625348) (|airyAi| . 624868)
 (|airyAiPrime| . 624618) (|airyBi| . 624138) (|airyBiPrime| . 623888)
 (|lambertW| . 623221) (|polylog| . 622965) (|weierstrassP| . 622490)
 (|weierstrassPPrime| . 622015) (|weierstrassSigma| . 621753)
 (|weierstrassZeta| . 621491) (|weierstrassPInverse| . 621229)
 (|whittakerM| . 620967) (|whittakerW| . 620705) (|angerJ| . 620449)
 (|weberE| . 620193) (|struveH| . 619937) (|struveL| . 619681)
 (|hankelH1| . 619425) (|hankelH2| . 619169) (|lommelS1| . 618907)
 (|lommelS2| . 618645) (|kummerM| . 618383) (|kummerU| . 618121)
 (|legendreP| . 617628) (|legendreQ| . 617366) (|kelvinBei| . 617110)
 (|kelvinBer| . 616854) (|kelvinKei| . 616598) (|kelvinKer| . 616342)
 (|ellipticK| . 615659) (|ellipticE| . 614026) (|ellipticF| . 613074)
 (|ellipticPi| . 612314) (|jacobiSn| . 611662) (|jacobiCn| . 611010)
 (|jacobiDn| . 610358) (|jacobiZeta| . 610008) (|jacobiTheta| . 609752)
 (|lerchPhi| . 609490) (|riemannZeta| . 609240) (|charlierC| . 608978)
 (|hermiteH| . 608553) (|jacobiP| . 608285) (|laguerreL| . 607682)
 (|meixnerM| . 607414) (|hypergeometricF| . 606964) (|meijerG| . 606502)
 (|lambertW0| . 606316) (|weierstrassP0| . 606124)
 (|weierstrassPPrime0| . 605932) (|weierstrassZeta0| . 605740)
 (|weierstrassSigma0| . 605548) (|subNode?| . 605269) (|infLex?| . 604934)
 (|setEmpty!| . 604742) (|setStatus!| . 604519) (|setCondition!| . 604324)
 (|setValue!| . 604129) (|copy| . 602898) (|status| . 602395)
 (|condition| . 602203) (|value| . 601420) (|splitNodeOf!| . 600858)
 (|remove!| . 599495) (|remove| . 598443) (|subNodeOf?| . 598117)
 (|nodeOf?| . 597847) (|result| . 597580) (|conditions| . 597360)
 (|updateStatus!| . 597168) (|extractSplittingLeaf| . 596974)
 (|extendedCoords| . 596865) (|screenCoords| . 596756)
 (|screenCoordZ| . 596663) (|screenCoordY| . 596570) (|screenCoordX| . 596477)
 (|inBounds?| . 596382) (|isVector?| . 596293) (|isPoint?| . 596204)
 (|toVector| . 596151) (|toPoint| . 596098) (|perpendicular| . 596042)
 (|colinearity| . 595946) (|parallel| . 595850) (|distance| . 595443)
 (|distanceSquared| . 595347) (|Pnan?| . 595258) (|max| . 594349)
 (|min| . 593438) (|sivec| . 593253) (|svec| . 593060) (|sipnt| . 592875)
 (|spnt| . 592682) (|squareMatrix| . 592474) (|transpose| . 591458)
 (|rightTrim| . 591174) (|leftTrim| . 590890) (|trim| . 590606)
 (|split| . 587913) (|position| . 586584) (|replace| . 586460)
 (|match?| . 586327) (|substring?| . 586196) (|suffix?| . 586103)
 (|prefix?| . 586010) (|upperCase!| . 585956) (|upperCase| . 585812)
 (|lowerCase!| . 585758) (|lowerCase| . 585614) (|KrullNumber| . 584588)
 (|numberOfVariables| . 583562) (|algebraicDecompose| . 582161)
 (|transcendentalDecompose| . 579339) (|internalDecompose| . 574989)
 (|decompose| . 571820) (|upDateBranches| . 570123) (|printInfo| . 569108)
 (|pre_process| . 567861) (|internalZeroSetSplit| . 567011)
 (|internalAugment| . 565606) (|monomial| . 562326)
 (|leadingMonomial| . 560967) (|leadingCoefficient| . 558950)
 (|stack| . 558828) (|possiblyInfinite?| . 558701)
 (|explicitlyFinite?| . 558574) (|nextItem| . 558514) (|init| . 558266)
 (|exp0| . 558110) (|log1| . 557954) (|tensorMap| . 557784)
 (|stransform| . 557133) (|stranslate| . 556984) (|identity| . 556726)
 (|xform| . 556628) (|compound| . 556530) (|STransform1| . 556053)
 (|STransform2| . 555576) (|STransform| . 555099)
 (|distributionBySTransform| . 554055)
 (|freeMultiplicativeConvolution| . 553407) (|filterUntil| . 553134)
 (|filterWhile| . 552861) (|stream| . 552350) (|showAll?| . 552203)
 (|showAllElements| . 552050) (|showElements| . 551848) (|cons| . 551576)
 (|delay| . 551446) (|findCycle| . 551102) (|repeating?| . 550914)
 (|repeating| . 550798) (|uentries| . 550704) (|ucodeToString| . 550627)
 (|exquo| . 549201) (|recip| . 547156) (|integers| . 546972)
 (|oddintegers| . 546788) (|int| . 545896) (|mapmult| . 545753)
 (|deriv| . 545459) (|gderiv| . 545266) (|compose| . 545123)
 (|addiag| . 544935) (|prodiag| . 544747) (|general_Lambert_product| . 544566)
 (|lazyIntegrate| . 544106) (|nlde| . 543856) (|powern| . 543632)
 (|mapdiv| . 543454) (|lazyGintegrate| . 543181) (|power| . 543003)
 (|sincos| . 542693) (|sinhcosh| . 542381) (|asin| . 540858) (|acos| . 539335)
 (|atan| . 537720) (|acot| . 536397) (|asec| . 535074) (|acsc| . 533751)
 (|sinh| . 532234) (|cosh| . 530717) (|tanh| . 529200) (|coth| . 527883)
 (|sech| . 526566) (|csch| . 525249) (|asinh| . 523929) (|acosh| . 522609)
 (|atanh| . 521289) (|acoth| . 519969) (|asech| . 518649) (|acsch| . 517329)
 (|subresultantVector| . 517106) (|primitivePart| . 515866)
 (|pointData| . 515701) (|parent| . 515574) (|level| . 515401)
 (|extractProperty| . 515221) (|extractClosed| . 515066)
 (|extractIndex| . 514893) (|extractPoint| . 514737) (|traverse| . 514552)
 (|defineProperty| . 514311) (|closeComponent| . 514095)
 (|modifyPoint| . 513440) (|addPointLast| . 513229) (|addPoint2| . 513070)
 (|addPoint| . 512418) (|merge| . 511193) (|deepCopy| . 511066)
 (|shallowCopy| . 510939) (|numberOfChildren| . 510766) (|children| . 510460)
 (|child| . 510284) (|birth| . 510157) (|internal?| . 510002)
 (|root?| . 509847) (|leaf?| . 509564) (|rhs| . 508920) (|lhs| . 508276)
 (|construct| . 502800) (|sum| . 499298) (|outputForm| . 498333) (NOT . 497982)
 (AND . 497669) (EQ . 497356) (OR . 497043) (GE . 496730) (LE . 496417)
 (GT . 496104) (LT . 495791) (|ansatz| . 495481) (|transform| . 494201)
 (|linearize| . 493616) (|detSys| . 492408) (|ncDetSys| . 491200)
 (|detSysNS| . 490403) (|sample| . 490047) (|string| . 489535)
 (|argscript| . 489441) (|superscript| . 489347) (|subscript| . 489253)
 (|script| . 488756) (|scripts| . 488274) (|scripted?| . 488197)
 (|name| . 487419) (|resetNew| . 487348) (|symFunc| . 487016)
 (|symbolTableOf| . 486888) (|argumentListOf| . 486756)
 (|returnTypeOf| . 486526) (|printHeader| . 486212) (|returnType!| . 485497)
 (|argumentList!| . 485057) (|endSubProgram| . 484976)
 (|currentSubProgram| . 484895) (|newSubProgram| . 484777)
 (|clearTheSymbolTable| . 484582) (|showTheSymbolTable| . 484534)
 (|symbolTable| . 484326) (|printTypes| . 484131) (|newTypeLists| . 484043)
 (|typeLists| . 483554) (|externalList| . 483462) (|typeList| . 482924)
 (|parametersOf| . 482832) (|fortranTypeOf| . 482707) (|declare!| . 481889)
 (|solve| . 461524) (|triangularSystems| . 461253) (|bumprow| . 460859)
 (|bumptab| . 460616) (|bumptab1| . 460429) (|untab| . 460233)
 (|bat1| . 460033) (|bat| . 459846) (|tab1| . 459653) (|tab| . 459475)
 (|lex| . 459335) (|slex| . 459160) (|inverse| . 457395) (|maxrow| . 456875)
 (|mr| . 456442) (|listOfLists| . 455721) (|tableau| . 455015)
 (|tanSum| . 454887) (|tanAn| . 454691) (|tanNa| . 454560)
 (|initTable!| . 454378) (|printInfo!| . 454163) (|startStats!| . 453951)
 (|printStats!| . 453769) (|clearTable!| . 453587) (|usingTable?| . 453402)
 (|printingInfo?| . 453217) (|makingStats?| . 453032) (|extractIfCan| . 452870)
 (|insert!| . 451930) (|interpretString| . 451810)
 (|stripCommentsAndBlanks| . 451721) (|linearExtend| . 450776)
 (|tensor| . 450070) (|testEqualsAux| . 449914) (|xftestEqualsAux| . 449758)
 (|testNotEqualsAux| . 449602) (|xftestNotEqualsAux| . 449446)
 (|testTrueAux| . 449293) (|xftestTrueAux| . 449140)
 (|testLibraryErrorAux| . 448987) (|xftestLibraryErrorAux| . 448834)
 (|testEqualsAuxCmp| . 448705) (|testRealEqualsAux| . 448503)
 (|xftestRealEqualsAux| . 448301) (|testComplexEqualsAux| . 448068)
 (|xftestComplexEqualsAux| . 447835) (|testAbsolutePrecision| . 447698)
 (|testRelativePrecision| . 447561) (|testsuite| . 447444)
 (|testsuiteNoClear| . 447327) (|testcase| . 447210)
 (|testcaseNoClear| . 447093) (|statistics| . 446824) (|incPass| . 446746)
 (|incFail| . 446586) (|incXfPass| . 446426) (|decXfPass| . 446348)
 (|incXfFail| . 446270) (|chkLibraryError| . 446192)
 (|incLibraryError| . 446032) (|incXfLibraryError| . 445872)
 (|incFatal| . 445755) (|incXfFatal| . 445638) (|decFatal| . 445560)
 (|decXfFatal| . 445482) (|addWarning| . 445361) (|testEquals| . 445246)
 (|xftestEquals| . 445131) (|testRealEquals| . 445016)
 (|xftestRealEquals| . 444901) (|testComplexEquals| . 444786)
 (|xftestComplexEquals| . 444671) (|testNotEquals| . 444556)
 (|xftestNotEquals| . 444441) (|testTrue| . 444329) (|xftestTrue| . 444217)
 (|testLibraryError| . 444105) (|xftestLibraryError| . 443993)
 (|setPrologue!| . 443792) (|setTex!| . 443699) (|setEpilogue!| . 443498)
 (|prologue| . 443303) (|new| . 441850) (|tex| . 441760) (|epilogue| . 441565)
 (|endOfFile?| . 441486) (|readIfCan!| . 441199) (|readLineIfCan!| . 441109)
 (|readLine!| . 441031) (|writeLine!| . 440874) (|display| . 438969)
 (|coerceL| . 438608) (|sign| . 435755) (|nonQsign| . 435627)
 (|direction| . 435478) (|createThreeSpace| . 435364) (|pi| . 434860)
 (|cyclicParents| . 434730) (|cyclicEqual?| . 434606)
 (|cyclicEntries| . 434476) (|cyclicCopy| . 434390) (|tree| . 434054)
 (|cyclic?| . 433805) (|cos| . 432183) (|cot| . 430863) (|csc| . 429543)
 (|sec| . 428223) (|sin| . 426601) (|tan| . 425081)
 (|complexNormalize| . 423215) (|complexElementary| . 421349)
 (|trigs| . 420479) (|real| . 419244) (|imag| . 418229) (|real?| . 417209)
 (|complexForm| . 416256) (|UpTriBddDenomInv| . 415965)
 (|LowTriBddDenomInv| . 415674) (|simplify| . 413762) (|htrigs| . 413481)
 (|simplifyExp| . 413200) (|simplifyLog| . 412919) (|expandPower| . 412638)
 (|expandLog| . 412357) (|cos2sec| . 412076) (|cosh2sech| . 411795)
 (|cot2trig| . 411514) (|coth2trigh| . 411233) (|csc2sin| . 410952)
 (|csch2sinh| . 410671) (|sec2cos| . 410390) (|sech2cosh| . 410109)
 (|sin2csc| . 409828) (|sinh2csch| . 409547) (|tan2trig| . 409266)
 (|tanh2trigh| . 408985) (|tan2cot| . 408704) (|tanh2coth| . 408423)
 (|cot2tan| . 408142) (|coth2tanh| . 407861) (|removeCosSq| . 407580)
 (|removeSinSq| . 407299) (|removeCoshSq| . 407018) (|removeSinhSq| . 406737)
 (|expandTrigProducts| . 406242) (|fintegrate| . 405624)
 (|coefficient| . 402329) (|taylor_via_deriv| . 400439)
 (|taylor_via_lode| . 400014) (|applyTaylor| . 399614)
 (|apply_taylor| . 398973) (|coHeight| . 398615) (|extendIfCan| . 398335)
 (|algebraicVariables| . 398017) (|zeroSetSplitIntoTriangularSystems| . 397575)
 (|zeroSetSplit| . 392707) (|reduceByQuasiMonic| . 392421)
 (|collectQuasiMonic| . 392138) (|removeZero| . 391852)
 (|initiallyReduce| . 391362) (|headReduce| . 390872)
 (|stronglyReduce| . 390586) (|rewriteSetWithReduction| . 390169)
 (|autoReduced?| . 389786) (|initiallyReduced?| . 388650)
 (|headReduced?| . 387514) (|stronglyReduced?| . 386877) (|reduced?| . 386001)
 (|normalized?| . 384865) (|quasiComponent| . 384449) (|initials| . 384131)
 (|basicSet| . 383226) (|infRittWu?| . 381837) (|getCurve| . 381724)
 (|listLoops| . 381544) (|closed?| . 381300) (|open?| . 381159)
 (|setClosed| . 381015) (|tube| . 380578) (|point| . 379476)
 (|unitVector| . 378520) (|cosSinInfo| . 378370) (|loopPoints| . 378097)
 (|select| . 377214) (|generalTwoFactor| . 376846) (|tryTwoFactor| . 376478)
 (|generalSqFr| . 376110) (|twoFactor| . 375711) (|doFactor| . 375278)
 (|diagramSvg2| . 375081) (|undirectedGraph| . 373250) (|setOrder| . 372899)
 (|getOrder| . 372709) (|less?| . 372223) (|userOrdered?| . 372076)
 (|largest| . 371689) (|more?| . 371372) (|setVariableOrder| . 371091)
 (|getVariableOrder| . 370884) (|resetVariableOrder| . 370783)
 (|factor| . 358284) (|prime?| . 357231) (|hadamard| . 357052)
 (|pre_gauss| . 356938) (|pre_smith| . 356824) (|pre_lr| . 356658)
 (|rationalFunction| . 356169) (|taylorIfCan| . 355972) (|taylor| . 350452)
 (|removeZeroes| . 349278) (|taylorRep| . 349086) (|hasHi| . 348960)
 (|segment| . 348651) (SEGMENT . 348374) (|commonDenominator| . 347041)
 (|clearDenominator| . 345671) (|splitDenominator| . 343321)
 (|monicRightFactorIfCan| . 343078) (|rightFactorIfCan| . 342832)
 (|leftFactorIfCan| . 342631) (|monicDecomposeIfCan| . 342370)
 (|monicCompleteDecompose| . 342146) (|decomposeIfCan| . 341854)
 (|completeDecompose| . 341595) (|divideIfCan| . 341328)
 (|noKaratsuba| . 341138) (|karatsubaOnce| . 340948) (|karatsuba| . 340713)
 (|separate| . 339878) (|pseudoDivide| . 339271) (|pseudoQuotient| . 339082)
 (|composite| . 338539) (|subResultantGcd| . 337929) (|resultant| . 336902)
 (|discriminant| . 335302) (|pseudoRemainder| . 335123) (|shiftRight| . 334898)
 (|karatsubaDivide| . 334605) (|monicDivide| . 334007) (|shiftLeft| . 333692)
 (|divideExponents| . 333499) (|unmakeSUP| . 333300) (|makeSUP| . 333101)
 (|unvectorise| . 332607) (|vectorise| . 332379) (|eval| . 324094)
 (|extend| . 321606) (|approximate| . 320365) (|truncate| . 319987)
 (|order| . 314460) (|center| . 313886) (|terms| . 313210)
 (|squareFreePart| . 312187) (|BumInSepFFE| . 311728)
 (|multiplyExponents| . 311170) (|laurentIfCan| . 310972) (|laurent| . 306393)
 (|laurentRep| . 306200) (|rationalPower| . 305959) (|puiseux| . 301477)
 (|dominantTerm| . 300344) (|limitPlus| . 299176) (|split!| . 298974)
 (|setlast!| . 298818) (|qsetrest!| . 298662) (|setrest!| . 298386)
 (|setelt!| . 292494) (|qsetfirst!| . 292338) (|setfirst!| . 292182)
 (|cycleSplit!| . 292029) (|concat!| . 291347) (|cycleTail| . 291240)
 (|cycleLength| . 291094) (|cycleEntry| . 290987) (|third| . 290880)
 (|second| . 290642) (|tail| . 290231) (|last| . 289592) (|rest| . 288761)
 (|elt| . 274853) (|first| . 273392) (|concat| . 272603)
 (|invmultisect| . 272083) (|multisect| . 271563) (|revert| . 271166)
 (|generalLambert| . 270646) (|evenlambert| . 270249) (|oddlambert| . 269852)
 (|lambert| . 269455) (|lagrange| . 269058) (|differentiate| . 264127)
 (|univariatePolynomial| . 263401) (|integrate| . 249848) (^ . 244258)
 (|polynomial| . 243380) (|multiplyCoefficients| . 242889)
 (|quoByVar| . 242775) (|coefficients| . 241263) (|series| . 233015)
 (|stFunc1| . 232704) (|stFunc2| . 232376) (|stFuncN| . 232047)
 (|fixedPointExquo| . 231837) (|ode1| . 231586) (|ode2| . 231329)
 (|ode| . 231041) (|mpsode| . 230702) (UP2UTS . 230401) (UTS2UP . 230058)
 (LODO2FUN . 229707) (RF2UTS . 229330) (|seriesSolve| . 224214) (= . 223196)
 (|parseVarTerm| . 222934) (|parseVar| . 222856) (|toString| . 221926)
 (|getType| . 221722) (|getName| . 221644) (|var| . 221451)
 (|variable| . 220529) (|add_slots| . 220386) (|repack_polys| . 219840)
 (|empty| . 219015) (|chinese_update| . 218669) (|hensel_update| . 218495)
 (|rational_reconstruction| . 217529) (|remove_denoms| . 217144)
 (|reconstruct| . 215949) (|length| . 214754) (|cross| . 214427)
 (|outerProduct| . 214269) (|dot| . 213640) (- . 210936) (|zero?| . 209703)
 (|zero| . 209255) (|vector| . 209012) (|scan| . 206767) (|reduce| . 199328)
 (|hp_solve| . 198894) (|graphCurves| . 198244) (|drawCurves| . 197712)
 (|update| . 197540) (|show| . 197372) (|scale| . 196844) (|connect| . 196676)
 (|region| . 196508) (|points| . 196340) (|units| . 195671)
 (|getGraph| . 195527) (|putGraph| . 195355) (|graphs| . 195052)
 (|graphStates| . 194304) (|graphState| . 194035) (|makeViewport2D| . 193830)
 (|viewport2D| . 193774) (|getPickedPoints| . 193649) (|key| . 193373)
 (|close| . 193083) (|write| . 192393) (|colorDef| . 192260) (|reset| . 192076)
 (|intensity| . 191946) (|lighting| . 191810) (|clipSurface| . 191679)
 (|showClipRegion| . 191548) (|showRegion| . 191417) (|hitherPlane| . 191287)
 (|eyeDistance| . 191157) (|perspective| . 191026) (|translate| . 190550)
 (|zoom| . 189993) (|rotate| . 189727) (|drawStyle| . 189596)
 (|outlineRender| . 189465) (|diagonals| . 189334) (|axes| . 188870)
 (|controlPanel| . 188612) (|viewpoint| . 185849) (|dimensions| . 185463)
 (|title| . 184987) (|resize| . 184705) (|move| . 184417) (|options| . 183957)
 (|modifyPointData| . 183588) (|subspace| . 183085) (|makeViewport3D| . 182695)
 (|viewport3D| . 182637) (|viewDeltaYDefault| . 182452)
 (|viewDeltaXDefault| . 182267) (|viewZoomDefault| . 182082)
 (|viewPhiDefault| . 181897) (|viewThetaDefault| . 181712)
 (|pointColorDefault| . 181533) (|lineColorDefault| . 181354)
 (|axesColorDefault| . 181175) (|unitsColorDefault| . 180996)
 (|pointSizeDefault| . 180787) (|viewPosDefault| . 180554)
 (|viewSizeDefault| . 180327) (|viewDefaults| . 180241)
 (|viewWriteDefault| . 180032) (|viewWriteAvailable| . 179928)
 (|var1StepsDefault| . 179719) (|var2StepsDefault| . 179510)
 (|tubePointsDefault| . 179301) (|tubeRadiusDefault| . 179074)
 (|void| . 179036) (|coordinates| . 176971) (|coordinatesIfCan| . 176833)
 (|member?| . 176108) (|complementSpace| . 175556) (|canonicalBasis| . 175418)
 (|Zero| . 174899) (|subspace?| . 174769) (|isBasis?| . 174603)
 (|rank| . 171070) (|intBasis| . 170545) (+ . 167411) (|sumBasis| . 166886)
 (|columnSpace| . 166129) (|nullSpace| . 163970) (|basis| . 162025)
 (|dimension| . 159808) (|weierstrass| . 159585) (|integralBasis| . 157424)
 (|localIntegralBasis| . 155533) (|weightedDistanceMatrix| . 155307)
 (|closedCartesian| . 154673) (|closedTensor| . 153896) (|cartesian| . 152802)
 (|routeArrowWeight| . 152589) (|routeNodeWeight| . 152376)
 (|distanceWeighted| . 152122) (|addWArrow!| . 151882)
 (|weightedGraph| . 148916) (|changeWeightLevel| . 148227)
 (|characteristicSerie| . 147350) (|characteristicSet| . 146643)
 (|medialSet| . 145936) (|Hausdorff| . 145641) (|Frobenius| . 144988)
 (|transcendenceDegree| . 144641) (|extensionDegree| . 143893)
 (|inGroundField?| . 143766) (|transcendent?| . 143639) (|algebraic?| . 143193)
 (|varList| . 141976) (|sh| . 141572) (|mirror| . 140831)
 (|monomial?| . 139753) (|monom| . 139408) (|rquo| . 138554) (|lquo| . 137700)
 (|mindegTerm| . 137493) (|table| . 136687) (|writeXml| . 136540)
 (|writeVRML| . 136243) (|xmlAttribute| . 136028) (|xmlElement| . 135709)
 (|empty?| . 134777) (|outputVRML| . 134539) (|log| . 131507) (|exp| . 128625)
 (|product| . 127031) (|LiePolyIfCan| . 126641) (|trunc| . 126265)
 (|degree| . 121093) (/ . 117442) (|quasiRegular| . 117176)
 (|quasiRegular?| . 116847) (|constant| . 116063) (|constant?| . 115612)
 (|coef| . 114966) (|mindeg| . 114659) (|maxdeg| . 114349) (|coerce| . 73185)
 (|#| . 72480) (|reductum| . 70567) (|map| . 39754) (* . 28952)
 (|RemainderList| . 28458) (|unexpand| . 28116) (|expand| . 25734) (Y . 25259)
 (|triangSolve| . 23800) (|univariateSolve| . 20518) (|realSolve| . 17757)
 (|positiveSolve| . 15759) (|squareFree| . 12670) (|convert| . 1895)
 (|linearlyDependentOverZ?| . 1690) (|linearDependenceOverZ| . 1476)
 (|particularSolutionOverQ| . 988) (|solveLinearlyOverQ| . 30)) 